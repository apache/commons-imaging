/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest1 {

    public static boolean debug = false;

    @Test
    public void test0501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0501");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getDefaultExtension();
        java.io.File file14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser0.getMetadata(file14, pcxImagingParameters15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
    }

    @Test
    public void test0502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0502");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = null;
        byte[] byteArray9 = pcxImageParser6.getIccProfileBytes(byteSource7, pcxImagingParameters8);
        java.lang.String str10 = pcxImageParser6.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource5, pcxImagingParameters11);
        java.io.File file13 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray14 = pcxImageParser0.getIccProfileBytes(file13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(byteArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "pcx" + "'", str10, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
    }

    @Test
    public void test0503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0503");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        java.io.File file8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance9 = pcxImageParser0.getFormatCompliance(file8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNull(imageMetadata7);
    }

    @Test
    public void test0504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0504");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        java.io.File file9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo11 = pcxImageParser0.getImageInfo(file9, pcxImagingParameters10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
    }

    @Test
    public void test0505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0505");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension7 = pcxImageParser0.getImageSize(byteSource5, pcxImagingParameters6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
    }

    @Test
    public void test0506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0506");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = null;
        byte[] byteArray17 = pcxImageParser14.getIccProfileBytes(byteSource15, pcxImagingParameters16);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser14.getDefaultParameters();
        byte[] byteArray19 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters18);
        java.io.File file20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = pcxImageParser0.dumpImageFile(file20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(byteArray17);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(byteArray19);
    }

    @Test
    public void test0507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0507");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        boolean boolean6 = pcxImageParser0.canAcceptExtension("hi!");
        java.lang.String str7 = pcxImageParser0.getName();
        java.io.File file8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = pcxImageParser0.dumpImageFile(file8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Pcx-Custom" + "'", str7, "Pcx-Custom");
    }

    @Test
    public void test0508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0508");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters6 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = null;
        byte[] byteArray11 = pcxImageParser8.getIccProfileBytes(byteSource9, pcxImagingParameters10);
        java.lang.String str12 = pcxImageParser8.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder16 = pcxImageParser15.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser15.getFormatCompliance(byteSource17);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser15.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = null;
        byte[] byteArray24 = pcxImageParser21.getIccProfileBytes(byteSource22, pcxImagingParameters23);
        java.lang.String str25 = pcxImageParser21.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser15.getMetadata(byteSource20, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser8.getIccProfileBytes(byteSource14, pcxImagingParameters26);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage29 = pcxImageParser0.getBufferedImage(byteSource7, pcxImagingParameters26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNotNull(pcxImagingParameters6);
        org.junit.Assert.assertNull(byteArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "pcx" + "'", str12, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNull(formatCompliance18);
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "pcx" + "'", str25, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
    }

    @Test
    public void test0509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0509");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        java.io.File file6 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean7 = pcxImageParser0.canAcceptExtension(file6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
    }

    @Test
    public void test0510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0510");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.nio.ByteOrder byteOrder7 = pcxImageParser0.getByteOrder();
        java.io.File file8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = null;
        byte[] byteArray12 = pcxImageParser9.getIccProfileBytes(byteSource10, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser9.getName();
        java.lang.String str14 = pcxImageParser9.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder17 = pcxImageParser16.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance19 = pcxImageParser16.getFormatCompliance(byteSource18);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters20 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata21 = pcxImageParser9.getMetadata(byteSource15, pcxImagingParameters20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser23 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser23.getMetadata(byteSource24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser27 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder28 = pcxImageParser27.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser27.getFormatCompliance(byteSource29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser27.getMetadata(byteSource31);
        boolean boolean34 = pcxImageParser27.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser27.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser23.getMetadata(byteSource26, pcxImagingParameters35);
        byte[] byteArray37 = pcxImageParser9.getIccProfileBytes(byteSource22, pcxImagingParameters35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance39 = pcxImageParser9.getFormatCompliance(byteSource38);
        java.nio.ByteOrder byteOrder40 = pcxImageParser9.getByteOrder();
        java.nio.ByteOrder byteOrder41 = pcxImageParser9.getByteOrder();
        java.lang.String str42 = pcxImageParser9.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser9.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray44 = pcxImageParser0.getIccProfileBytes(file8, pcxImagingParameters43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNull(byteArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Pcx-Custom" + "'", str14, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder17);
        org.junit.Assert.assertNull(formatCompliance19);
        org.junit.Assert.assertNotNull(pcxImagingParameters20);
        org.junit.Assert.assertNull(imageMetadata21);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertNotNull(byteOrder28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertNull(byteArray37);
        org.junit.Assert.assertNull(formatCompliance39);
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNotNull(byteOrder41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Pcx-Custom" + "'", str42, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
    }

    @Test
    public void test0511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0511");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        java.nio.ByteOrder byteOrder28 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder31 = pcxImageParser30.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance33 = pcxImageParser30.getFormatCompliance(byteSource32);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser30.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser30.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension36 = pcxImageParser0.getImageSize(byteSource29, pcxImagingParameters35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(byteOrder28);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNull(formatCompliance33);
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
    }

    @Test
    public void test0512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0512");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters6 = pcxImageParser0.getDefaultParameters();
        java.io.File file7 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean8 = pcxImageParser0.canAcceptExtension(file7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNotNull(pcxImagingParameters6);
    }

    @Test
    public void test0513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0513");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.nio.ByteOrder byteOrder29 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = null;
        byte[] byteArray34 = pcxImageParser31.getIccProfileBytes(byteSource32, pcxImagingParameters33);
        java.lang.String str35 = pcxImageParser31.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser31.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser38 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder39 = pcxImageParser38.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance41 = pcxImageParser38.getFormatCompliance(byteSource40);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser38.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = null;
        byte[] byteArray47 = pcxImageParser44.getIccProfileBytes(byteSource45, pcxImagingParameters46);
        java.lang.String str48 = pcxImageParser44.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters49 = pcxImageParser44.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata50 = pcxImageParser38.getMetadata(byteSource43, pcxImagingParameters49);
        byte[] byteArray51 = pcxImageParser31.getIccProfileBytes(byteSource37, pcxImagingParameters49);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension52 = pcxImageParser0.getImageSize(byteSource30, pcxImagingParameters49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertNull(byteArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "pcx" + "'", str35, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertNotNull(byteOrder39);
        org.junit.Assert.assertNull(formatCompliance41);
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertNull(byteArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "pcx" + "'", str48, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters49);
        org.junit.Assert.assertNull(imageMetadata50);
        org.junit.Assert.assertNull(byteArray51);
    }

    @Test
    public void test0514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0514");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.ImageFormat imageFormat1 = null;
        boolean boolean2 = pcxImageParser0.canAcceptType(imageFormat1);
        java.io.File file3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters6 = null;
        byte[] byteArray7 = pcxImageParser4.getIccProfileBytes(byteSource5, pcxImagingParameters6);
        java.lang.String str8 = pcxImageParser4.getName();
        java.lang.String str9 = pcxImageParser4.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser4.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder14 = pcxImageParser13.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser13.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat18 = null;
        boolean boolean19 = pcxImageParser13.canAcceptType(imageFormat18);
        java.lang.String str20 = pcxImageParser13.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser13.getDefaultParameters();
        byte[] byteArray22 = pcxImageParser4.getIccProfileBytes(byteSource12, pcxImagingParameters21);
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser4.canAcceptType(imageFormat23);
        org.apache.commons.imaging.ImageFormat imageFormat25 = null;
        boolean boolean26 = pcxImageParser4.canAcceptType(imageFormat25);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = pcxImageParser4.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(file3, pcxImagingParameters27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(byteArray7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Pcx-Custom" + "'", str8, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Pcx-Custom" + "'", str9, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(byteOrder14);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "pcx" + "'", str20, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(byteArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters27);
    }

    @Test
    public void test0515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0515");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser0.canAcceptType(imageFormat23);
        java.io.File file25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = null;
        byte[] byteArray29 = pcxImageParser26.getIccProfileBytes(byteSource27, pcxImagingParameters28);
        java.lang.String str30 = pcxImageParser26.getName();
        java.lang.String str31 = pcxImageParser26.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder34 = pcxImageParser33.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance36 = pcxImageParser33.getFormatCompliance(byteSource35);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = pcxImageParser33.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser26.getMetadata(byteSource32, pcxImagingParameters37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = null;
        byte[] byteArray43 = pcxImageParser40.getIccProfileBytes(byteSource41, pcxImagingParameters42);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = pcxImageParser40.getDefaultParameters();
        byte[] byteArray45 = pcxImageParser26.getIccProfileBytes(byteSource39, pcxImagingParameters44);
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser47 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder48 = pcxImageParser47.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance50 = pcxImageParser47.getFormatCompliance(byteSource49);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters51 = pcxImageParser47.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat52 = null;
        boolean boolean53 = pcxImageParser47.canAcceptType(imageFormat52);
        java.lang.String str54 = pcxImageParser47.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters55 = pcxImageParser47.getDefaultParameters();
        java.lang.String str56 = pcxImageParser47.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters57 = pcxImageParser47.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata58 = pcxImageParser26.getMetadata(byteSource46, pcxImagingParameters57);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata59 = pcxImageParser0.getMetadata(file25, pcxImagingParameters57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(byteArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Pcx-Custom" + "'", str30, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Pcx-Custom" + "'", str31, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder34);
        org.junit.Assert.assertNull(formatCompliance36);
        org.junit.Assert.assertNotNull(pcxImagingParameters37);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNull(byteArray43);
        org.junit.Assert.assertNotNull(pcxImagingParameters44);
        org.junit.Assert.assertNull(byteArray45);
        org.junit.Assert.assertNotNull(byteOrder48);
        org.junit.Assert.assertNull(formatCompliance50);
        org.junit.Assert.assertNotNull(pcxImagingParameters51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "pcx" + "'", str54, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Pcx-Custom" + "'", str56, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters57);
        org.junit.Assert.assertNull(imageMetadata58);
    }

    @Test
    public void test0516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0516");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser0.getDefaultParameters();
        java.io.File file29 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata30 = pcxImageParser0.getMetadata(file29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
    }

    @Test
    public void test0517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0517");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        java.io.File file28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser29.getMetadata(byteSource30);
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder34 = pcxImageParser33.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance36 = pcxImageParser33.getFormatCompliance(byteSource35);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = pcxImageParser33.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser39.getMetadata(byteSource40);
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser43 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder44 = pcxImageParser43.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance46 = pcxImageParser43.getFormatCompliance(byteSource45);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser43.getMetadata(byteSource47);
        boolean boolean50 = pcxImageParser43.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters51 = pcxImageParser43.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata52 = pcxImageParser39.getMetadata(byteSource42, pcxImagingParameters51);
        byte[] byteArray53 = pcxImageParser33.getIccProfileBytes(byteSource38, pcxImagingParameters51);
        java.lang.String str54 = pcxImageParser33.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters55 = pcxImageParser33.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata56 = pcxImageParser29.getMetadata(byteSource32, pcxImagingParameters55);
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser58 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder59 = pcxImageParser58.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance61 = pcxImageParser58.getFormatCompliance(byteSource60);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters62 = pcxImageParser58.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser64 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata66 = pcxImageParser64.getMetadata(byteSource65);
        org.apache.commons.imaging.bytesource.ByteSource byteSource67 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser68 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder69 = pcxImageParser68.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource70 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance71 = pcxImageParser68.getFormatCompliance(byteSource70);
        org.apache.commons.imaging.bytesource.ByteSource byteSource72 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata73 = pcxImageParser68.getMetadata(byteSource72);
        boolean boolean75 = pcxImageParser68.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters76 = pcxImageParser68.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata77 = pcxImageParser64.getMetadata(byteSource67, pcxImagingParameters76);
        byte[] byteArray78 = pcxImageParser58.getIccProfileBytes(byteSource63, pcxImagingParameters76);
        java.lang.String str79 = pcxImageParser58.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters80 = pcxImageParser58.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata81 = pcxImageParser29.getMetadata(byteSource57, pcxImagingParameters80);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo82 = pcxImageParser0.getImageInfo(file28, pcxImagingParameters80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertNotNull(byteOrder34);
        org.junit.Assert.assertNull(formatCompliance36);
        org.junit.Assert.assertNotNull(pcxImagingParameters37);
        org.junit.Assert.assertNull(imageMetadata41);
        org.junit.Assert.assertNotNull(byteOrder44);
        org.junit.Assert.assertNull(formatCompliance46);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters51);
        org.junit.Assert.assertNull(imageMetadata52);
        org.junit.Assert.assertNull(byteArray53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Pcx-Custom" + "'", str54, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters55);
        org.junit.Assert.assertNull(imageMetadata56);
        org.junit.Assert.assertNotNull(byteOrder59);
        org.junit.Assert.assertNull(formatCompliance61);
        org.junit.Assert.assertNotNull(pcxImagingParameters62);
        org.junit.Assert.assertNull(imageMetadata66);
        org.junit.Assert.assertNotNull(byteOrder69);
        org.junit.Assert.assertNull(formatCompliance71);
        org.junit.Assert.assertNull(imageMetadata73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters76);
        org.junit.Assert.assertNull(imageMetadata77);
        org.junit.Assert.assertNull(byteArray78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "Pcx-Custom" + "'", str79, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters80);
        org.junit.Assert.assertNull(imageMetadata81);
    }

    @Test
    public void test0518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0518");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        boolean boolean30 = pcxImageParser0.canAcceptExtension("pcx");
        java.io.File file31 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList32 = pcxImageParser0.getAllBufferedImages(file31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test0519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0519");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        java.nio.ByteOrder byteOrder9 = pcxImageParser0.getByteOrder();
        java.io.File file10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata11 = pcxImageParser0.getMetadata(file10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNotNull(byteOrder9);
    }

    @Test
    public void test0520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0520");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters6 = pcxImageParser0.getDefaultParameters();
        java.io.File file7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = pcxImageParser0.dumpImageFile(file7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNotNull(pcxImagingParameters6);
    }

    @Test
    public void test0521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0521");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser0.canAcceptType(imageFormat14);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata26 = pcxImageParser24.getMetadata(byteSource25);
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder29 = pcxImageParser28.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance31 = pcxImageParser28.getFormatCompliance(byteSource30);
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser28.getMetadata(byteSource32);
        boolean boolean35 = pcxImageParser28.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser28.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser24.getMetadata(byteSource27, pcxImagingParameters36);
        byte[] byteArray38 = pcxImageParser18.getIccProfileBytes(byteSource23, pcxImagingParameters36);
        java.lang.String str39 = pcxImageParser18.getName();
        java.lang.String str40 = pcxImageParser18.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser42 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder43 = pcxImageParser42.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance45 = pcxImageParser42.getFormatCompliance(byteSource44);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser42.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat47 = null;
        boolean boolean48 = pcxImageParser42.canAcceptType(imageFormat47);
        java.lang.String str49 = pcxImageParser42.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters50 = pcxImageParser42.getDefaultParameters();
        byte[] byteArray51 = pcxImageParser18.getIccProfileBytes(byteSource41, pcxImagingParameters50);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage52 = pcxImageParser0.getBufferedImage(byteSource17, pcxImagingParameters50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata26);
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertNull(formatCompliance31);
        org.junit.Assert.assertNull(imageMetadata33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertNull(byteArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Pcx-Custom" + "'", str39, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "pcx" + "'", str40, "pcx");
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNull(formatCompliance45);
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "pcx" + "'", str49, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters50);
        org.junit.Assert.assertNull(byteArray51);
    }

    @Test
    public void test0522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0522");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser4.getMetadata(byteSource8);
        boolean boolean11 = pcxImageParser4.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters12);
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser0.canAcceptType(imageFormat14);
        java.io.File file16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder18 = pcxImageParser17.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance20 = pcxImageParser17.getFormatCompliance(byteSource19);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser17.getMetadata(byteSource21);
        boolean boolean24 = pcxImageParser17.canAcceptExtension("hi!");
        org.apache.commons.imaging.ImageFormat imageFormat25 = null;
        boolean boolean26 = pcxImageParser17.canAcceptType(imageFormat25);
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata30 = pcxImageParser28.getMetadata(byteSource29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser38 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser38.getMetadata(byteSource39);
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser42 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder43 = pcxImageParser42.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance45 = pcxImageParser42.getFormatCompliance(byteSource44);
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser42.getMetadata(byteSource46);
        boolean boolean49 = pcxImageParser42.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters50 = pcxImageParser42.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata51 = pcxImageParser38.getMetadata(byteSource41, pcxImagingParameters50);
        byte[] byteArray52 = pcxImageParser32.getIccProfileBytes(byteSource37, pcxImagingParameters50);
        java.lang.String str53 = pcxImageParser32.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters54 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata55 = pcxImageParser28.getMetadata(byteSource31, pcxImagingParameters54);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata56 = pcxImageParser17.getMetadata(byteSource27, pcxImagingParameters54);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo57 = pcxImageParser0.getImageInfo(file16, pcxImagingParameters54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNull(formatCompliance20);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(imageMetadata30);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNull(formatCompliance45);
        org.junit.Assert.assertNull(imageMetadata47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters50);
        org.junit.Assert.assertNull(imageMetadata51);
        org.junit.Assert.assertNull(byteArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Pcx-Custom" + "'", str53, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters54);
        org.junit.Assert.assertNull(imageMetadata55);
        org.junit.Assert.assertNull(imageMetadata56);
    }

    @Test
    public void test0523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0523");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = null;
        byte[] byteArray17 = pcxImageParser14.getIccProfileBytes(byteSource15, pcxImagingParameters16);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser14.getDefaultParameters();
        byte[] byteArray19 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters18);
        boolean boolean21 = pcxImageParser0.canAcceptExtension("hi!");
        boolean boolean23 = pcxImageParser0.canAcceptExtension("Pcx-Custom");
        java.io.File file24 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str25 = pcxImageParser0.dumpImageFile(file24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(byteArray17);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test0524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0524");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser7.getMetadata(byteSource11);
        boolean boolean14 = pcxImageParser7.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = pcxImageParser7.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension16 = pcxImageParser0.getImageSize(byteSource6, pcxImagingParameters15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters15);
    }

    @Test
    public void test0525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0525");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat37 = null;
        boolean boolean38 = pcxImageParser32.canAcceptType(imageFormat37);
        java.lang.String str39 = pcxImageParser32.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser32.getDefaultParameters();
        byte[] byteArray41 = pcxImageParser0.getIccProfileBytes(byteSource31, pcxImagingParameters40);
        java.lang.String str42 = pcxImageParser0.getName();
        java.io.File file43 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance44 = pcxImageParser0.getFormatCompliance(file43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "pcx" + "'", str39, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(byteArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Pcx-Custom" + "'", str42, "Pcx-Custom");
    }

    @Test
    public void test0526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0526");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser0.canAcceptType(imageFormat23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo26 = pcxImageParser0.getImageInfo(byteSource25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test0527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0527");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource14);
        java.io.File file16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = null;
        byte[] byteArray20 = pcxImageParser17.getIccProfileBytes(byteSource18, pcxImagingParameters19);
        java.lang.String str21 = pcxImageParser17.getName();
        java.lang.String str22 = pcxImageParser17.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser17.getMetadata(byteSource23, pcxImagingParameters28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = null;
        byte[] byteArray34 = pcxImageParser31.getIccProfileBytes(byteSource32, pcxImagingParameters33);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser31.getDefaultParameters();
        byte[] byteArray36 = pcxImageParser17.getIccProfileBytes(byteSource30, pcxImagingParameters35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser38 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder39 = pcxImageParser38.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance41 = pcxImageParser38.getFormatCompliance(byteSource40);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser38.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat43 = null;
        boolean boolean44 = pcxImageParser38.canAcceptType(imageFormat43);
        java.lang.String str45 = pcxImageParser38.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser38.getDefaultParameters();
        java.lang.String str47 = pcxImageParser38.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = pcxImageParser38.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser17.getMetadata(byteSource37, pcxImagingParameters48);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension50 = pcxImageParser0.getImageSize(file16, pcxImagingParameters48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Pcx-Custom" + "'", str22, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertNull(byteArray34);
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertNotNull(byteOrder39);
        org.junit.Assert.assertNull(formatCompliance41);
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "pcx" + "'", str45, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Pcx-Custom" + "'", str47, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters48);
        org.junit.Assert.assertNull(imageMetadata49);
    }

    @Test
    public void test0528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0528");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = null;
        byte[] byteArray33 = pcxImageParser30.getIccProfileBytes(byteSource31, pcxImagingParameters32);
        java.lang.String str34 = pcxImageParser30.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser30.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser0.getMetadata(byteSource29, pcxImagingParameters35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser0.getMetadata(byteSource37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser0.getMetadata(byteSource39);
        java.io.File file41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser42 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = null;
        byte[] byteArray45 = pcxImageParser42.getIccProfileBytes(byteSource43, pcxImagingParameters44);
        java.lang.String str46 = pcxImageParser42.getName();
        java.lang.String str47 = pcxImageParser42.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance49 = pcxImageParser42.getFormatCompliance(byteSource48);
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser51 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder52 = pcxImageParser51.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance54 = pcxImageParser51.getFormatCompliance(byteSource53);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters55 = pcxImageParser51.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat56 = null;
        boolean boolean57 = pcxImageParser51.canAcceptType(imageFormat56);
        java.lang.String str58 = pcxImageParser51.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters59 = pcxImageParser51.getDefaultParameters();
        byte[] byteArray60 = pcxImageParser42.getIccProfileBytes(byteSource50, pcxImagingParameters59);
        org.apache.commons.imaging.ImageFormat imageFormat61 = null;
        boolean boolean62 = pcxImageParser42.canAcceptType(imageFormat61);
        org.apache.commons.imaging.ImageFormat imageFormat63 = null;
        boolean boolean64 = pcxImageParser42.canAcceptType(imageFormat63);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters65 = pcxImageParser42.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray66 = pcxImageParser0.getIccProfileBytes(file41, pcxImagingParameters65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "pcx" + "'", str34, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertNull(byteArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Pcx-Custom" + "'", str46, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Pcx-Custom" + "'", str47, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance49);
        org.junit.Assert.assertNotNull(byteOrder52);
        org.junit.Assert.assertNull(formatCompliance54);
        org.junit.Assert.assertNotNull(pcxImagingParameters55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "pcx" + "'", str58, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters59);
        org.junit.Assert.assertNull(byteArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters65);
    }

    @Test
    public void test0529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0529");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = null;
        byte[] byteArray19 = pcxImageParser16.getIccProfileBytes(byteSource17, pcxImagingParameters18);
        java.lang.String str20 = pcxImageParser16.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser10.getMetadata(byteSource15, pcxImagingParameters21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser0.getMetadata(byteSource9, pcxImagingParameters23);
        java.io.File file25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata28 = pcxImageParser26.getMetadata(byteSource27);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder31 = pcxImageParser30.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance33 = pcxImageParser30.getFormatCompliance(byteSource32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser30.getMetadata(byteSource34);
        boolean boolean37 = pcxImageParser30.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser30.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata39 = pcxImageParser26.getMetadata(byteSource29, pcxImagingParameters38);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension40 = pcxImageParser0.getImageSize(file25, pcxImagingParameters38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "pcx" + "'", str20, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertNull(imageMetadata28);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNull(formatCompliance33);
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
        org.junit.Assert.assertNull(imageMetadata39);
    }

    @Test
    public void test0530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0530");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        boolean boolean30 = pcxImageParser0.canAcceptExtension("pcx");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser0.getDefaultParameters();
        java.io.File file32 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean33 = pcxImageParser0.canAcceptExtension(file32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
    }

    @Test
    public void test0531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0531");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.io.File file29 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension30 = pcxImageParser0.getImageSize(file29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
    }

    @Test
    public void test0532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0532");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        java.lang.String str9 = pcxImageParser0.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = pcxImageParser0.getDefaultParameters();
        java.io.File file11 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(file11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Pcx-Custom" + "'", str9, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters10);
    }

    @Test
    public void test0533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0533");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        boolean boolean14 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser0.getFormatCompliance(byteSource15);
        java.io.File file17 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata18 = pcxImageParser0.getMetadata(file17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(formatCompliance16);
    }

    @Test
    public void test0534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0534");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo24 = pcxImageParser0.getImageInfo(byteSource23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
    }

    @Test
    public void test0535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0535");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        java.lang.String str8 = pcxImageParser0.getName();
        java.io.File file9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata14 = pcxImageParser10.getMetadata(byteSource13);
        java.lang.String str15 = pcxImageParser10.getDefaultExtension();
        java.lang.String str16 = pcxImageParser10.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser10.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension18 = pcxImageParser0.getImageSize(file9, pcxImagingParameters17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Pcx-Custom" + "'", str8, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "pcx" + "'", str15, "pcx");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "pcx" + "'", str16, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
    }

    @Test
    public void test0536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0536");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        java.io.File file6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(file6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
    }

    @Test
    public void test0537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0537");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder7 = pcxImageParser6.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance9 = pcxImageParser6.getFormatCompliance(byteSource8);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser12 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata14 = pcxImageParser12.getMetadata(byteSource13);
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder17 = pcxImageParser16.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance19 = pcxImageParser16.getFormatCompliance(byteSource18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata21 = pcxImageParser16.getMetadata(byteSource20);
        boolean boolean23 = pcxImageParser16.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser12.getMetadata(byteSource15, pcxImagingParameters24);
        byte[] byteArray26 = pcxImageParser6.getIccProfileBytes(byteSource11, pcxImagingParameters24);
        java.lang.String str27 = pcxImageParser6.getDefaultExtension();
        java.lang.String str28 = pcxImageParser6.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser6.canAcceptType(imageFormat29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser6.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser6.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage34 = pcxImageParser0.getBufferedImage(byteSource5, pcxImagingParameters33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNull(formatCompliance9);
        org.junit.Assert.assertNotNull(pcxImagingParameters10);
        org.junit.Assert.assertNull(imageMetadata14);
        org.junit.Assert.assertNotNull(byteOrder17);
        org.junit.Assert.assertNull(formatCompliance19);
        org.junit.Assert.assertNull(imageMetadata21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters24);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertNull(byteArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "pcx" + "'", str27, "pcx");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "pcx" + "'", str28, "pcx");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
    }

    @Test
    public void test0538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0538");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser11.getMetadata(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder16 = pcxImageParser15.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser15.getFormatCompliance(byteSource17);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser15.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser21.getMetadata(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder26 = pcxImageParser25.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance28 = pcxImageParser25.getFormatCompliance(byteSource27);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata30 = pcxImageParser25.getMetadata(byteSource29);
        boolean boolean32 = pcxImageParser25.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser25.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser21.getMetadata(byteSource24, pcxImagingParameters33);
        byte[] byteArray35 = pcxImageParser15.getIccProfileBytes(byteSource20, pcxImagingParameters33);
        java.lang.String str36 = pcxImageParser15.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = pcxImageParser15.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser11.getMetadata(byteSource14, pcxImagingParameters37);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = pcxImageParser11.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser41 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = null;
        byte[] byteArray44 = pcxImageParser41.getIccProfileBytes(byteSource42, pcxImagingParameters43);
        java.lang.String str45 = pcxImageParser41.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser41.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser11.getMetadata(byteSource40, pcxImagingParameters46);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension48 = pcxImageParser0.getImageSize(byteSource10, pcxImagingParameters46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(pcxImagingParameters9);
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNull(formatCompliance18);
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNotNull(byteOrder26);
        org.junit.Assert.assertNull(formatCompliance28);
        org.junit.Assert.assertNull(imageMetadata30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertNull(byteArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Pcx-Custom" + "'", str36, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters37);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNotNull(pcxImagingParameters39);
        org.junit.Assert.assertNull(byteArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "pcx" + "'", str45, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
        org.junit.Assert.assertNull(imageMetadata47);
    }

    @Test
    public void test0539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0539");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.nio.ByteOrder byteOrder29 = pcxImageParser0.getByteOrder();
        java.lang.String str30 = pcxImageParser0.getDefaultExtension();
        java.io.File file31 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList32 = pcxImageParser0.getAllBufferedImages(file31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "pcx" + "'", str30, "pcx");
    }

    @Test
    public void test0540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0540");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        boolean boolean9 = pcxImageParser0.canAcceptExtension("");
        boolean boolean11 = pcxImageParser0.canAcceptExtension("hi!");
        java.io.File file12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = null;
        byte[] byteArray16 = pcxImageParser13.getIccProfileBytes(byteSource14, pcxImagingParameters15);
        java.lang.String str17 = pcxImageParser13.getName();
        java.lang.String str18 = pcxImageParser13.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser20 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder21 = pcxImageParser20.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance23 = pcxImageParser20.getFormatCompliance(byteSource22);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = pcxImageParser20.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser13.getMetadata(byteSource19, pcxImagingParameters24);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata26 = pcxImageParser0.getMetadata(file12, pcxImagingParameters24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(byteArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Pcx-Custom" + "'", str17, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Pcx-Custom" + "'", str18, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder21);
        org.junit.Assert.assertNull(formatCompliance23);
        org.junit.Assert.assertNotNull(pcxImagingParameters24);
        org.junit.Assert.assertNull(imageMetadata25);
    }

    @Test
    public void test0541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0541");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList7 = pcxImageParser0.getAllBufferedImages(byteSource6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
    }

    @Test
    public void test0542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0542");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.ImageFormat imageFormat8 = null;
        boolean boolean9 = pcxImageParser0.canAcceptType(imageFormat8);
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser0.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser0.getMetadata(byteSource12);
        java.io.File file14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = null;
        byte[] byteArray18 = pcxImageParser15.getIccProfileBytes(byteSource16, pcxImagingParameters17);
        java.lang.String str19 = pcxImageParser15.getName();
        java.lang.String str20 = pcxImageParser15.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser22 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder23 = pcxImageParser22.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance25 = pcxImageParser22.getFormatCompliance(byteSource24);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser22.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser15.getMetadata(byteSource21, pcxImagingParameters26);
        java.lang.String str28 = pcxImageParser15.getName();
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser15.canAcceptType(imageFormat29);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser15.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage32 = pcxImageParser0.getBufferedImage(file14, pcxImagingParameters31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Pcx-Custom" + "'", str19, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Pcx-Custom" + "'", str20, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertNull(formatCompliance25);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Pcx-Custom" + "'", str28, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
    }

    @Test
    public void test0543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0543");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser9.canAcceptType(imageFormat14);
        java.lang.String str16 = pcxImageParser9.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser9.getDefaultParameters();
        byte[] byteArray18 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters17);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser0.getDefaultParameters();
        java.io.File file20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList21 = pcxImageParser0.getAllBufferedImages(file20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "pcx" + "'", str16, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
    }

    @Test
    public void test0544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0544");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.nio.ByteOrder byteOrder4 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser0.getFormatCompliance(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = null;
        byte[] byteArray11 = pcxImageParser8.getIccProfileBytes(byteSource9, pcxImagingParameters10);
        java.lang.String str12 = pcxImageParser8.getName();
        java.lang.String str13 = pcxImageParser8.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder16 = pcxImageParser15.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser15.getFormatCompliance(byteSource17);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser15.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata20 = pcxImageParser8.getMetadata(byteSource14, pcxImagingParameters19);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser22 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser22.getMetadata(byteSource23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder27 = pcxImageParser26.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance29 = pcxImageParser26.getFormatCompliance(byteSource28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser26.getMetadata(byteSource30);
        boolean boolean33 = pcxImageParser26.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser26.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser22.getMetadata(byteSource25, pcxImagingParameters34);
        byte[] byteArray36 = pcxImageParser8.getIccProfileBytes(byteSource21, pcxImagingParameters34);
        org.apache.commons.imaging.ImageFormat imageFormat37 = null;
        boolean boolean38 = pcxImageParser8.canAcceptType(imageFormat37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance40 = pcxImageParser8.getFormatCompliance(byteSource39);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser0.getMetadata(byteSource7, pcxImagingParameters41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = null;
        byte[] byteArray47 = pcxImageParser44.getIccProfileBytes(byteSource45, pcxImagingParameters46);
        java.lang.String str48 = pcxImageParser44.getName();
        java.lang.String str49 = pcxImageParser44.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser51 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder52 = pcxImageParser51.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance54 = pcxImageParser51.getFormatCompliance(byteSource53);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters55 = pcxImageParser51.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata56 = pcxImageParser44.getMetadata(byteSource50, pcxImagingParameters55);
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser58 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters60 = null;
        byte[] byteArray61 = pcxImageParser58.getIccProfileBytes(byteSource59, pcxImagingParameters60);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters62 = pcxImageParser58.getDefaultParameters();
        byte[] byteArray63 = pcxImageParser44.getIccProfileBytes(byteSource57, pcxImagingParameters62);
        org.apache.commons.imaging.bytesource.ByteSource byteSource64 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser65 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder66 = pcxImageParser65.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource67 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance68 = pcxImageParser65.getFormatCompliance(byteSource67);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters69 = pcxImageParser65.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat70 = null;
        boolean boolean71 = pcxImageParser65.canAcceptType(imageFormat70);
        java.lang.String str72 = pcxImageParser65.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters73 = pcxImageParser65.getDefaultParameters();
        java.lang.String str74 = pcxImageParser65.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters75 = pcxImageParser65.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata76 = pcxImageParser44.getMetadata(byteSource64, pcxImagingParameters75);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo77 = pcxImageParser0.getImageInfo(byteSource43, pcxImagingParameters75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNull(formatCompliance6);
        org.junit.Assert.assertNull(byteArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Pcx-Custom" + "'", str12, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNull(formatCompliance18);
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
        org.junit.Assert.assertNull(imageMetadata20);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNull(formatCompliance29);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(formatCompliance40);
        org.junit.Assert.assertNotNull(pcxImagingParameters41);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertNull(byteArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Pcx-Custom" + "'", str48, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Pcx-Custom" + "'", str49, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder52);
        org.junit.Assert.assertNull(formatCompliance54);
        org.junit.Assert.assertNotNull(pcxImagingParameters55);
        org.junit.Assert.assertNull(imageMetadata56);
        org.junit.Assert.assertNull(byteArray61);
        org.junit.Assert.assertNotNull(pcxImagingParameters62);
        org.junit.Assert.assertNull(byteArray63);
        org.junit.Assert.assertNotNull(byteOrder66);
        org.junit.Assert.assertNull(formatCompliance68);
        org.junit.Assert.assertNotNull(pcxImagingParameters69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "pcx" + "'", str72, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Pcx-Custom" + "'", str74, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters75);
        org.junit.Assert.assertNull(imageMetadata76);
    }

    @Test
    public void test0545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0545");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance14 = pcxImageParser0.getFormatCompliance(byteSource13);
        boolean boolean16 = pcxImageParser0.canAcceptExtension("Pcx-Custom");
        java.io.File file17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser18.getDefaultParameters();
        java.lang.String str23 = pcxImageParser18.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser18.getMetadata(byteSource24);
        boolean boolean27 = pcxImageParser18.canAcceptExtension("");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser18.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage29 = pcxImageParser0.getBufferedImage(file17, pcxImagingParameters28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(formatCompliance14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "pcx" + "'", str23, "pcx");
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
    }

    @Test
    public void test0546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0546");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = null;
        byte[] byteArray19 = pcxImageParser16.getIccProfileBytes(byteSource17, pcxImagingParameters18);
        java.lang.String str20 = pcxImageParser16.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser10.getMetadata(byteSource15, pcxImagingParameters21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser0.getMetadata(byteSource9, pcxImagingParameters23);
        java.awt.image.BufferedImage bufferedImage25 = null;
        java.io.OutputStream outputStream26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser27 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder28 = pcxImageParser27.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser27.getFormatCompliance(byteSource29);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser27.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser33.getMetadata(byteSource34);
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser37 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder38 = pcxImageParser37.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance40 = pcxImageParser37.getFormatCompliance(byteSource39);
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser37.getMetadata(byteSource41);
        boolean boolean44 = pcxImageParser37.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser37.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser33.getMetadata(byteSource36, pcxImagingParameters45);
        byte[] byteArray47 = pcxImageParser27.getIccProfileBytes(byteSource32, pcxImagingParameters45);
        java.lang.String str48 = pcxImageParser27.getDefaultExtension();
        java.lang.String str49 = pcxImageParser27.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat50 = null;
        boolean boolean51 = pcxImageParser27.canAcceptType(imageFormat50);
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance53 = pcxImageParser27.getFormatCompliance(byteSource52);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters54 = pcxImageParser27.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage25, outputStream26, pcxImagingParameters54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "pcx" + "'", str20, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertNotNull(byteOrder28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertNotNull(byteOrder38);
        org.junit.Assert.assertNull(formatCompliance40);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertNull(imageMetadata46);
        org.junit.Assert.assertNull(byteArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "pcx" + "'", str48, "pcx");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "pcx" + "'", str49, "pcx");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(formatCompliance53);
        org.junit.Assert.assertNotNull(pcxImagingParameters54);
    }

    @Test
    public void test0547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0547");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        java.nio.ByteOrder byteOrder2 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getDefaultExtension();
        java.lang.String str26 = pcxImageParser4.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat27 = null;
        boolean boolean28 = pcxImageParser4.canAcceptType(imageFormat27);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser4.getFormatCompliance(byteSource29);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser4.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage32 = pcxImageParser0.getBufferedImage(byteSource3, pcxImagingParameters31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "pcx" + "'", str25, "pcx");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "pcx" + "'", str26, "pcx");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
    }

    @Test
    public void test0548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0548");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.io.File file4 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser5 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser5.getMetadata(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser5.getMetadata(byteSource8);
        java.lang.String str10 = pcxImageParser5.getDefaultExtension();
        java.lang.String str11 = pcxImageParser5.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser5.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo13 = pcxImageParser0.getImageInfo(file4, pcxImagingParameters12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "pcx" + "'", str10, "pcx");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "pcx" + "'", str11, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
    }

    @Test
    public void test0549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0549");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = null;
        byte[] byteArray9 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters8);
        java.io.File file10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata11 = pcxImageParser0.getMetadata(file10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(byteArray9);
    }

    @Test
    public void test0550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0550");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo32 = pcxImageParser0.getImageInfo(byteSource31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
    }

    @Test
    public void test0551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0551");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser5 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str6 = pcxImageParser5.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser5.getFormatCompliance(byteSource7);
        java.lang.String str9 = pcxImageParser5.getName();
        java.lang.String str10 = pcxImageParser5.getName();
        org.apache.commons.imaging.ImageFormat imageFormat11 = null;
        boolean boolean12 = pcxImageParser5.canAcceptType(imageFormat11);
        boolean boolean14 = pcxImageParser5.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = null;
        byte[] byteArray19 = pcxImageParser16.getIccProfileBytes(byteSource17, pcxImagingParameters18);
        java.lang.String str20 = pcxImageParser16.getName();
        java.lang.String str21 = pcxImageParser16.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser23 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder24 = pcxImageParser23.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance26 = pcxImageParser23.getFormatCompliance(byteSource25);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = pcxImageParser23.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata28 = pcxImageParser16.getMetadata(byteSource22, pcxImagingParameters27);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = null;
        byte[] byteArray33 = pcxImageParser30.getIccProfileBytes(byteSource31, pcxImagingParameters32);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser30.getDefaultParameters();
        byte[] byteArray35 = pcxImageParser16.getIccProfileBytes(byteSource29, pcxImagingParameters34);
        byte[] byteArray36 = pcxImageParser5.getIccProfileBytes(byteSource15, pcxImagingParameters34);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo37 = pcxImageParser0.getImageInfo(byteSource4, pcxImagingParameters34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Pcx-Custom" + "'", str6, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Pcx-Custom" + "'", str9, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Pcx-Custom" + "'", str10, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Pcx-Custom" + "'", str20, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder24);
        org.junit.Assert.assertNull(formatCompliance26);
        org.junit.Assert.assertNotNull(pcxImagingParameters27);
        org.junit.Assert.assertNull(imageMetadata28);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
        org.junit.Assert.assertNull(byteArray35);
        org.junit.Assert.assertNull(byteArray36);
    }

    @Test
    public void test0552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0552");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.io.File file5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(file5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
    }

    @Test
    public void test0553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0553");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        boolean boolean30 = pcxImageParser0.canAcceptExtension("pcx");
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo33 = pcxImageParser0.getImageInfo(byteSource32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrder31);
    }

    @Test
    public void test0554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0554");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat6 = null;
        boolean boolean7 = pcxImageParser0.canAcceptType(imageFormat6);
        java.io.File file8 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = pcxImageParser0.canAcceptExtension(file8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0555");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        java.io.File file7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata10 = pcxImageParser8.getMetadata(byteSource9);
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser12 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder13 = pcxImageParser12.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance15 = pcxImageParser12.getFormatCompliance(byteSource14);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = pcxImageParser12.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata20 = pcxImageParser18.getMetadata(byteSource19);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser22 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder23 = pcxImageParser22.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance25 = pcxImageParser22.getFormatCompliance(byteSource24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser22.getMetadata(byteSource26);
        boolean boolean29 = pcxImageParser22.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser22.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser18.getMetadata(byteSource21, pcxImagingParameters30);
        byte[] byteArray32 = pcxImageParser12.getIccProfileBytes(byteSource17, pcxImagingParameters30);
        java.lang.String str33 = pcxImageParser12.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser12.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser8.getMetadata(byteSource11, pcxImagingParameters34);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser38 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = null;
        byte[] byteArray41 = pcxImageParser38.getIccProfileBytes(byteSource39, pcxImagingParameters40);
        java.lang.String str42 = pcxImageParser38.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser38.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser8.getMetadata(byteSource37, pcxImagingParameters43);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray45 = pcxImageParser0.getIccProfileBytes(file7, pcxImagingParameters43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(imageMetadata10);
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNull(formatCompliance15);
        org.junit.Assert.assertNotNull(pcxImagingParameters16);
        org.junit.Assert.assertNull(imageMetadata20);
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertNull(formatCompliance25);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertNull(byteArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Pcx-Custom" + "'", str33, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertNull(byteArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "pcx" + "'", str42, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertNull(imageMetadata44);
    }

    @Test
    public void test0556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0556");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata4 = pcxImageParser0.getMetadata(byteSource3);
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        java.io.File file6 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray7 = pcxImageParser0.getIccProfileBytes(file6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
    }

    @Test
    public void test0557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0557");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.nio.ByteOrder byteOrder4 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder7 = pcxImageParser6.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance9 = pcxImageParser6.getFormatCompliance(byteSource8);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat11 = null;
        boolean boolean12 = pcxImageParser6.canAcceptType(imageFormat11);
        java.lang.String str13 = pcxImageParser6.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource5, pcxImagingParameters14);
        java.lang.Class<?> wildcardClass16 = pcxImageParser0.getClass();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNull(formatCompliance9);
        org.junit.Assert.assertNotNull(pcxImagingParameters10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0558");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.io.File file21 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser0.getMetadata(file21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
    }

    @Test
    public void test0559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0559");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        java.lang.Class<?> wildcardClass23 = pcxImageParser0.getClass();
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0560");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        boolean boolean9 = pcxImageParser0.canAcceptExtension("");
        java.io.File file10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo12 = pcxImageParser0.getImageInfo(file10, pcxImagingParameters11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0561");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        boolean boolean14 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser0.getFormatCompliance(byteSource15);
        java.lang.String str17 = pcxImageParser0.getName();
        java.io.File file18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo20 = pcxImageParser0.getImageInfo(file18, pcxImagingParameters19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Pcx-Custom" + "'", str17, "Pcx-Custom");
    }

    @Test
    public void test0562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0562");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = null;
        byte[] byteArray17 = pcxImageParser14.getIccProfileBytes(byteSource15, pcxImagingParameters16);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser14.getDefaultParameters();
        byte[] byteArray19 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters18);
        java.io.PrintWriter printWriter20 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean22 = pcxImageParser0.dumpImageFile(printWriter20, byteSource21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(byteArray17);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(byteArray19);
    }

    @Test
    public void test0563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0563");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        java.lang.String str8 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata10 = pcxImageParser0.getMetadata(byteSource9);
        java.io.File file11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension12 = pcxImageParser0.getImageSize(file11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "pcx" + "'", str8, "pcx");
        org.junit.Assert.assertNull(imageMetadata10);
    }

    @Test
    public void test0564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0564");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.ImageFormat imageFormat8 = null;
        boolean boolean9 = pcxImageParser0.canAcceptType(imageFormat8);
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata11 = pcxImageParser0.getMetadata(byteSource10);
        java.io.PrintWriter printWriter12 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = pcxImageParser0.dumpImageFile(printWriter12, byteSource13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(imageMetadata11);
    }

    @Test
    public void test0565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0565");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = null;
        byte[] byteArray19 = pcxImageParser16.getIccProfileBytes(byteSource17, pcxImagingParameters18);
        java.lang.String str20 = pcxImageParser16.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser10.getMetadata(byteSource15, pcxImagingParameters21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser0.getMetadata(byteSource9, pcxImagingParameters23);
        java.lang.String str25 = pcxImageParser0.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser0.getDefaultParameters();
        java.io.File file27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray29 = pcxImageParser0.getIccProfileBytes(file27, pcxImagingParameters28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "pcx" + "'", str20, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
    }

    @Test
    public void test0566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0566");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser9.canAcceptType(imageFormat14);
        java.lang.String str16 = pcxImageParser9.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser9.getDefaultParameters();
        byte[] byteArray18 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters17);
        org.apache.commons.imaging.ImageFormat imageFormat19 = null;
        boolean boolean20 = pcxImageParser0.canAcceptType(imageFormat19);
        java.lang.String str21 = pcxImageParser0.getName();
        java.io.File file22 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList23 = pcxImageParser0.getAllBufferedImages(file22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "pcx" + "'", str16, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
    }

    @Test
    public void test0567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0567");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser0.getDefaultParameters();
        java.io.File file29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser30.getMetadata(byteSource31);
        org.apache.commons.imaging.ImageFormat imageFormat33 = null;
        boolean boolean34 = pcxImageParser30.canAcceptType(imageFormat33);
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser36 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder37 = pcxImageParser36.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance39 = pcxImageParser36.getFormatCompliance(byteSource38);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser36.getDefaultParameters();
        java.lang.String str41 = pcxImageParser36.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata43 = pcxImageParser36.getMetadata(byteSource42);
        boolean boolean45 = pcxImageParser36.canAcceptExtension("");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser36.getDefaultParameters();
        byte[] byteArray47 = pcxImageParser30.getIccProfileBytes(byteSource35, pcxImagingParameters46);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage48 = pcxImageParser0.getBufferedImage(file29, pcxImagingParameters46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNull(formatCompliance39);
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "pcx" + "'", str41, "pcx");
        org.junit.Assert.assertNull(imageMetadata43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
        org.junit.Assert.assertNull(byteArray47);
    }

    @Test
    public void test0568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0568");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser4.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser8.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.lang.String str29 = pcxImageParser8.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser4.getMetadata(byteSource7, pcxImagingParameters30);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters30);
        java.nio.ByteOrder byteOrder33 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = null;
        byte[] byteArray38 = pcxImageParser35.getIccProfileBytes(byteSource36, pcxImagingParameters37);
        java.lang.String str39 = pcxImageParser35.getName();
        java.lang.String str40 = pcxImageParser35.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance42 = pcxImageParser35.getFormatCompliance(byteSource41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder45 = pcxImageParser44.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance47 = pcxImageParser44.getFormatCompliance(byteSource46);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = pcxImageParser44.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat49 = null;
        boolean boolean50 = pcxImageParser44.canAcceptType(imageFormat49);
        java.lang.String str51 = pcxImageParser44.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser44.getDefaultParameters();
        byte[] byteArray53 = pcxImageParser35.getIccProfileBytes(byteSource43, pcxImagingParameters52);
        org.apache.commons.imaging.ImageFormat imageFormat54 = null;
        boolean boolean55 = pcxImageParser35.canAcceptType(imageFormat54);
        org.apache.commons.imaging.ImageFormat imageFormat56 = null;
        boolean boolean57 = pcxImageParser35.canAcceptType(imageFormat56);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters58 = pcxImageParser35.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension59 = pcxImageParser0.getImageSize(byteSource34, pcxImagingParameters58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(byteArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Pcx-Custom" + "'", str39, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Pcx-Custom" + "'", str40, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance42);
        org.junit.Assert.assertNotNull(byteOrder45);
        org.junit.Assert.assertNull(formatCompliance47);
        org.junit.Assert.assertNotNull(pcxImagingParameters48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "pcx" + "'", str51, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(byteArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters58);
    }

    @Test
    public void test0569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0569");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.lang.String str6 = pcxImageParser0.getName();
        java.io.File file7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata10 = pcxImageParser8.getMetadata(byteSource9);
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser12 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder13 = pcxImageParser12.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance15 = pcxImageParser12.getFormatCompliance(byteSource14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata17 = pcxImageParser12.getMetadata(byteSource16);
        boolean boolean19 = pcxImageParser12.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters20 = pcxImageParser12.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata21 = pcxImageParser8.getMetadata(byteSource11, pcxImagingParameters20);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo22 = pcxImageParser0.getImageInfo(file7, pcxImagingParameters20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Pcx-Custom" + "'", str6, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata10);
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNull(formatCompliance15);
        org.junit.Assert.assertNull(imageMetadata17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters20);
        org.junit.Assert.assertNull(imageMetadata21);
    }

    @Test
    public void test0570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0570");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        java.nio.ByteOrder byteOrder2 = pcxImageParser0.getByteOrder();
        java.lang.String str3 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo5 = pcxImageParser0.getImageInfo(byteSource4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Pcx-Custom" + "'", str3, "Pcx-Custom");
    }

    @Test
    public void test0571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0571");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat15 = null;
        boolean boolean16 = pcxImageParser10.canAcceptType(imageFormat15);
        java.lang.String str17 = pcxImageParser10.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage19 = pcxImageParser0.getBufferedImage(byteSource9, pcxImagingParameters18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "pcx" + "'", str17, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
    }

    @Test
    public void test0572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0572");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        java.nio.ByteOrder byteOrder9 = pcxImageParser0.getByteOrder();
        java.io.File file10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str12 = pcxImageParser11.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance14 = pcxImageParser11.getFormatCompliance(byteSource13);
        boolean boolean16 = pcxImageParser11.canAcceptExtension("");
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder22 = pcxImageParser21.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance24 = pcxImageParser21.getFormatCompliance(byteSource23);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser27 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser27.getMetadata(byteSource28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder32 = pcxImageParser31.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance34 = pcxImageParser31.getFormatCompliance(byteSource33);
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser31.getMetadata(byteSource35);
        boolean boolean38 = pcxImageParser31.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = pcxImageParser31.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser27.getMetadata(byteSource30, pcxImagingParameters39);
        byte[] byteArray41 = pcxImageParser21.getIccProfileBytes(byteSource26, pcxImagingParameters39);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser18.getMetadata(byteSource20, pcxImagingParameters39);
        byte[] byteArray43 = pcxImageParser11.getIccProfileBytes(byteSource17, pcxImagingParameters39);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension44 = pcxImageParser0.getImageSize(file10, pcxImagingParameters39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Pcx-Custom" + "'", str12, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNull(formatCompliance24);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertNull(formatCompliance34);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters39);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertNull(byteArray41);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertNull(byteArray43);
    }

    @Test
    public void test0573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0573");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser0.canAcceptType(imageFormat23);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser0.getDefaultParameters();
        java.io.File file26 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean27 = pcxImageParser0.canAcceptExtension(file26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
    }

    @Test
    public void test0574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0574");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser0.getMetadata(byteSource32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList35 = pcxImageParser0.getAllBufferedImages(byteSource34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNull(imageMetadata33);
    }

    @Test
    public void test0575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0575");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        java.nio.ByteOrder byteOrder32 = pcxImageParser0.getByteOrder();
        java.lang.String str33 = pcxImageParser0.getName();
        java.io.File file34 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser0.getMetadata(file34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Pcx-Custom" + "'", str33, "Pcx-Custom");
    }

    @Test
    public void test0576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0576");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser0.getDefaultParameters();
        java.io.File file29 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean30 = pcxImageParser0.canAcceptExtension(file29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
    }

    @Test
    public void test0577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0577");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.io.File file31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = null;
        byte[] byteArray35 = pcxImageParser32.getIccProfileBytes(byteSource33, pcxImagingParameters34);
        java.lang.String str36 = pcxImageParser32.getName();
        java.lang.String str37 = pcxImageParser32.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder40 = pcxImageParser39.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance42 = pcxImageParser39.getFormatCompliance(byteSource41);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser39.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser32.getMetadata(byteSource38, pcxImagingParameters43);
        java.lang.String str45 = pcxImageParser32.getName();
        org.apache.commons.imaging.ImageFormat imageFormat46 = null;
        boolean boolean47 = pcxImageParser32.canAcceptType(imageFormat46);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = pcxImageParser32.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser0.getMetadata(file31, pcxImagingParameters48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNull(byteArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Pcx-Custom" + "'", str36, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Pcx-Custom" + "'", str37, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNull(formatCompliance42);
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Pcx-Custom" + "'", str45, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters48);
    }

    @Test
    public void test0578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0578");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.io.File file31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = null;
        byte[] byteArray35 = pcxImageParser32.getIccProfileBytes(byteSource33, pcxImagingParameters34);
        java.lang.String str36 = pcxImageParser32.getName();
        java.lang.String str37 = pcxImageParser32.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder40 = pcxImageParser39.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance42 = pcxImageParser39.getFormatCompliance(byteSource41);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser39.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser32.getMetadata(byteSource38, pcxImagingParameters43);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage45 = pcxImageParser0.getBufferedImage(file31, pcxImagingParameters43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNull(byteArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Pcx-Custom" + "'", str36, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Pcx-Custom" + "'", str37, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNull(formatCompliance42);
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertNull(imageMetadata44);
    }

    @Test
    public void test0579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0579");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat6 = null;
        boolean boolean7 = pcxImageParser0.canAcceptType(imageFormat6);
        boolean boolean9 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = null;
        byte[] byteArray14 = pcxImageParser11.getIccProfileBytes(byteSource12, pcxImagingParameters13);
        java.lang.String str15 = pcxImageParser11.getName();
        java.lang.String str16 = pcxImageParser11.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser11.getMetadata(byteSource17, pcxImagingParameters22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = null;
        byte[] byteArray28 = pcxImageParser25.getIccProfileBytes(byteSource26, pcxImagingParameters27);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = pcxImageParser25.getDefaultParameters();
        byte[] byteArray30 = pcxImageParser11.getIccProfileBytes(byteSource24, pcxImagingParameters29);
        byte[] byteArray31 = pcxImageParser0.getIccProfileBytes(byteSource10, pcxImagingParameters29);
        java.io.File file32 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList33 = pcxImageParser0.getAllBufferedImages(file32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(byteArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Pcx-Custom" + "'", str15, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Pcx-Custom" + "'", str16, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNotNull(pcxImagingParameters29);
        org.junit.Assert.assertNull(byteArray30);
        org.junit.Assert.assertNull(byteArray31);
    }

    @Test
    public void test0580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0580");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        boolean boolean6 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser8.getDefaultParameters();
        byte[] byteArray14 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters13);
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = null;
        byte[] byteArray19 = pcxImageParser16.getIccProfileBytes(byteSource17, pcxImagingParameters18);
        java.nio.ByteOrder byteOrder20 = pcxImageParser16.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser22 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder23 = pcxImageParser22.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance25 = pcxImageParser22.getFormatCompliance(byteSource24);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser22.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat27 = null;
        boolean boolean28 = pcxImageParser22.canAcceptType(imageFormat27);
        java.lang.String str29 = pcxImageParser22.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser22.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser16.getMetadata(byteSource21, pcxImagingParameters30);
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder34 = pcxImageParser33.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance36 = pcxImageParser33.getFormatCompliance(byteSource35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser33.getMetadata(byteSource37);
        boolean boolean40 = pcxImageParser33.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = pcxImageParser33.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser16.getMetadata(byteSource32, pcxImagingParameters41);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension43 = pcxImageParser0.getImageSize(byteSource15, pcxImagingParameters41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertNull(byteArray14);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertNull(formatCompliance25);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "pcx" + "'", str29, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertNotNull(byteOrder34);
        org.junit.Assert.assertNull(formatCompliance36);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters41);
        org.junit.Assert.assertNull(imageMetadata42);
    }

    @Test
    public void test0581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0581");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = null;
        byte[] byteArray13 = pcxImageParser10.getIccProfileBytes(byteSource11, pcxImagingParameters12);
        java.lang.String str14 = pcxImageParser10.getName();
        java.lang.String str15 = pcxImageParser10.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser10.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder20 = pcxImageParser19.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance22 = pcxImageParser19.getFormatCompliance(byteSource21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser19.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat24 = null;
        boolean boolean25 = pcxImageParser19.canAcceptType(imageFormat24);
        java.lang.String str26 = pcxImageParser19.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = pcxImageParser19.getDefaultParameters();
        byte[] byteArray28 = pcxImageParser10.getIccProfileBytes(byteSource18, pcxImagingParameters27);
        byte[] byteArray29 = pcxImageParser0.getIccProfileBytes(byteSource9, pcxImagingParameters27);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList31 = pcxImageParser0.getAllBufferedImages(byteSource30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(byteArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Pcx-Custom" + "'", str14, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Pcx-Custom" + "'", str15, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNull(formatCompliance22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "pcx" + "'", str26, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(byteArray29);
    }

    @Test
    public void test0582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0582");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.io.File file6 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray7 = pcxImageParser0.getIccProfileBytes(file6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
    }

    @Test
    public void test0583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0583");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.ImageFormat imageFormat8 = null;
        boolean boolean9 = pcxImageParser0.canAcceptType(imageFormat8);
        java.io.File file10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser11.getMetadata(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder16 = pcxImageParser15.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser15.getFormatCompliance(byteSource17);
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata20 = pcxImageParser15.getMetadata(byteSource19);
        boolean boolean22 = pcxImageParser15.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser15.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser11.getMetadata(byteSource14, pcxImagingParameters23);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray25 = pcxImageParser0.getIccProfileBytes(file10, pcxImagingParameters23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNull(formatCompliance18);
        org.junit.Assert.assertNull(imageMetadata20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(imageMetadata24);
    }

    @Test
    public void test0584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0584");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser9.canAcceptType(imageFormat14);
        java.lang.String str16 = pcxImageParser9.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser9.getDefaultParameters();
        byte[] byteArray18 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters17);
        org.apache.commons.imaging.ImageFormat imageFormat19 = null;
        boolean boolean20 = pcxImageParser0.canAcceptType(imageFormat19);
        org.apache.commons.imaging.ImageFormat imageFormat21 = null;
        boolean boolean22 = pcxImageParser0.canAcceptType(imageFormat21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser0.getDefaultParameters();
        java.io.File file24 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension25 = pcxImageParser0.getImageSize(file24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "pcx" + "'", str16, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
    }

    @Test
    public void test0585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0585");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        java.lang.String str8 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata10 = pcxImageParser0.getMetadata(byteSource9);
        java.io.File file11 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser0.getFormatCompliance(file11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "pcx" + "'", str8, "pcx");
        org.junit.Assert.assertNull(imageMetadata10);
    }

    @Test
    public void test0586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0586");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        java.io.File file2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata3 = pcxImageParser0.getMetadata(file2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
    }

    @Test
    public void test0587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0587");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters6 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser0.getMetadata(byteSource7);
        java.io.File file9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension10 = pcxImageParser0.getImageSize(file9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNotNull(pcxImagingParameters6);
        org.junit.Assert.assertNull(imageMetadata8);
    }

    @Test
    public void test0588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0588");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        java.awt.image.BufferedImage bufferedImage9 = null;
        java.io.OutputStream outputStream10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = null;
        byte[] byteArray14 = pcxImageParser11.getIccProfileBytes(byteSource12, pcxImagingParameters13);
        java.lang.String str15 = pcxImageParser11.getName();
        java.lang.String str16 = pcxImageParser11.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser11.getMetadata(byteSource17, pcxImagingParameters22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser25.getMetadata(byteSource26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder30 = pcxImageParser29.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser29.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser29.getMetadata(byteSource33);
        boolean boolean36 = pcxImageParser29.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser25.getMetadata(byteSource28, pcxImagingParameters37);
        byte[] byteArray39 = pcxImageParser11.getIccProfileBytes(byteSource24, pcxImagingParameters37);
        boolean boolean41 = pcxImageParser11.canAcceptExtension("pcx");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser11.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage9, outputStream10, pcxImagingParameters42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNull(byteArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Pcx-Custom" + "'", str15, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Pcx-Custom" + "'", str16, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(byteOrder30);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters37);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNull(byteArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
    }

    @Test
    public void test0589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0589");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.io.File file5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(file5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
    }

    @Test
    public void test0590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0590");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        java.lang.String str8 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata10 = pcxImageParser0.getMetadata(byteSource9);
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser12 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = null;
        byte[] byteArray15 = pcxImageParser12.getIccProfileBytes(byteSource13, pcxImagingParameters14);
        java.lang.String str16 = pcxImageParser12.getName();
        java.lang.String str17 = pcxImageParser12.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder20 = pcxImageParser19.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance22 = pcxImageParser19.getFormatCompliance(byteSource21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser19.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser12.getMetadata(byteSource18, pcxImagingParameters23);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo25 = pcxImageParser0.getImageInfo(byteSource11, pcxImagingParameters23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "pcx" + "'", str8, "pcx");
        org.junit.Assert.assertNull(imageMetadata10);
        org.junit.Assert.assertNull(byteArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Pcx-Custom" + "'", str16, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Pcx-Custom" + "'", str17, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNull(formatCompliance22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(imageMetadata24);
    }

    @Test
    public void test0591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0591");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser0.getFormatCompliance(byteSource5);
        java.nio.ByteOrder byteOrder7 = pcxImageParser0.getByteOrder();
        java.io.File file8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser0.getMetadata(file8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance6);
        org.junit.Assert.assertNotNull(byteOrder7);
    }

    @Test
    public void test0592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0592");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat6 = null;
        boolean boolean7 = pcxImageParser0.canAcceptType(imageFormat6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser0.getMetadata(byteSource8);
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder12 = pcxImageParser11.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance14 = pcxImageParser11.getFormatCompliance(byteSource13);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = pcxImageParser11.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage16 = pcxImageParser0.getBufferedImage(byteSource10, pcxImagingParameters15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertNotNull(byteOrder12);
        org.junit.Assert.assertNull(formatCompliance14);
        org.junit.Assert.assertNotNull(pcxImagingParameters15);
    }

    @Test
    public void test0593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0593");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = null;
        byte[] byteArray14 = pcxImageParser11.getIccProfileBytes(byteSource12, pcxImagingParameters13);
        java.lang.String str15 = pcxImageParser11.getName();
        java.lang.String str16 = pcxImageParser11.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser11.getMetadata(byteSource17, pcxImagingParameters22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser25.getMetadata(byteSource26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder30 = pcxImageParser29.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser29.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser29.getMetadata(byteSource33);
        boolean boolean36 = pcxImageParser29.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser25.getMetadata(byteSource28, pcxImagingParameters37);
        byte[] byteArray39 = pcxImageParser11.getIccProfileBytes(byteSource24, pcxImagingParameters37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance41 = pcxImageParser11.getFormatCompliance(byteSource40);
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser43 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = null;
        byte[] byteArray46 = pcxImageParser43.getIccProfileBytes(byteSource44, pcxImagingParameters45);
        java.nio.ByteOrder byteOrder47 = pcxImageParser43.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser49 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder50 = pcxImageParser49.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance52 = pcxImageParser49.getFormatCompliance(byteSource51);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters53 = pcxImageParser49.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat54 = null;
        boolean boolean55 = pcxImageParser49.canAcceptType(imageFormat54);
        java.lang.String str56 = pcxImageParser49.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters57 = pcxImageParser49.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata58 = pcxImageParser43.getMetadata(byteSource48, pcxImagingParameters57);
        byte[] byteArray59 = pcxImageParser11.getIccProfileBytes(byteSource42, pcxImagingParameters57);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata60 = pcxImageParser0.getMetadata(byteSource10, pcxImagingParameters57);
        java.io.File file61 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser62 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters64 = null;
        byte[] byteArray65 = pcxImageParser62.getIccProfileBytes(byteSource63, pcxImagingParameters64);
        java.lang.String str66 = pcxImageParser62.getName();
        java.lang.String str67 = pcxImageParser62.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource68 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser69 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder70 = pcxImageParser69.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource71 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance72 = pcxImageParser69.getFormatCompliance(byteSource71);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters73 = pcxImageParser69.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata74 = pcxImageParser62.getMetadata(byteSource68, pcxImagingParameters73);
        java.lang.String str75 = pcxImageParser62.getName();
        org.apache.commons.imaging.ImageFormat imageFormat76 = null;
        boolean boolean77 = pcxImageParser62.canAcceptType(imageFormat76);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters78 = pcxImageParser62.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo79 = pcxImageParser0.getImageInfo(file61, pcxImagingParameters78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(pcxImagingParameters9);
        org.junit.Assert.assertNull(byteArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Pcx-Custom" + "'", str15, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Pcx-Custom" + "'", str16, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(byteOrder30);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters37);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNull(byteArray39);
        org.junit.Assert.assertNull(formatCompliance41);
        org.junit.Assert.assertNull(byteArray46);
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNotNull(byteOrder50);
        org.junit.Assert.assertNull(formatCompliance52);
        org.junit.Assert.assertNotNull(pcxImagingParameters53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "pcx" + "'", str56, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters57);
        org.junit.Assert.assertNull(imageMetadata58);
        org.junit.Assert.assertNull(byteArray59);
        org.junit.Assert.assertNull(imageMetadata60);
        org.junit.Assert.assertNull(byteArray65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Pcx-Custom" + "'", str66, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Pcx-Custom" + "'", str67, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNull(formatCompliance72);
        org.junit.Assert.assertNotNull(pcxImagingParameters73);
        org.junit.Assert.assertNull(imageMetadata74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "Pcx-Custom" + "'", str75, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters78);
    }

    @Test
    public void test0594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0594");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        boolean boolean30 = pcxImageParser0.canAcceptExtension("pcx");
        java.awt.image.BufferedImage bufferedImage31 = null;
        java.io.OutputStream outputStream32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder34 = pcxImageParser33.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance36 = pcxImageParser33.getFormatCompliance(byteSource35);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = pcxImageParser33.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser33.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = pcxImageParser33.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage31, outputStream32, pcxImagingParameters39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrder34);
        org.junit.Assert.assertNull(formatCompliance36);
        org.junit.Assert.assertNotNull(pcxImagingParameters37);
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
        org.junit.Assert.assertNotNull(pcxImagingParameters39);
    }

    @Test
    public void test0595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0595");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat6 = null;
        boolean boolean7 = pcxImageParser0.canAcceptType(imageFormat6);
        boolean boolean9 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = null;
        byte[] byteArray14 = pcxImageParser11.getIccProfileBytes(byteSource12, pcxImagingParameters13);
        java.lang.String str15 = pcxImageParser11.getName();
        java.lang.String str16 = pcxImageParser11.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser11.getMetadata(byteSource17, pcxImagingParameters22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = null;
        byte[] byteArray28 = pcxImageParser25.getIccProfileBytes(byteSource26, pcxImagingParameters27);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = pcxImageParser25.getDefaultParameters();
        byte[] byteArray30 = pcxImageParser11.getIccProfileBytes(byteSource24, pcxImagingParameters29);
        byte[] byteArray31 = pcxImageParser0.getIccProfileBytes(byteSource10, pcxImagingParameters29);
        java.io.File file32 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser0.getMetadata(file32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(byteArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Pcx-Custom" + "'", str15, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Pcx-Custom" + "'", str16, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNotNull(pcxImagingParameters29);
        org.junit.Assert.assertNull(byteArray30);
        org.junit.Assert.assertNull(byteArray31);
    }

    @Test
    public void test0596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0596");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters6 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser0.getMetadata(byteSource7);
        org.apache.commons.imaging.ImageFormat imageFormat9 = null;
        boolean boolean10 = pcxImageParser0.canAcceptType(imageFormat9);
        java.io.File file11 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = pcxImageParser0.canAcceptExtension(file11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNotNull(pcxImagingParameters6);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0597");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        java.nio.ByteOrder byteOrder3 = pcxImageParser0.getByteOrder();
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder3);
    }

    @Test
    public void test0598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0598");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance5 = pcxImageParser0.getFormatCompliance(byteSource4);
        java.io.File file6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser13.getMetadata(byteSource14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder18 = pcxImageParser17.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance20 = pcxImageParser17.getFormatCompliance(byteSource19);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser17.getMetadata(byteSource21);
        boolean boolean24 = pcxImageParser17.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser17.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata26 = pcxImageParser13.getMetadata(byteSource16, pcxImagingParameters25);
        byte[] byteArray27 = pcxImageParser7.getIccProfileBytes(byteSource12, pcxImagingParameters25);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(file6, pcxImagingParameters25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(formatCompliance5);
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNull(formatCompliance20);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
        org.junit.Assert.assertNull(imageMetadata26);
        org.junit.Assert.assertNull(byteArray27);
    }

    @Test
    public void test0599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0599");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata4 = pcxImageParser0.getMetadata(byteSource3);
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = pcxImageParser0.getDefaultParameters();
        java.io.File file8 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray9 = pcxImageParser0.getIccProfileBytes(file8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters7);
    }

    @Test
    public void test0600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0600");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser0.getFormatCompliance(byteSource31);
        java.io.File file33 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser0.getMetadata(file33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(formatCompliance32);
    }

    @Test
    public void test0601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0601");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        boolean boolean30 = pcxImageParser0.canAcceptExtension("pcx");
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat32 = null;
        boolean boolean33 = pcxImageParser0.canAcceptType(imageFormat32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser0.getMetadata(byteSource34);
        java.io.File file36 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension37 = pcxImageParser0.getImageSize(file36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(imageMetadata35);
    }

    @Test
    public void test0602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0602");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        boolean boolean9 = pcxImageParser0.canAcceptExtension("pcx");
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder12 = pcxImageParser11.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance14 = pcxImageParser11.getFormatCompliance(byteSource13);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = pcxImageParser11.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser17.getMetadata(byteSource18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder22 = pcxImageParser21.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance24 = pcxImageParser21.getFormatCompliance(byteSource23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata26 = pcxImageParser21.getMetadata(byteSource25);
        boolean boolean28 = pcxImageParser21.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata30 = pcxImageParser17.getMetadata(byteSource20, pcxImagingParameters29);
        byte[] byteArray31 = pcxImageParser11.getIccProfileBytes(byteSource16, pcxImagingParameters29);
        java.lang.String str32 = pcxImageParser11.getName();
        java.lang.String str33 = pcxImageParser11.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder36 = pcxImageParser35.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance38 = pcxImageParser35.getFormatCompliance(byteSource37);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = pcxImageParser35.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat40 = null;
        boolean boolean41 = pcxImageParser35.canAcceptType(imageFormat40);
        java.lang.String str42 = pcxImageParser35.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser35.getDefaultParameters();
        byte[] byteArray44 = pcxImageParser11.getIccProfileBytes(byteSource34, pcxImagingParameters43);
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser46 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder47 = pcxImageParser46.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser49 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder50 = pcxImageParser49.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance52 = pcxImageParser49.getFormatCompliance(byteSource51);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters53 = pcxImageParser49.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser55 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata57 = pcxImageParser55.getMetadata(byteSource56);
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser59 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder60 = pcxImageParser59.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance62 = pcxImageParser59.getFormatCompliance(byteSource61);
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata64 = pcxImageParser59.getMetadata(byteSource63);
        boolean boolean66 = pcxImageParser59.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters67 = pcxImageParser59.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata68 = pcxImageParser55.getMetadata(byteSource58, pcxImagingParameters67);
        byte[] byteArray69 = pcxImageParser49.getIccProfileBytes(byteSource54, pcxImagingParameters67);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata70 = pcxImageParser46.getMetadata(byteSource48, pcxImagingParameters67);
        byte[] byteArray71 = pcxImageParser11.getIccProfileBytes(byteSource45, pcxImagingParameters67);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo72 = pcxImageParser0.getImageInfo(byteSource10, pcxImagingParameters67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(byteOrder12);
        org.junit.Assert.assertNull(formatCompliance14);
        org.junit.Assert.assertNotNull(pcxImagingParameters15);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNull(formatCompliance24);
        org.junit.Assert.assertNull(imageMetadata26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters29);
        org.junit.Assert.assertNull(imageMetadata30);
        org.junit.Assert.assertNull(byteArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Pcx-Custom" + "'", str32, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "pcx" + "'", str33, "pcx");
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNull(formatCompliance38);
        org.junit.Assert.assertNotNull(pcxImagingParameters39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "pcx" + "'", str42, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertNull(byteArray44);
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNotNull(byteOrder50);
        org.junit.Assert.assertNull(formatCompliance52);
        org.junit.Assert.assertNotNull(pcxImagingParameters53);
        org.junit.Assert.assertNull(imageMetadata57);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNull(formatCompliance62);
        org.junit.Assert.assertNull(imageMetadata64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters67);
        org.junit.Assert.assertNull(imageMetadata68);
        org.junit.Assert.assertNull(byteArray69);
        org.junit.Assert.assertNull(imageMetadata70);
        org.junit.Assert.assertNull(byteArray71);
    }

    @Test
    public void test0603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0603");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        java.nio.ByteOrder byteOrder32 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder35 = pcxImageParser34.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance37 = pcxImageParser34.getFormatCompliance(byteSource36);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser34.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser40.getMetadata(byteSource41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder45 = pcxImageParser44.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance47 = pcxImageParser44.getFormatCompliance(byteSource46);
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser44.getMetadata(byteSource48);
        boolean boolean51 = pcxImageParser44.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser44.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser40.getMetadata(byteSource43, pcxImagingParameters52);
        byte[] byteArray54 = pcxImageParser34.getIccProfileBytes(byteSource39, pcxImagingParameters52);
        java.lang.String str55 = pcxImageParser34.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters56 = pcxImageParser34.getDefaultParameters();
        byte[] byteArray57 = pcxImageParser0.getIccProfileBytes(byteSource33, pcxImagingParameters56);
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance59 = pcxImageParser0.getFormatCompliance(byteSource58);
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser61 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters63 = null;
        byte[] byteArray64 = pcxImageParser61.getIccProfileBytes(byteSource62, pcxImagingParameters63);
        java.lang.String str65 = pcxImageParser61.getName();
        java.lang.String str66 = pcxImageParser61.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource67 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance68 = pcxImageParser61.getFormatCompliance(byteSource67);
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser70 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder71 = pcxImageParser70.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource72 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance73 = pcxImageParser70.getFormatCompliance(byteSource72);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters74 = pcxImageParser70.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat75 = null;
        boolean boolean76 = pcxImageParser70.canAcceptType(imageFormat75);
        java.lang.String str77 = pcxImageParser70.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters78 = pcxImageParser70.getDefaultParameters();
        byte[] byteArray79 = pcxImageParser61.getIccProfileBytes(byteSource69, pcxImagingParameters78);
        org.apache.commons.imaging.ImageFormat imageFormat80 = null;
        boolean boolean81 = pcxImageParser61.canAcceptType(imageFormat80);
        org.apache.commons.imaging.ImageFormat imageFormat82 = null;
        boolean boolean83 = pcxImageParser61.canAcceptType(imageFormat82);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters84 = pcxImageParser61.getDefaultParameters();
        byte[] byteArray85 = pcxImageParser0.getIccProfileBytes(byteSource60, pcxImagingParameters84);
        java.io.File file86 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str87 = pcxImageParser0.dumpImageFile(file86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNull(formatCompliance37);
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertNotNull(byteOrder45);
        org.junit.Assert.assertNull(formatCompliance47);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertNull(byteArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Pcx-Custom" + "'", str55, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters56);
        org.junit.Assert.assertNull(byteArray57);
        org.junit.Assert.assertNull(formatCompliance59);
        org.junit.Assert.assertNull(byteArray64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Pcx-Custom" + "'", str65, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Pcx-Custom" + "'", str66, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance68);
        org.junit.Assert.assertNotNull(byteOrder71);
        org.junit.Assert.assertNull(formatCompliance73);
        org.junit.Assert.assertNotNull(pcxImagingParameters74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "pcx" + "'", str77, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters78);
        org.junit.Assert.assertNull(byteArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters84);
        org.junit.Assert.assertNull(byteArray85);
    }

    @Test
    public void test0604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0604");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat6 = null;
        boolean boolean7 = pcxImageParser0.canAcceptType(imageFormat6);
        boolean boolean9 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = null;
        byte[] byteArray14 = pcxImageParser11.getIccProfileBytes(byteSource12, pcxImagingParameters13);
        java.lang.String str15 = pcxImageParser11.getName();
        java.lang.String str16 = pcxImageParser11.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser11.getMetadata(byteSource17, pcxImagingParameters22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = null;
        byte[] byteArray28 = pcxImageParser25.getIccProfileBytes(byteSource26, pcxImagingParameters27);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = pcxImageParser25.getDefaultParameters();
        byte[] byteArray30 = pcxImageParser11.getIccProfileBytes(byteSource24, pcxImagingParameters29);
        byte[] byteArray31 = pcxImageParser0.getIccProfileBytes(byteSource10, pcxImagingParameters29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = null;
        byte[] byteArray36 = pcxImageParser33.getIccProfileBytes(byteSource34, pcxImagingParameters35);
        java.lang.String str37 = pcxImageParser33.getDefaultExtension();
        java.lang.String str38 = pcxImageParser33.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = null;
        byte[] byteArray43 = pcxImageParser40.getIccProfileBytes(byteSource41, pcxImagingParameters42);
        java.lang.String str44 = pcxImageParser40.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser40.getMetadata(byteSource45);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance48 = pcxImageParser40.getFormatCompliance(byteSource47);
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser50 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder51 = pcxImageParser50.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance53 = pcxImageParser50.getFormatCompliance(byteSource52);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters54 = pcxImageParser50.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser56 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters58 = null;
        byte[] byteArray59 = pcxImageParser56.getIccProfileBytes(byteSource57, pcxImagingParameters58);
        java.lang.String str60 = pcxImageParser56.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters61 = pcxImageParser56.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata62 = pcxImageParser50.getMetadata(byteSource55, pcxImagingParameters61);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters63 = pcxImageParser50.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata64 = pcxImageParser40.getMetadata(byteSource49, pcxImagingParameters63);
        java.lang.String str65 = pcxImageParser40.getName();
        java.lang.String str66 = pcxImageParser40.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource67 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser68 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters70 = null;
        byte[] byteArray71 = pcxImageParser68.getIccProfileBytes(byteSource69, pcxImagingParameters70);
        java.lang.String str72 = pcxImageParser68.getName();
        java.lang.String str73 = pcxImageParser68.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource74 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser75 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder76 = pcxImageParser75.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource77 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance78 = pcxImageParser75.getFormatCompliance(byteSource77);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters79 = pcxImageParser75.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata80 = pcxImageParser68.getMetadata(byteSource74, pcxImagingParameters79);
        java.lang.String str81 = pcxImageParser68.getName();
        org.apache.commons.imaging.ImageFormat imageFormat82 = null;
        boolean boolean83 = pcxImageParser68.canAcceptType(imageFormat82);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters84 = pcxImageParser68.getDefaultParameters();
        byte[] byteArray85 = pcxImageParser40.getIccProfileBytes(byteSource67, pcxImagingParameters84);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata86 = pcxImageParser33.getMetadata(byteSource39, pcxImagingParameters84);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage87 = pcxImageParser0.getBufferedImage(byteSource32, pcxImagingParameters84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(byteArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Pcx-Custom" + "'", str15, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Pcx-Custom" + "'", str16, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNotNull(pcxImagingParameters29);
        org.junit.Assert.assertNull(byteArray30);
        org.junit.Assert.assertNull(byteArray31);
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "pcx" + "'", str37, "pcx");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Pcx-Custom" + "'", str38, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Pcx-Custom" + "'", str44, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata46);
        org.junit.Assert.assertNull(formatCompliance48);
        org.junit.Assert.assertNotNull(byteOrder51);
        org.junit.Assert.assertNull(formatCompliance53);
        org.junit.Assert.assertNotNull(pcxImagingParameters54);
        org.junit.Assert.assertNull(byteArray59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "pcx" + "'", str60, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters61);
        org.junit.Assert.assertNull(imageMetadata62);
        org.junit.Assert.assertNotNull(pcxImagingParameters63);
        org.junit.Assert.assertNull(imageMetadata64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Pcx-Custom" + "'", str65, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Pcx-Custom" + "'", str66, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Pcx-Custom" + "'", str72, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "Pcx-Custom" + "'", str73, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder76);
        org.junit.Assert.assertNull(formatCompliance78);
        org.junit.Assert.assertNotNull(pcxImagingParameters79);
        org.junit.Assert.assertNull(imageMetadata80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "Pcx-Custom" + "'", str81, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters84);
        org.junit.Assert.assertNull(byteArray85);
        org.junit.Assert.assertNull(imageMetadata86);
    }

    @Test
    public void test0605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0605");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters7);
        java.lang.String str9 = pcxImageParser0.getDefaultExtension();
        boolean boolean11 = pcxImageParser0.canAcceptExtension("hi!");
        java.awt.image.BufferedImage bufferedImage12 = null;
        java.io.OutputStream outputStream13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str15 = pcxImageParser14.getName();
        org.apache.commons.imaging.ImageFormat imageFormat16 = null;
        boolean boolean17 = pcxImageParser14.canAcceptType(imageFormat16);
        org.apache.commons.imaging.ImageFormat imageFormat18 = null;
        boolean boolean19 = pcxImageParser14.canAcceptType(imageFormat18);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters20 = pcxImageParser14.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage12, outputStream13, pcxImagingParameters20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "pcx" + "'", str9, "pcx");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Pcx-Custom" + "'", str15, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters20);
    }

    @Test
    public void test0606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0606");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters7);
        java.lang.String str9 = pcxImageParser0.getDefaultExtension();
        boolean boolean11 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser0.getDefaultParameters();
        java.io.File file13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList14 = pcxImageParser0.getAllBufferedImages(file13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "pcx" + "'", str9, "pcx");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
    }

    @Test
    public void test0607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0607");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        boolean boolean9 = pcxImageParser0.canAcceptExtension("");
        java.io.File file10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension11 = pcxImageParser0.getImageSize(file10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0608");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser0.getMetadata(byteSource21, pcxImagingParameters22);
        java.lang.String str24 = pcxImageParser0.getDefaultExtension();
        boolean boolean26 = pcxImageParser0.canAcceptExtension("");
        java.lang.String str27 = pcxImageParser0.getName();
        java.io.File file28 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList29 = pcxImageParser0.getAllBufferedImages(file28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "pcx" + "'", str24, "pcx");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Pcx-Custom" + "'", str27, "Pcx-Custom");
    }

    @Test
    public void test0609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0609");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser0.getFormatCompliance(byteSource5);
        java.io.File file7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = null;
        byte[] byteArray11 = pcxImageParser8.getIccProfileBytes(byteSource9, pcxImagingParameters10);
        java.lang.String str12 = pcxImageParser8.getName();
        java.lang.String str13 = pcxImageParser8.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance15 = pcxImageParser8.getFormatCompliance(byteSource14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder18 = pcxImageParser17.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance20 = pcxImageParser17.getFormatCompliance(byteSource19);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser17.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat22 = null;
        boolean boolean23 = pcxImageParser17.canAcceptType(imageFormat22);
        java.lang.String str24 = pcxImageParser17.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser17.getDefaultParameters();
        byte[] byteArray26 = pcxImageParser8.getIccProfileBytes(byteSource16, pcxImagingParameters25);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = pcxImageParser8.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata28 = pcxImageParser0.getMetadata(file7, pcxImagingParameters27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance6);
        org.junit.Assert.assertNull(byteArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Pcx-Custom" + "'", str12, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance15);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNull(formatCompliance20);
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "pcx" + "'", str24, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
        org.junit.Assert.assertNull(byteArray26);
        org.junit.Assert.assertNotNull(pcxImagingParameters27);
    }

    @Test
    public void test0610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0610");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder8 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = null;
        byte[] byteArray13 = pcxImageParser10.getIccProfileBytes(byteSource11, pcxImagingParameters12);
        java.lang.String str14 = pcxImageParser10.getName();
        java.lang.String str15 = pcxImageParser10.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder18 = pcxImageParser17.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance20 = pcxImageParser17.getFormatCompliance(byteSource19);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser17.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser10.getMetadata(byteSource16, pcxImagingParameters21);
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata26 = pcxImageParser24.getMetadata(byteSource25);
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder29 = pcxImageParser28.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance31 = pcxImageParser28.getFormatCompliance(byteSource30);
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser28.getMetadata(byteSource32);
        boolean boolean35 = pcxImageParser28.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser28.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser24.getMetadata(byteSource27, pcxImagingParameters36);
        byte[] byteArray38 = pcxImageParser10.getIccProfileBytes(byteSource23, pcxImagingParameters36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance40 = pcxImageParser10.getFormatCompliance(byteSource39);
        java.nio.ByteOrder byteOrder41 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser43 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = null;
        byte[] byteArray46 = pcxImageParser43.getIccProfileBytes(byteSource44, pcxImagingParameters45);
        java.lang.String str47 = pcxImageParser43.getName();
        java.lang.String str48 = pcxImageParser43.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser50 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder51 = pcxImageParser50.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance53 = pcxImageParser50.getFormatCompliance(byteSource52);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters54 = pcxImageParser50.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata55 = pcxImageParser43.getMetadata(byteSource49, pcxImagingParameters54);
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser57 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata59 = pcxImageParser57.getMetadata(byteSource58);
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser61 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder62 = pcxImageParser61.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance64 = pcxImageParser61.getFormatCompliance(byteSource63);
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata66 = pcxImageParser61.getMetadata(byteSource65);
        boolean boolean68 = pcxImageParser61.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters69 = pcxImageParser61.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata70 = pcxImageParser57.getMetadata(byteSource60, pcxImagingParameters69);
        byte[] byteArray71 = pcxImageParser43.getIccProfileBytes(byteSource56, pcxImagingParameters69);
        byte[] byteArray72 = pcxImageParser10.getIccProfileBytes(byteSource42, pcxImagingParameters69);
        byte[] byteArray73 = pcxImageParser0.getIccProfileBytes(byteSource9, pcxImagingParameters69);
        java.io.File file74 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser75 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource76 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata77 = pcxImageParser75.getMetadata(byteSource76);
        org.apache.commons.imaging.ImageFormat imageFormat78 = null;
        boolean boolean79 = pcxImageParser75.canAcceptType(imageFormat78);
        org.apache.commons.imaging.bytesource.ByteSource byteSource80 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser81 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder82 = pcxImageParser81.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource83 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance84 = pcxImageParser81.getFormatCompliance(byteSource83);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters85 = pcxImageParser81.getDefaultParameters();
        java.lang.String str86 = pcxImageParser81.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource87 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata88 = pcxImageParser81.getMetadata(byteSource87);
        boolean boolean90 = pcxImageParser81.canAcceptExtension("");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters91 = pcxImageParser81.getDefaultParameters();
        byte[] byteArray92 = pcxImageParser75.getIccProfileBytes(byteSource80, pcxImagingParameters91);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension93 = pcxImageParser0.getImageSize(file74, pcxImagingParameters91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(byteArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Pcx-Custom" + "'", str14, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Pcx-Custom" + "'", str15, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNull(formatCompliance20);
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNull(imageMetadata26);
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertNull(formatCompliance31);
        org.junit.Assert.assertNull(imageMetadata33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertNull(byteArray38);
        org.junit.Assert.assertNull(formatCompliance40);
        org.junit.Assert.assertNotNull(byteOrder41);
        org.junit.Assert.assertNull(byteArray46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Pcx-Custom" + "'", str47, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Pcx-Custom" + "'", str48, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder51);
        org.junit.Assert.assertNull(formatCompliance53);
        org.junit.Assert.assertNotNull(pcxImagingParameters54);
        org.junit.Assert.assertNull(imageMetadata55);
        org.junit.Assert.assertNull(imageMetadata59);
        org.junit.Assert.assertNotNull(byteOrder62);
        org.junit.Assert.assertNull(formatCompliance64);
        org.junit.Assert.assertNull(imageMetadata66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters69);
        org.junit.Assert.assertNull(imageMetadata70);
        org.junit.Assert.assertNull(byteArray71);
        org.junit.Assert.assertNull(byteArray72);
        org.junit.Assert.assertNull(byteArray73);
        org.junit.Assert.assertNull(imageMetadata77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(byteOrder82);
        org.junit.Assert.assertNull(formatCompliance84);
        org.junit.Assert.assertNotNull(pcxImagingParameters85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "pcx" + "'", str86, "pcx");
        org.junit.Assert.assertNull(imageMetadata88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters91);
        org.junit.Assert.assertNull(byteArray92);
    }

    @Test
    public void test0611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0611");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        java.lang.String str6 = pcxImageParser0.getName();
        java.io.File file7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser0.getMetadata(file7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Pcx-Custom" + "'", str6, "Pcx-Custom");
    }

    @Test
    public void test0612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0612");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        java.lang.Class<?> wildcardClass7 = pcxImageParser0.getClass();
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0613");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser0.canAcceptType(imageFormat23);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser0.getFormatCompliance(byteSource26);
        java.io.File file28 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean29 = pcxImageParser0.canAcceptExtension(file28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
        org.junit.Assert.assertNull(formatCompliance27);
    }

    @Test
    public void test0614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0614");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource14);
        org.apache.commons.imaging.ImageFormat imageFormat16 = null;
        boolean boolean17 = pcxImageParser0.canAcceptType(imageFormat16);
        java.awt.image.BufferedImage bufferedImage18 = null;
        java.io.OutputStream outputStream19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser20 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = null;
        byte[] byteArray23 = pcxImageParser20.getIccProfileBytes(byteSource21, pcxImagingParameters22);
        java.lang.String str24 = pcxImageParser20.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser20.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser27 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder28 = pcxImageParser27.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser27.getFormatCompliance(byteSource29);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser27.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = null;
        byte[] byteArray36 = pcxImageParser33.getIccProfileBytes(byteSource34, pcxImagingParameters35);
        java.lang.String str37 = pcxImageParser33.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser33.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata39 = pcxImageParser27.getMetadata(byteSource32, pcxImagingParameters38);
        byte[] byteArray40 = pcxImageParser20.getIccProfileBytes(byteSource26, pcxImagingParameters38);
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage18, outputStream19, pcxImagingParameters38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(byteArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "pcx" + "'", str24, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
        org.junit.Assert.assertNotNull(byteOrder28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "pcx" + "'", str37, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
        org.junit.Assert.assertNull(imageMetadata39);
        org.junit.Assert.assertNull(byteArray40);
    }

    @Test
    public void test0615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0615");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getName();
        java.lang.String str6 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser8.getMetadata(byteSource12);
        java.nio.ByteOrder byteOrder14 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder17 = pcxImageParser16.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance19 = pcxImageParser16.getFormatCompliance(byteSource18);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters20 = pcxImageParser16.getDefaultParameters();
        java.lang.String str21 = pcxImageParser16.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser16.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser16.canAcceptExtension("");
        boolean boolean27 = pcxImageParser16.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = null;
        byte[] byteArray32 = pcxImageParser29.getIccProfileBytes(byteSource30, pcxImagingParameters31);
        java.lang.String str33 = pcxImageParser29.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser29.getMetadata(byteSource34);
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance37 = pcxImageParser29.getFormatCompliance(byteSource36);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = null;
        byte[] byteArray43 = pcxImageParser40.getIccProfileBytes(byteSource41, pcxImagingParameters42);
        java.lang.String str44 = pcxImageParser40.getName();
        java.lang.String str45 = pcxImageParser40.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser47 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder48 = pcxImageParser47.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance50 = pcxImageParser47.getFormatCompliance(byteSource49);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters51 = pcxImageParser47.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata52 = pcxImageParser40.getMetadata(byteSource46, pcxImagingParameters51);
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser54 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata56 = pcxImageParser54.getMetadata(byteSource55);
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser58 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder59 = pcxImageParser58.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance61 = pcxImageParser58.getFormatCompliance(byteSource60);
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata63 = pcxImageParser58.getMetadata(byteSource62);
        boolean boolean65 = pcxImageParser58.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters66 = pcxImageParser58.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata67 = pcxImageParser54.getMetadata(byteSource57, pcxImagingParameters66);
        byte[] byteArray68 = pcxImageParser40.getIccProfileBytes(byteSource53, pcxImagingParameters66);
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance70 = pcxImageParser40.getFormatCompliance(byteSource69);
        org.apache.commons.imaging.bytesource.ByteSource byteSource71 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser72 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource73 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters74 = null;
        byte[] byteArray75 = pcxImageParser72.getIccProfileBytes(byteSource73, pcxImagingParameters74);
        java.nio.ByteOrder byteOrder76 = pcxImageParser72.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource77 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser78 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder79 = pcxImageParser78.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource80 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance81 = pcxImageParser78.getFormatCompliance(byteSource80);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters82 = pcxImageParser78.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat83 = null;
        boolean boolean84 = pcxImageParser78.canAcceptType(imageFormat83);
        java.lang.String str85 = pcxImageParser78.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters86 = pcxImageParser78.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata87 = pcxImageParser72.getMetadata(byteSource77, pcxImagingParameters86);
        byte[] byteArray88 = pcxImageParser40.getIccProfileBytes(byteSource71, pcxImagingParameters86);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata89 = pcxImageParser29.getMetadata(byteSource39, pcxImagingParameters86);
        byte[] byteArray90 = pcxImageParser16.getIccProfileBytes(byteSource28, pcxImagingParameters86);
        byte[] byteArray91 = pcxImageParser8.getIccProfileBytes(byteSource15, pcxImagingParameters86);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo92 = pcxImageParser0.getImageInfo(byteSource7, pcxImagingParameters86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "pcx" + "'", str6, "pcx");
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertNotNull(byteOrder14);
        org.junit.Assert.assertNotNull(byteOrder17);
        org.junit.Assert.assertNull(formatCompliance19);
        org.junit.Assert.assertNotNull(pcxImagingParameters20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(byteArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Pcx-Custom" + "'", str33, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertNull(formatCompliance37);
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
        org.junit.Assert.assertNull(byteArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Pcx-Custom" + "'", str44, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Pcx-Custom" + "'", str45, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder48);
        org.junit.Assert.assertNull(formatCompliance50);
        org.junit.Assert.assertNotNull(pcxImagingParameters51);
        org.junit.Assert.assertNull(imageMetadata52);
        org.junit.Assert.assertNull(imageMetadata56);
        org.junit.Assert.assertNotNull(byteOrder59);
        org.junit.Assert.assertNull(formatCompliance61);
        org.junit.Assert.assertNull(imageMetadata63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters66);
        org.junit.Assert.assertNull(imageMetadata67);
        org.junit.Assert.assertNull(byteArray68);
        org.junit.Assert.assertNull(formatCompliance70);
        org.junit.Assert.assertNull(byteArray75);
        org.junit.Assert.assertNotNull(byteOrder76);
        org.junit.Assert.assertNotNull(byteOrder79);
        org.junit.Assert.assertNull(formatCompliance81);
        org.junit.Assert.assertNotNull(pcxImagingParameters82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "pcx" + "'", str85, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters86);
        org.junit.Assert.assertNull(imageMetadata87);
        org.junit.Assert.assertNull(byteArray88);
        org.junit.Assert.assertNull(imageMetadata89);
        org.junit.Assert.assertNull(byteArray90);
        org.junit.Assert.assertNull(byteArray91);
    }

    @Test
    public void test0616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0616");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        boolean boolean5 = pcxImageParser0.canAcceptExtension("");
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = null;
        byte[] byteArray10 = pcxImageParser7.getIccProfileBytes(byteSource8, pcxImagingParameters9);
        java.lang.String str11 = pcxImageParser7.getName();
        java.lang.String str12 = pcxImageParser7.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser7.getMetadata(byteSource13, pcxImagingParameters18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser21.getMetadata(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder26 = pcxImageParser25.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance28 = pcxImageParser25.getFormatCompliance(byteSource27);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata30 = pcxImageParser25.getMetadata(byteSource29);
        boolean boolean32 = pcxImageParser25.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser25.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser21.getMetadata(byteSource24, pcxImagingParameters33);
        byte[] byteArray35 = pcxImageParser7.getIccProfileBytes(byteSource20, pcxImagingParameters33);
        org.apache.commons.imaging.ImageFormat imageFormat36 = null;
        boolean boolean37 = pcxImageParser7.canAcceptType(imageFormat36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder40 = pcxImageParser39.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance42 = pcxImageParser39.getFormatCompliance(byteSource41);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser39.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat44 = null;
        boolean boolean45 = pcxImageParser39.canAcceptType(imageFormat44);
        java.lang.String str46 = pcxImageParser39.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = pcxImageParser39.getDefaultParameters();
        byte[] byteArray48 = pcxImageParser7.getIccProfileBytes(byteSource38, pcxImagingParameters47);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters49 = pcxImageParser7.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension50 = pcxImageParser0.getImageSize(byteSource6, pcxImagingParameters49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(byteArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Pcx-Custom" + "'", str11, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Pcx-Custom" + "'", str12, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNotNull(byteOrder26);
        org.junit.Assert.assertNull(formatCompliance28);
        org.junit.Assert.assertNull(imageMetadata30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertNull(byteArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNull(formatCompliance42);
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "pcx" + "'", str46, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters47);
        org.junit.Assert.assertNull(byteArray48);
        org.junit.Assert.assertNotNull(pcxImagingParameters49);
    }

    @Test
    public void test0617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0617");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = null;
        byte[] byteArray36 = pcxImageParser33.getIccProfileBytes(byteSource34, pcxImagingParameters35);
        java.lang.String str37 = pcxImageParser33.getName();
        java.lang.String str38 = pcxImageParser33.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder41 = pcxImageParser40.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance43 = pcxImageParser40.getFormatCompliance(byteSource42);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = pcxImageParser40.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata45 = pcxImageParser33.getMetadata(byteSource39, pcxImagingParameters44);
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser47 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser47.getMetadata(byteSource48);
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser51 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder52 = pcxImageParser51.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance54 = pcxImageParser51.getFormatCompliance(byteSource53);
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata56 = pcxImageParser51.getMetadata(byteSource55);
        boolean boolean58 = pcxImageParser51.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters59 = pcxImageParser51.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata60 = pcxImageParser47.getMetadata(byteSource50, pcxImagingParameters59);
        byte[] byteArray61 = pcxImageParser33.getIccProfileBytes(byteSource46, pcxImagingParameters59);
        byte[] byteArray62 = pcxImageParser0.getIccProfileBytes(byteSource32, pcxImagingParameters59);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass63 = byteArray62.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Pcx-Custom" + "'", str37, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Pcx-Custom" + "'", str38, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder41);
        org.junit.Assert.assertNull(formatCompliance43);
        org.junit.Assert.assertNotNull(pcxImagingParameters44);
        org.junit.Assert.assertNull(imageMetadata45);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertNotNull(byteOrder52);
        org.junit.Assert.assertNull(formatCompliance54);
        org.junit.Assert.assertNull(imageMetadata56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters59);
        org.junit.Assert.assertNull(imageMetadata60);
        org.junit.Assert.assertNull(byteArray61);
        org.junit.Assert.assertNull(byteArray62);
    }

    @Test
    public void test0618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0618");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        java.nio.ByteOrder byteOrder28 = pcxImageParser0.getByteOrder();
        java.io.File file29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = null;
        byte[] byteArray33 = pcxImageParser30.getIccProfileBytes(byteSource31, pcxImagingParameters32);
        java.lang.String str34 = pcxImageParser30.getName();
        java.lang.String str35 = pcxImageParser30.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance37 = pcxImageParser30.getFormatCompliance(byteSource36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder40 = pcxImageParser39.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance42 = pcxImageParser39.getFormatCompliance(byteSource41);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser39.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat44 = null;
        boolean boolean45 = pcxImageParser39.canAcceptType(imageFormat44);
        java.lang.String str46 = pcxImageParser39.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = pcxImageParser39.getDefaultParameters();
        byte[] byteArray48 = pcxImageParser30.getIccProfileBytes(byteSource38, pcxImagingParameters47);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters49 = pcxImageParser30.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata51 = pcxImageParser30.getMetadata(byteSource50);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser30.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser0.getMetadata(file29, pcxImagingParameters52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(byteOrder28);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Pcx-Custom" + "'", str34, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Pcx-Custom" + "'", str35, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance37);
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNull(formatCompliance42);
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "pcx" + "'", str46, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters47);
        org.junit.Assert.assertNull(byteArray48);
        org.junit.Assert.assertNotNull(pcxImagingParameters49);
        org.junit.Assert.assertNull(imageMetadata51);
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
    }

    @Test
    public void test0619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0619");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.ImageFormat imageFormat3 = null;
        boolean boolean4 = pcxImageParser0.canAcceptType(imageFormat3);
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder7 = pcxImageParser6.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance9 = pcxImageParser6.getFormatCompliance(byteSource8);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = pcxImageParser6.getDefaultParameters();
        java.lang.String str11 = pcxImageParser6.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser6.getMetadata(byteSource12);
        boolean boolean15 = pcxImageParser6.canAcceptExtension("");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = pcxImageParser6.getDefaultParameters();
        byte[] byteArray17 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters16);
        java.io.File file18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension19 = pcxImageParser0.getImageSize(file18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNull(formatCompliance9);
        org.junit.Assert.assertNotNull(pcxImagingParameters10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "pcx" + "'", str11, "pcx");
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters16);
        org.junit.Assert.assertNull(byteArray17);
    }

    @Test
    public void test0620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0620");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance14 = pcxImageParser0.getFormatCompliance(byteSource13);
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser0.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata20 = pcxImageParser18.getMetadata(byteSource19);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser18.getMetadata(byteSource21);
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser18.canAcceptType(imageFormat23);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser18.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo26 = pcxImageParser0.getImageInfo(byteSource17, pcxImagingParameters25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(formatCompliance14);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNull(imageMetadata20);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
    }

    @Test
    public void test0621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0621");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser0.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = null;
        byte[] byteArray13 = pcxImageParser10.getIccProfileBytes(byteSource11, pcxImagingParameters12);
        java.lang.String str14 = pcxImageParser10.getName();
        java.lang.String str15 = pcxImageParser10.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder18 = pcxImageParser17.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance20 = pcxImageParser17.getFormatCompliance(byteSource19);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser17.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser10.getMetadata(byteSource16, pcxImagingParameters21);
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata26 = pcxImageParser24.getMetadata(byteSource25);
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder29 = pcxImageParser28.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance31 = pcxImageParser28.getFormatCompliance(byteSource30);
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser28.getMetadata(byteSource32);
        boolean boolean35 = pcxImageParser28.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser28.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser24.getMetadata(byteSource27, pcxImagingParameters36);
        byte[] byteArray38 = pcxImageParser10.getIccProfileBytes(byteSource23, pcxImagingParameters36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance40 = pcxImageParser10.getFormatCompliance(byteSource39);
        java.nio.ByteOrder byteOrder41 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser43 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = null;
        byte[] byteArray46 = pcxImageParser43.getIccProfileBytes(byteSource44, pcxImagingParameters45);
        java.lang.String str47 = pcxImageParser43.getName();
        java.lang.String str48 = pcxImageParser43.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser50 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder51 = pcxImageParser50.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance53 = pcxImageParser50.getFormatCompliance(byteSource52);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters54 = pcxImageParser50.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata55 = pcxImageParser43.getMetadata(byteSource49, pcxImagingParameters54);
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser57 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata59 = pcxImageParser57.getMetadata(byteSource58);
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser61 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder62 = pcxImageParser61.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance64 = pcxImageParser61.getFormatCompliance(byteSource63);
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata66 = pcxImageParser61.getMetadata(byteSource65);
        boolean boolean68 = pcxImageParser61.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters69 = pcxImageParser61.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata70 = pcxImageParser57.getMetadata(byteSource60, pcxImagingParameters69);
        byte[] byteArray71 = pcxImageParser43.getIccProfileBytes(byteSource56, pcxImagingParameters69);
        byte[] byteArray72 = pcxImageParser10.getIccProfileBytes(byteSource42, pcxImagingParameters69);
        byte[] byteArray73 = pcxImageParser0.getIccProfileBytes(byteSource9, pcxImagingParameters69);
        org.apache.commons.imaging.bytesource.ByteSource byteSource74 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo75 = pcxImageParser0.getImageInfo(byteSource74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNull(byteArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Pcx-Custom" + "'", str14, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Pcx-Custom" + "'", str15, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNull(formatCompliance20);
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNull(imageMetadata26);
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertNull(formatCompliance31);
        org.junit.Assert.assertNull(imageMetadata33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertNull(byteArray38);
        org.junit.Assert.assertNull(formatCompliance40);
        org.junit.Assert.assertNotNull(byteOrder41);
        org.junit.Assert.assertNull(byteArray46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Pcx-Custom" + "'", str47, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Pcx-Custom" + "'", str48, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder51);
        org.junit.Assert.assertNull(formatCompliance53);
        org.junit.Assert.assertNotNull(pcxImagingParameters54);
        org.junit.Assert.assertNull(imageMetadata55);
        org.junit.Assert.assertNull(imageMetadata59);
        org.junit.Assert.assertNotNull(byteOrder62);
        org.junit.Assert.assertNull(formatCompliance64);
        org.junit.Assert.assertNull(imageMetadata66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters69);
        org.junit.Assert.assertNull(imageMetadata70);
        org.junit.Assert.assertNull(byteArray71);
        org.junit.Assert.assertNull(byteArray72);
        org.junit.Assert.assertNull(byteArray73);
    }

    @Test
    public void test0622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0622");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        java.io.File file9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension10 = pcxImageParser0.getImageSize(file9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
    }

    @Test
    public void test0623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0623");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = null;
        byte[] byteArray9 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters8);
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = null;
        byte[] byteArray14 = pcxImageParser11.getIccProfileBytes(byteSource12, pcxImagingParameters13);
        java.lang.String str15 = pcxImageParser11.getName();
        java.lang.String str16 = pcxImageParser11.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser11.getMetadata(byteSource17, pcxImagingParameters22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = null;
        byte[] byteArray28 = pcxImageParser25.getIccProfileBytes(byteSource26, pcxImagingParameters27);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = pcxImageParser25.getDefaultParameters();
        byte[] byteArray30 = pcxImageParser11.getIccProfileBytes(byteSource24, pcxImagingParameters29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat37 = null;
        boolean boolean38 = pcxImageParser32.canAcceptType(imageFormat37);
        java.lang.String str39 = pcxImageParser32.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser32.getDefaultParameters();
        java.lang.String str41 = pcxImageParser32.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata43 = pcxImageParser11.getMetadata(byteSource31, pcxImagingParameters42);
        byte[] byteArray44 = pcxImageParser0.getIccProfileBytes(byteSource10, pcxImagingParameters42);
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo46 = pcxImageParser0.getImageInfo(byteSource45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(byteArray9);
        org.junit.Assert.assertNull(byteArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Pcx-Custom" + "'", str15, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Pcx-Custom" + "'", str16, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNotNull(pcxImagingParameters29);
        org.junit.Assert.assertNull(byteArray30);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "pcx" + "'", str39, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Pcx-Custom" + "'", str41, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertNull(imageMetadata43);
        org.junit.Assert.assertNull(byteArray44);
    }

    @Test
    public void test0624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0624");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance14 = pcxImageParser0.getFormatCompliance(byteSource13);
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser0.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList18 = pcxImageParser0.getAllBufferedImages(byteSource17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(formatCompliance14);
        org.junit.Assert.assertNull(formatCompliance16);
    }

    @Test
    public void test0625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0625");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        java.nio.ByteOrder byteOrder9 = pcxImageParser0.getByteOrder();
        java.io.File file10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList11 = pcxImageParser0.getAllBufferedImages(file10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNotNull(byteOrder9);
    }

    @Test
    public void test0626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0626");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser9.canAcceptType(imageFormat14);
        java.lang.String str16 = pcxImageParser9.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser9.getDefaultParameters();
        byte[] byteArray18 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters17);
        org.apache.commons.imaging.ImageFormat imageFormat19 = null;
        boolean boolean20 = pcxImageParser0.canAcceptType(imageFormat19);
        java.io.File file21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser22 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder23 = pcxImageParser22.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance25 = pcxImageParser22.getFormatCompliance(byteSource24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser22.getMetadata(byteSource26);
        boolean boolean29 = pcxImageParser22.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser22.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = null;
        byte[] byteArray35 = pcxImageParser32.getIccProfileBytes(byteSource33, pcxImagingParameters34);
        java.lang.String str36 = pcxImageParser32.getName();
        java.lang.String str37 = pcxImageParser32.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance39 = pcxImageParser32.getFormatCompliance(byteSource38);
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser41 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder42 = pcxImageParser41.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance44 = pcxImageParser41.getFormatCompliance(byteSource43);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser41.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat46 = null;
        boolean boolean47 = pcxImageParser41.canAcceptType(imageFormat46);
        java.lang.String str48 = pcxImageParser41.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters49 = pcxImageParser41.getDefaultParameters();
        byte[] byteArray50 = pcxImageParser32.getIccProfileBytes(byteSource40, pcxImagingParameters49);
        byte[] byteArray51 = pcxImageParser22.getIccProfileBytes(byteSource31, pcxImagingParameters49);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo52 = pcxImageParser0.getImageInfo(file21, pcxImagingParameters49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "pcx" + "'", str16, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertNull(formatCompliance25);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(byteArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Pcx-Custom" + "'", str36, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Pcx-Custom" + "'", str37, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance39);
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNull(formatCompliance44);
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "pcx" + "'", str48, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters49);
        org.junit.Assert.assertNull(byteArray50);
        org.junit.Assert.assertNull(byteArray51);
    }

    @Test
    public void test0627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0627");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.nio.ByteOrder byteOrder4 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder7 = pcxImageParser6.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance9 = pcxImageParser6.getFormatCompliance(byteSource8);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat11 = null;
        boolean boolean12 = pcxImageParser6.canAcceptType(imageFormat11);
        java.lang.String str13 = pcxImageParser6.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource5, pcxImagingParameters14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder18 = pcxImageParser17.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance20 = pcxImageParser17.getFormatCompliance(byteSource19);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser17.getMetadata(byteSource21);
        boolean boolean24 = pcxImageParser17.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser17.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata26 = pcxImageParser0.getMetadata(byteSource16, pcxImagingParameters25);
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str29 = pcxImageParser28.getName();
        org.apache.commons.imaging.ImageFormat imageFormat30 = null;
        boolean boolean31 = pcxImageParser28.canAcceptType(imageFormat30);
        org.apache.commons.imaging.ImageFormat imageFormat32 = null;
        boolean boolean33 = pcxImageParser28.canAcceptType(imageFormat32);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser28.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension35 = pcxImageParser0.getImageSize(byteSource27, pcxImagingParameters34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNull(formatCompliance9);
        org.junit.Assert.assertNotNull(pcxImagingParameters10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNull(formatCompliance20);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
        org.junit.Assert.assertNull(imageMetadata26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
    }

    @Test
    public void test0628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0628");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser4.getMetadata(byteSource8);
        boolean boolean11 = pcxImageParser4.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters12);
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser0.canAcceptType(imageFormat14);
        boolean boolean17 = pcxImageParser0.canAcceptExtension("pcx");
        java.io.File file18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = null;
        byte[] byteArray22 = pcxImageParser19.getIccProfileBytes(byteSource20, pcxImagingParameters21);
        java.lang.String str23 = pcxImageParser19.getName();
        java.lang.String str24 = pcxImageParser19.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder27 = pcxImageParser26.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance29 = pcxImageParser26.getFormatCompliance(byteSource28);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser26.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser19.getMetadata(byteSource25, pcxImagingParameters30);
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser33.getMetadata(byteSource34);
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser37 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder38 = pcxImageParser37.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance40 = pcxImageParser37.getFormatCompliance(byteSource39);
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser37.getMetadata(byteSource41);
        boolean boolean44 = pcxImageParser37.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser37.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser33.getMetadata(byteSource36, pcxImagingParameters45);
        byte[] byteArray47 = pcxImageParser19.getIccProfileBytes(byteSource32, pcxImagingParameters45);
        boolean boolean49 = pcxImageParser19.canAcceptExtension("pcx");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters50 = pcxImageParser19.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension51 = pcxImageParser0.getImageSize(file18, pcxImagingParameters50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(byteArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Pcx-Custom" + "'", str23, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Pcx-Custom" + "'", str24, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNull(formatCompliance29);
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertNotNull(byteOrder38);
        org.junit.Assert.assertNull(formatCompliance40);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertNull(imageMetadata46);
        org.junit.Assert.assertNull(byteArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters50);
    }

    @Test
    public void test0629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0629");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser0.getMetadata(byteSource7);
        java.nio.ByteOrder byteOrder9 = pcxImageParser0.getByteOrder();
        java.io.File file10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension11 = pcxImageParser0.getImageSize(file10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder9);
    }

    @Test
    public void test0630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0630");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList10 = pcxImageParser0.getAllBufferedImages(byteSource9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
    }

    @Test
    public void test0631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0631");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser0.canAcceptType(imageFormat23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance26 = pcxImageParser0.getFormatCompliance(byteSource25);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = pcxImageParser0.getDefaultParameters();
        java.io.File file28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder30 = pcxImageParser29.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser29.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser29.getDefaultParameters();
        java.lang.String str34 = pcxImageParser29.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser29.getMetadata(byteSource35);
        boolean boolean38 = pcxImageParser29.canAcceptExtension("");
        boolean boolean40 = pcxImageParser29.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser42 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = null;
        byte[] byteArray45 = pcxImageParser42.getIccProfileBytes(byteSource43, pcxImagingParameters44);
        java.lang.String str46 = pcxImageParser42.getName();
        java.lang.String str47 = pcxImageParser42.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser49 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder50 = pcxImageParser49.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance52 = pcxImageParser49.getFormatCompliance(byteSource51);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters53 = pcxImageParser49.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata54 = pcxImageParser42.getMetadata(byteSource48, pcxImagingParameters53);
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser56 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata58 = pcxImageParser56.getMetadata(byteSource57);
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser60 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder61 = pcxImageParser60.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance63 = pcxImageParser60.getFormatCompliance(byteSource62);
        org.apache.commons.imaging.bytesource.ByteSource byteSource64 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata65 = pcxImageParser60.getMetadata(byteSource64);
        boolean boolean67 = pcxImageParser60.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters68 = pcxImageParser60.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata69 = pcxImageParser56.getMetadata(byteSource59, pcxImagingParameters68);
        byte[] byteArray70 = pcxImageParser42.getIccProfileBytes(byteSource55, pcxImagingParameters68);
        org.apache.commons.imaging.bytesource.ByteSource byteSource71 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance72 = pcxImageParser42.getFormatCompliance(byteSource71);
        java.nio.ByteOrder byteOrder73 = pcxImageParser42.getByteOrder();
        java.nio.ByteOrder byteOrder74 = pcxImageParser42.getByteOrder();
        java.lang.String str75 = pcxImageParser42.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters76 = pcxImageParser42.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata77 = pcxImageParser29.getMetadata(byteSource41, pcxImagingParameters76);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo78 = pcxImageParser0.getImageInfo(file28, pcxImagingParameters76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(formatCompliance26);
        org.junit.Assert.assertNotNull(pcxImagingParameters27);
        org.junit.Assert.assertNotNull(byteOrder30);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "pcx" + "'", str34, "pcx");
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(byteArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Pcx-Custom" + "'", str46, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Pcx-Custom" + "'", str47, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder50);
        org.junit.Assert.assertNull(formatCompliance52);
        org.junit.Assert.assertNotNull(pcxImagingParameters53);
        org.junit.Assert.assertNull(imageMetadata54);
        org.junit.Assert.assertNull(imageMetadata58);
        org.junit.Assert.assertNotNull(byteOrder61);
        org.junit.Assert.assertNull(formatCompliance63);
        org.junit.Assert.assertNull(imageMetadata65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters68);
        org.junit.Assert.assertNull(imageMetadata69);
        org.junit.Assert.assertNull(byteArray70);
        org.junit.Assert.assertNull(formatCompliance72);
        org.junit.Assert.assertNotNull(byteOrder73);
        org.junit.Assert.assertNotNull(byteOrder74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "Pcx-Custom" + "'", str75, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters76);
        org.junit.Assert.assertNull(imageMetadata77);
    }

    @Test
    public void test0632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0632");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        boolean boolean5 = pcxImageParser0.canAcceptExtension("Pcx-Custom");
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str10 = pcxImageParser9.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata14 = pcxImageParser9.getMetadata(byteSource13);
        java.nio.ByteOrder byteOrder15 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = null;
        byte[] byteArray18 = pcxImageParser9.getIccProfileBytes(byteSource16, pcxImagingParameters17);
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser20 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = null;
        byte[] byteArray23 = pcxImageParser20.getIccProfileBytes(byteSource21, pcxImagingParameters22);
        java.lang.String str24 = pcxImageParser20.getName();
        java.lang.String str25 = pcxImageParser20.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser27 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder28 = pcxImageParser27.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser27.getFormatCompliance(byteSource29);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser27.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser20.getMetadata(byteSource26, pcxImagingParameters31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = null;
        byte[] byteArray37 = pcxImageParser34.getIccProfileBytes(byteSource35, pcxImagingParameters36);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser34.getDefaultParameters();
        byte[] byteArray39 = pcxImageParser20.getIccProfileBytes(byteSource33, pcxImagingParameters38);
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser41 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder42 = pcxImageParser41.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance44 = pcxImageParser41.getFormatCompliance(byteSource43);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser41.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat46 = null;
        boolean boolean47 = pcxImageParser41.canAcceptType(imageFormat46);
        java.lang.String str48 = pcxImageParser41.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters49 = pcxImageParser41.getDefaultParameters();
        java.lang.String str50 = pcxImageParser41.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters51 = pcxImageParser41.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata52 = pcxImageParser20.getMetadata(byteSource40, pcxImagingParameters51);
        byte[] byteArray53 = pcxImageParser9.getIccProfileBytes(byteSource19, pcxImagingParameters51);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension54 = pcxImageParser0.getImageSize(byteSource8, pcxImagingParameters51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Pcx-Custom" + "'", str10, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNull(imageMetadata14);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertNull(byteArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Pcx-Custom" + "'", str24, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNull(byteArray37);
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
        org.junit.Assert.assertNull(byteArray39);
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNull(formatCompliance44);
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "pcx" + "'", str48, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Pcx-Custom" + "'", str50, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters51);
        org.junit.Assert.assertNull(imageMetadata52);
        org.junit.Assert.assertNull(byteArray53);
    }

    @Test
    public void test0633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0633");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        java.io.File file7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = null;
        byte[] byteArray11 = pcxImageParser8.getIccProfileBytes(byteSource9, pcxImagingParameters10);
        java.nio.ByteOrder byteOrder12 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance14 = pcxImageParser8.getFormatCompliance(byteSource13);
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = null;
        byte[] byteArray19 = pcxImageParser16.getIccProfileBytes(byteSource17, pcxImagingParameters18);
        java.lang.String str20 = pcxImageParser16.getName();
        java.lang.String str21 = pcxImageParser16.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser23 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder24 = pcxImageParser23.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance26 = pcxImageParser23.getFormatCompliance(byteSource25);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = pcxImageParser23.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata28 = pcxImageParser16.getMetadata(byteSource22, pcxImagingParameters27);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser30.getMetadata(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder35 = pcxImageParser34.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance37 = pcxImageParser34.getFormatCompliance(byteSource36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata39 = pcxImageParser34.getMetadata(byteSource38);
        boolean boolean41 = pcxImageParser34.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser34.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata43 = pcxImageParser30.getMetadata(byteSource33, pcxImagingParameters42);
        byte[] byteArray44 = pcxImageParser16.getIccProfileBytes(byteSource29, pcxImagingParameters42);
        org.apache.commons.imaging.ImageFormat imageFormat45 = null;
        boolean boolean46 = pcxImageParser16.canAcceptType(imageFormat45);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance48 = pcxImageParser16.getFormatCompliance(byteSource47);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters49 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata50 = pcxImageParser8.getMetadata(byteSource15, pcxImagingParameters49);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata51 = pcxImageParser0.getMetadata(file7, pcxImagingParameters49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(byteArray11);
        org.junit.Assert.assertNotNull(byteOrder12);
        org.junit.Assert.assertNull(formatCompliance14);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Pcx-Custom" + "'", str20, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder24);
        org.junit.Assert.assertNull(formatCompliance26);
        org.junit.Assert.assertNotNull(pcxImagingParameters27);
        org.junit.Assert.assertNull(imageMetadata28);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNull(formatCompliance37);
        org.junit.Assert.assertNull(imageMetadata39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertNull(imageMetadata43);
        org.junit.Assert.assertNull(byteArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(formatCompliance48);
        org.junit.Assert.assertNotNull(pcxImagingParameters49);
        org.junit.Assert.assertNull(imageMetadata50);
    }

    @Test
    public void test0634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0634");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        boolean boolean30 = pcxImageParser0.canAcceptExtension("pcx");
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        java.lang.String str32 = pcxImageParser0.getName();
        java.io.File file33 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance34 = pcxImageParser0.getFormatCompliance(file33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Pcx-Custom" + "'", str32, "Pcx-Custom");
    }

    @Test
    public void test0635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0635");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.io.File file6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        java.lang.String str12 = pcxImageParser7.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata14 = pcxImageParser7.getMetadata(byteSource13);
        boolean boolean16 = pcxImageParser7.canAcceptExtension("");
        boolean boolean18 = pcxImageParser7.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser20 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = null;
        byte[] byteArray23 = pcxImageParser20.getIccProfileBytes(byteSource21, pcxImagingParameters22);
        java.lang.String str24 = pcxImageParser20.getName();
        java.lang.String str25 = pcxImageParser20.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser27 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder28 = pcxImageParser27.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser27.getFormatCompliance(byteSource29);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser27.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser20.getMetadata(byteSource26, pcxImagingParameters31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser34.getMetadata(byteSource35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser38 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder39 = pcxImageParser38.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance41 = pcxImageParser38.getFormatCompliance(byteSource40);
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata43 = pcxImageParser38.getMetadata(byteSource42);
        boolean boolean45 = pcxImageParser38.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser38.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser34.getMetadata(byteSource37, pcxImagingParameters46);
        byte[] byteArray48 = pcxImageParser20.getIccProfileBytes(byteSource33, pcxImagingParameters46);
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance50 = pcxImageParser20.getFormatCompliance(byteSource49);
        java.nio.ByteOrder byteOrder51 = pcxImageParser20.getByteOrder();
        java.nio.ByteOrder byteOrder52 = pcxImageParser20.getByteOrder();
        java.lang.String str53 = pcxImageParser20.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters54 = pcxImageParser20.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata55 = pcxImageParser7.getMetadata(byteSource19, pcxImagingParameters54);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata56 = pcxImageParser0.getMetadata(file6, pcxImagingParameters54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "pcx" + "'", str12, "pcx");
        org.junit.Assert.assertNull(imageMetadata14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(byteArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Pcx-Custom" + "'", str24, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertNotNull(byteOrder39);
        org.junit.Assert.assertNull(formatCompliance41);
        org.junit.Assert.assertNull(imageMetadata43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
        org.junit.Assert.assertNull(imageMetadata47);
        org.junit.Assert.assertNull(byteArray48);
        org.junit.Assert.assertNull(formatCompliance50);
        org.junit.Assert.assertNotNull(byteOrder51);
        org.junit.Assert.assertNotNull(byteOrder52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Pcx-Custom" + "'", str53, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters54);
        org.junit.Assert.assertNull(imageMetadata55);
    }

    @Test
    public void test0636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0636");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        java.nio.ByteOrder byteOrder32 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder35 = pcxImageParser34.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance37 = pcxImageParser34.getFormatCompliance(byteSource36);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser34.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser40.getMetadata(byteSource41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder45 = pcxImageParser44.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance47 = pcxImageParser44.getFormatCompliance(byteSource46);
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser44.getMetadata(byteSource48);
        boolean boolean51 = pcxImageParser44.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser44.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser40.getMetadata(byteSource43, pcxImagingParameters52);
        byte[] byteArray54 = pcxImageParser34.getIccProfileBytes(byteSource39, pcxImagingParameters52);
        java.lang.String str55 = pcxImageParser34.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters56 = pcxImageParser34.getDefaultParameters();
        byte[] byteArray57 = pcxImageParser0.getIccProfileBytes(byteSource33, pcxImagingParameters56);
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance59 = pcxImageParser0.getFormatCompliance(byteSource58);
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList61 = pcxImageParser0.getAllBufferedImages(byteSource60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNull(formatCompliance37);
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertNotNull(byteOrder45);
        org.junit.Assert.assertNull(formatCompliance47);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertNull(byteArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Pcx-Custom" + "'", str55, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters56);
        org.junit.Assert.assertNull(byteArray57);
        org.junit.Assert.assertNull(formatCompliance59);
    }

    @Test
    public void test0637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0637");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.ImageFormat imageFormat3 = null;
        boolean boolean4 = pcxImageParser0.canAcceptType(imageFormat3);
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.io.File file7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str9 = pcxImageParser8.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        boolean boolean13 = pcxImageParser8.canAcceptExtension("");
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder16 = pcxImageParser15.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata26 = pcxImageParser24.getMetadata(byteSource25);
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder29 = pcxImageParser28.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance31 = pcxImageParser28.getFormatCompliance(byteSource30);
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser28.getMetadata(byteSource32);
        boolean boolean35 = pcxImageParser28.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser28.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser24.getMetadata(byteSource27, pcxImagingParameters36);
        byte[] byteArray38 = pcxImageParser18.getIccProfileBytes(byteSource23, pcxImagingParameters36);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata39 = pcxImageParser15.getMetadata(byteSource17, pcxImagingParameters36);
        byte[] byteArray40 = pcxImageParser8.getIccProfileBytes(byteSource14, pcxImagingParameters36);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension41 = pcxImageParser0.getImageSize(file7, pcxImagingParameters36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Pcx-Custom" + "'", str9, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata26);
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertNull(formatCompliance31);
        org.junit.Assert.assertNull(imageMetadata33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertNull(byteArray38);
        org.junit.Assert.assertNull(imageMetadata39);
        org.junit.Assert.assertNull(byteArray40);
    }

    @Test
    public void test0638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0638");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser0.canAcceptType(imageFormat23);
        java.lang.String str25 = pcxImageParser0.getDefaultExtension();
        java.io.File file26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser27 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder28 = pcxImageParser27.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser27.getFormatCompliance(byteSource29);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser27.getDefaultParameters();
        java.lang.String str32 = pcxImageParser27.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser27.getMetadata(byteSource33);
        boolean boolean36 = pcxImageParser27.canAcceptExtension("");
        org.apache.commons.imaging.ImageFormat imageFormat37 = null;
        boolean boolean38 = pcxImageParser27.canAcceptType(imageFormat37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = null;
        byte[] byteArray43 = pcxImageParser40.getIccProfileBytes(byteSource41, pcxImagingParameters42);
        java.lang.String str44 = pcxImageParser40.getName();
        java.lang.String str45 = pcxImageParser40.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser47 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder48 = pcxImageParser47.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance50 = pcxImageParser47.getFormatCompliance(byteSource49);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters51 = pcxImageParser47.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata52 = pcxImageParser40.getMetadata(byteSource46, pcxImagingParameters51);
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser54 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata56 = pcxImageParser54.getMetadata(byteSource55);
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser58 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder59 = pcxImageParser58.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance61 = pcxImageParser58.getFormatCompliance(byteSource60);
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata63 = pcxImageParser58.getMetadata(byteSource62);
        boolean boolean65 = pcxImageParser58.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters66 = pcxImageParser58.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata67 = pcxImageParser54.getMetadata(byteSource57, pcxImagingParameters66);
        byte[] byteArray68 = pcxImageParser40.getIccProfileBytes(byteSource53, pcxImagingParameters66);
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance70 = pcxImageParser40.getFormatCompliance(byteSource69);
        org.apache.commons.imaging.bytesource.ByteSource byteSource71 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser72 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource73 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters74 = null;
        byte[] byteArray75 = pcxImageParser72.getIccProfileBytes(byteSource73, pcxImagingParameters74);
        java.nio.ByteOrder byteOrder76 = pcxImageParser72.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource77 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser78 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder79 = pcxImageParser78.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource80 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance81 = pcxImageParser78.getFormatCompliance(byteSource80);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters82 = pcxImageParser78.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat83 = null;
        boolean boolean84 = pcxImageParser78.canAcceptType(imageFormat83);
        java.lang.String str85 = pcxImageParser78.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters86 = pcxImageParser78.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata87 = pcxImageParser72.getMetadata(byteSource77, pcxImagingParameters86);
        byte[] byteArray88 = pcxImageParser40.getIccProfileBytes(byteSource71, pcxImagingParameters86);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata89 = pcxImageParser27.getMetadata(byteSource39, pcxImagingParameters86);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage90 = pcxImageParser0.getBufferedImage(file26, pcxImagingParameters86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "pcx" + "'", str25, "pcx");
        org.junit.Assert.assertNotNull(byteOrder28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "pcx" + "'", str32, "pcx");
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(byteArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Pcx-Custom" + "'", str44, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Pcx-Custom" + "'", str45, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder48);
        org.junit.Assert.assertNull(formatCompliance50);
        org.junit.Assert.assertNotNull(pcxImagingParameters51);
        org.junit.Assert.assertNull(imageMetadata52);
        org.junit.Assert.assertNull(imageMetadata56);
        org.junit.Assert.assertNotNull(byteOrder59);
        org.junit.Assert.assertNull(formatCompliance61);
        org.junit.Assert.assertNull(imageMetadata63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters66);
        org.junit.Assert.assertNull(imageMetadata67);
        org.junit.Assert.assertNull(byteArray68);
        org.junit.Assert.assertNull(formatCompliance70);
        org.junit.Assert.assertNull(byteArray75);
        org.junit.Assert.assertNotNull(byteOrder76);
        org.junit.Assert.assertNotNull(byteOrder79);
        org.junit.Assert.assertNull(formatCompliance81);
        org.junit.Assert.assertNotNull(pcxImagingParameters82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "pcx" + "'", str85, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters86);
        org.junit.Assert.assertNull(imageMetadata87);
        org.junit.Assert.assertNull(byteArray88);
        org.junit.Assert.assertNull(imageMetadata89);
    }

    @Test
    public void test0639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0639");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.nio.ByteOrder byteOrder29 = pcxImageParser0.getByteOrder();
        java.io.File file30 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray31 = pcxImageParser0.getIccProfileBytes(file30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNotNull(byteOrder29);
    }

    @Test
    public void test0640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0640");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource14);
        java.lang.String str16 = pcxImageParser0.getDefaultExtension();
        java.io.PrintWriter printWriter17 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean19 = pcxImageParser0.dumpImageFile(printWriter17, byteSource18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "pcx" + "'", str16, "pcx");
    }

    @Test
    public void test0641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0641");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = null;
        byte[] byteArray9 = pcxImageParser6.getIccProfileBytes(byteSource7, pcxImagingParameters8);
        java.lang.String str10 = pcxImageParser6.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource5, pcxImagingParameters11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser0.getDefaultParameters();
        java.io.PrintWriter printWriter14 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean16 = pcxImageParser0.dumpImageFile(printWriter14, byteSource15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(byteArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "pcx" + "'", str10, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
    }

    @Test
    public void test0642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0642");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource14);
        java.io.File file16 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = pcxImageParser0.canAcceptExtension(file16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata15);
    }

    @Test
    public void test0643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0643");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser0.canAcceptType(imageFormat14);
        java.io.File file16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser17.getMetadata(byteSource18);
        org.apache.commons.imaging.ImageFormat imageFormat20 = null;
        boolean boolean21 = pcxImageParser17.canAcceptType(imageFormat20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser23 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder24 = pcxImageParser23.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance26 = pcxImageParser23.getFormatCompliance(byteSource25);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = pcxImageParser23.getDefaultParameters();
        java.lang.String str28 = pcxImageParser23.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata30 = pcxImageParser23.getMetadata(byteSource29);
        boolean boolean32 = pcxImageParser23.canAcceptExtension("");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser23.getDefaultParameters();
        byte[] byteArray34 = pcxImageParser17.getIccProfileBytes(byteSource22, pcxImagingParameters33);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage35 = pcxImageParser0.getBufferedImage(file16, pcxImagingParameters33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(byteOrder24);
        org.junit.Assert.assertNull(formatCompliance26);
        org.junit.Assert.assertNotNull(pcxImagingParameters27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "pcx" + "'", str28, "pcx");
        org.junit.Assert.assertNull(imageMetadata30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
        org.junit.Assert.assertNull(byteArray34);
    }

    @Test
    public void test0644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0644");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = null;
        byte[] byteArray17 = pcxImageParser14.getIccProfileBytes(byteSource15, pcxImagingParameters16);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser14.getDefaultParameters();
        byte[] byteArray19 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters18);
        java.io.File file20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = null;
        byte[] byteArray24 = pcxImageParser21.getIccProfileBytes(byteSource22, pcxImagingParameters23);
        java.lang.String str25 = pcxImageParser21.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser21.getMetadata(byteSource26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance29 = pcxImageParser21.getFormatCompliance(byteSource28);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser21.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo31 = pcxImageParser0.getImageInfo(file20, pcxImagingParameters30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(byteArray17);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(formatCompliance29);
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
    }

    @Test
    public void test0645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0645");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser0.getMetadata(byteSource7);
        java.nio.ByteOrder byteOrder9 = pcxImageParser0.getByteOrder();
        java.lang.Class<?> wildcardClass10 = pcxImageParser0.getClass();
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0646");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        boolean boolean22 = pcxImageParser0.canAcceptExtension("pcx");
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = null;
        byte[] byteArray27 = pcxImageParser24.getIccProfileBytes(byteSource25, pcxImagingParameters26);
        java.lang.String str28 = pcxImageParser24.getName();
        java.lang.String str29 = pcxImageParser24.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder32 = pcxImageParser31.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance34 = pcxImageParser31.getFormatCompliance(byteSource33);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser31.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser24.getMetadata(byteSource30, pcxImagingParameters35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser38 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser38.getMetadata(byteSource39);
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser42 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder43 = pcxImageParser42.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance45 = pcxImageParser42.getFormatCompliance(byteSource44);
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser42.getMetadata(byteSource46);
        boolean boolean49 = pcxImageParser42.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters50 = pcxImageParser42.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata51 = pcxImageParser38.getMetadata(byteSource41, pcxImagingParameters50);
        byte[] byteArray52 = pcxImageParser24.getIccProfileBytes(byteSource37, pcxImagingParameters50);
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance54 = pcxImageParser24.getFormatCompliance(byteSource53);
        java.nio.ByteOrder byteOrder55 = pcxImageParser24.getByteOrder();
        java.nio.ByteOrder byteOrder56 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser58 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder59 = pcxImageParser58.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance61 = pcxImageParser58.getFormatCompliance(byteSource60);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters62 = pcxImageParser58.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser64 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata66 = pcxImageParser64.getMetadata(byteSource65);
        org.apache.commons.imaging.bytesource.ByteSource byteSource67 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser68 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder69 = pcxImageParser68.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource70 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance71 = pcxImageParser68.getFormatCompliance(byteSource70);
        org.apache.commons.imaging.bytesource.ByteSource byteSource72 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata73 = pcxImageParser68.getMetadata(byteSource72);
        boolean boolean75 = pcxImageParser68.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters76 = pcxImageParser68.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata77 = pcxImageParser64.getMetadata(byteSource67, pcxImagingParameters76);
        byte[] byteArray78 = pcxImageParser58.getIccProfileBytes(byteSource63, pcxImagingParameters76);
        java.lang.String str79 = pcxImageParser58.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters80 = pcxImageParser58.getDefaultParameters();
        byte[] byteArray81 = pcxImageParser24.getIccProfileBytes(byteSource57, pcxImagingParameters80);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage82 = pcxImageParser0.getBufferedImage(byteSource23, pcxImagingParameters80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(byteArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Pcx-Custom" + "'", str28, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertNull(formatCompliance34);
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNull(formatCompliance45);
        org.junit.Assert.assertNull(imageMetadata47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters50);
        org.junit.Assert.assertNull(imageMetadata51);
        org.junit.Assert.assertNull(byteArray52);
        org.junit.Assert.assertNull(formatCompliance54);
        org.junit.Assert.assertNotNull(byteOrder55);
        org.junit.Assert.assertNotNull(byteOrder56);
        org.junit.Assert.assertNotNull(byteOrder59);
        org.junit.Assert.assertNull(formatCompliance61);
        org.junit.Assert.assertNotNull(pcxImagingParameters62);
        org.junit.Assert.assertNull(imageMetadata66);
        org.junit.Assert.assertNotNull(byteOrder69);
        org.junit.Assert.assertNull(formatCompliance71);
        org.junit.Assert.assertNull(imageMetadata73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters76);
        org.junit.Assert.assertNull(imageMetadata77);
        org.junit.Assert.assertNull(byteArray78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "Pcx-Custom" + "'", str79, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters80);
        org.junit.Assert.assertNull(byteArray81);
    }

    @Test
    public void test0647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0647");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser0.getMetadata(byteSource21);
        java.io.File file23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = null;
        byte[] byteArray27 = pcxImageParser24.getIccProfileBytes(byteSource25, pcxImagingParameters26);
        java.lang.String str28 = pcxImageParser24.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser24.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser0.getMetadata(file23, pcxImagingParameters30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNull(byteArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "pcx" + "'", str28, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters29);
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
    }

    @Test
    public void test0648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0648");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata4 = pcxImageParser0.getMetadata(byteSource3);
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        java.lang.String str6 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        java.io.File file9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = pcxImageParser10.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension17 = pcxImageParser0.getImageSize(file9, pcxImagingParameters16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "pcx" + "'", str6, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNotNull(pcxImagingParameters15);
        org.junit.Assert.assertNotNull(pcxImagingParameters16);
    }

    @Test
    public void test0649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0649");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        java.nio.ByteOrder byteOrder2 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList4 = pcxImageParser0.getAllBufferedImages(byteSource3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder2);
    }

    @Test
    public void test0650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0650");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        boolean boolean30 = pcxImageParser0.canAcceptExtension("pcx");
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        java.io.File file32 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser0.getMetadata(file32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrder31);
    }

    @Test
    public void test0651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0651");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser0.canAcceptType(imageFormat23);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser0.getFormatCompliance(byteSource26);
        java.io.File file28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser29.getMetadata(byteSource30);
        org.apache.commons.imaging.ImageFormat imageFormat32 = null;
        boolean boolean33 = pcxImageParser29.canAcceptType(imageFormat32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder36 = pcxImageParser35.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance38 = pcxImageParser35.getFormatCompliance(byteSource37);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = pcxImageParser35.getDefaultParameters();
        java.lang.String str40 = pcxImageParser35.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser35.getMetadata(byteSource41);
        boolean boolean44 = pcxImageParser35.canAcceptExtension("");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser35.getDefaultParameters();
        byte[] byteArray46 = pcxImageParser29.getIccProfileBytes(byteSource34, pcxImagingParameters45);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser0.getMetadata(file28, pcxImagingParameters45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNull(formatCompliance38);
        org.junit.Assert.assertNotNull(pcxImagingParameters39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "pcx" + "'", str40, "pcx");
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertNull(byteArray46);
    }

    @Test
    public void test0652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0652");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.io.File file6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension8 = pcxImageParser0.getImageSize(file6, pcxImagingParameters7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
    }

    @Test
    public void test0653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0653");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = null;
        byte[] byteArray33 = pcxImageParser30.getIccProfileBytes(byteSource31, pcxImagingParameters32);
        java.lang.String str34 = pcxImageParser30.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser30.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser0.getMetadata(byteSource29, pcxImagingParameters35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser0.getMetadata(byteSource37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser0.getMetadata(byteSource39);
        org.apache.commons.imaging.ImageFormat imageFormat41 = null;
        boolean boolean42 = pcxImageParser0.canAcceptType(imageFormat41);
        java.io.File file43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder45 = pcxImageParser44.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance47 = pcxImageParser44.getFormatCompliance(byteSource46);
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser44.getMetadata(byteSource48);
        boolean boolean51 = pcxImageParser44.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser44.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser54 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters56 = null;
        byte[] byteArray57 = pcxImageParser54.getIccProfileBytes(byteSource55, pcxImagingParameters56);
        java.lang.String str58 = pcxImageParser54.getName();
        java.lang.String str59 = pcxImageParser54.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance61 = pcxImageParser54.getFormatCompliance(byteSource60);
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser63 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder64 = pcxImageParser63.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance66 = pcxImageParser63.getFormatCompliance(byteSource65);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters67 = pcxImageParser63.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat68 = null;
        boolean boolean69 = pcxImageParser63.canAcceptType(imageFormat68);
        java.lang.String str70 = pcxImageParser63.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters71 = pcxImageParser63.getDefaultParameters();
        byte[] byteArray72 = pcxImageParser54.getIccProfileBytes(byteSource62, pcxImagingParameters71);
        byte[] byteArray73 = pcxImageParser44.getIccProfileBytes(byteSource53, pcxImagingParameters71);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension74 = pcxImageParser0.getImageSize(file43, pcxImagingParameters71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "pcx" + "'", str34, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(byteOrder45);
        org.junit.Assert.assertNull(formatCompliance47);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(byteArray57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Pcx-Custom" + "'", str58, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Pcx-Custom" + "'", str59, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance61);
        org.junit.Assert.assertNotNull(byteOrder64);
        org.junit.Assert.assertNull(formatCompliance66);
        org.junit.Assert.assertNotNull(pcxImagingParameters67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "pcx" + "'", str70, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters71);
        org.junit.Assert.assertNull(byteArray72);
        org.junit.Assert.assertNull(byteArray73);
    }

    @Test
    public void test0654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0654");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser0.getMetadata(byteSource7);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass9 = imageMetadata8.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(imageMetadata8);
    }

    @Test
    public void test0655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0655");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = null;
        byte[] byteArray9 = pcxImageParser6.getIccProfileBytes(byteSource7, pcxImagingParameters8);
        java.lang.String str10 = pcxImageParser6.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource5, pcxImagingParameters11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser0.getDefaultParameters();
        java.io.File file14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = null;
        byte[] byteArray18 = pcxImageParser15.getIccProfileBytes(byteSource16, pcxImagingParameters17);
        java.lang.String str19 = pcxImageParser15.getName();
        java.lang.String str20 = pcxImageParser15.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser22 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder23 = pcxImageParser22.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance25 = pcxImageParser22.getFormatCompliance(byteSource24);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser22.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser15.getMetadata(byteSource21, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = null;
        byte[] byteArray32 = pcxImageParser29.getIccProfileBytes(byteSource30, pcxImagingParameters31);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser29.getDefaultParameters();
        byte[] byteArray34 = pcxImageParser15.getIccProfileBytes(byteSource28, pcxImagingParameters33);
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser36 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder37 = pcxImageParser36.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance39 = pcxImageParser36.getFormatCompliance(byteSource38);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser36.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat41 = null;
        boolean boolean42 = pcxImageParser36.canAcceptType(imageFormat41);
        java.lang.String str43 = pcxImageParser36.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = pcxImageParser36.getDefaultParameters();
        java.lang.String str45 = pcxImageParser36.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser36.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser15.getMetadata(byteSource35, pcxImagingParameters46);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser0.getMetadata(file14, pcxImagingParameters46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(byteArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "pcx" + "'", str10, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Pcx-Custom" + "'", str19, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Pcx-Custom" + "'", str20, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertNull(formatCompliance25);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray32);
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
        org.junit.Assert.assertNull(byteArray34);
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNull(formatCompliance39);
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "pcx" + "'", str43, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Pcx-Custom" + "'", str45, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
        org.junit.Assert.assertNull(imageMetadata47);
    }

    @Test
    public void test0656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0656");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser4.getMetadata(byteSource8);
        boolean boolean11 = pcxImageParser4.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters12);
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser0.canAcceptType(imageFormat14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList17 = pcxImageParser0.getAllBufferedImages(byteSource16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test0657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0657");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = null;
        byte[] byteArray16 = pcxImageParser13.getIccProfileBytes(byteSource14, pcxImagingParameters15);
        java.lang.String str17 = pcxImageParser13.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser7.getMetadata(byteSource12, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource6, pcxImagingParameters18);
        java.io.File file21 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance22 = pcxImageParser0.getFormatCompliance(file21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(byteArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "pcx" + "'", str17, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
    }

    @Test
    public void test0658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0658");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        boolean boolean9 = pcxImageParser0.canAcceptExtension("");
        java.lang.String str10 = pcxImageParser0.getName();
        java.awt.image.BufferedImage bufferedImage11 = null;
        java.io.OutputStream outputStream12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser13.getMetadata(byteSource14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder18 = pcxImageParser17.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance20 = pcxImageParser17.getFormatCompliance(byteSource19);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser17.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser23 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser23.getMetadata(byteSource24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser27 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder28 = pcxImageParser27.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser27.getFormatCompliance(byteSource29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser27.getMetadata(byteSource31);
        boolean boolean34 = pcxImageParser27.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser27.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser23.getMetadata(byteSource26, pcxImagingParameters35);
        byte[] byteArray37 = pcxImageParser17.getIccProfileBytes(byteSource22, pcxImagingParameters35);
        java.lang.String str38 = pcxImageParser17.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = pcxImageParser17.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser13.getMetadata(byteSource16, pcxImagingParameters39);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser43 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = null;
        byte[] byteArray46 = pcxImageParser43.getIccProfileBytes(byteSource44, pcxImagingParameters45);
        java.lang.String str47 = pcxImageParser43.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = pcxImageParser43.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser13.getMetadata(byteSource42, pcxImagingParameters48);
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage11, outputStream12, pcxImagingParameters48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Pcx-Custom" + "'", str10, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNull(formatCompliance20);
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertNotNull(byteOrder28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertNull(byteArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Pcx-Custom" + "'", str38, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters39);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertNotNull(pcxImagingParameters41);
        org.junit.Assert.assertNull(byteArray46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "pcx" + "'", str47, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters48);
        org.junit.Assert.assertNull(imageMetadata49);
    }

    @Test
    public void test0659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0659");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser0.getFormatCompliance(byteSource5);
        java.nio.ByteOrder byteOrder7 = pcxImageParser0.getByteOrder();
        java.io.PrintWriter printWriter8 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean10 = pcxImageParser0.dumpImageFile(printWriter8, byteSource9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance6);
        org.junit.Assert.assertNotNull(byteOrder7);
    }

    @Test
    public void test0660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0660");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser0.getMetadata(byteSource21, pcxImagingParameters22);
        java.lang.String str24 = pcxImageParser0.getDefaultExtension();
        java.io.File file25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = null;
        byte[] byteArray29 = pcxImageParser26.getIccProfileBytes(byteSource27, pcxImagingParameters28);
        java.lang.String str30 = pcxImageParser26.getName();
        java.lang.String str31 = pcxImageParser26.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder34 = pcxImageParser33.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance36 = pcxImageParser33.getFormatCompliance(byteSource35);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = pcxImageParser33.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser26.getMetadata(byteSource32, pcxImagingParameters37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = null;
        byte[] byteArray43 = pcxImageParser40.getIccProfileBytes(byteSource41, pcxImagingParameters42);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = pcxImageParser40.getDefaultParameters();
        byte[] byteArray45 = pcxImageParser26.getIccProfileBytes(byteSource39, pcxImagingParameters44);
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser47 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder48 = pcxImageParser47.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance50 = pcxImageParser47.getFormatCompliance(byteSource49);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters51 = pcxImageParser47.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat52 = null;
        boolean boolean53 = pcxImageParser47.canAcceptType(imageFormat52);
        java.lang.String str54 = pcxImageParser47.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters55 = pcxImageParser47.getDefaultParameters();
        java.lang.String str56 = pcxImageParser47.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters57 = pcxImageParser47.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata58 = pcxImageParser26.getMetadata(byteSource46, pcxImagingParameters57);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata59 = pcxImageParser0.getMetadata(file25, pcxImagingParameters57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "pcx" + "'", str24, "pcx");
        org.junit.Assert.assertNull(byteArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Pcx-Custom" + "'", str30, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Pcx-Custom" + "'", str31, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder34);
        org.junit.Assert.assertNull(formatCompliance36);
        org.junit.Assert.assertNotNull(pcxImagingParameters37);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNull(byteArray43);
        org.junit.Assert.assertNotNull(pcxImagingParameters44);
        org.junit.Assert.assertNull(byteArray45);
        org.junit.Assert.assertNotNull(byteOrder48);
        org.junit.Assert.assertNull(formatCompliance50);
        org.junit.Assert.assertNotNull(pcxImagingParameters51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "pcx" + "'", str54, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Pcx-Custom" + "'", str56, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters57);
        org.junit.Assert.assertNull(imageMetadata58);
    }

    @Test
    public void test0661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0661");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser0.getMetadata(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser0.getMetadata(byteSource24);
        java.io.File file26 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser0.getFormatCompliance(file26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(imageMetadata25);
    }

    @Test
    public void test0662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0662");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        java.nio.ByteOrder byteOrder32 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder35 = pcxImageParser34.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance37 = pcxImageParser34.getFormatCompliance(byteSource36);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser34.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser40.getMetadata(byteSource41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder45 = pcxImageParser44.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance47 = pcxImageParser44.getFormatCompliance(byteSource46);
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser44.getMetadata(byteSource48);
        boolean boolean51 = pcxImageParser44.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser44.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser40.getMetadata(byteSource43, pcxImagingParameters52);
        byte[] byteArray54 = pcxImageParser34.getIccProfileBytes(byteSource39, pcxImagingParameters52);
        java.lang.String str55 = pcxImageParser34.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters56 = pcxImageParser34.getDefaultParameters();
        byte[] byteArray57 = pcxImageParser0.getIccProfileBytes(byteSource33, pcxImagingParameters56);
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance59 = pcxImageParser0.getFormatCompliance(byteSource58);
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser61 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters63 = null;
        byte[] byteArray64 = pcxImageParser61.getIccProfileBytes(byteSource62, pcxImagingParameters63);
        java.lang.String str65 = pcxImageParser61.getName();
        java.lang.String str66 = pcxImageParser61.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource67 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance68 = pcxImageParser61.getFormatCompliance(byteSource67);
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser70 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder71 = pcxImageParser70.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource72 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance73 = pcxImageParser70.getFormatCompliance(byteSource72);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters74 = pcxImageParser70.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat75 = null;
        boolean boolean76 = pcxImageParser70.canAcceptType(imageFormat75);
        java.lang.String str77 = pcxImageParser70.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters78 = pcxImageParser70.getDefaultParameters();
        byte[] byteArray79 = pcxImageParser61.getIccProfileBytes(byteSource69, pcxImagingParameters78);
        org.apache.commons.imaging.ImageFormat imageFormat80 = null;
        boolean boolean81 = pcxImageParser61.canAcceptType(imageFormat80);
        org.apache.commons.imaging.ImageFormat imageFormat82 = null;
        boolean boolean83 = pcxImageParser61.canAcceptType(imageFormat82);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters84 = pcxImageParser61.getDefaultParameters();
        byte[] byteArray85 = pcxImageParser0.getIccProfileBytes(byteSource60, pcxImagingParameters84);
        org.apache.commons.imaging.bytesource.ByteSource byteSource86 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser87 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder88 = pcxImageParser87.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource89 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance90 = pcxImageParser87.getFormatCompliance(byteSource89);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters91 = pcxImageParser87.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat92 = null;
        boolean boolean93 = pcxImageParser87.canAcceptType(imageFormat92);
        java.lang.String str94 = pcxImageParser87.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters95 = pcxImageParser87.getDefaultParameters();
        java.lang.String str96 = pcxImageParser87.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters97 = pcxImageParser87.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo98 = pcxImageParser0.getImageInfo(byteSource86, pcxImagingParameters97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNull(formatCompliance37);
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertNotNull(byteOrder45);
        org.junit.Assert.assertNull(formatCompliance47);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertNull(byteArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Pcx-Custom" + "'", str55, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters56);
        org.junit.Assert.assertNull(byteArray57);
        org.junit.Assert.assertNull(formatCompliance59);
        org.junit.Assert.assertNull(byteArray64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Pcx-Custom" + "'", str65, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Pcx-Custom" + "'", str66, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance68);
        org.junit.Assert.assertNotNull(byteOrder71);
        org.junit.Assert.assertNull(formatCompliance73);
        org.junit.Assert.assertNotNull(pcxImagingParameters74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "pcx" + "'", str77, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters78);
        org.junit.Assert.assertNull(byteArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters84);
        org.junit.Assert.assertNull(byteArray85);
        org.junit.Assert.assertNotNull(byteOrder88);
        org.junit.Assert.assertNull(formatCompliance90);
        org.junit.Assert.assertNotNull(pcxImagingParameters91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "pcx" + "'", str94, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters95);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "Pcx-Custom" + "'", str96, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters97);
    }

    @Test
    public void test0663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0663");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.ImageFormat imageFormat8 = null;
        boolean boolean9 = pcxImageParser0.canAcceptType(imageFormat8);
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata11 = pcxImageParser0.getMetadata(byteSource10);
        java.io.File file12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder14 = pcxImageParser13.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser13.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat18 = null;
        boolean boolean19 = pcxImageParser13.canAcceptType(imageFormat18);
        java.lang.String str20 = pcxImageParser13.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser22 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder23 = pcxImageParser22.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance25 = pcxImageParser22.getFormatCompliance(byteSource24);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser22.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = pcxImageParser22.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser22.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = null;
        byte[] byteArray33 = pcxImageParser30.getIccProfileBytes(byteSource31, pcxImagingParameters32);
        java.lang.String str34 = pcxImageParser30.getName();
        java.lang.String str35 = pcxImageParser30.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser37 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder38 = pcxImageParser37.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance40 = pcxImageParser37.getFormatCompliance(byteSource39);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = pcxImageParser37.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser30.getMetadata(byteSource36, pcxImagingParameters41);
        java.lang.String str43 = pcxImageParser30.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata45 = pcxImageParser30.getMetadata(byteSource44);
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser47 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters49 = null;
        byte[] byteArray50 = pcxImageParser47.getIccProfileBytes(byteSource48, pcxImagingParameters49);
        java.lang.String str51 = pcxImageParser47.getName();
        java.lang.String str52 = pcxImageParser47.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser54 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder55 = pcxImageParser54.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance57 = pcxImageParser54.getFormatCompliance(byteSource56);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters58 = pcxImageParser54.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata59 = pcxImageParser47.getMetadata(byteSource53, pcxImagingParameters58);
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser61 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters63 = null;
        byte[] byteArray64 = pcxImageParser61.getIccProfileBytes(byteSource62, pcxImagingParameters63);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters65 = pcxImageParser61.getDefaultParameters();
        byte[] byteArray66 = pcxImageParser47.getIccProfileBytes(byteSource60, pcxImagingParameters65);
        byte[] byteArray67 = pcxImageParser30.getIccProfileBytes(byteSource46, pcxImagingParameters65);
        byte[] byteArray68 = pcxImageParser22.getIccProfileBytes(byteSource29, pcxImagingParameters65);
        byte[] byteArray69 = pcxImageParser13.getIccProfileBytes(byteSource21, pcxImagingParameters65);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage70 = pcxImageParser0.getBufferedImage(file12, pcxImagingParameters65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(imageMetadata11);
        org.junit.Assert.assertNotNull(byteOrder14);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "pcx" + "'", str20, "pcx");
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertNull(formatCompliance25);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNotNull(pcxImagingParameters27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Pcx-Custom" + "'", str34, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Pcx-Custom" + "'", str35, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder38);
        org.junit.Assert.assertNull(formatCompliance40);
        org.junit.Assert.assertNotNull(pcxImagingParameters41);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Pcx-Custom" + "'", str43, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata45);
        org.junit.Assert.assertNull(byteArray50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Pcx-Custom" + "'", str51, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Pcx-Custom" + "'", str52, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder55);
        org.junit.Assert.assertNull(formatCompliance57);
        org.junit.Assert.assertNotNull(pcxImagingParameters58);
        org.junit.Assert.assertNull(imageMetadata59);
        org.junit.Assert.assertNull(byteArray64);
        org.junit.Assert.assertNotNull(pcxImagingParameters65);
        org.junit.Assert.assertNull(byteArray66);
        org.junit.Assert.assertNull(byteArray67);
        org.junit.Assert.assertNull(byteArray68);
        org.junit.Assert.assertNull(byteArray69);
    }

    @Test
    public void test0664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0664");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser0.getMetadata(byteSource21);
        java.io.File file23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList24 = pcxImageParser0.getAllBufferedImages(file23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertNull(imageMetadata22);
    }

    @Test
    public void test0665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0665");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = null;
        byte[] byteArray9 = pcxImageParser6.getIccProfileBytes(byteSource7, pcxImagingParameters8);
        java.lang.String str10 = pcxImageParser6.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource5, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        java.io.File file14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList15 = pcxImageParser0.getAllBufferedImages(file14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(byteArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "pcx" + "'", str10, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
    }

    @Test
    public void test0666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0666");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser0.canAcceptType(imageFormat14);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = pcxImageParser0.getDefaultParameters();
        java.io.File file17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters20 = null;
        byte[] byteArray21 = pcxImageParser18.getIccProfileBytes(byteSource19, pcxImagingParameters20);
        java.lang.String str22 = pcxImageParser18.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser18.getMetadata(byteSource23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance26 = pcxImageParser18.getFormatCompliance(byteSource25);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat28 = null;
        boolean boolean29 = pcxImageParser18.canAcceptType(imageFormat28);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser18.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser0.getMetadata(file17, pcxImagingParameters30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters16);
        org.junit.Assert.assertNull(byteArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Pcx-Custom" + "'", str22, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertNull(formatCompliance26);
        org.junit.Assert.assertNotNull(pcxImagingParameters27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
    }

    @Test
    public void test0667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0667");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        java.io.File file23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = null;
        byte[] byteArray27 = pcxImageParser24.getIccProfileBytes(byteSource25, pcxImagingParameters26);
        java.lang.String str28 = pcxImageParser24.getName();
        java.lang.String str29 = pcxImageParser24.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance31 = pcxImageParser24.getFormatCompliance(byteSource30);
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder34 = pcxImageParser33.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance36 = pcxImageParser33.getFormatCompliance(byteSource35);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = pcxImageParser33.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat38 = null;
        boolean boolean39 = pcxImageParser33.canAcceptType(imageFormat38);
        java.lang.String str40 = pcxImageParser33.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = pcxImageParser33.getDefaultParameters();
        byte[] byteArray42 = pcxImageParser24.getIccProfileBytes(byteSource32, pcxImagingParameters41);
        org.apache.commons.imaging.ImageFormat imageFormat43 = null;
        boolean boolean44 = pcxImageParser24.canAcceptType(imageFormat43);
        org.apache.commons.imaging.ImageFormat imageFormat45 = null;
        boolean boolean46 = pcxImageParser24.canAcceptType(imageFormat45);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser48 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder49 = pcxImageParser48.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance51 = pcxImageParser48.getFormatCompliance(byteSource50);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser48.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser54 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters56 = null;
        byte[] byteArray57 = pcxImageParser54.getIccProfileBytes(byteSource55, pcxImagingParameters56);
        java.lang.String str58 = pcxImageParser54.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters59 = pcxImageParser54.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata60 = pcxImageParser48.getMetadata(byteSource53, pcxImagingParameters59);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters61 = pcxImageParser48.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata62 = pcxImageParser24.getMetadata(byteSource47, pcxImagingParameters61);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray63 = pcxImageParser0.getIccProfileBytes(file23, pcxImagingParameters61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertNull(byteArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Pcx-Custom" + "'", str28, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance31);
        org.junit.Assert.assertNotNull(byteOrder34);
        org.junit.Assert.assertNull(formatCompliance36);
        org.junit.Assert.assertNotNull(pcxImagingParameters37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "pcx" + "'", str40, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters41);
        org.junit.Assert.assertNull(byteArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(byteOrder49);
        org.junit.Assert.assertNull(formatCompliance51);
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(byteArray57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "pcx" + "'", str58, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters59);
        org.junit.Assert.assertNull(imageMetadata60);
        org.junit.Assert.assertNotNull(pcxImagingParameters61);
        org.junit.Assert.assertNull(imageMetadata62);
    }

    @Test
    public void test0668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0668");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser3 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder4 = pcxImageParser3.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser3.getFormatCompliance(byteSource5);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = pcxImageParser3.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata11 = pcxImageParser9.getMetadata(byteSource10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder14 = pcxImageParser13.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser13.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata18 = pcxImageParser13.getMetadata(byteSource17);
        boolean boolean20 = pcxImageParser13.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser9.getMetadata(byteSource12, pcxImagingParameters21);
        byte[] byteArray23 = pcxImageParser3.getIccProfileBytes(byteSource8, pcxImagingParameters21);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser0.getMetadata(byteSource2, pcxImagingParameters21);
        java.lang.String str25 = pcxImageParser0.getName();
        java.io.File file26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser27 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder28 = pcxImageParser27.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser27.getFormatCompliance(byteSource29);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser27.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser27.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser0.getMetadata(file26, pcxImagingParameters32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNull(formatCompliance6);
        org.junit.Assert.assertNotNull(pcxImagingParameters7);
        org.junit.Assert.assertNull(imageMetadata11);
        org.junit.Assert.assertNotNull(byteOrder14);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNull(imageMetadata18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNull(byteArray23);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
    }

    @Test
    public void test0669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0669");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        java.lang.String str13 = pcxImageParser8.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser8.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser8.canAcceptExtension("");
        boolean boolean19 = pcxImageParser8.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = null;
        byte[] byteArray24 = pcxImageParser21.getIccProfileBytes(byteSource22, pcxImagingParameters23);
        java.lang.String str25 = pcxImageParser21.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser21.getMetadata(byteSource26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance29 = pcxImageParser21.getFormatCompliance(byteSource28);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = null;
        byte[] byteArray35 = pcxImageParser32.getIccProfileBytes(byteSource33, pcxImagingParameters34);
        java.lang.String str36 = pcxImageParser32.getName();
        java.lang.String str37 = pcxImageParser32.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder40 = pcxImageParser39.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance42 = pcxImageParser39.getFormatCompliance(byteSource41);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser39.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser32.getMetadata(byteSource38, pcxImagingParameters43);
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser46 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser46.getMetadata(byteSource47);
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser50 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder51 = pcxImageParser50.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance53 = pcxImageParser50.getFormatCompliance(byteSource52);
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata55 = pcxImageParser50.getMetadata(byteSource54);
        boolean boolean57 = pcxImageParser50.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters58 = pcxImageParser50.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata59 = pcxImageParser46.getMetadata(byteSource49, pcxImagingParameters58);
        byte[] byteArray60 = pcxImageParser32.getIccProfileBytes(byteSource45, pcxImagingParameters58);
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance62 = pcxImageParser32.getFormatCompliance(byteSource61);
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser64 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters66 = null;
        byte[] byteArray67 = pcxImageParser64.getIccProfileBytes(byteSource65, pcxImagingParameters66);
        java.nio.ByteOrder byteOrder68 = pcxImageParser64.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser70 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder71 = pcxImageParser70.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource72 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance73 = pcxImageParser70.getFormatCompliance(byteSource72);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters74 = pcxImageParser70.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat75 = null;
        boolean boolean76 = pcxImageParser70.canAcceptType(imageFormat75);
        java.lang.String str77 = pcxImageParser70.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters78 = pcxImageParser70.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata79 = pcxImageParser64.getMetadata(byteSource69, pcxImagingParameters78);
        byte[] byteArray80 = pcxImageParser32.getIccProfileBytes(byteSource63, pcxImagingParameters78);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata81 = pcxImageParser21.getMetadata(byteSource31, pcxImagingParameters78);
        byte[] byteArray82 = pcxImageParser8.getIccProfileBytes(byteSource20, pcxImagingParameters78);
        byte[] byteArray83 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters78);
        java.io.File file84 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser85 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource86 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata87 = pcxImageParser85.getMetadata(byteSource86);
        org.apache.commons.imaging.bytesource.ByteSource byteSource88 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata89 = pcxImageParser85.getMetadata(byteSource88);
        java.lang.String str90 = pcxImageParser85.getDefaultExtension();
        java.lang.String str91 = pcxImageParser85.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters92 = pcxImageParser85.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension93 = pcxImageParser0.getImageSize(file84, pcxImagingParameters92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(formatCompliance29);
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(byteArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Pcx-Custom" + "'", str36, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Pcx-Custom" + "'", str37, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNull(formatCompliance42);
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNotNull(byteOrder51);
        org.junit.Assert.assertNull(formatCompliance53);
        org.junit.Assert.assertNull(imageMetadata55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters58);
        org.junit.Assert.assertNull(imageMetadata59);
        org.junit.Assert.assertNull(byteArray60);
        org.junit.Assert.assertNull(formatCompliance62);
        org.junit.Assert.assertNull(byteArray67);
        org.junit.Assert.assertNotNull(byteOrder68);
        org.junit.Assert.assertNotNull(byteOrder71);
        org.junit.Assert.assertNull(formatCompliance73);
        org.junit.Assert.assertNotNull(pcxImagingParameters74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "pcx" + "'", str77, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters78);
        org.junit.Assert.assertNull(imageMetadata79);
        org.junit.Assert.assertNull(byteArray80);
        org.junit.Assert.assertNull(imageMetadata81);
        org.junit.Assert.assertNull(byteArray82);
        org.junit.Assert.assertNull(byteArray83);
        org.junit.Assert.assertNull(imageMetadata87);
        org.junit.Assert.assertNull(imageMetadata89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "pcx" + "'", str90, "pcx");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "pcx" + "'", str91, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters92);
    }

    @Test
    public void test0670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0670");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.ImageFormat imageFormat3 = null;
        boolean boolean4 = pcxImageParser0.canAcceptType(imageFormat3);
        java.io.File file5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder7 = pcxImageParser6.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance9 = pcxImageParser6.getFormatCompliance(byteSource8);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = pcxImageParser6.getDefaultParameters();
        java.lang.String str11 = pcxImageParser6.getDefaultExtension();
        java.nio.ByteOrder byteOrder12 = pcxImageParser6.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata14 = pcxImageParser6.getMetadata(byteSource13);
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = null;
        byte[] byteArray19 = pcxImageParser16.getIccProfileBytes(byteSource17, pcxImagingParameters18);
        java.lang.String str20 = pcxImageParser16.getName();
        java.lang.String str21 = pcxImageParser16.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser23 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder24 = pcxImageParser23.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance26 = pcxImageParser23.getFormatCompliance(byteSource25);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = pcxImageParser23.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata28 = pcxImageParser16.getMetadata(byteSource22, pcxImagingParameters27);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser30.getMetadata(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder35 = pcxImageParser34.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance37 = pcxImageParser34.getFormatCompliance(byteSource36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata39 = pcxImageParser34.getMetadata(byteSource38);
        boolean boolean41 = pcxImageParser34.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser34.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata43 = pcxImageParser30.getMetadata(byteSource33, pcxImagingParameters42);
        byte[] byteArray44 = pcxImageParser16.getIccProfileBytes(byteSource29, pcxImagingParameters42);
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance46 = pcxImageParser16.getFormatCompliance(byteSource45);
        java.nio.ByteOrder byteOrder47 = pcxImageParser16.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser49 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters51 = null;
        byte[] byteArray52 = pcxImageParser49.getIccProfileBytes(byteSource50, pcxImagingParameters51);
        java.lang.String str53 = pcxImageParser49.getName();
        java.lang.String str54 = pcxImageParser49.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser56 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder57 = pcxImageParser56.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance59 = pcxImageParser56.getFormatCompliance(byteSource58);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters60 = pcxImageParser56.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata61 = pcxImageParser49.getMetadata(byteSource55, pcxImagingParameters60);
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser63 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource64 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata65 = pcxImageParser63.getMetadata(byteSource64);
        org.apache.commons.imaging.bytesource.ByteSource byteSource66 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser67 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder68 = pcxImageParser67.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance70 = pcxImageParser67.getFormatCompliance(byteSource69);
        org.apache.commons.imaging.bytesource.ByteSource byteSource71 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata72 = pcxImageParser67.getMetadata(byteSource71);
        boolean boolean74 = pcxImageParser67.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters75 = pcxImageParser67.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata76 = pcxImageParser63.getMetadata(byteSource66, pcxImagingParameters75);
        byte[] byteArray77 = pcxImageParser49.getIccProfileBytes(byteSource62, pcxImagingParameters75);
        byte[] byteArray78 = pcxImageParser16.getIccProfileBytes(byteSource48, pcxImagingParameters75);
        byte[] byteArray79 = pcxImageParser6.getIccProfileBytes(byteSource15, pcxImagingParameters75);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray80 = pcxImageParser0.getIccProfileBytes(file5, pcxImagingParameters75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNull(formatCompliance9);
        org.junit.Assert.assertNotNull(pcxImagingParameters10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "pcx" + "'", str11, "pcx");
        org.junit.Assert.assertNotNull(byteOrder12);
        org.junit.Assert.assertNull(imageMetadata14);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Pcx-Custom" + "'", str20, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder24);
        org.junit.Assert.assertNull(formatCompliance26);
        org.junit.Assert.assertNotNull(pcxImagingParameters27);
        org.junit.Assert.assertNull(imageMetadata28);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNull(formatCompliance37);
        org.junit.Assert.assertNull(imageMetadata39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertNull(imageMetadata43);
        org.junit.Assert.assertNull(byteArray44);
        org.junit.Assert.assertNull(formatCompliance46);
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNull(byteArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Pcx-Custom" + "'", str53, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Pcx-Custom" + "'", str54, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder57);
        org.junit.Assert.assertNull(formatCompliance59);
        org.junit.Assert.assertNotNull(pcxImagingParameters60);
        org.junit.Assert.assertNull(imageMetadata61);
        org.junit.Assert.assertNull(imageMetadata65);
        org.junit.Assert.assertNotNull(byteOrder68);
        org.junit.Assert.assertNull(formatCompliance70);
        org.junit.Assert.assertNull(imageMetadata72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters75);
        org.junit.Assert.assertNull(imageMetadata76);
        org.junit.Assert.assertNull(byteArray77);
        org.junit.Assert.assertNull(byteArray78);
        org.junit.Assert.assertNull(byteArray79);
    }

    @Test
    public void test0671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0671");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        java.nio.ByteOrder byteOrder2 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat3 = null;
        boolean boolean4 = pcxImageParser0.canAcceptType(imageFormat3);
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.io.File file7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = null;
        byte[] byteArray11 = pcxImageParser8.getIccProfileBytes(byteSource9, pcxImagingParameters10);
        java.lang.String str12 = pcxImageParser8.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata14 = pcxImageParser8.getMetadata(byteSource13);
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser8.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = null;
        byte[] byteArray27 = pcxImageParser24.getIccProfileBytes(byteSource25, pcxImagingParameters26);
        java.lang.String str28 = pcxImageParser24.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata30 = pcxImageParser18.getMetadata(byteSource23, pcxImagingParameters29);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser8.getMetadata(byteSource17, pcxImagingParameters31);
        java.lang.String str33 = pcxImageParser8.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser8.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo35 = pcxImageParser0.getImageInfo(file7, pcxImagingParameters34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(byteArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Pcx-Custom" + "'", str12, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata14);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(byteArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "pcx" + "'", str28, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters29);
        org.junit.Assert.assertNull(imageMetadata30);
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Pcx-Custom" + "'", str33, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
    }

    @Test
    public void test0672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0672");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance5 = pcxImageParser0.getFormatCompliance(byteSource4);
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat12 = null;
        boolean boolean13 = pcxImageParser7.canAcceptType(imageFormat12);
        java.lang.String str14 = pcxImageParser7.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder17 = pcxImageParser16.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance19 = pcxImageParser16.getFormatCompliance(byteSource18);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters20 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = null;
        byte[] byteArray27 = pcxImageParser24.getIccProfileBytes(byteSource25, pcxImagingParameters26);
        java.lang.String str28 = pcxImageParser24.getName();
        java.lang.String str29 = pcxImageParser24.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder32 = pcxImageParser31.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance34 = pcxImageParser31.getFormatCompliance(byteSource33);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser31.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser24.getMetadata(byteSource30, pcxImagingParameters35);
        java.lang.String str37 = pcxImageParser24.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata39 = pcxImageParser24.getMetadata(byteSource38);
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser41 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = null;
        byte[] byteArray44 = pcxImageParser41.getIccProfileBytes(byteSource42, pcxImagingParameters43);
        java.lang.String str45 = pcxImageParser41.getName();
        java.lang.String str46 = pcxImageParser41.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser48 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder49 = pcxImageParser48.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance51 = pcxImageParser48.getFormatCompliance(byteSource50);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser48.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser41.getMetadata(byteSource47, pcxImagingParameters52);
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser55 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters57 = null;
        byte[] byteArray58 = pcxImageParser55.getIccProfileBytes(byteSource56, pcxImagingParameters57);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters59 = pcxImageParser55.getDefaultParameters();
        byte[] byteArray60 = pcxImageParser41.getIccProfileBytes(byteSource54, pcxImagingParameters59);
        byte[] byteArray61 = pcxImageParser24.getIccProfileBytes(byteSource40, pcxImagingParameters59);
        byte[] byteArray62 = pcxImageParser16.getIccProfileBytes(byteSource23, pcxImagingParameters59);
        byte[] byteArray63 = pcxImageParser7.getIccProfileBytes(byteSource15, pcxImagingParameters59);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage64 = pcxImageParser0.getBufferedImage(byteSource6, pcxImagingParameters59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(formatCompliance5);
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "pcx" + "'", str14, "pcx");
        org.junit.Assert.assertNotNull(byteOrder17);
        org.junit.Assert.assertNull(formatCompliance19);
        org.junit.Assert.assertNotNull(pcxImagingParameters20);
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(byteArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Pcx-Custom" + "'", str28, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertNull(formatCompliance34);
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Pcx-Custom" + "'", str37, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata39);
        org.junit.Assert.assertNull(byteArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Pcx-Custom" + "'", str45, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Pcx-Custom" + "'", str46, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder49);
        org.junit.Assert.assertNull(formatCompliance51);
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertNull(byteArray58);
        org.junit.Assert.assertNotNull(pcxImagingParameters59);
        org.junit.Assert.assertNull(byteArray60);
        org.junit.Assert.assertNull(byteArray61);
        org.junit.Assert.assertNull(byteArray62);
        org.junit.Assert.assertNull(byteArray63);
    }

    @Test
    public void test0673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0673");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters6 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = null;
        byte[] byteArray11 = pcxImageParser8.getIccProfileBytes(byteSource9, pcxImagingParameters10);
        java.lang.String str12 = pcxImageParser8.getName();
        java.lang.String str13 = pcxImageParser8.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder16 = pcxImageParser15.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser15.getFormatCompliance(byteSource17);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser15.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata20 = pcxImageParser8.getMetadata(byteSource14, pcxImagingParameters19);
        java.lang.String str21 = pcxImageParser8.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser8.getMetadata(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = null;
        byte[] byteArray28 = pcxImageParser25.getIccProfileBytes(byteSource26, pcxImagingParameters27);
        java.lang.String str29 = pcxImageParser25.getName();
        java.lang.String str30 = pcxImageParser25.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser25.getMetadata(byteSource31, pcxImagingParameters36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = null;
        byte[] byteArray42 = pcxImageParser39.getIccProfileBytes(byteSource40, pcxImagingParameters41);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser39.getDefaultParameters();
        byte[] byteArray44 = pcxImageParser25.getIccProfileBytes(byteSource38, pcxImagingParameters43);
        byte[] byteArray45 = pcxImageParser8.getIccProfileBytes(byteSource24, pcxImagingParameters43);
        byte[] byteArray46 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters43);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser0.getMetadata(byteSource47);
        java.io.File file49 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str50 = pcxImageParser0.dumpImageFile(file49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNotNull(pcxImagingParameters6);
        org.junit.Assert.assertNull(byteArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Pcx-Custom" + "'", str12, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNull(formatCompliance18);
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
        org.junit.Assert.assertNull(imageMetadata20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Pcx-Custom" + "'", str30, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertNull(byteArray42);
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertNull(byteArray44);
        org.junit.Assert.assertNull(byteArray45);
        org.junit.Assert.assertNull(byteArray46);
        org.junit.Assert.assertNull(imageMetadata48);
    }

    @Test
    public void test0674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0674");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        java.io.File file7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser0.getMetadata(file7, pcxImagingParameters8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
    }

    @Test
    public void test0675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0675");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource14);
        java.io.File file16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList17 = pcxImageParser0.getAllBufferedImages(file16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata15);
    }

    @Test
    public void test0676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0676");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.nio.ByteOrder byteOrder4 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder7 = pcxImageParser6.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance9 = pcxImageParser6.getFormatCompliance(byteSource8);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat11 = null;
        boolean boolean12 = pcxImageParser6.canAcceptType(imageFormat11);
        java.lang.String str13 = pcxImageParser6.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource5, pcxImagingParameters14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser17.getMetadata(byteSource18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder22 = pcxImageParser21.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance24 = pcxImageParser21.getFormatCompliance(byteSource23);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser27 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser27.getMetadata(byteSource28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder32 = pcxImageParser31.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance34 = pcxImageParser31.getFormatCompliance(byteSource33);
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser31.getMetadata(byteSource35);
        boolean boolean38 = pcxImageParser31.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = pcxImageParser31.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser27.getMetadata(byteSource30, pcxImagingParameters39);
        byte[] byteArray41 = pcxImageParser21.getIccProfileBytes(byteSource26, pcxImagingParameters39);
        java.lang.String str42 = pcxImageParser21.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser17.getMetadata(byteSource20, pcxImagingParameters43);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser17.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser47 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters49 = null;
        byte[] byteArray50 = pcxImageParser47.getIccProfileBytes(byteSource48, pcxImagingParameters49);
        java.lang.String str51 = pcxImageParser47.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser47.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser17.getMetadata(byteSource46, pcxImagingParameters52);
        byte[] byteArray54 = pcxImageParser0.getIccProfileBytes(byteSource16, pcxImagingParameters52);
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str56 = pcxImageParser0.dumpImageFile(byteSource55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNull(formatCompliance9);
        org.junit.Assert.assertNotNull(pcxImagingParameters10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNull(formatCompliance24);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertNull(formatCompliance34);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters39);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertNull(byteArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Pcx-Custom" + "'", str42, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertNull(byteArray50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "pcx" + "'", str51, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertNull(byteArray54);
    }

    @Test
    public void test0677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0677");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters6 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser0.getMetadata(byteSource7);
        org.apache.commons.imaging.ImageFormat imageFormat9 = null;
        boolean boolean10 = pcxImageParser0.canAcceptType(imageFormat9);
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo13 = pcxImageParser0.getImageInfo(byteSource11, pcxImagingParameters12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNotNull(pcxImagingParameters6);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0678");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.ImageFormat imageFormat1 = null;
        boolean boolean2 = pcxImageParser0.canAcceptType(imageFormat1);
        java.io.File file3 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str4 = pcxImageParser0.dumpImageFile(file3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0679");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        java.io.File file3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension9 = pcxImageParser0.getImageSize(file3, pcxImagingParameters8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
    }

    @Test
    public void test0680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0680");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters6 = pcxImageParser0.getDefaultParameters();
        java.io.File file7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(file7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNotNull(pcxImagingParameters6);
    }

    @Test
    public void test0681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0681");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser24.canAcceptType(imageFormat29);
        java.lang.String str31 = pcxImageParser24.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser24.getDefaultParameters();
        byte[] byteArray33 = pcxImageParser0.getIccProfileBytes(byteSource23, pcxImagingParameters32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder36 = pcxImageParser35.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser38 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder39 = pcxImageParser38.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance41 = pcxImageParser38.getFormatCompliance(byteSource40);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser38.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser44.getMetadata(byteSource45);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser48 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder49 = pcxImageParser48.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance51 = pcxImageParser48.getFormatCompliance(byteSource50);
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser48.getMetadata(byteSource52);
        boolean boolean55 = pcxImageParser48.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters56 = pcxImageParser48.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata57 = pcxImageParser44.getMetadata(byteSource47, pcxImagingParameters56);
        byte[] byteArray58 = pcxImageParser38.getIccProfileBytes(byteSource43, pcxImagingParameters56);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata59 = pcxImageParser35.getMetadata(byteSource37, pcxImagingParameters56);
        byte[] byteArray60 = pcxImageParser0.getIccProfileBytes(byteSource34, pcxImagingParameters56);
        java.io.File file61 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser62 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters64 = null;
        byte[] byteArray65 = pcxImageParser62.getIccProfileBytes(byteSource63, pcxImagingParameters64);
        java.lang.String str66 = pcxImageParser62.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource67 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata68 = pcxImageParser62.getMetadata(byteSource67);
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance70 = pcxImageParser62.getFormatCompliance(byteSource69);
        org.apache.commons.imaging.bytesource.ByteSource byteSource71 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser72 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder73 = pcxImageParser72.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource74 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance75 = pcxImageParser72.getFormatCompliance(byteSource74);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters76 = pcxImageParser72.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource77 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser78 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource79 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters80 = null;
        byte[] byteArray81 = pcxImageParser78.getIccProfileBytes(byteSource79, pcxImagingParameters80);
        java.lang.String str82 = pcxImageParser78.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters83 = pcxImageParser78.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata84 = pcxImageParser72.getMetadata(byteSource77, pcxImagingParameters83);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters85 = pcxImageParser72.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata86 = pcxImageParser62.getMetadata(byteSource71, pcxImagingParameters85);
        java.lang.String str87 = pcxImageParser62.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters88 = pcxImageParser62.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage89 = pcxImageParser0.getBufferedImage(file61, pcxImagingParameters88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "pcx" + "'", str31, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteOrder39);
        org.junit.Assert.assertNull(formatCompliance41);
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertNull(imageMetadata46);
        org.junit.Assert.assertNotNull(byteOrder49);
        org.junit.Assert.assertNull(formatCompliance51);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters56);
        org.junit.Assert.assertNull(imageMetadata57);
        org.junit.Assert.assertNull(byteArray58);
        org.junit.Assert.assertNull(imageMetadata59);
        org.junit.Assert.assertNull(byteArray60);
        org.junit.Assert.assertNull(byteArray65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Pcx-Custom" + "'", str66, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata68);
        org.junit.Assert.assertNull(formatCompliance70);
        org.junit.Assert.assertNotNull(byteOrder73);
        org.junit.Assert.assertNull(formatCompliance75);
        org.junit.Assert.assertNotNull(pcxImagingParameters76);
        org.junit.Assert.assertNull(byteArray81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "pcx" + "'", str82, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters83);
        org.junit.Assert.assertNull(imageMetadata84);
        org.junit.Assert.assertNotNull(pcxImagingParameters85);
        org.junit.Assert.assertNull(imageMetadata86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "Pcx-Custom" + "'", str87, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters88);
    }

    @Test
    public void test0682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0682");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        boolean boolean30 = pcxImageParser0.canAcceptExtension("pcx");
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        java.lang.String str32 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList34 = pcxImageParser0.getAllBufferedImages(byteSource33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Pcx-Custom" + "'", str32, "Pcx-Custom");
    }

    @Test
    public void test0683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0683");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = null;
        byte[] byteArray17 = pcxImageParser14.getIccProfileBytes(byteSource15, pcxImagingParameters16);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser14.getDefaultParameters();
        byte[] byteArray19 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters18);
        boolean boolean21 = pcxImageParser0.canAcceptExtension("hi!");
        java.io.File file22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser0.getMetadata(file22, pcxImagingParameters23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(byteArray17);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0684");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getName();
        java.lang.Class<?> wildcardClass6 = pcxImageParser0.getClass();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0685");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        java.io.File file6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat12 = null;
        boolean boolean13 = pcxImageParser7.canAcceptType(imageFormat12);
        java.lang.String str14 = pcxImageParser7.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder17 = pcxImageParser16.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance19 = pcxImageParser16.getFormatCompliance(byteSource18);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters20 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = null;
        byte[] byteArray27 = pcxImageParser24.getIccProfileBytes(byteSource25, pcxImagingParameters26);
        java.lang.String str28 = pcxImageParser24.getName();
        java.lang.String str29 = pcxImageParser24.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder32 = pcxImageParser31.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance34 = pcxImageParser31.getFormatCompliance(byteSource33);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser31.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser24.getMetadata(byteSource30, pcxImagingParameters35);
        java.lang.String str37 = pcxImageParser24.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata39 = pcxImageParser24.getMetadata(byteSource38);
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser41 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = null;
        byte[] byteArray44 = pcxImageParser41.getIccProfileBytes(byteSource42, pcxImagingParameters43);
        java.lang.String str45 = pcxImageParser41.getName();
        java.lang.String str46 = pcxImageParser41.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser48 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder49 = pcxImageParser48.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance51 = pcxImageParser48.getFormatCompliance(byteSource50);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser48.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser41.getMetadata(byteSource47, pcxImagingParameters52);
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser55 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters57 = null;
        byte[] byteArray58 = pcxImageParser55.getIccProfileBytes(byteSource56, pcxImagingParameters57);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters59 = pcxImageParser55.getDefaultParameters();
        byte[] byteArray60 = pcxImageParser41.getIccProfileBytes(byteSource54, pcxImagingParameters59);
        byte[] byteArray61 = pcxImageParser24.getIccProfileBytes(byteSource40, pcxImagingParameters59);
        byte[] byteArray62 = pcxImageParser16.getIccProfileBytes(byteSource23, pcxImagingParameters59);
        byte[] byteArray63 = pcxImageParser7.getIccProfileBytes(byteSource15, pcxImagingParameters59);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo64 = pcxImageParser0.getImageInfo(file6, pcxImagingParameters59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "pcx" + "'", str14, "pcx");
        org.junit.Assert.assertNotNull(byteOrder17);
        org.junit.Assert.assertNull(formatCompliance19);
        org.junit.Assert.assertNotNull(pcxImagingParameters20);
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(byteArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Pcx-Custom" + "'", str28, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertNull(formatCompliance34);
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Pcx-Custom" + "'", str37, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata39);
        org.junit.Assert.assertNull(byteArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Pcx-Custom" + "'", str45, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Pcx-Custom" + "'", str46, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder49);
        org.junit.Assert.assertNull(formatCompliance51);
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertNull(byteArray58);
        org.junit.Assert.assertNotNull(pcxImagingParameters59);
        org.junit.Assert.assertNull(byteArray60);
        org.junit.Assert.assertNull(byteArray61);
        org.junit.Assert.assertNull(byteArray62);
        org.junit.Assert.assertNull(byteArray63);
    }

    @Test
    public void test0686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0686");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata11 = pcxImageParser9.getMetadata(byteSource10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser13.getMetadata(byteSource14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder18 = pcxImageParser17.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance20 = pcxImageParser17.getFormatCompliance(byteSource19);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser17.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser23 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser23.getMetadata(byteSource24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser27 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder28 = pcxImageParser27.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser27.getFormatCompliance(byteSource29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser27.getMetadata(byteSource31);
        boolean boolean34 = pcxImageParser27.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser27.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser23.getMetadata(byteSource26, pcxImagingParameters35);
        byte[] byteArray37 = pcxImageParser17.getIccProfileBytes(byteSource22, pcxImagingParameters35);
        java.lang.String str38 = pcxImageParser17.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = pcxImageParser17.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser13.getMetadata(byteSource16, pcxImagingParameters39);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser9.getMetadata(byteSource12, pcxImagingParameters39);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo42 = pcxImageParser0.getImageInfo(byteSource8, pcxImagingParameters39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(imageMetadata11);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNull(formatCompliance20);
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertNotNull(byteOrder28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertNull(byteArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Pcx-Custom" + "'", str38, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters39);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertNull(imageMetadata41);
    }

    @Test
    public void test0687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0687");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata4 = pcxImageParser0.getMetadata(byteSource3);
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        java.io.File file6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = null;
        byte[] byteArray10 = pcxImageParser7.getIccProfileBytes(byteSource8, pcxImagingParameters9);
        java.lang.String str11 = pcxImageParser7.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser7.getMetadata(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance15 = pcxImageParser7.getFormatCompliance(byteSource14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder18 = pcxImageParser17.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance20 = pcxImageParser17.getFormatCompliance(byteSource19);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser17.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser23 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = null;
        byte[] byteArray26 = pcxImageParser23.getIccProfileBytes(byteSource24, pcxImagingParameters25);
        java.lang.String str27 = pcxImageParser23.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser23.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser17.getMetadata(byteSource22, pcxImagingParameters28);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser17.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser7.getMetadata(byteSource16, pcxImagingParameters30);
        java.lang.String str32 = pcxImageParser7.getName();
        java.lang.String str33 = pcxImageParser7.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = null;
        byte[] byteArray38 = pcxImageParser35.getIccProfileBytes(byteSource36, pcxImagingParameters37);
        java.lang.String str39 = pcxImageParser35.getName();
        java.lang.String str40 = pcxImageParser35.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser42 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder43 = pcxImageParser42.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance45 = pcxImageParser42.getFormatCompliance(byteSource44);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser42.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser35.getMetadata(byteSource41, pcxImagingParameters46);
        java.lang.String str48 = pcxImageParser35.getName();
        org.apache.commons.imaging.ImageFormat imageFormat49 = null;
        boolean boolean50 = pcxImageParser35.canAcceptType(imageFormat49);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters51 = pcxImageParser35.getDefaultParameters();
        byte[] byteArray52 = pcxImageParser7.getIccProfileBytes(byteSource34, pcxImagingParameters51);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser0.getMetadata(file6, pcxImagingParameters51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNull(byteArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Pcx-Custom" + "'", str11, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertNull(formatCompliance15);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNull(formatCompliance20);
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(byteArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "pcx" + "'", str27, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Pcx-Custom" + "'", str32, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Pcx-Custom" + "'", str33, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Pcx-Custom" + "'", str39, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Pcx-Custom" + "'", str40, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNull(formatCompliance45);
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
        org.junit.Assert.assertNull(imageMetadata47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Pcx-Custom" + "'", str48, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters51);
        org.junit.Assert.assertNull(byteArray52);
    }

    @Test
    public void test0688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0688");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = null;
        byte[] byteArray10 = pcxImageParser7.getIccProfileBytes(byteSource8, pcxImagingParameters9);
        java.lang.String str11 = pcxImageParser7.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser7.getMetadata(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance15 = pcxImageParser7.getFormatCompliance(byteSource14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder18 = pcxImageParser17.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance20 = pcxImageParser17.getFormatCompliance(byteSource19);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser17.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser23 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = null;
        byte[] byteArray26 = pcxImageParser23.getIccProfileBytes(byteSource24, pcxImagingParameters25);
        java.lang.String str27 = pcxImageParser23.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser23.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser17.getMetadata(byteSource22, pcxImagingParameters28);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser17.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser7.getMetadata(byteSource16, pcxImagingParameters30);
        java.lang.String str32 = pcxImageParser7.getName();
        java.lang.String str33 = pcxImageParser7.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = null;
        byte[] byteArray38 = pcxImageParser35.getIccProfileBytes(byteSource36, pcxImagingParameters37);
        java.lang.String str39 = pcxImageParser35.getName();
        java.lang.String str40 = pcxImageParser35.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser42 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder43 = pcxImageParser42.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance45 = pcxImageParser42.getFormatCompliance(byteSource44);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser42.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser35.getMetadata(byteSource41, pcxImagingParameters46);
        java.lang.String str48 = pcxImageParser35.getName();
        org.apache.commons.imaging.ImageFormat imageFormat49 = null;
        boolean boolean50 = pcxImageParser35.canAcceptType(imageFormat49);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters51 = pcxImageParser35.getDefaultParameters();
        byte[] byteArray52 = pcxImageParser7.getIccProfileBytes(byteSource34, pcxImagingParameters51);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters51);
        java.lang.Class<?> wildcardClass54 = pcxImageParser0.getClass();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Pcx-Custom" + "'", str11, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertNull(formatCompliance15);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNull(formatCompliance20);
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(byteArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "pcx" + "'", str27, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Pcx-Custom" + "'", str32, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Pcx-Custom" + "'", str33, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Pcx-Custom" + "'", str39, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Pcx-Custom" + "'", str40, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNull(formatCompliance45);
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
        org.junit.Assert.assertNull(imageMetadata47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Pcx-Custom" + "'", str48, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters51);
        org.junit.Assert.assertNull(byteArray52);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0689");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        boolean boolean6 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser8.getDefaultParameters();
        byte[] byteArray14 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters13);
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = pcxImageParser0.dumpImageFile(byteSource15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertNull(byteArray14);
    }

    @Test
    public void test0690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0690");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = null;
        byte[] byteArray33 = pcxImageParser30.getIccProfileBytes(byteSource31, pcxImagingParameters32);
        java.lang.String str34 = pcxImageParser30.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser30.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser0.getMetadata(byteSource29, pcxImagingParameters35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser0.getMetadata(byteSource37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser0.getMetadata(byteSource39);
        org.apache.commons.imaging.ImageFormat imageFormat41 = null;
        boolean boolean42 = pcxImageParser0.canAcceptType(imageFormat41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str44 = pcxImageParser0.dumpImageFile(byteSource43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "pcx" + "'", str34, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test0691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0691");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser0.getMetadata(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser0.getMetadata(byteSource24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser0.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = null;
        byte[] byteArray32 = pcxImageParser29.getIccProfileBytes(byteSource30, pcxImagingParameters31);
        java.lang.String str33 = pcxImageParser29.getName();
        java.lang.String str34 = pcxImageParser29.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser36 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder37 = pcxImageParser36.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance39 = pcxImageParser36.getFormatCompliance(byteSource38);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser36.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser29.getMetadata(byteSource35, pcxImagingParameters40);
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser43 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata45 = pcxImageParser43.getMetadata(byteSource44);
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser47 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder48 = pcxImageParser47.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance50 = pcxImageParser47.getFormatCompliance(byteSource49);
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata52 = pcxImageParser47.getMetadata(byteSource51);
        boolean boolean54 = pcxImageParser47.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters55 = pcxImageParser47.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata56 = pcxImageParser43.getMetadata(byteSource46, pcxImagingParameters55);
        byte[] byteArray57 = pcxImageParser29.getIccProfileBytes(byteSource42, pcxImagingParameters55);
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance59 = pcxImageParser29.getFormatCompliance(byteSource58);
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser61 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters63 = null;
        byte[] byteArray64 = pcxImageParser61.getIccProfileBytes(byteSource62, pcxImagingParameters63);
        java.nio.ByteOrder byteOrder65 = pcxImageParser61.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource66 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser67 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder68 = pcxImageParser67.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance70 = pcxImageParser67.getFormatCompliance(byteSource69);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters71 = pcxImageParser67.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat72 = null;
        boolean boolean73 = pcxImageParser67.canAcceptType(imageFormat72);
        java.lang.String str74 = pcxImageParser67.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters75 = pcxImageParser67.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata76 = pcxImageParser61.getMetadata(byteSource66, pcxImagingParameters75);
        byte[] byteArray77 = pcxImageParser29.getIccProfileBytes(byteSource60, pcxImagingParameters75);
        byte[] byteArray78 = pcxImageParser0.getIccProfileBytes(byteSource28, pcxImagingParameters75);
        org.apache.commons.imaging.bytesource.ByteSource byteSource79 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList80 = pcxImageParser0.getAllBufferedImages(byteSource79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNull(byteArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Pcx-Custom" + "'", str33, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Pcx-Custom" + "'", str34, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNull(formatCompliance39);
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(imageMetadata41);
        org.junit.Assert.assertNull(imageMetadata45);
        org.junit.Assert.assertNotNull(byteOrder48);
        org.junit.Assert.assertNull(formatCompliance50);
        org.junit.Assert.assertNull(imageMetadata52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters55);
        org.junit.Assert.assertNull(imageMetadata56);
        org.junit.Assert.assertNull(byteArray57);
        org.junit.Assert.assertNull(formatCompliance59);
        org.junit.Assert.assertNull(byteArray64);
        org.junit.Assert.assertNotNull(byteOrder65);
        org.junit.Assert.assertNotNull(byteOrder68);
        org.junit.Assert.assertNull(formatCompliance70);
        org.junit.Assert.assertNotNull(pcxImagingParameters71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "pcx" + "'", str74, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters75);
        org.junit.Assert.assertNull(imageMetadata76);
        org.junit.Assert.assertNull(byteArray77);
        org.junit.Assert.assertNull(byteArray78);
    }

    @Test
    public void test0692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0692");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        java.nio.ByteOrder byteOrder2 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat3 = null;
        boolean boolean4 = pcxImageParser0.canAcceptType(imageFormat3);
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.io.File file7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str9 = pcxImageParser8.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        java.lang.String str12 = pcxImageParser8.getName();
        java.lang.String str13 = pcxImageParser8.getName();
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser8.canAcceptType(imageFormat14);
        boolean boolean17 = pcxImageParser8.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = null;
        byte[] byteArray22 = pcxImageParser19.getIccProfileBytes(byteSource20, pcxImagingParameters21);
        java.lang.String str23 = pcxImageParser19.getName();
        java.lang.String str24 = pcxImageParser19.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder27 = pcxImageParser26.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance29 = pcxImageParser26.getFormatCompliance(byteSource28);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser26.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser19.getMetadata(byteSource25, pcxImagingParameters30);
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = null;
        byte[] byteArray36 = pcxImageParser33.getIccProfileBytes(byteSource34, pcxImagingParameters35);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = pcxImageParser33.getDefaultParameters();
        byte[] byteArray38 = pcxImageParser19.getIccProfileBytes(byteSource32, pcxImagingParameters37);
        byte[] byteArray39 = pcxImageParser8.getIccProfileBytes(byteSource18, pcxImagingParameters37);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser0.getMetadata(file7, pcxImagingParameters37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Pcx-Custom" + "'", str9, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Pcx-Custom" + "'", str12, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(byteArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Pcx-Custom" + "'", str23, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Pcx-Custom" + "'", str24, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNull(formatCompliance29);
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertNotNull(pcxImagingParameters37);
        org.junit.Assert.assertNull(byteArray38);
        org.junit.Assert.assertNull(byteArray39);
    }

    @Test
    public void test0693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0693");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = null;
        byte[] byteArray33 = pcxImageParser30.getIccProfileBytes(byteSource31, pcxImagingParameters32);
        java.lang.String str34 = pcxImageParser30.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser30.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser0.getMetadata(byteSource29, pcxImagingParameters35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser0.getMetadata(byteSource37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser0.getMetadata(byteSource39);
        org.apache.commons.imaging.ImageFormat imageFormat41 = null;
        boolean boolean42 = pcxImageParser0.canAcceptType(imageFormat41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo44 = pcxImageParser0.getImageInfo(byteSource43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "pcx" + "'", str34, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test0694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0694");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.ImageFormat imageFormat3 = null;
        boolean boolean4 = pcxImageParser0.canAcceptType(imageFormat3);
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder7 = pcxImageParser6.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance9 = pcxImageParser6.getFormatCompliance(byteSource8);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = pcxImageParser6.getDefaultParameters();
        java.lang.String str11 = pcxImageParser6.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser6.getMetadata(byteSource12);
        boolean boolean15 = pcxImageParser6.canAcceptExtension("");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = pcxImageParser6.getDefaultParameters();
        byte[] byteArray17 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo19 = pcxImageParser0.getImageInfo(byteSource18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNull(formatCompliance9);
        org.junit.Assert.assertNotNull(pcxImagingParameters10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "pcx" + "'", str11, "pcx");
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters16);
        org.junit.Assert.assertNull(byteArray17);
    }

    @Test
    public void test0695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0695");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser9.canAcceptType(imageFormat14);
        java.lang.String str16 = pcxImageParser9.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser9.getDefaultParameters();
        byte[] byteArray18 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters17);
        org.apache.commons.imaging.ImageFormat imageFormat19 = null;
        boolean boolean20 = pcxImageParser0.canAcceptType(imageFormat19);
        org.apache.commons.imaging.ImageFormat imageFormat21 = null;
        boolean boolean22 = pcxImageParser0.canAcceptType(imageFormat21);
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = null;
        byte[] byteArray33 = pcxImageParser30.getIccProfileBytes(byteSource31, pcxImagingParameters32);
        java.lang.String str34 = pcxImageParser30.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser30.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser24.getMetadata(byteSource29, pcxImagingParameters35);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser0.getMetadata(byteSource23, pcxImagingParameters37);
        java.io.File file39 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray40 = pcxImageParser0.getIccProfileBytes(file39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "pcx" + "'", str16, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "pcx" + "'", str34, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertNotNull(pcxImagingParameters37);
        org.junit.Assert.assertNull(imageMetadata38);
    }

    @Test
    public void test0696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0696");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        java.io.File file7 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray8 = pcxImageParser0.getIccProfileBytes(file7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNotNull(byteOrder6);
    }

    @Test
    public void test0697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0697");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser0.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = null;
        byte[] byteArray13 = pcxImageParser10.getIccProfileBytes(byteSource11, pcxImagingParameters12);
        java.lang.String str14 = pcxImageParser10.getName();
        java.lang.String str15 = pcxImageParser10.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder18 = pcxImageParser17.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance20 = pcxImageParser17.getFormatCompliance(byteSource19);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser17.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser10.getMetadata(byteSource16, pcxImagingParameters21);
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata26 = pcxImageParser24.getMetadata(byteSource25);
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder29 = pcxImageParser28.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance31 = pcxImageParser28.getFormatCompliance(byteSource30);
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser28.getMetadata(byteSource32);
        boolean boolean35 = pcxImageParser28.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser28.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser24.getMetadata(byteSource27, pcxImagingParameters36);
        byte[] byteArray38 = pcxImageParser10.getIccProfileBytes(byteSource23, pcxImagingParameters36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance40 = pcxImageParser10.getFormatCompliance(byteSource39);
        java.nio.ByteOrder byteOrder41 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser43 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = null;
        byte[] byteArray46 = pcxImageParser43.getIccProfileBytes(byteSource44, pcxImagingParameters45);
        java.lang.String str47 = pcxImageParser43.getName();
        java.lang.String str48 = pcxImageParser43.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser50 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder51 = pcxImageParser50.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance53 = pcxImageParser50.getFormatCompliance(byteSource52);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters54 = pcxImageParser50.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata55 = pcxImageParser43.getMetadata(byteSource49, pcxImagingParameters54);
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser57 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata59 = pcxImageParser57.getMetadata(byteSource58);
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser61 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder62 = pcxImageParser61.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance64 = pcxImageParser61.getFormatCompliance(byteSource63);
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata66 = pcxImageParser61.getMetadata(byteSource65);
        boolean boolean68 = pcxImageParser61.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters69 = pcxImageParser61.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata70 = pcxImageParser57.getMetadata(byteSource60, pcxImagingParameters69);
        byte[] byteArray71 = pcxImageParser43.getIccProfileBytes(byteSource56, pcxImagingParameters69);
        byte[] byteArray72 = pcxImageParser10.getIccProfileBytes(byteSource42, pcxImagingParameters69);
        byte[] byteArray73 = pcxImageParser0.getIccProfileBytes(byteSource9, pcxImagingParameters69);
        java.io.File file74 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata75 = pcxImageParser0.getMetadata(file74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNull(byteArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Pcx-Custom" + "'", str14, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Pcx-Custom" + "'", str15, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNull(formatCompliance20);
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNull(imageMetadata26);
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertNull(formatCompliance31);
        org.junit.Assert.assertNull(imageMetadata33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertNull(byteArray38);
        org.junit.Assert.assertNull(formatCompliance40);
        org.junit.Assert.assertNotNull(byteOrder41);
        org.junit.Assert.assertNull(byteArray46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Pcx-Custom" + "'", str47, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Pcx-Custom" + "'", str48, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder51);
        org.junit.Assert.assertNull(formatCompliance53);
        org.junit.Assert.assertNotNull(pcxImagingParameters54);
        org.junit.Assert.assertNull(imageMetadata55);
        org.junit.Assert.assertNull(imageMetadata59);
        org.junit.Assert.assertNotNull(byteOrder62);
        org.junit.Assert.assertNull(formatCompliance64);
        org.junit.Assert.assertNull(imageMetadata66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters69);
        org.junit.Assert.assertNull(imageMetadata70);
        org.junit.Assert.assertNull(byteArray71);
        org.junit.Assert.assertNull(byteArray72);
        org.junit.Assert.assertNull(byteArray73);
    }

    @Test
    public void test0698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0698");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo30 = pcxImageParser0.getImageInfo(byteSource29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
    }

    @Test
    public void test0699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0699");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance5 = pcxImageParser0.getFormatCompliance(byteSource4);
        java.io.File file6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension7 = pcxImageParser0.getImageSize(file6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(formatCompliance5);
    }

    @Test
    public void test0700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0700");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        java.lang.String str8 = pcxImageParser0.getDefaultExtension();
        java.io.File file9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = null;
        byte[] byteArray13 = pcxImageParser10.getIccProfileBytes(byteSource11, pcxImagingParameters12);
        java.nio.ByteOrder byteOrder14 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder17 = pcxImageParser16.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance19 = pcxImageParser16.getFormatCompliance(byteSource18);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters20 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat21 = null;
        boolean boolean22 = pcxImageParser16.canAcceptType(imageFormat21);
        java.lang.String str23 = pcxImageParser16.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser10.getMetadata(byteSource15, pcxImagingParameters24);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray26 = pcxImageParser0.getIccProfileBytes(file9, pcxImagingParameters24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "pcx" + "'", str8, "pcx");
        org.junit.Assert.assertNull(byteArray13);
        org.junit.Assert.assertNotNull(byteOrder14);
        org.junit.Assert.assertNotNull(byteOrder17);
        org.junit.Assert.assertNull(formatCompliance19);
        org.junit.Assert.assertNotNull(pcxImagingParameters20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "pcx" + "'", str23, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters24);
        org.junit.Assert.assertNull(imageMetadata25);
    }

    @Test
    public void test0701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0701");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        java.nio.ByteOrder byteOrder2 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance4 = pcxImageParser0.getFormatCompliance(byteSource3);
        java.lang.String str5 = pcxImageParser0.getName();
        java.io.File file6 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean7 = pcxImageParser0.canAcceptExtension(file6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertNull(formatCompliance4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
    }

    @Test
    public void test0702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0702");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        java.lang.String str9 = pcxImageParser0.getName();
        java.io.File file10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser11.getMetadata(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser11.getMetadata(byteSource14);
        java.lang.String str16 = pcxImageParser11.getDefaultExtension();
        java.lang.String str17 = pcxImageParser11.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser11.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser0.getMetadata(file10, pcxImagingParameters18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Pcx-Custom" + "'", str9, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "pcx" + "'", str16, "pcx");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "pcx" + "'", str17, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
    }

    @Test
    public void test0703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0703");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = null;
        byte[] byteArray14 = pcxImageParser11.getIccProfileBytes(byteSource12, pcxImagingParameters13);
        java.lang.String str15 = pcxImageParser11.getName();
        java.lang.String str16 = pcxImageParser11.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser11.getMetadata(byteSource17, pcxImagingParameters22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser25.getMetadata(byteSource26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder30 = pcxImageParser29.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser29.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser29.getMetadata(byteSource33);
        boolean boolean36 = pcxImageParser29.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser25.getMetadata(byteSource28, pcxImagingParameters37);
        byte[] byteArray39 = pcxImageParser11.getIccProfileBytes(byteSource24, pcxImagingParameters37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance41 = pcxImageParser11.getFormatCompliance(byteSource40);
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser43 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = null;
        byte[] byteArray46 = pcxImageParser43.getIccProfileBytes(byteSource44, pcxImagingParameters45);
        java.nio.ByteOrder byteOrder47 = pcxImageParser43.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser49 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder50 = pcxImageParser49.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance52 = pcxImageParser49.getFormatCompliance(byteSource51);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters53 = pcxImageParser49.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat54 = null;
        boolean boolean55 = pcxImageParser49.canAcceptType(imageFormat54);
        java.lang.String str56 = pcxImageParser49.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters57 = pcxImageParser49.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata58 = pcxImageParser43.getMetadata(byteSource48, pcxImagingParameters57);
        byte[] byteArray59 = pcxImageParser11.getIccProfileBytes(byteSource42, pcxImagingParameters57);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata60 = pcxImageParser0.getMetadata(byteSource10, pcxImagingParameters57);
        java.io.File file61 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance62 = pcxImageParser0.getFormatCompliance(file61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(pcxImagingParameters9);
        org.junit.Assert.assertNull(byteArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Pcx-Custom" + "'", str15, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Pcx-Custom" + "'", str16, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(byteOrder30);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters37);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNull(byteArray39);
        org.junit.Assert.assertNull(formatCompliance41);
        org.junit.Assert.assertNull(byteArray46);
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNotNull(byteOrder50);
        org.junit.Assert.assertNull(formatCompliance52);
        org.junit.Assert.assertNotNull(pcxImagingParameters53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "pcx" + "'", str56, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters57);
        org.junit.Assert.assertNull(imageMetadata58);
        org.junit.Assert.assertNull(byteArray59);
        org.junit.Assert.assertNull(imageMetadata60);
    }

    @Test
    public void test0704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0704");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat6 = null;
        boolean boolean7 = pcxImageParser0.canAcceptType(imageFormat6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser0.getMetadata(byteSource8);
        java.io.File file10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata11 = pcxImageParser0.getMetadata(file10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(imageMetadata9);
    }

    @Test
    public void test0705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0705");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata17 = pcxImageParser0.getMetadata(byteSource16);
        java.io.File file18 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance19 = pcxImageParser0.getFormatCompliance(file18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertNull(imageMetadata17);
    }

    @Test
    public void test0706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0706");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        boolean boolean9 = pcxImageParser0.canAcceptExtension("");
        boolean boolean11 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = null;
        byte[] byteArray16 = pcxImageParser13.getIccProfileBytes(byteSource14, pcxImagingParameters15);
        java.lang.String str17 = pcxImageParser13.getName();
        java.lang.String str18 = pcxImageParser13.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser20 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder21 = pcxImageParser20.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance23 = pcxImageParser20.getFormatCompliance(byteSource22);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = pcxImageParser20.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser13.getMetadata(byteSource19, pcxImagingParameters24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser27 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser27.getMetadata(byteSource28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder32 = pcxImageParser31.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance34 = pcxImageParser31.getFormatCompliance(byteSource33);
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser31.getMetadata(byteSource35);
        boolean boolean38 = pcxImageParser31.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = pcxImageParser31.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser27.getMetadata(byteSource30, pcxImagingParameters39);
        byte[] byteArray41 = pcxImageParser13.getIccProfileBytes(byteSource26, pcxImagingParameters39);
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance43 = pcxImageParser13.getFormatCompliance(byteSource42);
        java.nio.ByteOrder byteOrder44 = pcxImageParser13.getByteOrder();
        java.nio.ByteOrder byteOrder45 = pcxImageParser13.getByteOrder();
        java.lang.String str46 = pcxImageParser13.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser0.getMetadata(byteSource12, pcxImagingParameters47);
        java.awt.image.BufferedImage bufferedImage49 = null;
        java.io.OutputStream outputStream50 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser51 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters53 = null;
        byte[] byteArray54 = pcxImageParser51.getIccProfileBytes(byteSource52, pcxImagingParameters53);
        java.lang.String str55 = pcxImageParser51.getName();
        boolean boolean57 = pcxImageParser51.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser59 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder60 = pcxImageParser59.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance62 = pcxImageParser59.getFormatCompliance(byteSource61);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters63 = pcxImageParser59.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters64 = pcxImageParser59.getDefaultParameters();
        byte[] byteArray65 = pcxImageParser51.getIccProfileBytes(byteSource58, pcxImagingParameters64);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters66 = pcxImageParser51.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage49, outputStream50, pcxImagingParameters66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(byteArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Pcx-Custom" + "'", str17, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Pcx-Custom" + "'", str18, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder21);
        org.junit.Assert.assertNull(formatCompliance23);
        org.junit.Assert.assertNotNull(pcxImagingParameters24);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertNull(formatCompliance34);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters39);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertNull(byteArray41);
        org.junit.Assert.assertNull(formatCompliance43);
        org.junit.Assert.assertNotNull(byteOrder44);
        org.junit.Assert.assertNotNull(byteOrder45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Pcx-Custom" + "'", str46, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters47);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNull(byteArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Pcx-Custom" + "'", str55, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNull(formatCompliance62);
        org.junit.Assert.assertNotNull(pcxImagingParameters63);
        org.junit.Assert.assertNotNull(pcxImagingParameters64);
        org.junit.Assert.assertNull(byteArray65);
        org.junit.Assert.assertNotNull(pcxImagingParameters66);
    }

    @Test
    public void test0707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0707");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = null;
        byte[] byteArray19 = pcxImageParser16.getIccProfileBytes(byteSource17, pcxImagingParameters18);
        java.lang.String str20 = pcxImageParser16.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser10.getMetadata(byteSource15, pcxImagingParameters21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser0.getMetadata(byteSource9, pcxImagingParameters23);
        java.lang.String str25 = pcxImageParser0.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser0.getDefaultParameters();
        java.io.File file27 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean28 = pcxImageParser0.canAcceptExtension(file27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "pcx" + "'", str20, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
    }

    @Test
    public void test0708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0708");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        boolean boolean9 = pcxImageParser0.canAcceptExtension("");
        boolean boolean11 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = null;
        byte[] byteArray16 = pcxImageParser13.getIccProfileBytes(byteSource14, pcxImagingParameters15);
        java.lang.String str17 = pcxImageParser13.getName();
        java.lang.String str18 = pcxImageParser13.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser20 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder21 = pcxImageParser20.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance23 = pcxImageParser20.getFormatCompliance(byteSource22);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = pcxImageParser20.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser13.getMetadata(byteSource19, pcxImagingParameters24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser27 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser27.getMetadata(byteSource28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder32 = pcxImageParser31.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance34 = pcxImageParser31.getFormatCompliance(byteSource33);
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser31.getMetadata(byteSource35);
        boolean boolean38 = pcxImageParser31.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = pcxImageParser31.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser27.getMetadata(byteSource30, pcxImagingParameters39);
        byte[] byteArray41 = pcxImageParser13.getIccProfileBytes(byteSource26, pcxImagingParameters39);
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance43 = pcxImageParser13.getFormatCompliance(byteSource42);
        java.nio.ByteOrder byteOrder44 = pcxImageParser13.getByteOrder();
        java.nio.ByteOrder byteOrder45 = pcxImageParser13.getByteOrder();
        java.lang.String str46 = pcxImageParser13.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser0.getMetadata(byteSource12, pcxImagingParameters47);
        java.io.File file49 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance50 = pcxImageParser0.getFormatCompliance(file49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(byteArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Pcx-Custom" + "'", str17, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Pcx-Custom" + "'", str18, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder21);
        org.junit.Assert.assertNull(formatCompliance23);
        org.junit.Assert.assertNotNull(pcxImagingParameters24);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertNull(formatCompliance34);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters39);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertNull(byteArray41);
        org.junit.Assert.assertNull(formatCompliance43);
        org.junit.Assert.assertNotNull(byteOrder44);
        org.junit.Assert.assertNotNull(byteOrder45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Pcx-Custom" + "'", str46, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters47);
        org.junit.Assert.assertNull(imageMetadata48);
    }

    @Test
    public void test0709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0709");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser9.canAcceptType(imageFormat14);
        java.lang.String str16 = pcxImageParser9.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser9.getDefaultParameters();
        byte[] byteArray18 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters17);
        org.apache.commons.imaging.ImageFormat imageFormat19 = null;
        boolean boolean20 = pcxImageParser0.canAcceptType(imageFormat19);
        org.apache.commons.imaging.ImageFormat imageFormat21 = null;
        boolean boolean22 = pcxImageParser0.canAcceptType(imageFormat21);
        java.io.File file23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension24 = pcxImageParser0.getImageSize(file23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "pcx" + "'", str16, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test0710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0710");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser0.getFormatCompliance(byteSource5);
        java.nio.ByteOrder byteOrder7 = pcxImageParser0.getByteOrder();
        java.io.File file8 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = pcxImageParser0.canAcceptExtension(file8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance6);
        org.junit.Assert.assertNotNull(byteOrder7);
    }

    @Test
    public void test0711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0711");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = null;
        byte[] byteArray9 = pcxImageParser6.getIccProfileBytes(byteSource7, pcxImagingParameters8);
        java.lang.String str10 = pcxImageParser6.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource5, pcxImagingParameters11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser0.getDefaultParameters();
        java.lang.String str14 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo16 = pcxImageParser0.getImageInfo(byteSource15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(byteArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "pcx" + "'", str10, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Pcx-Custom" + "'", str14, "Pcx-Custom");
    }

    @Test
    public void test0712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0712");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = null;
        byte[] byteArray19 = pcxImageParser16.getIccProfileBytes(byteSource17, pcxImagingParameters18);
        java.lang.String str20 = pcxImageParser16.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser10.getMetadata(byteSource15, pcxImagingParameters21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser0.getMetadata(byteSource9, pcxImagingParameters23);
        java.lang.String str25 = pcxImageParser0.getName();
        java.lang.String str26 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = null;
        byte[] byteArray31 = pcxImageParser28.getIccProfileBytes(byteSource29, pcxImagingParameters30);
        java.lang.String str32 = pcxImageParser28.getName();
        java.lang.String str33 = pcxImageParser28.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder36 = pcxImageParser35.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance38 = pcxImageParser35.getFormatCompliance(byteSource37);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = pcxImageParser35.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser28.getMetadata(byteSource34, pcxImagingParameters39);
        java.lang.String str41 = pcxImageParser28.getName();
        org.apache.commons.imaging.ImageFormat imageFormat42 = null;
        boolean boolean43 = pcxImageParser28.canAcceptType(imageFormat42);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = pcxImageParser28.getDefaultParameters();
        byte[] byteArray45 = pcxImageParser0.getIccProfileBytes(byteSource27, pcxImagingParameters44);
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser47 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters49 = null;
        byte[] byteArray50 = pcxImageParser47.getIccProfileBytes(byteSource48, pcxImagingParameters49);
        java.lang.String str51 = pcxImageParser47.getName();
        java.lang.String str52 = pcxImageParser47.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance54 = pcxImageParser47.getFormatCompliance(byteSource53);
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser56 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder57 = pcxImageParser56.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance59 = pcxImageParser56.getFormatCompliance(byteSource58);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters60 = pcxImageParser56.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat61 = null;
        boolean boolean62 = pcxImageParser56.canAcceptType(imageFormat61);
        java.lang.String str63 = pcxImageParser56.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters64 = pcxImageParser56.getDefaultParameters();
        byte[] byteArray65 = pcxImageParser47.getIccProfileBytes(byteSource55, pcxImagingParameters64);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters66 = pcxImageParser47.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo67 = pcxImageParser0.getImageInfo(byteSource46, pcxImagingParameters66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "pcx" + "'", str20, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Pcx-Custom" + "'", str26, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Pcx-Custom" + "'", str32, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Pcx-Custom" + "'", str33, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNull(formatCompliance38);
        org.junit.Assert.assertNotNull(pcxImagingParameters39);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Pcx-Custom" + "'", str41, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters44);
        org.junit.Assert.assertNull(byteArray45);
        org.junit.Assert.assertNull(byteArray50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Pcx-Custom" + "'", str51, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Pcx-Custom" + "'", str52, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance54);
        org.junit.Assert.assertNotNull(byteOrder57);
        org.junit.Assert.assertNull(formatCompliance59);
        org.junit.Assert.assertNotNull(pcxImagingParameters60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "pcx" + "'", str63, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters64);
        org.junit.Assert.assertNull(byteArray65);
        org.junit.Assert.assertNotNull(pcxImagingParameters66);
    }

    @Test
    public void test0713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0713");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        boolean boolean5 = pcxImageParser0.canAcceptExtension("Pcx-Custom");
        java.lang.String str6 = pcxImageParser0.getName();
        java.io.File file7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = null;
        byte[] byteArray11 = pcxImageParser8.getIccProfileBytes(byteSource9, pcxImagingParameters10);
        java.lang.String str12 = pcxImageParser8.getName();
        java.lang.String str13 = pcxImageParser8.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder16 = pcxImageParser15.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser15.getFormatCompliance(byteSource17);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser15.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata20 = pcxImageParser8.getMetadata(byteSource14, pcxImagingParameters19);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser22 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser22.getMetadata(byteSource23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder27 = pcxImageParser26.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance29 = pcxImageParser26.getFormatCompliance(byteSource28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser26.getMetadata(byteSource30);
        boolean boolean33 = pcxImageParser26.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser26.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser22.getMetadata(byteSource25, pcxImagingParameters34);
        byte[] byteArray36 = pcxImageParser8.getIccProfileBytes(byteSource21, pcxImagingParameters34);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance38 = pcxImageParser8.getFormatCompliance(byteSource37);
        java.nio.ByteOrder byteOrder39 = pcxImageParser8.getByteOrder();
        java.nio.ByteOrder byteOrder40 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser42 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder43 = pcxImageParser42.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance45 = pcxImageParser42.getFormatCompliance(byteSource44);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser42.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser48 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata50 = pcxImageParser48.getMetadata(byteSource49);
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser52 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder53 = pcxImageParser52.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance55 = pcxImageParser52.getFormatCompliance(byteSource54);
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata57 = pcxImageParser52.getMetadata(byteSource56);
        boolean boolean59 = pcxImageParser52.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters60 = pcxImageParser52.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata61 = pcxImageParser48.getMetadata(byteSource51, pcxImagingParameters60);
        byte[] byteArray62 = pcxImageParser42.getIccProfileBytes(byteSource47, pcxImagingParameters60);
        java.lang.String str63 = pcxImageParser42.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters64 = pcxImageParser42.getDefaultParameters();
        byte[] byteArray65 = pcxImageParser8.getIccProfileBytes(byteSource41, pcxImagingParameters64);
        org.apache.commons.imaging.bytesource.ByteSource byteSource66 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance67 = pcxImageParser8.getFormatCompliance(byteSource66);
        org.apache.commons.imaging.bytesource.ByteSource byteSource68 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser69 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource70 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters71 = null;
        byte[] byteArray72 = pcxImageParser69.getIccProfileBytes(byteSource70, pcxImagingParameters71);
        java.lang.String str73 = pcxImageParser69.getName();
        java.lang.String str74 = pcxImageParser69.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource75 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance76 = pcxImageParser69.getFormatCompliance(byteSource75);
        org.apache.commons.imaging.bytesource.ByteSource byteSource77 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser78 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder79 = pcxImageParser78.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource80 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance81 = pcxImageParser78.getFormatCompliance(byteSource80);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters82 = pcxImageParser78.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat83 = null;
        boolean boolean84 = pcxImageParser78.canAcceptType(imageFormat83);
        java.lang.String str85 = pcxImageParser78.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters86 = pcxImageParser78.getDefaultParameters();
        byte[] byteArray87 = pcxImageParser69.getIccProfileBytes(byteSource77, pcxImagingParameters86);
        org.apache.commons.imaging.ImageFormat imageFormat88 = null;
        boolean boolean89 = pcxImageParser69.canAcceptType(imageFormat88);
        org.apache.commons.imaging.ImageFormat imageFormat90 = null;
        boolean boolean91 = pcxImageParser69.canAcceptType(imageFormat90);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters92 = pcxImageParser69.getDefaultParameters();
        byte[] byteArray93 = pcxImageParser8.getIccProfileBytes(byteSource68, pcxImagingParameters92);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage94 = pcxImageParser0.getBufferedImage(file7, pcxImagingParameters92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Pcx-Custom" + "'", str6, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Pcx-Custom" + "'", str12, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNull(formatCompliance18);
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
        org.junit.Assert.assertNull(imageMetadata20);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNull(formatCompliance29);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertNull(formatCompliance38);
        org.junit.Assert.assertNotNull(byteOrder39);
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNull(formatCompliance45);
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
        org.junit.Assert.assertNull(imageMetadata50);
        org.junit.Assert.assertNotNull(byteOrder53);
        org.junit.Assert.assertNull(formatCompliance55);
        org.junit.Assert.assertNull(imageMetadata57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters60);
        org.junit.Assert.assertNull(imageMetadata61);
        org.junit.Assert.assertNull(byteArray62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Pcx-Custom" + "'", str63, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters64);
        org.junit.Assert.assertNull(byteArray65);
        org.junit.Assert.assertNull(formatCompliance67);
        org.junit.Assert.assertNull(byteArray72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "Pcx-Custom" + "'", str73, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Pcx-Custom" + "'", str74, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance76);
        org.junit.Assert.assertNotNull(byteOrder79);
        org.junit.Assert.assertNull(formatCompliance81);
        org.junit.Assert.assertNotNull(pcxImagingParameters82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "pcx" + "'", str85, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters86);
        org.junit.Assert.assertNull(byteArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters92);
        org.junit.Assert.assertNull(byteArray93);
    }

    @Test
    public void test0714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0714");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        org.apache.commons.imaging.ImageFormat imageFormat31 = null;
        boolean boolean32 = pcxImageParser0.canAcceptType(imageFormat31);
        java.io.File file33 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser0.getMetadata(file33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test0715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0715");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser0.getMetadata(byteSource32);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser0.getDefaultParameters();
        java.io.File file35 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser0.getMetadata(file35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNull(imageMetadata33);
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
    }

    @Test
    public void test0716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0716");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder8 = pcxImageParser0.getByteOrder();
        java.io.File file9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata10 = pcxImageParser0.getMetadata(file9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
        org.junit.Assert.assertNotNull(byteOrder8);
    }

    @Test
    public void test0717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0717");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        java.io.PrintWriter printWriter9 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = pcxImageParser0.dumpImageFile(printWriter9, byteSource10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(formatCompliance8);
    }

    @Test
    public void test0718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0718");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.io.File file7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder12 = pcxImageParser11.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance14 = pcxImageParser11.getFormatCompliance(byteSource13);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = pcxImageParser11.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser17.getMetadata(byteSource18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder22 = pcxImageParser21.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance24 = pcxImageParser21.getFormatCompliance(byteSource23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata26 = pcxImageParser21.getMetadata(byteSource25);
        boolean boolean28 = pcxImageParser21.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata30 = pcxImageParser17.getMetadata(byteSource20, pcxImagingParameters29);
        byte[] byteArray31 = pcxImageParser11.getIccProfileBytes(byteSource16, pcxImagingParameters29);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser8.getMetadata(byteSource10, pcxImagingParameters29);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser0.getMetadata(file7, pcxImagingParameters29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNotNull(byteOrder12);
        org.junit.Assert.assertNull(formatCompliance14);
        org.junit.Assert.assertNotNull(pcxImagingParameters15);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNull(formatCompliance24);
        org.junit.Assert.assertNull(imageMetadata26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters29);
        org.junit.Assert.assertNull(imageMetadata30);
        org.junit.Assert.assertNull(byteArray31);
        org.junit.Assert.assertNull(imageMetadata32);
    }

    @Test
    public void test0719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0719");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.ImageFormat imageFormat3 = null;
        boolean boolean4 = pcxImageParser0.canAcceptType(imageFormat3);
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.io.File file7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension8 = pcxImageParser0.getImageSize(file7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0720");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        java.lang.String str8 = pcxImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder9 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder12 = pcxImageParser11.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance14 = pcxImageParser11.getFormatCompliance(byteSource13);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = pcxImageParser11.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser17.getMetadata(byteSource18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder22 = pcxImageParser21.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance24 = pcxImageParser21.getFormatCompliance(byteSource23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata26 = pcxImageParser21.getMetadata(byteSource25);
        boolean boolean28 = pcxImageParser21.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata30 = pcxImageParser17.getMetadata(byteSource20, pcxImagingParameters29);
        byte[] byteArray31 = pcxImageParser11.getIccProfileBytes(byteSource16, pcxImagingParameters29);
        java.lang.String str32 = pcxImageParser11.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser11.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat34 = null;
        boolean boolean35 = pcxImageParser11.canAcceptType(imageFormat34);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser11.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = pcxImageParser11.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage38 = pcxImageParser0.getBufferedImage(byteSource10, pcxImagingParameters37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "pcx" + "'", str8, "pcx");
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNotNull(byteOrder12);
        org.junit.Assert.assertNull(formatCompliance14);
        org.junit.Assert.assertNotNull(pcxImagingParameters15);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNull(formatCompliance24);
        org.junit.Assert.assertNull(imageMetadata26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters29);
        org.junit.Assert.assertNull(imageMetadata30);
        org.junit.Assert.assertNull(byteArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Pcx-Custom" + "'", str32, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertNotNull(pcxImagingParameters37);
    }

    @Test
    public void test0721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0721");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser0.getMetadata(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser0.getMetadata(byteSource24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser0.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = null;
        byte[] byteArray32 = pcxImageParser29.getIccProfileBytes(byteSource30, pcxImagingParameters31);
        java.lang.String str33 = pcxImageParser29.getName();
        java.lang.String str34 = pcxImageParser29.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser36 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder37 = pcxImageParser36.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance39 = pcxImageParser36.getFormatCompliance(byteSource38);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser36.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser29.getMetadata(byteSource35, pcxImagingParameters40);
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser43 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata45 = pcxImageParser43.getMetadata(byteSource44);
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser47 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder48 = pcxImageParser47.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance50 = pcxImageParser47.getFormatCompliance(byteSource49);
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata52 = pcxImageParser47.getMetadata(byteSource51);
        boolean boolean54 = pcxImageParser47.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters55 = pcxImageParser47.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata56 = pcxImageParser43.getMetadata(byteSource46, pcxImagingParameters55);
        byte[] byteArray57 = pcxImageParser29.getIccProfileBytes(byteSource42, pcxImagingParameters55);
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance59 = pcxImageParser29.getFormatCompliance(byteSource58);
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser61 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters63 = null;
        byte[] byteArray64 = pcxImageParser61.getIccProfileBytes(byteSource62, pcxImagingParameters63);
        java.nio.ByteOrder byteOrder65 = pcxImageParser61.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource66 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser67 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder68 = pcxImageParser67.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance70 = pcxImageParser67.getFormatCompliance(byteSource69);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters71 = pcxImageParser67.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat72 = null;
        boolean boolean73 = pcxImageParser67.canAcceptType(imageFormat72);
        java.lang.String str74 = pcxImageParser67.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters75 = pcxImageParser67.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata76 = pcxImageParser61.getMetadata(byteSource66, pcxImagingParameters75);
        byte[] byteArray77 = pcxImageParser29.getIccProfileBytes(byteSource60, pcxImagingParameters75);
        byte[] byteArray78 = pcxImageParser0.getIccProfileBytes(byteSource28, pcxImagingParameters75);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters79 = pcxImageParser0.getDefaultParameters();
        java.io.File file80 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension81 = pcxImageParser0.getImageSize(file80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNull(byteArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Pcx-Custom" + "'", str33, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Pcx-Custom" + "'", str34, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNull(formatCompliance39);
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(imageMetadata41);
        org.junit.Assert.assertNull(imageMetadata45);
        org.junit.Assert.assertNotNull(byteOrder48);
        org.junit.Assert.assertNull(formatCompliance50);
        org.junit.Assert.assertNull(imageMetadata52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters55);
        org.junit.Assert.assertNull(imageMetadata56);
        org.junit.Assert.assertNull(byteArray57);
        org.junit.Assert.assertNull(formatCompliance59);
        org.junit.Assert.assertNull(byteArray64);
        org.junit.Assert.assertNotNull(byteOrder65);
        org.junit.Assert.assertNotNull(byteOrder68);
        org.junit.Assert.assertNull(formatCompliance70);
        org.junit.Assert.assertNotNull(pcxImagingParameters71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "pcx" + "'", str74, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters75);
        org.junit.Assert.assertNull(imageMetadata76);
        org.junit.Assert.assertNull(byteArray77);
        org.junit.Assert.assertNull(byteArray78);
        org.junit.Assert.assertNotNull(pcxImagingParameters79);
    }

    @Test
    public void test0722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0722");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = null;
        byte[] byteArray36 = pcxImageParser33.getIccProfileBytes(byteSource34, pcxImagingParameters35);
        java.lang.String str37 = pcxImageParser33.getName();
        java.lang.String str38 = pcxImageParser33.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder41 = pcxImageParser40.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance43 = pcxImageParser40.getFormatCompliance(byteSource42);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = pcxImageParser40.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata45 = pcxImageParser33.getMetadata(byteSource39, pcxImagingParameters44);
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser47 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser47.getMetadata(byteSource48);
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser51 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder52 = pcxImageParser51.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance54 = pcxImageParser51.getFormatCompliance(byteSource53);
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata56 = pcxImageParser51.getMetadata(byteSource55);
        boolean boolean58 = pcxImageParser51.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters59 = pcxImageParser51.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata60 = pcxImageParser47.getMetadata(byteSource50, pcxImagingParameters59);
        byte[] byteArray61 = pcxImageParser33.getIccProfileBytes(byteSource46, pcxImagingParameters59);
        byte[] byteArray62 = pcxImageParser0.getIccProfileBytes(byteSource32, pcxImagingParameters59);
        java.io.File file63 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser64 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters66 = null;
        byte[] byteArray67 = pcxImageParser64.getIccProfileBytes(byteSource65, pcxImagingParameters66);
        java.lang.String str68 = pcxImageParser64.getName();
        java.lang.String str69 = pcxImageParser64.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource70 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser71 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder72 = pcxImageParser71.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource73 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance74 = pcxImageParser71.getFormatCompliance(byteSource73);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters75 = pcxImageParser71.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata76 = pcxImageParser64.getMetadata(byteSource70, pcxImagingParameters75);
        org.apache.commons.imaging.bytesource.ByteSource byteSource77 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser78 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource79 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata80 = pcxImageParser78.getMetadata(byteSource79);
        org.apache.commons.imaging.bytesource.ByteSource byteSource81 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser82 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder83 = pcxImageParser82.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource84 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance85 = pcxImageParser82.getFormatCompliance(byteSource84);
        org.apache.commons.imaging.bytesource.ByteSource byteSource86 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata87 = pcxImageParser82.getMetadata(byteSource86);
        boolean boolean89 = pcxImageParser82.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters90 = pcxImageParser82.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata91 = pcxImageParser78.getMetadata(byteSource81, pcxImagingParameters90);
        byte[] byteArray92 = pcxImageParser64.getIccProfileBytes(byteSource77, pcxImagingParameters90);
        org.apache.commons.imaging.bytesource.ByteSource byteSource93 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance94 = pcxImageParser64.getFormatCompliance(byteSource93);
        java.nio.ByteOrder byteOrder95 = pcxImageParser64.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource96 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata97 = pcxImageParser64.getMetadata(byteSource96);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters98 = pcxImageParser64.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata99 = pcxImageParser0.getMetadata(file63, pcxImagingParameters98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Pcx-Custom" + "'", str37, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Pcx-Custom" + "'", str38, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder41);
        org.junit.Assert.assertNull(formatCompliance43);
        org.junit.Assert.assertNotNull(pcxImagingParameters44);
        org.junit.Assert.assertNull(imageMetadata45);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertNotNull(byteOrder52);
        org.junit.Assert.assertNull(formatCompliance54);
        org.junit.Assert.assertNull(imageMetadata56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters59);
        org.junit.Assert.assertNull(imageMetadata60);
        org.junit.Assert.assertNull(byteArray61);
        org.junit.Assert.assertNull(byteArray62);
        org.junit.Assert.assertNull(byteArray67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Pcx-Custom" + "'", str68, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "Pcx-Custom" + "'", str69, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder72);
        org.junit.Assert.assertNull(formatCompliance74);
        org.junit.Assert.assertNotNull(pcxImagingParameters75);
        org.junit.Assert.assertNull(imageMetadata76);
        org.junit.Assert.assertNull(imageMetadata80);
        org.junit.Assert.assertNotNull(byteOrder83);
        org.junit.Assert.assertNull(formatCompliance85);
        org.junit.Assert.assertNull(imageMetadata87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters90);
        org.junit.Assert.assertNull(imageMetadata91);
        org.junit.Assert.assertNull(byteArray92);
        org.junit.Assert.assertNull(formatCompliance94);
        org.junit.Assert.assertNotNull(byteOrder95);
        org.junit.Assert.assertNull(imageMetadata97);
        org.junit.Assert.assertNotNull(pcxImagingParameters98);
    }

    @Test
    public void test0723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0723");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getName();
        java.io.File file8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension9 = pcxImageParser0.getImageSize(file8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Pcx-Custom" + "'", str7, "Pcx-Custom");
    }

    @Test
    public void test0724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0724");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        java.io.PrintWriter printWriter7 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = pcxImageParser0.dumpImageFile(printWriter7, byteSource8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
    }

    @Test
    public void test0725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0725");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser7.getMetadata(byteSource8);
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser11.getMetadata(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder16 = pcxImageParser15.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser15.getFormatCompliance(byteSource17);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser15.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser21.getMetadata(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder26 = pcxImageParser25.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance28 = pcxImageParser25.getFormatCompliance(byteSource27);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata30 = pcxImageParser25.getMetadata(byteSource29);
        boolean boolean32 = pcxImageParser25.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser25.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser21.getMetadata(byteSource24, pcxImagingParameters33);
        byte[] byteArray35 = pcxImageParser15.getIccProfileBytes(byteSource20, pcxImagingParameters33);
        java.lang.String str36 = pcxImageParser15.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = pcxImageParser15.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser11.getMetadata(byteSource14, pcxImagingParameters37);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata39 = pcxImageParser7.getMetadata(byteSource10, pcxImagingParameters37);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage40 = pcxImageParser0.getBufferedImage(byteSource6, pcxImagingParameters37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNull(formatCompliance18);
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNotNull(byteOrder26);
        org.junit.Assert.assertNull(formatCompliance28);
        org.junit.Assert.assertNull(imageMetadata30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertNull(byteArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Pcx-Custom" + "'", str36, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters37);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNull(imageMetadata39);
    }

    @Test
    public void test0726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0726");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = null;
        byte[] byteArray16 = pcxImageParser13.getIccProfileBytes(byteSource14, pcxImagingParameters15);
        java.lang.String str17 = pcxImageParser13.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser7.getMetadata(byteSource12, pcxImagingParameters18);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters20 = pcxImageParser7.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension21 = pcxImageParser0.getImageSize(byteSource6, pcxImagingParameters20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(byteArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "pcx" + "'", str17, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNotNull(pcxImagingParameters20);
    }

    @Test
    public void test0727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0727");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        boolean boolean5 = pcxImageParser0.canAcceptExtension("");
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata11 = pcxImageParser9.getMetadata(byteSource10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder14 = pcxImageParser13.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser13.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata18 = pcxImageParser13.getMetadata(byteSource17);
        boolean boolean20 = pcxImageParser13.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser9.getMetadata(byteSource12, pcxImagingParameters21);
        byte[] byteArray23 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters21);
        java.nio.ByteOrder byteOrder24 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = null;
        byte[] byteArray29 = pcxImageParser26.getIccProfileBytes(byteSource27, pcxImagingParameters28);
        java.lang.String str30 = pcxImageParser26.getName();
        java.lang.String str31 = pcxImageParser26.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder34 = pcxImageParser33.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance36 = pcxImageParser33.getFormatCompliance(byteSource35);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = pcxImageParser33.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser26.getMetadata(byteSource32, pcxImagingParameters37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser40.getMetadata(byteSource41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder45 = pcxImageParser44.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance47 = pcxImageParser44.getFormatCompliance(byteSource46);
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser44.getMetadata(byteSource48);
        boolean boolean51 = pcxImageParser44.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser44.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser40.getMetadata(byteSource43, pcxImagingParameters52);
        byte[] byteArray54 = pcxImageParser26.getIccProfileBytes(byteSource39, pcxImagingParameters52);
        org.apache.commons.imaging.ImageFormat imageFormat55 = null;
        boolean boolean56 = pcxImageParser26.canAcceptType(imageFormat55);
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser58 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder59 = pcxImageParser58.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance61 = pcxImageParser58.getFormatCompliance(byteSource60);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters62 = pcxImageParser58.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat63 = null;
        boolean boolean64 = pcxImageParser58.canAcceptType(imageFormat63);
        java.lang.String str65 = pcxImageParser58.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters66 = pcxImageParser58.getDefaultParameters();
        byte[] byteArray67 = pcxImageParser26.getIccProfileBytes(byteSource57, pcxImagingParameters66);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata68 = pcxImageParser0.getMetadata(byteSource25, pcxImagingParameters66);
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters70 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata71 = pcxImageParser0.getMetadata(byteSource69, pcxImagingParameters70);
        java.io.PrintWriter printWriter72 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource73 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean74 = pcxImageParser0.dumpImageFile(printWriter72, byteSource73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNull(imageMetadata11);
        org.junit.Assert.assertNotNull(byteOrder14);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNull(imageMetadata18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNull(byteArray23);
        org.junit.Assert.assertNotNull(byteOrder24);
        org.junit.Assert.assertNull(byteArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Pcx-Custom" + "'", str30, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Pcx-Custom" + "'", str31, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder34);
        org.junit.Assert.assertNull(formatCompliance36);
        org.junit.Assert.assertNotNull(pcxImagingParameters37);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertNotNull(byteOrder45);
        org.junit.Assert.assertNull(formatCompliance47);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertNull(byteArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(byteOrder59);
        org.junit.Assert.assertNull(formatCompliance61);
        org.junit.Assert.assertNotNull(pcxImagingParameters62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "pcx" + "'", str65, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters66);
        org.junit.Assert.assertNull(byteArray67);
        org.junit.Assert.assertNull(imageMetadata68);
        org.junit.Assert.assertNull(imageMetadata71);
    }

    @Test
    public void test0728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0728");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = null;
        byte[] byteArray9 = pcxImageParser6.getIccProfileBytes(byteSource7, pcxImagingParameters8);
        java.lang.String str10 = pcxImageParser6.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource5, pcxImagingParameters11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser0.getDefaultParameters();
        java.io.File file14 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray15 = pcxImageParser0.getIccProfileBytes(file14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(byteArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "pcx" + "'", str10, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
    }

    @Test
    public void test0729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0729");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        java.io.File file32 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser0.getMetadata(file32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrder31);
    }

    @Test
    public void test0730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0730");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        boolean boolean5 = pcxImageParser0.canAcceptExtension("");
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata11 = pcxImageParser9.getMetadata(byteSource10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder14 = pcxImageParser13.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser13.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata18 = pcxImageParser13.getMetadata(byteSource17);
        boolean boolean20 = pcxImageParser13.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser9.getMetadata(byteSource12, pcxImagingParameters21);
        byte[] byteArray23 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters21);
        java.nio.ByteOrder byteOrder24 = pcxImageParser0.getByteOrder();
        java.io.File file25 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str26 = pcxImageParser0.dumpImageFile(file25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNull(imageMetadata11);
        org.junit.Assert.assertNotNull(byteOrder14);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNull(imageMetadata18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNull(byteArray23);
        org.junit.Assert.assertNotNull(byteOrder24);
    }

    @Test
    public void test0731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0731");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = null;
        byte[] byteArray33 = pcxImageParser30.getIccProfileBytes(byteSource31, pcxImagingParameters32);
        java.lang.String str34 = pcxImageParser30.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser30.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser0.getMetadata(byteSource29, pcxImagingParameters35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser0.getMetadata(byteSource37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser0.getMetadata(byteSource39);
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance42 = pcxImageParser0.getFormatCompliance(byteSource41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = null;
        byte[] byteArray47 = pcxImageParser44.getIccProfileBytes(byteSource45, pcxImagingParameters46);
        java.nio.ByteOrder byteOrder48 = pcxImageParser44.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser50 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder51 = pcxImageParser50.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance53 = pcxImageParser50.getFormatCompliance(byteSource52);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters54 = pcxImageParser50.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat55 = null;
        boolean boolean56 = pcxImageParser50.canAcceptType(imageFormat55);
        java.lang.String str57 = pcxImageParser50.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters58 = pcxImageParser50.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata59 = pcxImageParser44.getMetadata(byteSource49, pcxImagingParameters58);
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser61 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata63 = pcxImageParser61.getMetadata(byteSource62);
        org.apache.commons.imaging.bytesource.ByteSource byteSource64 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser65 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder66 = pcxImageParser65.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource67 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance68 = pcxImageParser65.getFormatCompliance(byteSource67);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters69 = pcxImageParser65.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource70 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser71 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource72 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata73 = pcxImageParser71.getMetadata(byteSource72);
        org.apache.commons.imaging.bytesource.ByteSource byteSource74 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser75 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder76 = pcxImageParser75.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource77 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance78 = pcxImageParser75.getFormatCompliance(byteSource77);
        org.apache.commons.imaging.bytesource.ByteSource byteSource79 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata80 = pcxImageParser75.getMetadata(byteSource79);
        boolean boolean82 = pcxImageParser75.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters83 = pcxImageParser75.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata84 = pcxImageParser71.getMetadata(byteSource74, pcxImagingParameters83);
        byte[] byteArray85 = pcxImageParser65.getIccProfileBytes(byteSource70, pcxImagingParameters83);
        java.lang.String str86 = pcxImageParser65.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters87 = pcxImageParser65.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata88 = pcxImageParser61.getMetadata(byteSource64, pcxImagingParameters87);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters89 = pcxImageParser61.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource90 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser91 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource92 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters93 = null;
        byte[] byteArray94 = pcxImageParser91.getIccProfileBytes(byteSource92, pcxImagingParameters93);
        java.lang.String str95 = pcxImageParser91.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters96 = pcxImageParser91.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata97 = pcxImageParser61.getMetadata(byteSource90, pcxImagingParameters96);
        byte[] byteArray98 = pcxImageParser44.getIccProfileBytes(byteSource60, pcxImagingParameters96);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata99 = pcxImageParser0.getMetadata(byteSource43, pcxImagingParameters96);
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "pcx" + "'", str34, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertNull(formatCompliance42);
        org.junit.Assert.assertNull(byteArray47);
        org.junit.Assert.assertNotNull(byteOrder48);
        org.junit.Assert.assertNotNull(byteOrder51);
        org.junit.Assert.assertNull(formatCompliance53);
        org.junit.Assert.assertNotNull(pcxImagingParameters54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "pcx" + "'", str57, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters58);
        org.junit.Assert.assertNull(imageMetadata59);
        org.junit.Assert.assertNull(imageMetadata63);
        org.junit.Assert.assertNotNull(byteOrder66);
        org.junit.Assert.assertNull(formatCompliance68);
        org.junit.Assert.assertNotNull(pcxImagingParameters69);
        org.junit.Assert.assertNull(imageMetadata73);
        org.junit.Assert.assertNotNull(byteOrder76);
        org.junit.Assert.assertNull(formatCompliance78);
        org.junit.Assert.assertNull(imageMetadata80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters83);
        org.junit.Assert.assertNull(imageMetadata84);
        org.junit.Assert.assertNull(byteArray85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "Pcx-Custom" + "'", str86, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters87);
        org.junit.Assert.assertNull(imageMetadata88);
        org.junit.Assert.assertNotNull(pcxImagingParameters89);
        org.junit.Assert.assertNull(byteArray94);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "pcx" + "'", str95, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters96);
        org.junit.Assert.assertNull(imageMetadata97);
        org.junit.Assert.assertNull(byteArray98);
        org.junit.Assert.assertNull(imageMetadata99);
    }

    @Test
    public void test0732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0732");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser0.getDefaultParameters();
        java.io.File file32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = null;
        byte[] byteArray36 = pcxImageParser33.getIccProfileBytes(byteSource34, pcxImagingParameters35);
        java.lang.String str37 = pcxImageParser33.getName();
        java.lang.String str38 = pcxImageParser33.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder41 = pcxImageParser40.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance43 = pcxImageParser40.getFormatCompliance(byteSource42);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = pcxImageParser40.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata45 = pcxImageParser33.getMetadata(byteSource39, pcxImagingParameters44);
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser47 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser47.getMetadata(byteSource48);
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser51 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder52 = pcxImageParser51.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance54 = pcxImageParser51.getFormatCompliance(byteSource53);
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata56 = pcxImageParser51.getMetadata(byteSource55);
        boolean boolean58 = pcxImageParser51.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters59 = pcxImageParser51.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata60 = pcxImageParser47.getMetadata(byteSource50, pcxImagingParameters59);
        byte[] byteArray61 = pcxImageParser33.getIccProfileBytes(byteSource46, pcxImagingParameters59);
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance63 = pcxImageParser33.getFormatCompliance(byteSource62);
        java.nio.ByteOrder byteOrder64 = pcxImageParser33.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata66 = pcxImageParser33.getMetadata(byteSource65);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters67 = pcxImageParser33.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray68 = pcxImageParser0.getIccProfileBytes(file32, pcxImagingParameters67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Pcx-Custom" + "'", str37, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Pcx-Custom" + "'", str38, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder41);
        org.junit.Assert.assertNull(formatCompliance43);
        org.junit.Assert.assertNotNull(pcxImagingParameters44);
        org.junit.Assert.assertNull(imageMetadata45);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertNotNull(byteOrder52);
        org.junit.Assert.assertNull(formatCompliance54);
        org.junit.Assert.assertNull(imageMetadata56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters59);
        org.junit.Assert.assertNull(imageMetadata60);
        org.junit.Assert.assertNull(byteArray61);
        org.junit.Assert.assertNull(formatCompliance63);
        org.junit.Assert.assertNotNull(byteOrder64);
        org.junit.Assert.assertNull(imageMetadata66);
        org.junit.Assert.assertNotNull(pcxImagingParameters67);
    }

    @Test
    public void test0733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0733");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata17 = pcxImageParser0.getMetadata(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder20 = pcxImageParser19.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance22 = pcxImageParser19.getFormatCompliance(byteSource21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser19.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser25.getMetadata(byteSource26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder30 = pcxImageParser29.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser29.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser29.getMetadata(byteSource33);
        boolean boolean36 = pcxImageParser29.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser25.getMetadata(byteSource28, pcxImagingParameters37);
        byte[] byteArray39 = pcxImageParser19.getIccProfileBytes(byteSource24, pcxImagingParameters37);
        java.lang.String str40 = pcxImageParser19.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = pcxImageParser19.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat42 = null;
        boolean boolean43 = pcxImageParser19.canAcceptType(imageFormat42);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = pcxImageParser19.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser19.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage46 = pcxImageParser0.getBufferedImage(byteSource18, pcxImagingParameters45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertNull(imageMetadata17);
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNull(formatCompliance22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(byteOrder30);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters37);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNull(byteArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Pcx-Custom" + "'", str40, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters44);
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
    }

    @Test
    public void test0734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0734");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters6 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser0.getMetadata(byteSource7);
        org.apache.commons.imaging.ImageFormat imageFormat9 = null;
        boolean boolean10 = pcxImageParser0.canAcceptType(imageFormat9);
        java.awt.image.BufferedImage bufferedImage11 = null;
        java.io.OutputStream outputStream12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = null;
        byte[] byteArray16 = pcxImageParser13.getIccProfileBytes(byteSource14, pcxImagingParameters15);
        java.lang.String str17 = pcxImageParser13.getName();
        java.lang.String str18 = pcxImageParser13.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser20 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder21 = pcxImageParser20.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance23 = pcxImageParser20.getFormatCompliance(byteSource22);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = pcxImageParser20.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser13.getMetadata(byteSource19, pcxImagingParameters24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser27 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser27.getMetadata(byteSource28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder32 = pcxImageParser31.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance34 = pcxImageParser31.getFormatCompliance(byteSource33);
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser31.getMetadata(byteSource35);
        boolean boolean38 = pcxImageParser31.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = pcxImageParser31.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser27.getMetadata(byteSource30, pcxImagingParameters39);
        byte[] byteArray41 = pcxImageParser13.getIccProfileBytes(byteSource26, pcxImagingParameters39);
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance43 = pcxImageParser13.getFormatCompliance(byteSource42);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = pcxImageParser13.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage11, outputStream12, pcxImagingParameters44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNotNull(pcxImagingParameters6);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(byteArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Pcx-Custom" + "'", str17, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Pcx-Custom" + "'", str18, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder21);
        org.junit.Assert.assertNull(formatCompliance23);
        org.junit.Assert.assertNotNull(pcxImagingParameters24);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertNull(formatCompliance34);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters39);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertNull(byteArray41);
        org.junit.Assert.assertNull(formatCompliance43);
        org.junit.Assert.assertNotNull(pcxImagingParameters44);
    }

    @Test
    public void test0735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0735");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        boolean boolean5 = pcxImageParser0.canAcceptExtension("Pcx-Custom");
        java.lang.Class<?> wildcardClass6 = pcxImageParser0.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0736");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        java.nio.ByteOrder byteOrder32 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo34 = pcxImageParser0.getImageInfo(byteSource33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(byteOrder32);
    }

    @Test
    public void test0737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0737");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        java.nio.ByteOrder byteOrder2 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance4 = pcxImageParser0.getFormatCompliance(byteSource3);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass5 = formatCompliance4.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertNull(formatCompliance4);
    }

    @Test
    public void test0738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0738");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        java.nio.ByteOrder byteOrder28 = pcxImageParser0.getByteOrder();
        java.io.File file29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder31 = pcxImageParser30.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance33 = pcxImageParser30.getFormatCompliance(byteSource32);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser30.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser36 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser36.getMetadata(byteSource37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder41 = pcxImageParser40.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance43 = pcxImageParser40.getFormatCompliance(byteSource42);
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata45 = pcxImageParser40.getMetadata(byteSource44);
        boolean boolean47 = pcxImageParser40.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = pcxImageParser40.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser36.getMetadata(byteSource39, pcxImagingParameters48);
        byte[] byteArray50 = pcxImageParser30.getIccProfileBytes(byteSource35, pcxImagingParameters48);
        java.lang.String str51 = pcxImageParser30.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser30.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser0.getMetadata(file29, pcxImagingParameters52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(byteOrder28);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNull(formatCompliance33);
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNotNull(byteOrder41);
        org.junit.Assert.assertNull(formatCompliance43);
        org.junit.Assert.assertNull(imageMetadata45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters48);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertNull(byteArray50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Pcx-Custom" + "'", str51, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
    }

    @Test
    public void test0739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0739");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = null;
        byte[] byteArray9 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters8);
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = null;
        byte[] byteArray14 = pcxImageParser11.getIccProfileBytes(byteSource12, pcxImagingParameters13);
        java.lang.String str15 = pcxImageParser11.getName();
        java.lang.String str16 = pcxImageParser11.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser11.getMetadata(byteSource17, pcxImagingParameters22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser25.getMetadata(byteSource26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder30 = pcxImageParser29.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser29.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser29.getMetadata(byteSource33);
        boolean boolean36 = pcxImageParser29.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser25.getMetadata(byteSource28, pcxImagingParameters37);
        byte[] byteArray39 = pcxImageParser11.getIccProfileBytes(byteSource24, pcxImagingParameters37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance41 = pcxImageParser11.getFormatCompliance(byteSource40);
        java.nio.ByteOrder byteOrder42 = pcxImageParser11.getByteOrder();
        java.nio.ByteOrder byteOrder43 = pcxImageParser11.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser45 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder46 = pcxImageParser45.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance48 = pcxImageParser45.getFormatCompliance(byteSource47);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters49 = pcxImageParser45.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser51 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser51.getMetadata(byteSource52);
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser55 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder56 = pcxImageParser55.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance58 = pcxImageParser55.getFormatCompliance(byteSource57);
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata60 = pcxImageParser55.getMetadata(byteSource59);
        boolean boolean62 = pcxImageParser55.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters63 = pcxImageParser55.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata64 = pcxImageParser51.getMetadata(byteSource54, pcxImagingParameters63);
        byte[] byteArray65 = pcxImageParser45.getIccProfileBytes(byteSource50, pcxImagingParameters63);
        java.lang.String str66 = pcxImageParser45.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters67 = pcxImageParser45.getDefaultParameters();
        byte[] byteArray68 = pcxImageParser11.getIccProfileBytes(byteSource44, pcxImagingParameters67);
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance70 = pcxImageParser11.getFormatCompliance(byteSource69);
        org.apache.commons.imaging.bytesource.ByteSource byteSource71 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser72 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource73 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters74 = null;
        byte[] byteArray75 = pcxImageParser72.getIccProfileBytes(byteSource73, pcxImagingParameters74);
        java.lang.String str76 = pcxImageParser72.getName();
        java.lang.String str77 = pcxImageParser72.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource78 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance79 = pcxImageParser72.getFormatCompliance(byteSource78);
        org.apache.commons.imaging.bytesource.ByteSource byteSource80 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser81 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder82 = pcxImageParser81.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource83 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance84 = pcxImageParser81.getFormatCompliance(byteSource83);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters85 = pcxImageParser81.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat86 = null;
        boolean boolean87 = pcxImageParser81.canAcceptType(imageFormat86);
        java.lang.String str88 = pcxImageParser81.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters89 = pcxImageParser81.getDefaultParameters();
        byte[] byteArray90 = pcxImageParser72.getIccProfileBytes(byteSource80, pcxImagingParameters89);
        org.apache.commons.imaging.ImageFormat imageFormat91 = null;
        boolean boolean92 = pcxImageParser72.canAcceptType(imageFormat91);
        org.apache.commons.imaging.ImageFormat imageFormat93 = null;
        boolean boolean94 = pcxImageParser72.canAcceptType(imageFormat93);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters95 = pcxImageParser72.getDefaultParameters();
        byte[] byteArray96 = pcxImageParser11.getIccProfileBytes(byteSource71, pcxImagingParameters95);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage97 = pcxImageParser0.getBufferedImage(byteSource10, pcxImagingParameters95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(byteArray9);
        org.junit.Assert.assertNull(byteArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Pcx-Custom" + "'", str15, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Pcx-Custom" + "'", str16, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(byteOrder30);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters37);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNull(byteArray39);
        org.junit.Assert.assertNull(formatCompliance41);
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteOrder46);
        org.junit.Assert.assertNull(formatCompliance48);
        org.junit.Assert.assertNotNull(pcxImagingParameters49);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertNotNull(byteOrder56);
        org.junit.Assert.assertNull(formatCompliance58);
        org.junit.Assert.assertNull(imageMetadata60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters63);
        org.junit.Assert.assertNull(imageMetadata64);
        org.junit.Assert.assertNull(byteArray65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Pcx-Custom" + "'", str66, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters67);
        org.junit.Assert.assertNull(byteArray68);
        org.junit.Assert.assertNull(formatCompliance70);
        org.junit.Assert.assertNull(byteArray75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "Pcx-Custom" + "'", str76, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "Pcx-Custom" + "'", str77, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance79);
        org.junit.Assert.assertNotNull(byteOrder82);
        org.junit.Assert.assertNull(formatCompliance84);
        org.junit.Assert.assertNotNull(pcxImagingParameters85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "pcx" + "'", str88, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters89);
        org.junit.Assert.assertNull(byteArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters95);
        org.junit.Assert.assertNull(byteArray96);
    }

    @Test
    public void test0740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0740");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getName();
        java.io.File file8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = null;
        byte[] byteArray12 = pcxImageParser9.getIccProfileBytes(byteSource10, pcxImagingParameters11);
        java.nio.ByteOrder byteOrder13 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance15 = pcxImageParser9.getFormatCompliance(byteSource14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = null;
        byte[] byteArray20 = pcxImageParser17.getIccProfileBytes(byteSource18, pcxImagingParameters19);
        java.lang.String str21 = pcxImageParser17.getName();
        java.lang.String str22 = pcxImageParser17.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser17.getMetadata(byteSource23, pcxImagingParameters28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser31.getMetadata(byteSource32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder36 = pcxImageParser35.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance38 = pcxImageParser35.getFormatCompliance(byteSource37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser35.getMetadata(byteSource39);
        boolean boolean42 = pcxImageParser35.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser35.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser31.getMetadata(byteSource34, pcxImagingParameters43);
        byte[] byteArray45 = pcxImageParser17.getIccProfileBytes(byteSource30, pcxImagingParameters43);
        org.apache.commons.imaging.ImageFormat imageFormat46 = null;
        boolean boolean47 = pcxImageParser17.canAcceptType(imageFormat46);
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser49 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder50 = pcxImageParser49.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance52 = pcxImageParser49.getFormatCompliance(byteSource51);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters53 = pcxImageParser49.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat54 = null;
        boolean boolean55 = pcxImageParser49.canAcceptType(imageFormat54);
        java.lang.String str56 = pcxImageParser49.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters57 = pcxImageParser49.getDefaultParameters();
        byte[] byteArray58 = pcxImageParser17.getIccProfileBytes(byteSource48, pcxImagingParameters57);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata59 = pcxImageParser9.getMetadata(byteSource16, pcxImagingParameters57);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension60 = pcxImageParser0.getImageSize(file8, pcxImagingParameters57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Pcx-Custom" + "'", str7, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray12);
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNull(formatCompliance15);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Pcx-Custom" + "'", str22, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertNull(imageMetadata33);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNull(formatCompliance38);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertNull(byteArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(byteOrder50);
        org.junit.Assert.assertNull(formatCompliance52);
        org.junit.Assert.assertNotNull(pcxImagingParameters53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "pcx" + "'", str56, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters57);
        org.junit.Assert.assertNull(byteArray58);
        org.junit.Assert.assertNull(imageMetadata59);
    }

    @Test
    public void test0741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0741");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser3 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder4 = pcxImageParser3.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser3.getFormatCompliance(byteSource5);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = pcxImageParser3.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata11 = pcxImageParser9.getMetadata(byteSource10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder14 = pcxImageParser13.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser13.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata18 = pcxImageParser13.getMetadata(byteSource17);
        boolean boolean20 = pcxImageParser13.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser9.getMetadata(byteSource12, pcxImagingParameters21);
        byte[] byteArray23 = pcxImageParser3.getIccProfileBytes(byteSource8, pcxImagingParameters21);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser0.getMetadata(byteSource2, pcxImagingParameters21);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str26 = pcxImageParser0.dumpImageFile(byteSource25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNull(formatCompliance6);
        org.junit.Assert.assertNotNull(pcxImagingParameters7);
        org.junit.Assert.assertNull(imageMetadata11);
        org.junit.Assert.assertNotNull(byteOrder14);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNull(imageMetadata18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNull(byteArray23);
        org.junit.Assert.assertNull(imageMetadata24);
    }

    @Test
    public void test0742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0742");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        java.nio.ByteOrder byteOrder28 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        java.io.File file31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser32.getMetadata(byteSource33);
        org.apache.commons.imaging.ImageFormat imageFormat35 = null;
        boolean boolean36 = pcxImageParser32.canAcceptType(imageFormat35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser38 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder39 = pcxImageParser38.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance41 = pcxImageParser38.getFormatCompliance(byteSource40);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser38.getDefaultParameters();
        java.lang.String str43 = pcxImageParser38.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata45 = pcxImageParser38.getMetadata(byteSource44);
        boolean boolean47 = pcxImageParser38.canAcceptExtension("");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = pcxImageParser38.getDefaultParameters();
        byte[] byteArray49 = pcxImageParser32.getIccProfileBytes(byteSource37, pcxImagingParameters48);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension50 = pcxImageParser0.getImageSize(file31, pcxImagingParameters48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(byteOrder28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(byteOrder39);
        org.junit.Assert.assertNull(formatCompliance41);
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "pcx" + "'", str43, "pcx");
        org.junit.Assert.assertNull(imageMetadata45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters48);
        org.junit.Assert.assertNull(byteArray49);
    }

    @Test
    public void test0743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0743");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters6 = pcxImageParser0.getDefaultParameters();
        boolean boolean8 = pcxImageParser0.canAcceptExtension("");
        java.io.File file9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata11 = pcxImageParser0.getMetadata(file9, pcxImagingParameters10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNotNull(pcxImagingParameters6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0744");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        java.io.File file14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension15 = pcxImageParser0.getImageSize(file14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
    }

    @Test
    public void test0745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0745");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat10 = null;
        boolean boolean11 = pcxImageParser0.canAcceptType(imageFormat10);
        java.io.File file12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser0.getMetadata(file12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(pcxImagingParameters9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0746");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder8 = pcxImageParser0.getByteOrder();
        java.io.File file9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata18 = pcxImageParser16.getMetadata(byteSource17);
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser20 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder21 = pcxImageParser20.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance23 = pcxImageParser20.getFormatCompliance(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser20.getMetadata(byteSource24);
        boolean boolean27 = pcxImageParser20.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser20.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser16.getMetadata(byteSource19, pcxImagingParameters28);
        byte[] byteArray30 = pcxImageParser10.getIccProfileBytes(byteSource15, pcxImagingParameters28);
        java.lang.String str31 = pcxImageParser10.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser10.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo33 = pcxImageParser0.getImageInfo(file9, pcxImagingParameters32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNull(imageMetadata18);
        org.junit.Assert.assertNotNull(byteOrder21);
        org.junit.Assert.assertNull(formatCompliance23);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertNull(byteArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Pcx-Custom" + "'", str31, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
    }

    @Test
    public void test0747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0747");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.nio.ByteOrder byteOrder4 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder7 = pcxImageParser6.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance9 = pcxImageParser6.getFormatCompliance(byteSource8);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat11 = null;
        boolean boolean12 = pcxImageParser6.canAcceptType(imageFormat11);
        java.lang.String str13 = pcxImageParser6.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource5, pcxImagingParameters14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder18 = pcxImageParser17.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance20 = pcxImageParser17.getFormatCompliance(byteSource19);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser17.getMetadata(byteSource21);
        boolean boolean24 = pcxImageParser17.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser17.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata26 = pcxImageParser0.getMetadata(byteSource16, pcxImagingParameters25);
        java.awt.image.BufferedImage bufferedImage27 = null;
        java.io.OutputStream outputStream28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder30 = pcxImageParser29.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser29.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = null;
        byte[] byteArray38 = pcxImageParser35.getIccProfileBytes(byteSource36, pcxImagingParameters37);
        java.lang.String str39 = pcxImageParser35.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser35.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser29.getMetadata(byteSource34, pcxImagingParameters40);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser29.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage27, outputStream28, pcxImagingParameters42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNull(formatCompliance9);
        org.junit.Assert.assertNotNull(pcxImagingParameters10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNull(formatCompliance20);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
        org.junit.Assert.assertNull(imageMetadata26);
        org.junit.Assert.assertNotNull(byteOrder30);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
        org.junit.Assert.assertNull(byteArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "pcx" + "'", str39, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(imageMetadata41);
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
    }

    @Test
    public void test0748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0748");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters6 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser0.getMetadata(byteSource7);
        java.lang.String str9 = pcxImageParser0.getName();
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNotNull(pcxImagingParameters6);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Pcx-Custom" + "'", str9, "Pcx-Custom");
    }

    @Test
    public void test0749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0749");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = null;
        byte[] byteArray9 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters8);
        java.io.File file10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str12 = pcxImageParser11.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance14 = pcxImageParser11.getFormatCompliance(byteSource13);
        boolean boolean16 = pcxImageParser11.canAcceptExtension("");
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder22 = pcxImageParser21.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance24 = pcxImageParser21.getFormatCompliance(byteSource23);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser27 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser27.getMetadata(byteSource28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder32 = pcxImageParser31.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance34 = pcxImageParser31.getFormatCompliance(byteSource33);
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser31.getMetadata(byteSource35);
        boolean boolean38 = pcxImageParser31.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = pcxImageParser31.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser27.getMetadata(byteSource30, pcxImagingParameters39);
        byte[] byteArray41 = pcxImageParser21.getIccProfileBytes(byteSource26, pcxImagingParameters39);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser18.getMetadata(byteSource20, pcxImagingParameters39);
        byte[] byteArray43 = pcxImageParser11.getIccProfileBytes(byteSource17, pcxImagingParameters39);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser0.getMetadata(file10, pcxImagingParameters39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(byteArray9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Pcx-Custom" + "'", str12, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNull(formatCompliance24);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertNull(formatCompliance34);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters39);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertNull(byteArray41);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertNull(byteArray43);
    }

    @Test
    public void test0750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0750");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = null;
        byte[] byteArray11 = pcxImageParser8.getIccProfileBytes(byteSource9, pcxImagingParameters10);
        java.lang.String str12 = pcxImageParser8.getName();
        java.lang.String str13 = pcxImageParser8.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder16 = pcxImageParser15.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser15.getFormatCompliance(byteSource17);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser15.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata20 = pcxImageParser8.getMetadata(byteSource14, pcxImagingParameters19);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage21 = pcxImageParser0.getBufferedImage(byteSource7, pcxImagingParameters19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(byteArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Pcx-Custom" + "'", str12, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNull(formatCompliance18);
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
        org.junit.Assert.assertNull(imageMetadata20);
    }

    @Test
    public void test0751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0751");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = null;
        byte[] byteArray10 = pcxImageParser7.getIccProfileBytes(byteSource8, pcxImagingParameters9);
        java.lang.String str11 = pcxImageParser7.getName();
        java.lang.String str12 = pcxImageParser7.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser7.getMetadata(byteSource13, pcxImagingParameters18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser21.getMetadata(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder26 = pcxImageParser25.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance28 = pcxImageParser25.getFormatCompliance(byteSource27);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata30 = pcxImageParser25.getMetadata(byteSource29);
        boolean boolean32 = pcxImageParser25.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser25.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser21.getMetadata(byteSource24, pcxImagingParameters33);
        byte[] byteArray35 = pcxImageParser7.getIccProfileBytes(byteSource20, pcxImagingParameters33);
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance37 = pcxImageParser7.getFormatCompliance(byteSource36);
        java.nio.ByteOrder byteOrder38 = pcxImageParser7.getByteOrder();
        java.nio.ByteOrder byteOrder39 = pcxImageParser7.getByteOrder();
        java.lang.String str40 = pcxImageParser7.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = pcxImageParser7.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension42 = pcxImageParser0.getImageSize(byteSource6, pcxImagingParameters41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Pcx-Custom" + "'", str11, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Pcx-Custom" + "'", str12, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNotNull(byteOrder26);
        org.junit.Assert.assertNull(formatCompliance28);
        org.junit.Assert.assertNull(imageMetadata30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertNull(byteArray35);
        org.junit.Assert.assertNull(formatCompliance37);
        org.junit.Assert.assertNotNull(byteOrder38);
        org.junit.Assert.assertNotNull(byteOrder39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Pcx-Custom" + "'", str40, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters41);
    }

    @Test
    public void test0752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0752");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = null;
        byte[] byteArray19 = pcxImageParser16.getIccProfileBytes(byteSource17, pcxImagingParameters18);
        java.lang.String str20 = pcxImageParser16.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser10.getMetadata(byteSource15, pcxImagingParameters21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser0.getMetadata(byteSource9, pcxImagingParameters23);
        java.lang.String str25 = pcxImageParser0.getName();
        java.lang.String str26 = pcxImageParser0.getName();
        java.io.File file27 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str28 = pcxImageParser0.dumpImageFile(file27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "pcx" + "'", str20, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Pcx-Custom" + "'", str26, "Pcx-Custom");
    }

    @Test
    public void test0753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0753");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.nio.ByteOrder byteOrder29 = pcxImageParser0.getByteOrder();
        java.lang.String str30 = pcxImageParser0.getDefaultExtension();
        java.io.File file31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder36 = pcxImageParser35.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance38 = pcxImageParser35.getFormatCompliance(byteSource37);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = pcxImageParser35.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser41 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata43 = pcxImageParser41.getMetadata(byteSource42);
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser45 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder46 = pcxImageParser45.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance48 = pcxImageParser45.getFormatCompliance(byteSource47);
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata50 = pcxImageParser45.getMetadata(byteSource49);
        boolean boolean52 = pcxImageParser45.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters53 = pcxImageParser45.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata54 = pcxImageParser41.getMetadata(byteSource44, pcxImagingParameters53);
        byte[] byteArray55 = pcxImageParser35.getIccProfileBytes(byteSource40, pcxImagingParameters53);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata56 = pcxImageParser32.getMetadata(byteSource34, pcxImagingParameters53);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage57 = pcxImageParser0.getBufferedImage(file31, pcxImagingParameters53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "pcx" + "'", str30, "pcx");
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNull(formatCompliance38);
        org.junit.Assert.assertNotNull(pcxImagingParameters39);
        org.junit.Assert.assertNull(imageMetadata43);
        org.junit.Assert.assertNotNull(byteOrder46);
        org.junit.Assert.assertNull(formatCompliance48);
        org.junit.Assert.assertNull(imageMetadata50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters53);
        org.junit.Assert.assertNull(imageMetadata54);
        org.junit.Assert.assertNull(byteArray55);
        org.junit.Assert.assertNull(imageMetadata56);
    }

    @Test
    public void test0754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0754");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = null;
        byte[] byteArray20 = pcxImageParser17.getIccProfileBytes(byteSource18, pcxImagingParameters19);
        java.lang.String str21 = pcxImageParser17.getName();
        java.lang.String str22 = pcxImageParser17.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser17.getMetadata(byteSource23, pcxImagingParameters28);
        java.lang.String str30 = pcxImageParser17.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser17.getMetadata(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = null;
        byte[] byteArray37 = pcxImageParser34.getIccProfileBytes(byteSource35, pcxImagingParameters36);
        java.lang.String str38 = pcxImageParser34.getName();
        java.lang.String str39 = pcxImageParser34.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser41 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder42 = pcxImageParser41.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance44 = pcxImageParser41.getFormatCompliance(byteSource43);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser41.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser34.getMetadata(byteSource40, pcxImagingParameters45);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser48 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters50 = null;
        byte[] byteArray51 = pcxImageParser48.getIccProfileBytes(byteSource49, pcxImagingParameters50);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser48.getDefaultParameters();
        byte[] byteArray53 = pcxImageParser34.getIccProfileBytes(byteSource47, pcxImagingParameters52);
        byte[] byteArray54 = pcxImageParser17.getIccProfileBytes(byteSource33, pcxImagingParameters52);
        byte[] byteArray55 = pcxImageParser9.getIccProfileBytes(byteSource16, pcxImagingParameters52);
        byte[] byteArray56 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters52);
        java.io.File file57 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str58 = pcxImageParser0.dumpImageFile(file57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNotNull(pcxImagingParameters15);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Pcx-Custom" + "'", str22, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Pcx-Custom" + "'", str30, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNull(byteArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Pcx-Custom" + "'", str38, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Pcx-Custom" + "'", str39, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNull(formatCompliance44);
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertNull(imageMetadata46);
        org.junit.Assert.assertNull(byteArray51);
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(byteArray53);
        org.junit.Assert.assertNull(byteArray54);
        org.junit.Assert.assertNull(byteArray55);
        org.junit.Assert.assertNull(byteArray56);
    }

    @Test
    public void test0755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0755");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat2 = null;
        boolean boolean3 = pcxImageParser0.canAcceptType(imageFormat2);
        java.io.File file4 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser5 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = null;
        byte[] byteArray8 = pcxImageParser5.getIccProfileBytes(byteSource6, pcxImagingParameters7);
        java.nio.ByteOrder byteOrder9 = pcxImageParser5.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser5.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = null;
        byte[] byteArray16 = pcxImageParser13.getIccProfileBytes(byteSource14, pcxImagingParameters15);
        java.lang.String str17 = pcxImageParser13.getName();
        java.lang.String str18 = pcxImageParser13.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser20 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder21 = pcxImageParser20.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance23 = pcxImageParser20.getFormatCompliance(byteSource22);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = pcxImageParser20.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser13.getMetadata(byteSource19, pcxImagingParameters24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser27 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser27.getMetadata(byteSource28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder32 = pcxImageParser31.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance34 = pcxImageParser31.getFormatCompliance(byteSource33);
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser31.getMetadata(byteSource35);
        boolean boolean38 = pcxImageParser31.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = pcxImageParser31.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser27.getMetadata(byteSource30, pcxImagingParameters39);
        byte[] byteArray41 = pcxImageParser13.getIccProfileBytes(byteSource26, pcxImagingParameters39);
        org.apache.commons.imaging.ImageFormat imageFormat42 = null;
        boolean boolean43 = pcxImageParser13.canAcceptType(imageFormat42);
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance45 = pcxImageParser13.getFormatCompliance(byteSource44);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser5.getMetadata(byteSource12, pcxImagingParameters46);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension48 = pcxImageParser0.getImageSize(file4, pcxImagingParameters46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(byteArray8);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNull(byteArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Pcx-Custom" + "'", str17, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Pcx-Custom" + "'", str18, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder21);
        org.junit.Assert.assertNull(formatCompliance23);
        org.junit.Assert.assertNotNull(pcxImagingParameters24);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertNull(formatCompliance34);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters39);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertNull(byteArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(formatCompliance45);
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
        org.junit.Assert.assertNull(imageMetadata47);
    }

    @Test
    public void test0756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0756");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        java.lang.String str5 = pcxImageParser0.getName();
        java.io.File file6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension7 = pcxImageParser0.getImageSize(file6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
    }

    @Test
    public void test0757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0757");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.ImageFormat imageFormat8 = null;
        boolean boolean9 = pcxImageParser0.canAcceptType(imageFormat8);
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata11 = pcxImageParser0.getMetadata(byteSource10);
        boolean boolean13 = pcxImageParser0.canAcceptExtension("");
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(imageMetadata11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0758");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        boolean boolean30 = pcxImageParser0.canAcceptExtension("pcx");
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat32 = null;
        boolean boolean33 = pcxImageParser0.canAcceptType(imageFormat32);
        java.io.File file34 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str35 = pcxImageParser0.dumpImageFile(file34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test0759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0759");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser0.getFormatCompliance(byteSource5);
        java.io.File file7 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray8 = pcxImageParser0.getIccProfileBytes(file7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance6);
    }

    @Test
    public void test0760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0760");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata17 = pcxImageParser0.getMetadata(byteSource16);
        java.io.File file18 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray19 = pcxImageParser0.getIccProfileBytes(file18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertNull(imageMetadata17);
    }

    @Test
    public void test0761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0761");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser0.canAcceptType(imageFormat23);
        java.lang.String str25 = pcxImageParser0.getDefaultExtension();
        java.lang.String str26 = pcxImageParser0.getDefaultExtension();
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "pcx" + "'", str25, "pcx");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "pcx" + "'", str26, "pcx");
    }

    @Test
    public void test0762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0762");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser22 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str23 = pcxImageParser22.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance25 = pcxImageParser22.getFormatCompliance(byteSource24);
        java.lang.String str26 = pcxImageParser22.getName();
        java.lang.String str27 = pcxImageParser22.getName();
        org.apache.commons.imaging.ImageFormat imageFormat28 = null;
        boolean boolean29 = pcxImageParser22.canAcceptType(imageFormat28);
        boolean boolean31 = pcxImageParser22.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = null;
        byte[] byteArray36 = pcxImageParser33.getIccProfileBytes(byteSource34, pcxImagingParameters35);
        java.lang.String str37 = pcxImageParser33.getName();
        java.lang.String str38 = pcxImageParser33.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder41 = pcxImageParser40.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance43 = pcxImageParser40.getFormatCompliance(byteSource42);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = pcxImageParser40.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata45 = pcxImageParser33.getMetadata(byteSource39, pcxImagingParameters44);
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser47 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters49 = null;
        byte[] byteArray50 = pcxImageParser47.getIccProfileBytes(byteSource48, pcxImagingParameters49);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters51 = pcxImageParser47.getDefaultParameters();
        byte[] byteArray52 = pcxImageParser33.getIccProfileBytes(byteSource46, pcxImagingParameters51);
        byte[] byteArray53 = pcxImageParser22.getIccProfileBytes(byteSource32, pcxImagingParameters51);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage54 = pcxImageParser0.getBufferedImage(byteSource21, pcxImagingParameters51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Pcx-Custom" + "'", str23, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Pcx-Custom" + "'", str26, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Pcx-Custom" + "'", str27, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Pcx-Custom" + "'", str37, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Pcx-Custom" + "'", str38, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder41);
        org.junit.Assert.assertNull(formatCompliance43);
        org.junit.Assert.assertNotNull(pcxImagingParameters44);
        org.junit.Assert.assertNull(imageMetadata45);
        org.junit.Assert.assertNull(byteArray50);
        org.junit.Assert.assertNotNull(pcxImagingParameters51);
        org.junit.Assert.assertNull(byteArray52);
        org.junit.Assert.assertNull(byteArray53);
    }

    @Test
    public void test0763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0763");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser4.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser8.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.lang.String str29 = pcxImageParser8.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser4.getMetadata(byteSource7, pcxImagingParameters30);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters30);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = null;
        byte[] byteArray35 = pcxImageParser0.getIccProfileBytes(byteSource33, pcxImagingParameters34);
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo37 = pcxImageParser0.getImageInfo(byteSource36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNull(byteArray35);
    }

    @Test
    public void test0764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0764");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.awt.image.BufferedImage bufferedImage4 = null;
        java.io.OutputStream outputStream5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder7 = pcxImageParser6.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance9 = pcxImageParser6.getFormatCompliance(byteSource8);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat11 = null;
        boolean boolean12 = pcxImageParser6.canAcceptType(imageFormat11);
        java.lang.String str13 = pcxImageParser6.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser6.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage4, outputStream5, pcxImagingParameters14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNull(formatCompliance9);
        org.junit.Assert.assertNotNull(pcxImagingParameters10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
    }

    @Test
    public void test0765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0765");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.nio.ByteOrder byteOrder4 = pcxImageParser0.getByteOrder();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser7.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension13 = pcxImageParser0.getImageSize(byteSource6, pcxImagingParameters12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
    }

    @Test
    public void test0766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0766");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = pcxImageParser0.getDefaultParameters();
        java.io.File file10 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray11 = pcxImageParser0.getIccProfileBytes(file10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(pcxImagingParameters9);
    }

    @Test
    public void test0767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0767");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser0.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser0.getDefaultParameters();
        java.io.File file34 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser0.getFormatCompliance(file34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
    }

    @Test
    public void test0768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0768");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser9.canAcceptType(imageFormat14);
        java.lang.String str16 = pcxImageParser9.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser9.getDefaultParameters();
        byte[] byteArray18 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters17);
        org.apache.commons.imaging.ImageFormat imageFormat19 = null;
        boolean boolean20 = pcxImageParser0.canAcceptType(imageFormat19);
        java.lang.String str21 = pcxImageParser0.getName();
        java.io.File file22 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray23 = pcxImageParser0.getIccProfileBytes(file22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "pcx" + "'", str16, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
    }

    @Test
    public void test0769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0769");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.ImageFormat imageFormat1 = null;
        boolean boolean2 = pcxImageParser0.canAcceptType(imageFormat1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance4 = pcxImageParser0.getFormatCompliance(byteSource3);
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str6 = pcxImageParser0.dumpImageFile(byteSource5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(formatCompliance4);
    }

    @Test
    public void test0770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0770");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat2 = null;
        boolean boolean3 = pcxImageParser0.canAcceptType(imageFormat2);
        org.apache.commons.imaging.ImageFormat imageFormat4 = null;
        boolean boolean5 = pcxImageParser0.canAcceptType(imageFormat4);
        java.io.File file6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = null;
        byte[] byteArray10 = pcxImageParser7.getIccProfileBytes(byteSource8, pcxImagingParameters9);
        java.lang.String str11 = pcxImageParser7.getName();
        java.lang.String str12 = pcxImageParser7.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser7.getMetadata(byteSource13, pcxImagingParameters18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser21.getMetadata(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder26 = pcxImageParser25.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance28 = pcxImageParser25.getFormatCompliance(byteSource27);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata30 = pcxImageParser25.getMetadata(byteSource29);
        boolean boolean32 = pcxImageParser25.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser25.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser21.getMetadata(byteSource24, pcxImagingParameters33);
        byte[] byteArray35 = pcxImageParser7.getIccProfileBytes(byteSource20, pcxImagingParameters33);
        org.apache.commons.imaging.ImageFormat imageFormat36 = null;
        boolean boolean37 = pcxImageParser7.canAcceptType(imageFormat36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance39 = pcxImageParser7.getFormatCompliance(byteSource38);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser7.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage41 = pcxImageParser0.getBufferedImage(file6, pcxImagingParameters40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(byteArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Pcx-Custom" + "'", str11, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Pcx-Custom" + "'", str12, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNotNull(byteOrder26);
        org.junit.Assert.assertNull(formatCompliance28);
        org.junit.Assert.assertNull(imageMetadata30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertNull(byteArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(formatCompliance39);
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
    }

    @Test
    public void test0771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0771");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.nio.ByteOrder byteOrder29 = pcxImageParser0.getByteOrder();
        java.lang.String str30 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser0.getFormatCompliance(byteSource31);
        java.io.File file33 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser0.getMetadata(file33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "pcx" + "'", str30, "pcx");
        org.junit.Assert.assertNull(formatCompliance32);
    }

    @Test
    public void test0772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0772");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser0.getMetadata(byteSource21, pcxImagingParameters22);
        java.lang.String str24 = pcxImageParser0.getDefaultExtension();
        boolean boolean26 = pcxImageParser0.canAcceptExtension("");
        java.lang.String str27 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser29.getMetadata(byteSource30);
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser29.getMetadata(byteSource32);
        org.apache.commons.imaging.ImageFormat imageFormat34 = null;
        boolean boolean35 = pcxImageParser29.canAcceptType(imageFormat34);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser29.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage37 = pcxImageParser0.getBufferedImage(byteSource28, pcxImagingParameters36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "pcx" + "'", str24, "pcx");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Pcx-Custom" + "'", str27, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertNull(imageMetadata33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
    }

    @Test
    public void test0773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0773");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.nio.ByteOrder byteOrder4 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder7 = pcxImageParser6.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance9 = pcxImageParser6.getFormatCompliance(byteSource8);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat11 = null;
        boolean boolean12 = pcxImageParser6.canAcceptType(imageFormat11);
        java.lang.String str13 = pcxImageParser6.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource5, pcxImagingParameters14);
        java.io.File file16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = pcxImageParser0.dumpImageFile(file16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNull(formatCompliance9);
        org.junit.Assert.assertNotNull(pcxImagingParameters10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNull(imageMetadata15);
    }

    @Test
    public void test0774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0774");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.ImageFormat imageFormat3 = null;
        boolean boolean4 = pcxImageParser0.canAcceptType(imageFormat3);
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.Class<?> wildcardClass7 = pcxImageParser0.getClass();
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0775");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters7);
        java.io.File file9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList10 = pcxImageParser0.getAllBufferedImages(file9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNull(imageMetadata8);
    }

    @Test
    public void test0776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0776");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder30 = pcxImageParser29.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser29.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser35.getMetadata(byteSource36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder40 = pcxImageParser39.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance42 = pcxImageParser39.getFormatCompliance(byteSource41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser39.getMetadata(byteSource43);
        boolean boolean46 = pcxImageParser39.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = pcxImageParser39.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser35.getMetadata(byteSource38, pcxImagingParameters47);
        byte[] byteArray49 = pcxImageParser29.getIccProfileBytes(byteSource34, pcxImagingParameters47);
        java.lang.String str50 = pcxImageParser29.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters51 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata52 = pcxImageParser0.getMetadata(byteSource28, pcxImagingParameters51);
        java.nio.ByteOrder byteOrder53 = pcxImageParser0.getByteOrder();
        java.io.File file54 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser55 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters57 = null;
        byte[] byteArray58 = pcxImageParser55.getIccProfileBytes(byteSource56, pcxImagingParameters57);
        java.lang.String str59 = pcxImageParser55.getName();
        java.lang.String str60 = pcxImageParser55.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser62 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder63 = pcxImageParser62.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource64 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance65 = pcxImageParser62.getFormatCompliance(byteSource64);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters66 = pcxImageParser62.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata67 = pcxImageParser55.getMetadata(byteSource61, pcxImagingParameters66);
        org.apache.commons.imaging.bytesource.ByteSource byteSource68 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser69 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource70 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata71 = pcxImageParser69.getMetadata(byteSource70);
        org.apache.commons.imaging.bytesource.ByteSource byteSource72 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser73 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder74 = pcxImageParser73.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource75 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance76 = pcxImageParser73.getFormatCompliance(byteSource75);
        org.apache.commons.imaging.bytesource.ByteSource byteSource77 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata78 = pcxImageParser73.getMetadata(byteSource77);
        boolean boolean80 = pcxImageParser73.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters81 = pcxImageParser73.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata82 = pcxImageParser69.getMetadata(byteSource72, pcxImagingParameters81);
        byte[] byteArray83 = pcxImageParser55.getIccProfileBytes(byteSource68, pcxImagingParameters81);
        org.apache.commons.imaging.bytesource.ByteSource byteSource84 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance85 = pcxImageParser55.getFormatCompliance(byteSource84);
        java.nio.ByteOrder byteOrder86 = pcxImageParser55.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource87 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata88 = pcxImageParser55.getMetadata(byteSource87);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters89 = pcxImageParser55.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray90 = pcxImageParser0.getIccProfileBytes(file54, pcxImagingParameters89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(byteOrder30);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNull(formatCompliance42);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters47);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNull(byteArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Pcx-Custom" + "'", str50, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters51);
        org.junit.Assert.assertNull(imageMetadata52);
        org.junit.Assert.assertNotNull(byteOrder53);
        org.junit.Assert.assertNull(byteArray58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Pcx-Custom" + "'", str59, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Pcx-Custom" + "'", str60, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder63);
        org.junit.Assert.assertNull(formatCompliance65);
        org.junit.Assert.assertNotNull(pcxImagingParameters66);
        org.junit.Assert.assertNull(imageMetadata67);
        org.junit.Assert.assertNull(imageMetadata71);
        org.junit.Assert.assertNotNull(byteOrder74);
        org.junit.Assert.assertNull(formatCompliance76);
        org.junit.Assert.assertNull(imageMetadata78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters81);
        org.junit.Assert.assertNull(imageMetadata82);
        org.junit.Assert.assertNull(byteArray83);
        org.junit.Assert.assertNull(formatCompliance85);
        org.junit.Assert.assertNotNull(byteOrder86);
        org.junit.Assert.assertNull(imageMetadata88);
        org.junit.Assert.assertNotNull(pcxImagingParameters89);
    }

    @Test
    public void test0777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0777");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = null;
        byte[] byteArray13 = pcxImageParser10.getIccProfileBytes(byteSource11, pcxImagingParameters12);
        java.lang.String str14 = pcxImageParser10.getName();
        java.lang.String str15 = pcxImageParser10.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser10.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder20 = pcxImageParser19.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance22 = pcxImageParser19.getFormatCompliance(byteSource21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser19.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat24 = null;
        boolean boolean25 = pcxImageParser19.canAcceptType(imageFormat24);
        java.lang.String str26 = pcxImageParser19.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = pcxImageParser19.getDefaultParameters();
        byte[] byteArray28 = pcxImageParser10.getIccProfileBytes(byteSource18, pcxImagingParameters27);
        byte[] byteArray29 = pcxImageParser0.getIccProfileBytes(byteSource9, pcxImagingParameters27);
        java.io.File file30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = null;
        byte[] byteArray34 = pcxImageParser31.getIccProfileBytes(byteSource32, pcxImagingParameters33);
        java.lang.String str35 = pcxImageParser31.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser31.getMetadata(byteSource36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance39 = pcxImageParser31.getFormatCompliance(byteSource38);
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser41 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder42 = pcxImageParser41.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance44 = pcxImageParser41.getFormatCompliance(byteSource43);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser41.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser47 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters49 = null;
        byte[] byteArray50 = pcxImageParser47.getIccProfileBytes(byteSource48, pcxImagingParameters49);
        java.lang.String str51 = pcxImageParser47.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser47.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser41.getMetadata(byteSource46, pcxImagingParameters52);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters54 = pcxImageParser41.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata55 = pcxImageParser31.getMetadata(byteSource40, pcxImagingParameters54);
        java.lang.String str56 = pcxImageParser31.getName();
        java.lang.String str57 = pcxImageParser31.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser59 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters61 = null;
        byte[] byteArray62 = pcxImageParser59.getIccProfileBytes(byteSource60, pcxImagingParameters61);
        java.lang.String str63 = pcxImageParser59.getName();
        java.lang.String str64 = pcxImageParser59.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser66 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder67 = pcxImageParser66.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource68 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance69 = pcxImageParser66.getFormatCompliance(byteSource68);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters70 = pcxImageParser66.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata71 = pcxImageParser59.getMetadata(byteSource65, pcxImagingParameters70);
        java.lang.String str72 = pcxImageParser59.getName();
        org.apache.commons.imaging.ImageFormat imageFormat73 = null;
        boolean boolean74 = pcxImageParser59.canAcceptType(imageFormat73);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters75 = pcxImageParser59.getDefaultParameters();
        byte[] byteArray76 = pcxImageParser31.getIccProfileBytes(byteSource58, pcxImagingParameters75);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo77 = pcxImageParser0.getImageInfo(file30, pcxImagingParameters75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(byteArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Pcx-Custom" + "'", str14, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Pcx-Custom" + "'", str15, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNull(formatCompliance22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "pcx" + "'", str26, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(byteArray29);
        org.junit.Assert.assertNull(byteArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Pcx-Custom" + "'", str35, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertNull(formatCompliance39);
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNull(formatCompliance44);
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertNull(byteArray50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "pcx" + "'", str51, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertNotNull(pcxImagingParameters54);
        org.junit.Assert.assertNull(imageMetadata55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Pcx-Custom" + "'", str56, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Pcx-Custom" + "'", str57, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Pcx-Custom" + "'", str63, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Pcx-Custom" + "'", str64, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertNull(formatCompliance69);
        org.junit.Assert.assertNotNull(pcxImagingParameters70);
        org.junit.Assert.assertNull(imageMetadata71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Pcx-Custom" + "'", str72, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters75);
        org.junit.Assert.assertNull(byteArray76);
    }

    @Test
    public void test0778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0778");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = null;
        byte[] byteArray6 = pcxImageParser0.getIccProfileBytes(byteSource4, pcxImagingParameters5);
        java.io.File file7 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray8 = pcxImageParser0.getIccProfileBytes(file7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNull(byteArray6);
    }

    @Test
    public void test0779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0779");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        boolean boolean8 = pcxImageParser0.canAcceptExtension("Pcx-Custom");
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = pcxImageParser0.dumpImageFile(byteSource9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0780");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.ImageFormat imageFormat3 = null;
        boolean boolean4 = pcxImageParser0.canAcceptType(imageFormat3);
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder7 = pcxImageParser6.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance9 = pcxImageParser6.getFormatCompliance(byteSource8);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = pcxImageParser6.getDefaultParameters();
        java.lang.String str11 = pcxImageParser6.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser6.getMetadata(byteSource12);
        boolean boolean15 = pcxImageParser6.canAcceptExtension("");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = pcxImageParser6.getDefaultParameters();
        byte[] byteArray17 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters16);
        java.io.File file18 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance19 = pcxImageParser0.getFormatCompliance(file18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNull(formatCompliance9);
        org.junit.Assert.assertNotNull(pcxImagingParameters10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "pcx" + "'", str11, "pcx");
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters16);
        org.junit.Assert.assertNull(byteArray17);
    }

    @Test
    public void test0781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0781");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        boolean boolean5 = pcxImageParser0.canAcceptExtension("");
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata11 = pcxImageParser9.getMetadata(byteSource10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder14 = pcxImageParser13.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser13.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata18 = pcxImageParser13.getMetadata(byteSource17);
        boolean boolean20 = pcxImageParser13.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser9.getMetadata(byteSource12, pcxImagingParameters21);
        byte[] byteArray23 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters21);
        java.nio.ByteOrder byteOrder24 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = null;
        byte[] byteArray29 = pcxImageParser26.getIccProfileBytes(byteSource27, pcxImagingParameters28);
        java.lang.String str30 = pcxImageParser26.getName();
        java.lang.String str31 = pcxImageParser26.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder34 = pcxImageParser33.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance36 = pcxImageParser33.getFormatCompliance(byteSource35);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = pcxImageParser33.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser26.getMetadata(byteSource32, pcxImagingParameters37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser40.getMetadata(byteSource41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder45 = pcxImageParser44.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance47 = pcxImageParser44.getFormatCompliance(byteSource46);
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser44.getMetadata(byteSource48);
        boolean boolean51 = pcxImageParser44.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser44.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser40.getMetadata(byteSource43, pcxImagingParameters52);
        byte[] byteArray54 = pcxImageParser26.getIccProfileBytes(byteSource39, pcxImagingParameters52);
        org.apache.commons.imaging.ImageFormat imageFormat55 = null;
        boolean boolean56 = pcxImageParser26.canAcceptType(imageFormat55);
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser58 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder59 = pcxImageParser58.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance61 = pcxImageParser58.getFormatCompliance(byteSource60);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters62 = pcxImageParser58.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat63 = null;
        boolean boolean64 = pcxImageParser58.canAcceptType(imageFormat63);
        java.lang.String str65 = pcxImageParser58.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters66 = pcxImageParser58.getDefaultParameters();
        byte[] byteArray67 = pcxImageParser26.getIccProfileBytes(byteSource57, pcxImagingParameters66);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata68 = pcxImageParser0.getMetadata(byteSource25, pcxImagingParameters66);
        java.io.File file69 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList70 = pcxImageParser0.getAllBufferedImages(file69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNull(imageMetadata11);
        org.junit.Assert.assertNotNull(byteOrder14);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNull(imageMetadata18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNull(byteArray23);
        org.junit.Assert.assertNotNull(byteOrder24);
        org.junit.Assert.assertNull(byteArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Pcx-Custom" + "'", str30, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Pcx-Custom" + "'", str31, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder34);
        org.junit.Assert.assertNull(formatCompliance36);
        org.junit.Assert.assertNotNull(pcxImagingParameters37);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertNotNull(byteOrder45);
        org.junit.Assert.assertNull(formatCompliance47);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertNull(byteArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(byteOrder59);
        org.junit.Assert.assertNull(formatCompliance61);
        org.junit.Assert.assertNotNull(pcxImagingParameters62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "pcx" + "'", str65, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters66);
        org.junit.Assert.assertNull(byteArray67);
        org.junit.Assert.assertNull(imageMetadata68);
    }

    @Test
    public void test0782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0782");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata4 = pcxImageParser0.getMetadata(byteSource3);
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        java.lang.String str6 = pcxImageParser0.getDefaultExtension();
        java.io.File file7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = null;
        byte[] byteArray11 = pcxImageParser8.getIccProfileBytes(byteSource9, pcxImagingParameters10);
        java.lang.String str12 = pcxImageParser8.getName();
        java.lang.String str13 = pcxImageParser8.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder16 = pcxImageParser15.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser15.getFormatCompliance(byteSource17);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser15.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata20 = pcxImageParser8.getMetadata(byteSource14, pcxImagingParameters19);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser22 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser22.getMetadata(byteSource23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder27 = pcxImageParser26.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance29 = pcxImageParser26.getFormatCompliance(byteSource28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser26.getMetadata(byteSource30);
        boolean boolean33 = pcxImageParser26.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser26.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser22.getMetadata(byteSource25, pcxImagingParameters34);
        byte[] byteArray36 = pcxImageParser8.getIccProfileBytes(byteSource21, pcxImagingParameters34);
        org.apache.commons.imaging.ImageFormat imageFormat37 = null;
        boolean boolean38 = pcxImageParser8.canAcceptType(imageFormat37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder41 = pcxImageParser40.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance43 = pcxImageParser40.getFormatCompliance(byteSource42);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = pcxImageParser40.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat45 = null;
        boolean boolean46 = pcxImageParser40.canAcceptType(imageFormat45);
        java.lang.String str47 = pcxImageParser40.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = pcxImageParser40.getDefaultParameters();
        byte[] byteArray49 = pcxImageParser8.getIccProfileBytes(byteSource39, pcxImagingParameters48);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters50 = pcxImageParser8.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray51 = pcxImageParser0.getIccProfileBytes(file7, pcxImagingParameters50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "pcx" + "'", str6, "pcx");
        org.junit.Assert.assertNull(byteArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Pcx-Custom" + "'", str12, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNull(formatCompliance18);
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
        org.junit.Assert.assertNull(imageMetadata20);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNull(formatCompliance29);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(byteOrder41);
        org.junit.Assert.assertNull(formatCompliance43);
        org.junit.Assert.assertNotNull(pcxImagingParameters44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "pcx" + "'", str47, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters48);
        org.junit.Assert.assertNull(byteArray49);
        org.junit.Assert.assertNotNull(pcxImagingParameters50);
    }

    @Test
    public void test0783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0783");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        boolean boolean9 = pcxImageParser0.canAcceptExtension("");
        java.lang.String str10 = pcxImageParser0.getName();
        java.io.File file11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser12 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = null;
        byte[] byteArray15 = pcxImageParser12.getIccProfileBytes(byteSource13, pcxImagingParameters14);
        java.lang.String str16 = pcxImageParser12.getDefaultExtension();
        java.lang.String str17 = pcxImageParser12.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = null;
        byte[] byteArray22 = pcxImageParser19.getIccProfileBytes(byteSource20, pcxImagingParameters21);
        java.lang.String str23 = pcxImageParser19.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser19.getMetadata(byteSource24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser19.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser19.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser19.canAcceptType(imageFormat29);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser19.getDefaultParameters();
        byte[] byteArray32 = pcxImageParser12.getIccProfileBytes(byteSource18, pcxImagingParameters31);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser0.getMetadata(file11, pcxImagingParameters31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Pcx-Custom" + "'", str10, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "pcx" + "'", str16, "pcx");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Pcx-Custom" + "'", str17, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Pcx-Custom" + "'", str23, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
        org.junit.Assert.assertNull(byteArray32);
    }

    @Test
    public void test0784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0784");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = null;
        byte[] byteArray20 = pcxImageParser17.getIccProfileBytes(byteSource18, pcxImagingParameters19);
        java.lang.String str21 = pcxImageParser17.getName();
        java.lang.String str22 = pcxImageParser17.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser17.getMetadata(byteSource23, pcxImagingParameters28);
        java.lang.String str30 = pcxImageParser17.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser17.getMetadata(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = null;
        byte[] byteArray37 = pcxImageParser34.getIccProfileBytes(byteSource35, pcxImagingParameters36);
        java.lang.String str38 = pcxImageParser34.getName();
        java.lang.String str39 = pcxImageParser34.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser41 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder42 = pcxImageParser41.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance44 = pcxImageParser41.getFormatCompliance(byteSource43);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser41.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser34.getMetadata(byteSource40, pcxImagingParameters45);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser48 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters50 = null;
        byte[] byteArray51 = pcxImageParser48.getIccProfileBytes(byteSource49, pcxImagingParameters50);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser48.getDefaultParameters();
        byte[] byteArray53 = pcxImageParser34.getIccProfileBytes(byteSource47, pcxImagingParameters52);
        byte[] byteArray54 = pcxImageParser17.getIccProfileBytes(byteSource33, pcxImagingParameters52);
        byte[] byteArray55 = pcxImageParser9.getIccProfileBytes(byteSource16, pcxImagingParameters52);
        byte[] byteArray56 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters52);
        java.io.PrintWriter printWriter57 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean59 = pcxImageParser0.dumpImageFile(printWriter57, byteSource58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNotNull(pcxImagingParameters15);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Pcx-Custom" + "'", str22, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Pcx-Custom" + "'", str30, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNull(byteArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Pcx-Custom" + "'", str38, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Pcx-Custom" + "'", str39, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNull(formatCompliance44);
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertNull(imageMetadata46);
        org.junit.Assert.assertNull(byteArray51);
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(byteArray53);
        org.junit.Assert.assertNull(byteArray54);
        org.junit.Assert.assertNull(byteArray55);
        org.junit.Assert.assertNull(byteArray56);
    }

    @Test
    public void test0785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0785");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder30 = pcxImageParser29.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser29.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser35.getMetadata(byteSource36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder40 = pcxImageParser39.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance42 = pcxImageParser39.getFormatCompliance(byteSource41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser39.getMetadata(byteSource43);
        boolean boolean46 = pcxImageParser39.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = pcxImageParser39.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser35.getMetadata(byteSource38, pcxImagingParameters47);
        byte[] byteArray49 = pcxImageParser29.getIccProfileBytes(byteSource34, pcxImagingParameters47);
        java.lang.String str50 = pcxImageParser29.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters51 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata52 = pcxImageParser0.getMetadata(byteSource28, pcxImagingParameters51);
        java.nio.ByteOrder byteOrder53 = pcxImageParser0.getByteOrder();
        java.io.PrintWriter printWriter54 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean56 = pcxImageParser0.dumpImageFile(printWriter54, byteSource55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(byteOrder30);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNull(formatCompliance42);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters47);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNull(byteArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Pcx-Custom" + "'", str50, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters51);
        org.junit.Assert.assertNull(imageMetadata52);
        org.junit.Assert.assertNotNull(byteOrder53);
    }

    @Test
    public void test0786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0786");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        boolean boolean6 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser8.getDefaultParameters();
        byte[] byteArray14 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters13);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList17 = pcxImageParser0.getAllBufferedImages(byteSource16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertNull(byteArray14);
        org.junit.Assert.assertNotNull(pcxImagingParameters15);
    }

    @Test
    public void test0787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0787");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        boolean boolean30 = pcxImageParser0.canAcceptExtension("pcx");
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat32 = null;
        boolean boolean33 = pcxImageParser0.canAcceptType(imageFormat32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser0.getMetadata(byteSource34);
        java.io.PrintWriter printWriter36 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean38 = pcxImageParser0.dumpImageFile(printWriter36, byteSource37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(imageMetadata35);
    }

    @Test
    public void test0788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0788");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = null;
        byte[] byteArray9 = pcxImageParser6.getIccProfileBytes(byteSource7, pcxImagingParameters8);
        java.lang.String str10 = pcxImageParser6.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser6.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance14 = pcxImageParser6.getFormatCompliance(byteSource13);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = null;
        byte[] byteArray20 = pcxImageParser17.getIccProfileBytes(byteSource18, pcxImagingParameters19);
        java.lang.String str21 = pcxImageParser17.getName();
        java.lang.String str22 = pcxImageParser17.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser17.getMetadata(byteSource23, pcxImagingParameters28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser31.getMetadata(byteSource32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder36 = pcxImageParser35.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance38 = pcxImageParser35.getFormatCompliance(byteSource37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser35.getMetadata(byteSource39);
        boolean boolean42 = pcxImageParser35.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser35.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser31.getMetadata(byteSource34, pcxImagingParameters43);
        byte[] byteArray45 = pcxImageParser17.getIccProfileBytes(byteSource30, pcxImagingParameters43);
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance47 = pcxImageParser17.getFormatCompliance(byteSource46);
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser49 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters51 = null;
        byte[] byteArray52 = pcxImageParser49.getIccProfileBytes(byteSource50, pcxImagingParameters51);
        java.nio.ByteOrder byteOrder53 = pcxImageParser49.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser55 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder56 = pcxImageParser55.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance58 = pcxImageParser55.getFormatCompliance(byteSource57);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters59 = pcxImageParser55.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat60 = null;
        boolean boolean61 = pcxImageParser55.canAcceptType(imageFormat60);
        java.lang.String str62 = pcxImageParser55.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters63 = pcxImageParser55.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata64 = pcxImageParser49.getMetadata(byteSource54, pcxImagingParameters63);
        byte[] byteArray65 = pcxImageParser17.getIccProfileBytes(byteSource48, pcxImagingParameters63);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata66 = pcxImageParser6.getMetadata(byteSource16, pcxImagingParameters63);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension67 = pcxImageParser0.getImageSize(byteSource5, pcxImagingParameters63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Pcx-Custom" + "'", str10, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(formatCompliance14);
        org.junit.Assert.assertNotNull(pcxImagingParameters15);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Pcx-Custom" + "'", str22, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertNull(imageMetadata33);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNull(formatCompliance38);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertNull(byteArray45);
        org.junit.Assert.assertNull(formatCompliance47);
        org.junit.Assert.assertNull(byteArray52);
        org.junit.Assert.assertNotNull(byteOrder53);
        org.junit.Assert.assertNotNull(byteOrder56);
        org.junit.Assert.assertNull(formatCompliance58);
        org.junit.Assert.assertNotNull(pcxImagingParameters59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "pcx" + "'", str62, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters63);
        org.junit.Assert.assertNull(imageMetadata64);
        org.junit.Assert.assertNull(byteArray65);
        org.junit.Assert.assertNull(imageMetadata66);
    }

    @Test
    public void test0789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0789");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser24.canAcceptType(imageFormat29);
        java.lang.String str31 = pcxImageParser24.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser24.getDefaultParameters();
        byte[] byteArray33 = pcxImageParser0.getIccProfileBytes(byteSource23, pcxImagingParameters32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser0.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList37 = pcxImageParser0.getAllBufferedImages(byteSource36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "pcx" + "'", str31, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertNull(formatCompliance35);
    }

    @Test
    public void test0790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0790");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters6 = pcxImageParser0.getDefaultParameters();
        boolean boolean8 = pcxImageParser0.canAcceptExtension("");
        java.io.File file9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata18 = pcxImageParser16.getMetadata(byteSource17);
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser20 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder21 = pcxImageParser20.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance23 = pcxImageParser20.getFormatCompliance(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser20.getMetadata(byteSource24);
        boolean boolean27 = pcxImageParser20.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser20.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser16.getMetadata(byteSource19, pcxImagingParameters28);
        byte[] byteArray30 = pcxImageParser10.getIccProfileBytes(byteSource15, pcxImagingParameters28);
        java.lang.String str31 = pcxImageParser10.getName();
        java.lang.String str32 = pcxImageParser10.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder35 = pcxImageParser34.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance37 = pcxImageParser34.getFormatCompliance(byteSource36);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser34.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat39 = null;
        boolean boolean40 = pcxImageParser34.canAcceptType(imageFormat39);
        java.lang.String str41 = pcxImageParser34.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser34.getDefaultParameters();
        byte[] byteArray43 = pcxImageParser10.getIccProfileBytes(byteSource33, pcxImagingParameters42);
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser45 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder46 = pcxImageParser45.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser48 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder49 = pcxImageParser48.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance51 = pcxImageParser48.getFormatCompliance(byteSource50);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser48.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser54 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata56 = pcxImageParser54.getMetadata(byteSource55);
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser58 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder59 = pcxImageParser58.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance61 = pcxImageParser58.getFormatCompliance(byteSource60);
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata63 = pcxImageParser58.getMetadata(byteSource62);
        boolean boolean65 = pcxImageParser58.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters66 = pcxImageParser58.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata67 = pcxImageParser54.getMetadata(byteSource57, pcxImagingParameters66);
        byte[] byteArray68 = pcxImageParser48.getIccProfileBytes(byteSource53, pcxImagingParameters66);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata69 = pcxImageParser45.getMetadata(byteSource47, pcxImagingParameters66);
        byte[] byteArray70 = pcxImageParser10.getIccProfileBytes(byteSource44, pcxImagingParameters66);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo71 = pcxImageParser0.getImageInfo(file9, pcxImagingParameters66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNotNull(pcxImagingParameters6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNull(imageMetadata18);
        org.junit.Assert.assertNotNull(byteOrder21);
        org.junit.Assert.assertNull(formatCompliance23);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertNull(byteArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Pcx-Custom" + "'", str31, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "pcx" + "'", str32, "pcx");
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNull(formatCompliance37);
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "pcx" + "'", str41, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertNull(byteArray43);
        org.junit.Assert.assertNotNull(byteOrder46);
        org.junit.Assert.assertNotNull(byteOrder49);
        org.junit.Assert.assertNull(formatCompliance51);
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(imageMetadata56);
        org.junit.Assert.assertNotNull(byteOrder59);
        org.junit.Assert.assertNull(formatCompliance61);
        org.junit.Assert.assertNull(imageMetadata63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters66);
        org.junit.Assert.assertNull(imageMetadata67);
        org.junit.Assert.assertNull(byteArray68);
        org.junit.Assert.assertNull(imageMetadata69);
        org.junit.Assert.assertNull(byteArray70);
    }

    @Test
    public void test0791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0791");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        boolean boolean30 = pcxImageParser0.canAcceptExtension("pcx");
        java.io.File file31 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension32 = pcxImageParser0.getImageSize(file31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test0792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0792");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser0.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser0.getDefaultParameters();
        java.io.File file34 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser0.getMetadata(file34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
    }

    @Test
    public void test0793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0793");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser9.canAcceptType(imageFormat14);
        java.lang.String str16 = pcxImageParser9.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser9.getDefaultParameters();
        byte[] byteArray18 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters17);
        org.apache.commons.imaging.ImageFormat imageFormat19 = null;
        boolean boolean20 = pcxImageParser0.canAcceptType(imageFormat19);
        org.apache.commons.imaging.ImageFormat imageFormat21 = null;
        boolean boolean22 = pcxImageParser0.canAcceptType(imageFormat21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser0.getDefaultParameters();
        java.io.File file24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser25.getMetadata(byteSource26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser29.getMetadata(byteSource30);
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder34 = pcxImageParser33.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance36 = pcxImageParser33.getFormatCompliance(byteSource35);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = pcxImageParser33.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser39.getMetadata(byteSource40);
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser43 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder44 = pcxImageParser43.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance46 = pcxImageParser43.getFormatCompliance(byteSource45);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser43.getMetadata(byteSource47);
        boolean boolean50 = pcxImageParser43.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters51 = pcxImageParser43.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata52 = pcxImageParser39.getMetadata(byteSource42, pcxImagingParameters51);
        byte[] byteArray53 = pcxImageParser33.getIccProfileBytes(byteSource38, pcxImagingParameters51);
        java.lang.String str54 = pcxImageParser33.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters55 = pcxImageParser33.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata56 = pcxImageParser29.getMetadata(byteSource32, pcxImagingParameters55);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata57 = pcxImageParser25.getMetadata(byteSource28, pcxImagingParameters55);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage58 = pcxImageParser0.getBufferedImage(file24, pcxImagingParameters55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "pcx" + "'", str16, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertNotNull(byteOrder34);
        org.junit.Assert.assertNull(formatCompliance36);
        org.junit.Assert.assertNotNull(pcxImagingParameters37);
        org.junit.Assert.assertNull(imageMetadata41);
        org.junit.Assert.assertNotNull(byteOrder44);
        org.junit.Assert.assertNull(formatCompliance46);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters51);
        org.junit.Assert.assertNull(imageMetadata52);
        org.junit.Assert.assertNull(byteArray53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Pcx-Custom" + "'", str54, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters55);
        org.junit.Assert.assertNull(imageMetadata56);
        org.junit.Assert.assertNull(imageMetadata57);
    }

    @Test
    public void test0794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0794");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.ImageFormat imageFormat8 = null;
        boolean boolean9 = pcxImageParser0.canAcceptType(imageFormat8);
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList11 = pcxImageParser0.getAllBufferedImages(byteSource10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0795");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata4 = pcxImageParser0.getMetadata(byteSource3);
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        java.lang.String str6 = pcxImageParser0.getDefaultExtension();
        java.io.File file7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList8 = pcxImageParser0.getAllBufferedImages(file7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "pcx" + "'", str6, "pcx");
    }

    @Test
    public void test0796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0796");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        org.apache.commons.imaging.ImageFormat imageFormat31 = null;
        boolean boolean32 = pcxImageParser0.canAcceptType(imageFormat31);
        java.io.File file33 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList34 = pcxImageParser0.getAllBufferedImages(file33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test0797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0797");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        java.io.File file6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension7 = pcxImageParser0.getImageSize(file6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
    }

    @Test
    public void test0798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0798");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser4.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser8.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.lang.String str29 = pcxImageParser8.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser4.getMetadata(byteSource7, pcxImagingParameters30);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters30);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = null;
        byte[] byteArray35 = pcxImageParser0.getIccProfileBytes(byteSource33, pcxImagingParameters34);
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser37 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata39 = pcxImageParser37.getMetadata(byteSource38);
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser37.getMetadata(byteSource40);
        org.apache.commons.imaging.ImageFormat imageFormat42 = null;
        boolean boolean43 = pcxImageParser37.canAcceptType(imageFormat42);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = pcxImageParser37.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension45 = pcxImageParser0.getImageSize(byteSource36, pcxImagingParameters44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNull(byteArray35);
        org.junit.Assert.assertNull(imageMetadata39);
        org.junit.Assert.assertNull(imageMetadata41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters44);
    }

    @Test
    public void test0799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0799");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource14);
        org.apache.commons.imaging.ImageFormat imageFormat16 = null;
        boolean boolean17 = pcxImageParser0.canAcceptType(imageFormat16);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList20 = pcxImageParser0.getAllBufferedImages(byteSource19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
    }

    @Test
    public void test0800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0800");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        java.lang.String str13 = pcxImageParser8.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser8.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser8.canAcceptExtension("");
        boolean boolean19 = pcxImageParser8.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = null;
        byte[] byteArray24 = pcxImageParser21.getIccProfileBytes(byteSource22, pcxImagingParameters23);
        java.lang.String str25 = pcxImageParser21.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser21.getMetadata(byteSource26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance29 = pcxImageParser21.getFormatCompliance(byteSource28);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = null;
        byte[] byteArray35 = pcxImageParser32.getIccProfileBytes(byteSource33, pcxImagingParameters34);
        java.lang.String str36 = pcxImageParser32.getName();
        java.lang.String str37 = pcxImageParser32.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder40 = pcxImageParser39.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance42 = pcxImageParser39.getFormatCompliance(byteSource41);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser39.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser32.getMetadata(byteSource38, pcxImagingParameters43);
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser46 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser46.getMetadata(byteSource47);
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser50 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder51 = pcxImageParser50.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance53 = pcxImageParser50.getFormatCompliance(byteSource52);
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata55 = pcxImageParser50.getMetadata(byteSource54);
        boolean boolean57 = pcxImageParser50.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters58 = pcxImageParser50.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata59 = pcxImageParser46.getMetadata(byteSource49, pcxImagingParameters58);
        byte[] byteArray60 = pcxImageParser32.getIccProfileBytes(byteSource45, pcxImagingParameters58);
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance62 = pcxImageParser32.getFormatCompliance(byteSource61);
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser64 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters66 = null;
        byte[] byteArray67 = pcxImageParser64.getIccProfileBytes(byteSource65, pcxImagingParameters66);
        java.nio.ByteOrder byteOrder68 = pcxImageParser64.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser70 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder71 = pcxImageParser70.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource72 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance73 = pcxImageParser70.getFormatCompliance(byteSource72);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters74 = pcxImageParser70.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat75 = null;
        boolean boolean76 = pcxImageParser70.canAcceptType(imageFormat75);
        java.lang.String str77 = pcxImageParser70.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters78 = pcxImageParser70.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata79 = pcxImageParser64.getMetadata(byteSource69, pcxImagingParameters78);
        byte[] byteArray80 = pcxImageParser32.getIccProfileBytes(byteSource63, pcxImagingParameters78);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata81 = pcxImageParser21.getMetadata(byteSource31, pcxImagingParameters78);
        byte[] byteArray82 = pcxImageParser8.getIccProfileBytes(byteSource20, pcxImagingParameters78);
        byte[] byteArray83 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters78);
        java.io.File file84 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser85 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder86 = pcxImageParser85.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource87 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance88 = pcxImageParser85.getFormatCompliance(byteSource87);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters89 = pcxImageParser85.getDefaultParameters();
        java.lang.String str90 = pcxImageParser85.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource91 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata92 = pcxImageParser85.getMetadata(byteSource91);
        boolean boolean94 = pcxImageParser85.canAcceptExtension("");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters95 = pcxImageParser85.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo96 = pcxImageParser0.getImageInfo(file84, pcxImagingParameters95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(formatCompliance29);
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(byteArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Pcx-Custom" + "'", str36, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Pcx-Custom" + "'", str37, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNull(formatCompliance42);
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNotNull(byteOrder51);
        org.junit.Assert.assertNull(formatCompliance53);
        org.junit.Assert.assertNull(imageMetadata55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters58);
        org.junit.Assert.assertNull(imageMetadata59);
        org.junit.Assert.assertNull(byteArray60);
        org.junit.Assert.assertNull(formatCompliance62);
        org.junit.Assert.assertNull(byteArray67);
        org.junit.Assert.assertNotNull(byteOrder68);
        org.junit.Assert.assertNotNull(byteOrder71);
        org.junit.Assert.assertNull(formatCompliance73);
        org.junit.Assert.assertNotNull(pcxImagingParameters74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "pcx" + "'", str77, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters78);
        org.junit.Assert.assertNull(imageMetadata79);
        org.junit.Assert.assertNull(byteArray80);
        org.junit.Assert.assertNull(imageMetadata81);
        org.junit.Assert.assertNull(byteArray82);
        org.junit.Assert.assertNull(byteArray83);
        org.junit.Assert.assertNotNull(byteOrder86);
        org.junit.Assert.assertNull(formatCompliance88);
        org.junit.Assert.assertNotNull(pcxImagingParameters89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "pcx" + "'", str90, "pcx");
        org.junit.Assert.assertNull(imageMetadata92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters95);
    }

    @Test
    public void test0801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0801");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = pcxImageParser0.dumpImageFile(byteSource8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNull(imageMetadata7);
    }

    @Test
    public void test0802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0802");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.nio.ByteOrder byteOrder29 = pcxImageParser0.getByteOrder();
        java.lang.String str30 = pcxImageParser0.getDefaultExtension();
        java.io.File file31 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension32 = pcxImageParser0.getImageSize(file31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "pcx" + "'", str30, "pcx");
    }

    @Test
    public void test0803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0803");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder8 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo10 = pcxImageParser0.getImageInfo(byteSource9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
        org.junit.Assert.assertNotNull(byteOrder8);
    }

    @Test
    public void test0804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0804");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.lang.String str4 = pcxImageParser0.getName();
        boolean boolean6 = pcxImageParser0.canAcceptExtension("hi!");
        java.lang.String str7 = pcxImageParser0.getName();
        java.lang.String str8 = pcxImageParser0.getDefaultExtension();
        java.io.File file9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = pcxImageParser0.dumpImageFile(file9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Pcx-Custom" + "'", str7, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "pcx" + "'", str8, "pcx");
    }

    @Test
    public void test0805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0805");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.io.File file4 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(file4, pcxImagingParameters5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
    }

    @Test
    public void test0806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0806");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser9.canAcceptType(imageFormat14);
        java.lang.String str16 = pcxImageParser9.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser9.getDefaultParameters();
        byte[] byteArray18 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters17);
        org.apache.commons.imaging.ImageFormat imageFormat19 = null;
        boolean boolean20 = pcxImageParser0.canAcceptType(imageFormat19);
        java.lang.String str21 = pcxImageParser0.getName();
        java.io.File file22 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean23 = pcxImageParser0.canAcceptExtension(file22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "pcx" + "'", str16, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
    }

    @Test
    public void test0807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0807");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        java.io.File file8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str10 = pcxImageParser9.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        java.lang.String str13 = pcxImageParser9.getName();
        java.lang.String str14 = pcxImageParser9.getName();
        org.apache.commons.imaging.ImageFormat imageFormat15 = null;
        boolean boolean16 = pcxImageParser9.canAcceptType(imageFormat15);
        boolean boolean18 = pcxImageParser9.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser20 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = null;
        byte[] byteArray23 = pcxImageParser20.getIccProfileBytes(byteSource21, pcxImagingParameters22);
        java.lang.String str24 = pcxImageParser20.getName();
        java.lang.String str25 = pcxImageParser20.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser27 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder28 = pcxImageParser27.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser27.getFormatCompliance(byteSource29);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser27.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser20.getMetadata(byteSource26, pcxImagingParameters31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = null;
        byte[] byteArray37 = pcxImageParser34.getIccProfileBytes(byteSource35, pcxImagingParameters36);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser34.getDefaultParameters();
        byte[] byteArray39 = pcxImageParser20.getIccProfileBytes(byteSource33, pcxImagingParameters38);
        byte[] byteArray40 = pcxImageParser9.getIccProfileBytes(byteSource19, pcxImagingParameters38);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray41 = pcxImageParser0.getIccProfileBytes(file8, pcxImagingParameters38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Pcx-Custom" + "'", str10, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Pcx-Custom" + "'", str14, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(byteArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Pcx-Custom" + "'", str24, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNull(byteArray37);
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
        org.junit.Assert.assertNull(byteArray39);
        org.junit.Assert.assertNull(byteArray40);
    }

    @Test
    public void test0808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0808");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.ImageFormat imageFormat1 = null;
        boolean boolean2 = pcxImageParser0.canAcceptType(imageFormat1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance4 = pcxImageParser0.getFormatCompliance(byteSource3);
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = null;
        byte[] byteArray9 = pcxImageParser6.getIccProfileBytes(byteSource7, pcxImagingParameters8);
        java.lang.String str10 = pcxImageParser6.getName();
        java.lang.String str11 = pcxImageParser6.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser6.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder16 = pcxImageParser15.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser15.getFormatCompliance(byteSource17);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser15.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat20 = null;
        boolean boolean21 = pcxImageParser15.canAcceptType(imageFormat20);
        java.lang.String str22 = pcxImageParser15.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser15.getDefaultParameters();
        byte[] byteArray24 = pcxImageParser6.getIccProfileBytes(byteSource14, pcxImagingParameters23);
        org.apache.commons.imaging.ImageFormat imageFormat25 = null;
        boolean boolean26 = pcxImageParser6.canAcceptType(imageFormat25);
        org.apache.commons.imaging.ImageFormat imageFormat27 = null;
        boolean boolean28 = pcxImageParser6.canAcceptType(imageFormat27);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = pcxImageParser6.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo30 = pcxImageParser0.getImageInfo(byteSource5, pcxImagingParameters29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(formatCompliance4);
        org.junit.Assert.assertNull(byteArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Pcx-Custom" + "'", str10, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Pcx-Custom" + "'", str11, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNull(formatCompliance18);
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters29);
    }

    @Test
    public void test0809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0809");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        boolean boolean5 = pcxImageParser0.canAcceptExtension("Pcx-Custom");
        java.io.File file6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat12 = null;
        boolean boolean13 = pcxImageParser7.canAcceptType(imageFormat12);
        java.nio.ByteOrder byteOrder14 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = pcxImageParser7.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage16 = pcxImageParser0.getBufferedImage(file6, pcxImagingParameters15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(byteOrder14);
        org.junit.Assert.assertNotNull(pcxImagingParameters15);
    }

    @Test
    public void test0810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0810");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat6 = null;
        boolean boolean7 = pcxImageParser0.canAcceptType(imageFormat6);
        boolean boolean9 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo11 = pcxImageParser0.getImageInfo(byteSource10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0811");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        boolean boolean6 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser8.getDefaultParameters();
        byte[] byteArray14 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters13);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = pcxImageParser0.getDefaultParameters();
        java.io.PrintWriter printWriter16 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean18 = pcxImageParser0.dumpImageFile(printWriter16, byteSource17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertNull(byteArray14);
        org.junit.Assert.assertNotNull(pcxImagingParameters15);
    }

    @Test
    public void test0812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0812");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = null;
        byte[] byteArray8 = pcxImageParser0.getIccProfileBytes(byteSource6, pcxImagingParameters7);
        java.io.File file9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser0.getFormatCompliance(file9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray8);
    }

    @Test
    public void test0813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0813");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        java.lang.String str6 = pcxImageParser0.getName();
        java.io.File file7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = null;
        byte[] byteArray11 = pcxImageParser8.getIccProfileBytes(byteSource9, pcxImagingParameters10);
        java.lang.String str12 = pcxImageParser8.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder16 = pcxImageParser15.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser15.getFormatCompliance(byteSource17);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser15.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = null;
        byte[] byteArray24 = pcxImageParser21.getIccProfileBytes(byteSource22, pcxImagingParameters23);
        java.lang.String str25 = pcxImageParser21.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser15.getMetadata(byteSource20, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser8.getIccProfileBytes(byteSource14, pcxImagingParameters26);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser0.getMetadata(file7, pcxImagingParameters26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Pcx-Custom" + "'", str6, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "pcx" + "'", str12, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNull(formatCompliance18);
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "pcx" + "'", str25, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
    }

    @Test
    public void test0814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0814");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata17 = pcxImageParser0.getMetadata(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = null;
        byte[] byteArray22 = pcxImageParser19.getIccProfileBytes(byteSource20, pcxImagingParameters21);
        java.lang.String str23 = pcxImageParser19.getDefaultExtension();
        java.lang.String str24 = pcxImageParser19.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = null;
        byte[] byteArray29 = pcxImageParser26.getIccProfileBytes(byteSource27, pcxImagingParameters28);
        java.lang.String str30 = pcxImageParser26.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser26.getMetadata(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance34 = pcxImageParser26.getFormatCompliance(byteSource33);
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser36 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder37 = pcxImageParser36.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance39 = pcxImageParser36.getFormatCompliance(byteSource38);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser36.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser42 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = null;
        byte[] byteArray45 = pcxImageParser42.getIccProfileBytes(byteSource43, pcxImagingParameters44);
        java.lang.String str46 = pcxImageParser42.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = pcxImageParser42.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser36.getMetadata(byteSource41, pcxImagingParameters47);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters49 = pcxImageParser36.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata50 = pcxImageParser26.getMetadata(byteSource35, pcxImagingParameters49);
        java.lang.String str51 = pcxImageParser26.getName();
        java.lang.String str52 = pcxImageParser26.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser54 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters56 = null;
        byte[] byteArray57 = pcxImageParser54.getIccProfileBytes(byteSource55, pcxImagingParameters56);
        java.lang.String str58 = pcxImageParser54.getName();
        java.lang.String str59 = pcxImageParser54.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser61 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder62 = pcxImageParser61.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance64 = pcxImageParser61.getFormatCompliance(byteSource63);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters65 = pcxImageParser61.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata66 = pcxImageParser54.getMetadata(byteSource60, pcxImagingParameters65);
        java.lang.String str67 = pcxImageParser54.getName();
        org.apache.commons.imaging.ImageFormat imageFormat68 = null;
        boolean boolean69 = pcxImageParser54.canAcceptType(imageFormat68);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters70 = pcxImageParser54.getDefaultParameters();
        byte[] byteArray71 = pcxImageParser26.getIccProfileBytes(byteSource53, pcxImagingParameters70);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata72 = pcxImageParser19.getMetadata(byteSource25, pcxImagingParameters70);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters73 = pcxImageParser19.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension74 = pcxImageParser0.getImageSize(byteSource18, pcxImagingParameters73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertNull(imageMetadata17);
        org.junit.Assert.assertNull(byteArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "pcx" + "'", str23, "pcx");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Pcx-Custom" + "'", str24, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Pcx-Custom" + "'", str30, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNull(formatCompliance34);
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNull(formatCompliance39);
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(byteArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "pcx" + "'", str46, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters47);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNotNull(pcxImagingParameters49);
        org.junit.Assert.assertNull(imageMetadata50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Pcx-Custom" + "'", str51, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Pcx-Custom" + "'", str52, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Pcx-Custom" + "'", str58, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Pcx-Custom" + "'", str59, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder62);
        org.junit.Assert.assertNull(formatCompliance64);
        org.junit.Assert.assertNotNull(pcxImagingParameters65);
        org.junit.Assert.assertNull(imageMetadata66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Pcx-Custom" + "'", str67, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters70);
        org.junit.Assert.assertNull(byteArray71);
        org.junit.Assert.assertNull(imageMetadata72);
        org.junit.Assert.assertNotNull(pcxImagingParameters73);
    }

    @Test
    public void test0815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0815");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser4.getMetadata(byteSource8);
        boolean boolean11 = pcxImageParser4.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters12);
        java.io.PrintWriter printWriter14 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean16 = pcxImageParser0.dumpImageFile(printWriter14, byteSource15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata13);
    }

    @Test
    public void test0816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0816");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser4.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser8.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.lang.String str29 = pcxImageParser8.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser4.getMetadata(byteSource7, pcxImagingParameters30);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters30);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = null;
        byte[] byteArray35 = pcxImageParser0.getIccProfileBytes(byteSource33, pcxImagingParameters34);
        java.nio.ByteOrder byteOrder36 = pcxImageParser0.getByteOrder();
        java.io.PrintWriter printWriter37 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean39 = pcxImageParser0.dumpImageFile(printWriter37, byteSource38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNull(byteArray35);
        org.junit.Assert.assertNotNull(byteOrder36);
    }

    @Test
    public void test0817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0817");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.Class<?> wildcardClass1 = pcxImageParser0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test0818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0818");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat10 = null;
        boolean boolean11 = pcxImageParser0.canAcceptType(imageFormat10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser0.getDefaultParameters();
        java.lang.String str13 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage16 = pcxImageParser0.getBufferedImage(byteSource14, pcxImagingParameters15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(pcxImagingParameters9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
    }

    @Test
    public void test0819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0819");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        java.nio.ByteOrder byteOrder28 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        java.io.PrintWriter printWriter31 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean33 = pcxImageParser0.dumpImageFile(printWriter31, byteSource32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(byteOrder28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test0820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0820");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        java.nio.ByteOrder byteOrder32 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder35 = pcxImageParser34.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance37 = pcxImageParser34.getFormatCompliance(byteSource36);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser34.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser40.getMetadata(byteSource41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder45 = pcxImageParser44.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance47 = pcxImageParser44.getFormatCompliance(byteSource46);
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser44.getMetadata(byteSource48);
        boolean boolean51 = pcxImageParser44.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser44.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser40.getMetadata(byteSource43, pcxImagingParameters52);
        byte[] byteArray54 = pcxImageParser34.getIccProfileBytes(byteSource39, pcxImagingParameters52);
        java.lang.String str55 = pcxImageParser34.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters56 = pcxImageParser34.getDefaultParameters();
        byte[] byteArray57 = pcxImageParser0.getIccProfileBytes(byteSource33, pcxImagingParameters56);
        org.apache.commons.imaging.ImageFormat imageFormat58 = null;
        boolean boolean59 = pcxImageParser0.canAcceptType(imageFormat58);
        java.io.File file60 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension61 = pcxImageParser0.getImageSize(file60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNull(formatCompliance37);
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertNotNull(byteOrder45);
        org.junit.Assert.assertNull(formatCompliance47);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertNull(byteArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Pcx-Custom" + "'", str55, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters56);
        org.junit.Assert.assertNull(byteArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test0821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0821");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata10 = pcxImageParser8.getMetadata(byteSource9);
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser12 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder13 = pcxImageParser12.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance15 = pcxImageParser12.getFormatCompliance(byteSource14);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = pcxImageParser12.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata20 = pcxImageParser18.getMetadata(byteSource19);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser22 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder23 = pcxImageParser22.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance25 = pcxImageParser22.getFormatCompliance(byteSource24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser22.getMetadata(byteSource26);
        boolean boolean29 = pcxImageParser22.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser22.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser18.getMetadata(byteSource21, pcxImagingParameters30);
        byte[] byteArray32 = pcxImageParser12.getIccProfileBytes(byteSource17, pcxImagingParameters30);
        java.lang.String str33 = pcxImageParser12.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser12.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser8.getMetadata(byteSource11, pcxImagingParameters34);
        byte[] byteArray36 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters34);
        java.io.File file37 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension38 = pcxImageParser0.getImageSize(file37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(imageMetadata10);
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNull(formatCompliance15);
        org.junit.Assert.assertNotNull(pcxImagingParameters16);
        org.junit.Assert.assertNull(imageMetadata20);
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertNull(formatCompliance25);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertNull(byteArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Pcx-Custom" + "'", str33, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertNull(byteArray36);
    }

    @Test
    public void test0822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0822");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getDefaultExtension();
        java.io.File file14 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(file14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
    }

    @Test
    public void test0823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0823");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        boolean boolean30 = pcxImageParser0.canAcceptExtension("pcx");
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat37 = null;
        boolean boolean38 = pcxImageParser32.canAcceptType(imageFormat37);
        java.lang.String str39 = pcxImageParser32.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser32.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo41 = pcxImageParser0.getImageInfo(byteSource31, pcxImagingParameters40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "pcx" + "'", str39, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
    }

    @Test
    public void test0824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0824");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = null;
        byte[] byteArray19 = pcxImageParser16.getIccProfileBytes(byteSource17, pcxImagingParameters18);
        java.lang.String str20 = pcxImageParser16.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser10.getMetadata(byteSource15, pcxImagingParameters21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser0.getMetadata(byteSource9, pcxImagingParameters23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo26 = pcxImageParser0.getImageInfo(byteSource25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "pcx" + "'", str20, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(imageMetadata24);
    }

    @Test
    public void test0825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0825");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        boolean boolean9 = pcxImageParser0.canAcceptExtension("");
        boolean boolean11 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = null;
        byte[] byteArray16 = pcxImageParser13.getIccProfileBytes(byteSource14, pcxImagingParameters15);
        java.lang.String str17 = pcxImageParser13.getName();
        java.lang.String str18 = pcxImageParser13.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser20 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder21 = pcxImageParser20.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance23 = pcxImageParser20.getFormatCompliance(byteSource22);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = pcxImageParser20.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser13.getMetadata(byteSource19, pcxImagingParameters24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser27 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser27.getMetadata(byteSource28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder32 = pcxImageParser31.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance34 = pcxImageParser31.getFormatCompliance(byteSource33);
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser31.getMetadata(byteSource35);
        boolean boolean38 = pcxImageParser31.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = pcxImageParser31.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser27.getMetadata(byteSource30, pcxImagingParameters39);
        byte[] byteArray41 = pcxImageParser13.getIccProfileBytes(byteSource26, pcxImagingParameters39);
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance43 = pcxImageParser13.getFormatCompliance(byteSource42);
        java.nio.ByteOrder byteOrder44 = pcxImageParser13.getByteOrder();
        java.nio.ByteOrder byteOrder45 = pcxImageParser13.getByteOrder();
        java.lang.String str46 = pcxImageParser13.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser0.getMetadata(byteSource12, pcxImagingParameters47);
        java.io.File file49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser50 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = null;
        byte[] byteArray53 = pcxImageParser50.getIccProfileBytes(byteSource51, pcxImagingParameters52);
        java.lang.String str54 = pcxImageParser50.getName();
        java.lang.String str55 = pcxImageParser50.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser57 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder58 = pcxImageParser57.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance60 = pcxImageParser57.getFormatCompliance(byteSource59);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters61 = pcxImageParser57.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata62 = pcxImageParser50.getMetadata(byteSource56, pcxImagingParameters61);
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance64 = pcxImageParser50.getFormatCompliance(byteSource63);
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser66 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource67 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters68 = null;
        byte[] byteArray69 = pcxImageParser66.getIccProfileBytes(byteSource67, pcxImagingParameters68);
        java.nio.ByteOrder byteOrder70 = pcxImageParser66.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource71 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser72 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder73 = pcxImageParser72.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource74 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance75 = pcxImageParser72.getFormatCompliance(byteSource74);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters76 = pcxImageParser72.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat77 = null;
        boolean boolean78 = pcxImageParser72.canAcceptType(imageFormat77);
        java.lang.String str79 = pcxImageParser72.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters80 = pcxImageParser72.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata81 = pcxImageParser66.getMetadata(byteSource71, pcxImagingParameters80);
        org.apache.commons.imaging.bytesource.ByteSource byteSource82 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser83 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder84 = pcxImageParser83.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource85 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance86 = pcxImageParser83.getFormatCompliance(byteSource85);
        org.apache.commons.imaging.bytesource.ByteSource byteSource87 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata88 = pcxImageParser83.getMetadata(byteSource87);
        boolean boolean90 = pcxImageParser83.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters91 = pcxImageParser83.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata92 = pcxImageParser66.getMetadata(byteSource82, pcxImagingParameters91);
        byte[] byteArray93 = pcxImageParser50.getIccProfileBytes(byteSource65, pcxImagingParameters91);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage94 = pcxImageParser0.getBufferedImage(file49, pcxImagingParameters91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(byteArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Pcx-Custom" + "'", str17, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Pcx-Custom" + "'", str18, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder21);
        org.junit.Assert.assertNull(formatCompliance23);
        org.junit.Assert.assertNotNull(pcxImagingParameters24);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertNull(formatCompliance34);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters39);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertNull(byteArray41);
        org.junit.Assert.assertNull(formatCompliance43);
        org.junit.Assert.assertNotNull(byteOrder44);
        org.junit.Assert.assertNotNull(byteOrder45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Pcx-Custom" + "'", str46, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters47);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNull(byteArray53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Pcx-Custom" + "'", str54, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Pcx-Custom" + "'", str55, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder58);
        org.junit.Assert.assertNull(formatCompliance60);
        org.junit.Assert.assertNotNull(pcxImagingParameters61);
        org.junit.Assert.assertNull(imageMetadata62);
        org.junit.Assert.assertNull(formatCompliance64);
        org.junit.Assert.assertNull(byteArray69);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNotNull(byteOrder73);
        org.junit.Assert.assertNull(formatCompliance75);
        org.junit.Assert.assertNotNull(pcxImagingParameters76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "pcx" + "'", str79, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters80);
        org.junit.Assert.assertNull(imageMetadata81);
        org.junit.Assert.assertNotNull(byteOrder84);
        org.junit.Assert.assertNull(formatCompliance86);
        org.junit.Assert.assertNull(imageMetadata88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters91);
        org.junit.Assert.assertNull(imageMetadata92);
        org.junit.Assert.assertNull(byteArray93);
    }

    @Test
    public void test0826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0826");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = null;
        byte[] byteArray20 = pcxImageParser17.getIccProfileBytes(byteSource18, pcxImagingParameters19);
        java.lang.String str21 = pcxImageParser17.getName();
        java.lang.String str22 = pcxImageParser17.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser17.getMetadata(byteSource23, pcxImagingParameters28);
        java.lang.String str30 = pcxImageParser17.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser17.getMetadata(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = null;
        byte[] byteArray37 = pcxImageParser34.getIccProfileBytes(byteSource35, pcxImagingParameters36);
        java.lang.String str38 = pcxImageParser34.getName();
        java.lang.String str39 = pcxImageParser34.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser41 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder42 = pcxImageParser41.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance44 = pcxImageParser41.getFormatCompliance(byteSource43);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser41.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser34.getMetadata(byteSource40, pcxImagingParameters45);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser48 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters50 = null;
        byte[] byteArray51 = pcxImageParser48.getIccProfileBytes(byteSource49, pcxImagingParameters50);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser48.getDefaultParameters();
        byte[] byteArray53 = pcxImageParser34.getIccProfileBytes(byteSource47, pcxImagingParameters52);
        byte[] byteArray54 = pcxImageParser17.getIccProfileBytes(byteSource33, pcxImagingParameters52);
        byte[] byteArray55 = pcxImageParser9.getIccProfileBytes(byteSource16, pcxImagingParameters52);
        byte[] byteArray56 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters52);
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance58 = pcxImageParser0.getFormatCompliance(byteSource57);
        java.io.File file59 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str60 = pcxImageParser0.dumpImageFile(file59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNotNull(pcxImagingParameters15);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Pcx-Custom" + "'", str22, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Pcx-Custom" + "'", str30, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNull(byteArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Pcx-Custom" + "'", str38, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Pcx-Custom" + "'", str39, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNull(formatCompliance44);
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertNull(imageMetadata46);
        org.junit.Assert.assertNull(byteArray51);
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(byteArray53);
        org.junit.Assert.assertNull(byteArray54);
        org.junit.Assert.assertNull(byteArray55);
        org.junit.Assert.assertNull(byteArray56);
        org.junit.Assert.assertNull(formatCompliance58);
    }

    @Test
    public void test0827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0827");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser4.getMetadata(byteSource8);
        boolean boolean11 = pcxImageParser4.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance15 = pcxImageParser0.getFormatCompliance(byteSource14);
        java.io.File file16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage18 = pcxImageParser0.getBufferedImage(file16, pcxImagingParameters17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertNull(formatCompliance15);
    }

    @Test
    public void test0828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0828");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = null;
        byte[] byteArray8 = pcxImageParser0.getIccProfileBytes(byteSource6, pcxImagingParameters7);
        java.io.PrintWriter printWriter9 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = pcxImageParser0.dumpImageFile(printWriter9, byteSource10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray8);
    }

    @Test
    public void test0829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0829");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getName();
        java.lang.String str6 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat7 = null;
        boolean boolean8 = pcxImageParser0.canAcceptType(imageFormat7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str11 = pcxImageParser10.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        java.nio.ByteOrder byteOrder16 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = null;
        byte[] byteArray19 = pcxImageParser10.getIccProfileBytes(byteSource17, pcxImagingParameters18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = null;
        byte[] byteArray24 = pcxImageParser21.getIccProfileBytes(byteSource22, pcxImagingParameters23);
        java.lang.String str25 = pcxImageParser21.getName();
        java.lang.String str26 = pcxImageParser21.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder29 = pcxImageParser28.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance31 = pcxImageParser28.getFormatCompliance(byteSource30);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser28.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser21.getMetadata(byteSource27, pcxImagingParameters32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = null;
        byte[] byteArray38 = pcxImageParser35.getIccProfileBytes(byteSource36, pcxImagingParameters37);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = pcxImageParser35.getDefaultParameters();
        byte[] byteArray40 = pcxImageParser21.getIccProfileBytes(byteSource34, pcxImagingParameters39);
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser42 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder43 = pcxImageParser42.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance45 = pcxImageParser42.getFormatCompliance(byteSource44);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser42.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat47 = null;
        boolean boolean48 = pcxImageParser42.canAcceptType(imageFormat47);
        java.lang.String str49 = pcxImageParser42.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters50 = pcxImageParser42.getDefaultParameters();
        java.lang.String str51 = pcxImageParser42.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser42.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser21.getMetadata(byteSource41, pcxImagingParameters52);
        byte[] byteArray54 = pcxImageParser10.getIccProfileBytes(byteSource20, pcxImagingParameters52);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension55 = pcxImageParser0.getImageSize(byteSource9, pcxImagingParameters52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "pcx" + "'", str6, "pcx");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Pcx-Custom" + "'", str11, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Pcx-Custom" + "'", str26, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertNull(formatCompliance31);
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
        org.junit.Assert.assertNull(imageMetadata33);
        org.junit.Assert.assertNull(byteArray38);
        org.junit.Assert.assertNotNull(pcxImagingParameters39);
        org.junit.Assert.assertNull(byteArray40);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNull(formatCompliance45);
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "pcx" + "'", str49, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Pcx-Custom" + "'", str51, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertNull(byteArray54);
    }

    @Test
    public void test0830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0830");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        java.nio.ByteOrder byteOrder8 = pcxImageParser0.getByteOrder();
        java.io.PrintWriter printWriter9 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = pcxImageParser0.dumpImageFile(printWriter9, byteSource10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertNotNull(byteOrder8);
    }

    @Test
    public void test0831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0831");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser4.getMetadata(byteSource8);
        boolean boolean11 = pcxImageParser4.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters12);
        java.io.File file14 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance15 = pcxImageParser0.getFormatCompliance(file14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata13);
    }

    @Test
    public void test0832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0832");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser0.getMetadata(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser0.getMetadata(byteSource24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser0.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = null;
        byte[] byteArray32 = pcxImageParser29.getIccProfileBytes(byteSource30, pcxImagingParameters31);
        java.lang.String str33 = pcxImageParser29.getDefaultExtension();
        java.lang.String str34 = pcxImageParser29.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser36 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = null;
        byte[] byteArray39 = pcxImageParser36.getIccProfileBytes(byteSource37, pcxImagingParameters38);
        java.lang.String str40 = pcxImageParser36.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser36.getMetadata(byteSource41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance44 = pcxImageParser36.getFormatCompliance(byteSource43);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser36.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat46 = null;
        boolean boolean47 = pcxImageParser36.canAcceptType(imageFormat46);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = pcxImageParser36.getDefaultParameters();
        byte[] byteArray49 = pcxImageParser29.getIccProfileBytes(byteSource35, pcxImagingParameters48);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata50 = pcxImageParser0.getMetadata(byteSource28, pcxImagingParameters48);
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList52 = pcxImageParser0.getAllBufferedImages(byteSource51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNull(byteArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "pcx" + "'", str33, "pcx");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Pcx-Custom" + "'", str34, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Pcx-Custom" + "'", str40, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertNull(formatCompliance44);
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters48);
        org.junit.Assert.assertNull(byteArray49);
        org.junit.Assert.assertNull(imageMetadata50);
    }

    @Test
    public void test0833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0833");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser0.canAcceptType(imageFormat23);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser0.getFormatCompliance(byteSource26);
        java.lang.String str28 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder31 = pcxImageParser30.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance33 = pcxImageParser30.getFormatCompliance(byteSource32);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser30.getDefaultParameters();
        java.lang.String str35 = pcxImageParser30.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser30.getMetadata(byteSource36);
        boolean boolean39 = pcxImageParser30.canAcceptExtension("");
        boolean boolean41 = pcxImageParser30.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser43 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = null;
        byte[] byteArray46 = pcxImageParser43.getIccProfileBytes(byteSource44, pcxImagingParameters45);
        java.lang.String str47 = pcxImageParser43.getName();
        java.lang.String str48 = pcxImageParser43.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser50 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder51 = pcxImageParser50.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance53 = pcxImageParser50.getFormatCompliance(byteSource52);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters54 = pcxImageParser50.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata55 = pcxImageParser43.getMetadata(byteSource49, pcxImagingParameters54);
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser57 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata59 = pcxImageParser57.getMetadata(byteSource58);
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser61 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder62 = pcxImageParser61.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance64 = pcxImageParser61.getFormatCompliance(byteSource63);
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata66 = pcxImageParser61.getMetadata(byteSource65);
        boolean boolean68 = pcxImageParser61.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters69 = pcxImageParser61.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata70 = pcxImageParser57.getMetadata(byteSource60, pcxImagingParameters69);
        byte[] byteArray71 = pcxImageParser43.getIccProfileBytes(byteSource56, pcxImagingParameters69);
        org.apache.commons.imaging.bytesource.ByteSource byteSource72 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance73 = pcxImageParser43.getFormatCompliance(byteSource72);
        java.nio.ByteOrder byteOrder74 = pcxImageParser43.getByteOrder();
        java.nio.ByteOrder byteOrder75 = pcxImageParser43.getByteOrder();
        java.lang.String str76 = pcxImageParser43.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters77 = pcxImageParser43.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata78 = pcxImageParser30.getMetadata(byteSource42, pcxImagingParameters77);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension79 = pcxImageParser0.getImageSize(byteSource29, pcxImagingParameters77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Pcx-Custom" + "'", str28, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNull(formatCompliance33);
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "pcx" + "'", str35, "pcx");
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(byteArray46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Pcx-Custom" + "'", str47, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Pcx-Custom" + "'", str48, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder51);
        org.junit.Assert.assertNull(formatCompliance53);
        org.junit.Assert.assertNotNull(pcxImagingParameters54);
        org.junit.Assert.assertNull(imageMetadata55);
        org.junit.Assert.assertNull(imageMetadata59);
        org.junit.Assert.assertNotNull(byteOrder62);
        org.junit.Assert.assertNull(formatCompliance64);
        org.junit.Assert.assertNull(imageMetadata66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters69);
        org.junit.Assert.assertNull(imageMetadata70);
        org.junit.Assert.assertNull(byteArray71);
        org.junit.Assert.assertNull(formatCompliance73);
        org.junit.Assert.assertNotNull(byteOrder74);
        org.junit.Assert.assertNotNull(byteOrder75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "Pcx-Custom" + "'", str76, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters77);
        org.junit.Assert.assertNull(imageMetadata78);
    }

    @Test
    public void test0834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0834");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.nio.ByteOrder byteOrder4 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser0.getFormatCompliance(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser0.getMetadata(byteSource7);
        java.io.File file9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = null;
        byte[] byteArray13 = pcxImageParser10.getIccProfileBytes(byteSource11, pcxImagingParameters12);
        java.lang.String str14 = pcxImageParser10.getName();
        java.lang.String str15 = pcxImageParser10.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder18 = pcxImageParser17.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance20 = pcxImageParser17.getFormatCompliance(byteSource19);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser17.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser10.getMetadata(byteSource16, pcxImagingParameters21);
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata26 = pcxImageParser24.getMetadata(byteSource25);
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder29 = pcxImageParser28.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance31 = pcxImageParser28.getFormatCompliance(byteSource30);
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser28.getMetadata(byteSource32);
        boolean boolean35 = pcxImageParser28.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser28.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser24.getMetadata(byteSource27, pcxImagingParameters36);
        byte[] byteArray38 = pcxImageParser10.getIccProfileBytes(byteSource23, pcxImagingParameters36);
        org.apache.commons.imaging.ImageFormat imageFormat39 = null;
        boolean boolean40 = pcxImageParser10.canAcceptType(imageFormat39);
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser42 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder43 = pcxImageParser42.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance45 = pcxImageParser42.getFormatCompliance(byteSource44);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser42.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat47 = null;
        boolean boolean48 = pcxImageParser42.canAcceptType(imageFormat47);
        java.lang.String str49 = pcxImageParser42.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters50 = pcxImageParser42.getDefaultParameters();
        byte[] byteArray51 = pcxImageParser10.getIccProfileBytes(byteSource41, pcxImagingParameters50);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser10.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser0.getMetadata(file9, pcxImagingParameters52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNull(formatCompliance6);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNull(byteArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Pcx-Custom" + "'", str14, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Pcx-Custom" + "'", str15, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNull(formatCompliance20);
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNull(imageMetadata26);
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertNull(formatCompliance31);
        org.junit.Assert.assertNull(imageMetadata33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertNull(byteArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNull(formatCompliance45);
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "pcx" + "'", str49, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters50);
        org.junit.Assert.assertNull(byteArray51);
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
    }

    @Test
    public void test0835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0835");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        java.io.File file7 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean8 = pcxImageParser0.canAcceptExtension(file7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata6);
    }

    @Test
    public void test0836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0836");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = null;
        byte[] byteArray35 = pcxImageParser32.getIccProfileBytes(byteSource33, pcxImagingParameters34);
        java.nio.ByteOrder byteOrder36 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser38 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder39 = pcxImageParser38.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance41 = pcxImageParser38.getFormatCompliance(byteSource40);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser38.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat43 = null;
        boolean boolean44 = pcxImageParser38.canAcceptType(imageFormat43);
        java.lang.String str45 = pcxImageParser38.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser38.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser32.getMetadata(byteSource37, pcxImagingParameters46);
        byte[] byteArray48 = pcxImageParser0.getIccProfileBytes(byteSource31, pcxImagingParameters46);
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser50 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata52 = pcxImageParser50.getMetadata(byteSource51);
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser54 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder55 = pcxImageParser54.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance57 = pcxImageParser54.getFormatCompliance(byteSource56);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters58 = pcxImageParser54.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser60 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata62 = pcxImageParser60.getMetadata(byteSource61);
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser64 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder65 = pcxImageParser64.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource66 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance67 = pcxImageParser64.getFormatCompliance(byteSource66);
        org.apache.commons.imaging.bytesource.ByteSource byteSource68 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata69 = pcxImageParser64.getMetadata(byteSource68);
        boolean boolean71 = pcxImageParser64.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters72 = pcxImageParser64.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata73 = pcxImageParser60.getMetadata(byteSource63, pcxImagingParameters72);
        byte[] byteArray74 = pcxImageParser54.getIccProfileBytes(byteSource59, pcxImagingParameters72);
        java.lang.String str75 = pcxImageParser54.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters76 = pcxImageParser54.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata77 = pcxImageParser50.getMetadata(byteSource53, pcxImagingParameters76);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters78 = pcxImageParser50.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource79 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser80 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource81 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters82 = null;
        byte[] byteArray83 = pcxImageParser80.getIccProfileBytes(byteSource81, pcxImagingParameters82);
        java.lang.String str84 = pcxImageParser80.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters85 = pcxImageParser80.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata86 = pcxImageParser50.getMetadata(byteSource79, pcxImagingParameters85);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension87 = pcxImageParser0.getImageSize(byteSource49, pcxImagingParameters85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNull(byteArray35);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteOrder39);
        org.junit.Assert.assertNull(formatCompliance41);
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "pcx" + "'", str45, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
        org.junit.Assert.assertNull(imageMetadata47);
        org.junit.Assert.assertNull(byteArray48);
        org.junit.Assert.assertNull(imageMetadata52);
        org.junit.Assert.assertNotNull(byteOrder55);
        org.junit.Assert.assertNull(formatCompliance57);
        org.junit.Assert.assertNotNull(pcxImagingParameters58);
        org.junit.Assert.assertNull(imageMetadata62);
        org.junit.Assert.assertNotNull(byteOrder65);
        org.junit.Assert.assertNull(formatCompliance67);
        org.junit.Assert.assertNull(imageMetadata69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters72);
        org.junit.Assert.assertNull(imageMetadata73);
        org.junit.Assert.assertNull(byteArray74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "Pcx-Custom" + "'", str75, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters76);
        org.junit.Assert.assertNull(imageMetadata77);
        org.junit.Assert.assertNotNull(pcxImagingParameters78);
        org.junit.Assert.assertNull(byteArray83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "pcx" + "'", str84, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters85);
        org.junit.Assert.assertNull(imageMetadata86);
    }

    @Test
    public void test0837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0837");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser0.canAcceptType(imageFormat23);
        java.io.File file25 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance26 = pcxImageParser0.getFormatCompliance(file25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test0838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0838");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser0.getMetadata(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser0.getMetadata(byteSource24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser0.getFormatCompliance(byteSource26);
        java.io.File file28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = null;
        byte[] byteArray32 = pcxImageParser29.getIccProfileBytes(byteSource30, pcxImagingParameters31);
        java.lang.String str33 = pcxImageParser29.getName();
        java.lang.String str34 = pcxImageParser29.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser36 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder37 = pcxImageParser36.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance39 = pcxImageParser36.getFormatCompliance(byteSource38);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser36.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser29.getMetadata(byteSource35, pcxImagingParameters40);
        java.lang.String str42 = pcxImageParser29.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser29.getMetadata(byteSource43);
        java.lang.String str45 = pcxImageParser29.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser29.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser0.getMetadata(file28, pcxImagingParameters46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNull(byteArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Pcx-Custom" + "'", str33, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Pcx-Custom" + "'", str34, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNull(formatCompliance39);
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(imageMetadata41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Pcx-Custom" + "'", str42, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "pcx" + "'", str45, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
    }

    @Test
    public void test0839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0839");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        java.awt.image.BufferedImage bufferedImage9 = null;
        java.io.OutputStream outputStream10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = null;
        byte[] byteArray14 = pcxImageParser11.getIccProfileBytes(byteSource12, pcxImagingParameters13);
        java.lang.String str15 = pcxImageParser11.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata17 = pcxImageParser11.getMetadata(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance19 = pcxImageParser11.getFormatCompliance(byteSource18);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters20 = pcxImageParser11.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser22 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = null;
        byte[] byteArray25 = pcxImageParser22.getIccProfileBytes(byteSource23, pcxImagingParameters24);
        java.lang.String str26 = pcxImageParser22.getName();
        java.lang.String str27 = pcxImageParser22.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder30 = pcxImageParser29.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser29.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser22.getMetadata(byteSource28, pcxImagingParameters33);
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser36 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser36.getMetadata(byteSource37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder41 = pcxImageParser40.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance43 = pcxImageParser40.getFormatCompliance(byteSource42);
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata45 = pcxImageParser40.getMetadata(byteSource44);
        boolean boolean47 = pcxImageParser40.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = pcxImageParser40.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser36.getMetadata(byteSource39, pcxImagingParameters48);
        byte[] byteArray50 = pcxImageParser22.getIccProfileBytes(byteSource35, pcxImagingParameters48);
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance52 = pcxImageParser22.getFormatCompliance(byteSource51);
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser54 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters56 = null;
        byte[] byteArray57 = pcxImageParser54.getIccProfileBytes(byteSource55, pcxImagingParameters56);
        java.nio.ByteOrder byteOrder58 = pcxImageParser54.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser60 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder61 = pcxImageParser60.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance63 = pcxImageParser60.getFormatCompliance(byteSource62);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters64 = pcxImageParser60.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat65 = null;
        boolean boolean66 = pcxImageParser60.canAcceptType(imageFormat65);
        java.lang.String str67 = pcxImageParser60.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters68 = pcxImageParser60.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata69 = pcxImageParser54.getMetadata(byteSource59, pcxImagingParameters68);
        byte[] byteArray70 = pcxImageParser22.getIccProfileBytes(byteSource53, pcxImagingParameters68);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata71 = pcxImageParser11.getMetadata(byteSource21, pcxImagingParameters68);
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage9, outputStream10, pcxImagingParameters68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNull(byteArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Pcx-Custom" + "'", str15, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata17);
        org.junit.Assert.assertNull(formatCompliance19);
        org.junit.Assert.assertNotNull(pcxImagingParameters20);
        org.junit.Assert.assertNull(byteArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Pcx-Custom" + "'", str26, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Pcx-Custom" + "'", str27, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder30);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNotNull(byteOrder41);
        org.junit.Assert.assertNull(formatCompliance43);
        org.junit.Assert.assertNull(imageMetadata45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters48);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertNull(byteArray50);
        org.junit.Assert.assertNull(formatCompliance52);
        org.junit.Assert.assertNull(byteArray57);
        org.junit.Assert.assertNotNull(byteOrder58);
        org.junit.Assert.assertNotNull(byteOrder61);
        org.junit.Assert.assertNull(formatCompliance63);
        org.junit.Assert.assertNotNull(pcxImagingParameters64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "pcx" + "'", str67, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters68);
        org.junit.Assert.assertNull(imageMetadata69);
        org.junit.Assert.assertNull(byteArray70);
        org.junit.Assert.assertNull(imageMetadata71);
    }

    @Test
    public void test0840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0840");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        java.nio.ByteOrder byteOrder32 = pcxImageParser0.getByteOrder();
        java.lang.String str33 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser0.getMetadata(byteSource34);
        java.io.File file36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser37 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata39 = pcxImageParser37.getMetadata(byteSource38);
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser41 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder42 = pcxImageParser41.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance44 = pcxImageParser41.getFormatCompliance(byteSource43);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser41.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser47 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser47.getMetadata(byteSource48);
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser51 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder52 = pcxImageParser51.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance54 = pcxImageParser51.getFormatCompliance(byteSource53);
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata56 = pcxImageParser51.getMetadata(byteSource55);
        boolean boolean58 = pcxImageParser51.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters59 = pcxImageParser51.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata60 = pcxImageParser47.getMetadata(byteSource50, pcxImagingParameters59);
        byte[] byteArray61 = pcxImageParser41.getIccProfileBytes(byteSource46, pcxImagingParameters59);
        java.lang.String str62 = pcxImageParser41.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters63 = pcxImageParser41.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata64 = pcxImageParser37.getMetadata(byteSource40, pcxImagingParameters63);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray65 = pcxImageParser0.getIccProfileBytes(file36, pcxImagingParameters63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Pcx-Custom" + "'", str33, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertNull(imageMetadata39);
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNull(formatCompliance44);
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertNotNull(byteOrder52);
        org.junit.Assert.assertNull(formatCompliance54);
        org.junit.Assert.assertNull(imageMetadata56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters59);
        org.junit.Assert.assertNull(imageMetadata60);
        org.junit.Assert.assertNull(byteArray61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Pcx-Custom" + "'", str62, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters63);
        org.junit.Assert.assertNull(imageMetadata64);
    }

    @Test
    public void test0841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0841");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.lang.String str4 = pcxImageParser0.getName();
        boolean boolean6 = pcxImageParser0.canAcceptExtension("hi!");
        java.io.File file7 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray8 = pcxImageParser0.getIccProfileBytes(file7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0842");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        java.nio.ByteOrder byteOrder28 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        java.io.File file31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str33 = pcxImageParser32.getName();
        java.nio.ByteOrder byteOrder34 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser36 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder37 = pcxImageParser36.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance39 = pcxImageParser36.getFormatCompliance(byteSource38);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser36.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat41 = null;
        boolean boolean42 = pcxImageParser36.canAcceptType(imageFormat41);
        java.lang.String str43 = pcxImageParser36.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = pcxImageParser36.getDefaultParameters();
        byte[] byteArray45 = pcxImageParser32.getIccProfileBytes(byteSource35, pcxImagingParameters44);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage46 = pcxImageParser0.getBufferedImage(file31, pcxImagingParameters44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(byteOrder28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Pcx-Custom" + "'", str33, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder34);
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNull(formatCompliance39);
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "pcx" + "'", str43, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters44);
        org.junit.Assert.assertNull(byteArray45);
    }

    @Test
    public void test0843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0843");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.ImageFormat imageFormat8 = null;
        boolean boolean9 = pcxImageParser0.canAcceptType(imageFormat8);
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser0.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser0.getMetadata(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension16 = pcxImageParser0.getImageSize(byteSource14, pcxImagingParameters15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNull(imageMetadata13);
    }

    @Test
    public void test0844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0844");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        java.io.File file7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser0.getMetadata(file7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNotNull(byteOrder6);
    }

    @Test
    public void test0845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0845");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        java.awt.image.BufferedImage bufferedImage2 = null;
        java.io.OutputStream outputStream3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat27 = null;
        boolean boolean28 = pcxImageParser4.canAcceptType(imageFormat27);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = pcxImageParser4.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage2, outputStream3, pcxImagingParameters29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters29);
    }

    @Test
    public void test0846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0846");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getName();
        java.io.File file8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = null;
        byte[] byteArray12 = pcxImageParser9.getIccProfileBytes(byteSource10, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser9.getName();
        java.lang.String str14 = pcxImageParser9.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder17 = pcxImageParser16.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance19 = pcxImageParser16.getFormatCompliance(byteSource18);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters20 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata21 = pcxImageParser9.getMetadata(byteSource15, pcxImagingParameters20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser23 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser23.getMetadata(byteSource24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser27 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder28 = pcxImageParser27.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser27.getFormatCompliance(byteSource29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser27.getMetadata(byteSource31);
        boolean boolean34 = pcxImageParser27.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser27.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser23.getMetadata(byteSource26, pcxImagingParameters35);
        byte[] byteArray37 = pcxImageParser9.getIccProfileBytes(byteSource22, pcxImagingParameters35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance39 = pcxImageParser9.getFormatCompliance(byteSource38);
        java.nio.ByteOrder byteOrder40 = pcxImageParser9.getByteOrder();
        java.nio.ByteOrder byteOrder41 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser43 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder44 = pcxImageParser43.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance46 = pcxImageParser43.getFormatCompliance(byteSource45);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = pcxImageParser43.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser49 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata51 = pcxImageParser49.getMetadata(byteSource50);
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser53 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder54 = pcxImageParser53.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance56 = pcxImageParser53.getFormatCompliance(byteSource55);
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata58 = pcxImageParser53.getMetadata(byteSource57);
        boolean boolean60 = pcxImageParser53.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters61 = pcxImageParser53.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata62 = pcxImageParser49.getMetadata(byteSource52, pcxImagingParameters61);
        byte[] byteArray63 = pcxImageParser43.getIccProfileBytes(byteSource48, pcxImagingParameters61);
        java.lang.String str64 = pcxImageParser43.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters65 = pcxImageParser43.getDefaultParameters();
        byte[] byteArray66 = pcxImageParser9.getIccProfileBytes(byteSource42, pcxImagingParameters65);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata67 = pcxImageParser0.getMetadata(file8, pcxImagingParameters65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Pcx-Custom" + "'", str7, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Pcx-Custom" + "'", str14, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder17);
        org.junit.Assert.assertNull(formatCompliance19);
        org.junit.Assert.assertNotNull(pcxImagingParameters20);
        org.junit.Assert.assertNull(imageMetadata21);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertNotNull(byteOrder28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertNull(byteArray37);
        org.junit.Assert.assertNull(formatCompliance39);
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNotNull(byteOrder41);
        org.junit.Assert.assertNotNull(byteOrder44);
        org.junit.Assert.assertNull(formatCompliance46);
        org.junit.Assert.assertNotNull(pcxImagingParameters47);
        org.junit.Assert.assertNull(imageMetadata51);
        org.junit.Assert.assertNotNull(byteOrder54);
        org.junit.Assert.assertNull(formatCompliance56);
        org.junit.Assert.assertNull(imageMetadata58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters61);
        org.junit.Assert.assertNull(imageMetadata62);
        org.junit.Assert.assertNull(byteArray63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Pcx-Custom" + "'", str64, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters65);
        org.junit.Assert.assertNull(byteArray66);
    }

    @Test
    public void test0847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0847");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        boolean boolean9 = pcxImageParser0.canAcceptExtension("");
        org.apache.commons.imaging.ImageFormat imageFormat10 = null;
        boolean boolean11 = pcxImageParser0.canAcceptType(imageFormat10);
        java.io.File file12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser0.getFormatCompliance(file12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0848");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = null;
        byte[] byteArray9 = pcxImageParser6.getIccProfileBytes(byteSource7, pcxImagingParameters8);
        java.lang.String str10 = pcxImageParser6.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource5, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata17 = pcxImageParser15.getMetadata(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser15.getMetadata(byteSource18);
        java.lang.String str20 = pcxImageParser15.getDefaultExtension();
        java.lang.String str21 = pcxImageParser15.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser15.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser15.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo24 = pcxImageParser0.getImageInfo(byteSource14, pcxImagingParameters23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(byteArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "pcx" + "'", str10, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "pcx" + "'", str20, "pcx");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
    }

    @Test
    public void test0849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0849");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        boolean boolean5 = pcxImageParser0.canAcceptExtension("Pcx-Custom");
        java.io.File file6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser13.getMetadata(byteSource14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder18 = pcxImageParser17.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance20 = pcxImageParser17.getFormatCompliance(byteSource19);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser17.getMetadata(byteSource21);
        boolean boolean24 = pcxImageParser17.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser17.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata26 = pcxImageParser13.getMetadata(byteSource16, pcxImagingParameters25);
        byte[] byteArray27 = pcxImageParser7.getIccProfileBytes(byteSource12, pcxImagingParameters25);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo28 = pcxImageParser0.getImageInfo(file6, pcxImagingParameters25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNull(formatCompliance20);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
        org.junit.Assert.assertNull(imageMetadata26);
        org.junit.Assert.assertNull(byteArray27);
    }

    @Test
    public void test0850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0850");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat10 = null;
        boolean boolean11 = pcxImageParser0.canAcceptType(imageFormat10);
        java.lang.String str12 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension28 = pcxImageParser0.getImageSize(byteSource13, pcxImagingParameters26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(pcxImagingParameters9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Pcx-Custom" + "'", str12, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
    }

    @Test
    public void test0851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0851");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat37 = null;
        boolean boolean38 = pcxImageParser32.canAcceptType(imageFormat37);
        java.lang.String str39 = pcxImageParser32.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser32.getDefaultParameters();
        byte[] byteArray41 = pcxImageParser0.getIccProfileBytes(byteSource31, pcxImagingParameters40);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList44 = pcxImageParser0.getAllBufferedImages(byteSource43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "pcx" + "'", str39, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(byteArray41);
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
    }

    @Test
    public void test0852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0852");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = null;
        byte[] byteArray8 = pcxImageParser0.getIccProfileBytes(byteSource6, pcxImagingParameters7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo10 = pcxImageParser0.getImageInfo(byteSource9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray8);
    }

    @Test
    public void test0853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0853");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser0.getFormatCompliance(byteSource31);
        java.lang.String str33 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str35 = pcxImageParser0.dumpImageFile(byteSource34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Pcx-Custom" + "'", str33, "Pcx-Custom");
    }

    @Test
    public void test0854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0854");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.lang.String str31 = pcxImageParser0.getName();
        java.io.PrintWriter printWriter32 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean34 = pcxImageParser0.dumpImageFile(printWriter32, byteSource33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Pcx-Custom" + "'", str31, "Pcx-Custom");
    }

    @Test
    public void test0855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0855");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        boolean boolean30 = pcxImageParser0.canAcceptExtension("pcx");
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser33.getMetadata(byteSource34);
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser37 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder38 = pcxImageParser37.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance40 = pcxImageParser37.getFormatCompliance(byteSource39);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = pcxImageParser37.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser43 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata45 = pcxImageParser43.getMetadata(byteSource44);
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser47 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder48 = pcxImageParser47.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance50 = pcxImageParser47.getFormatCompliance(byteSource49);
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata52 = pcxImageParser47.getMetadata(byteSource51);
        boolean boolean54 = pcxImageParser47.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters55 = pcxImageParser47.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata56 = pcxImageParser43.getMetadata(byteSource46, pcxImagingParameters55);
        byte[] byteArray57 = pcxImageParser37.getIccProfileBytes(byteSource42, pcxImagingParameters55);
        java.lang.String str58 = pcxImageParser37.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters59 = pcxImageParser37.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata60 = pcxImageParser33.getMetadata(byteSource36, pcxImagingParameters59);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters61 = pcxImageParser33.getDefaultParameters();
        byte[] byteArray62 = pcxImageParser0.getIccProfileBytes(byteSource32, pcxImagingParameters61);
        java.io.PrintWriter printWriter63 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource64 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean65 = pcxImageParser0.dumpImageFile(printWriter63, byteSource64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertNotNull(byteOrder38);
        org.junit.Assert.assertNull(formatCompliance40);
        org.junit.Assert.assertNotNull(pcxImagingParameters41);
        org.junit.Assert.assertNull(imageMetadata45);
        org.junit.Assert.assertNotNull(byteOrder48);
        org.junit.Assert.assertNull(formatCompliance50);
        org.junit.Assert.assertNull(imageMetadata52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters55);
        org.junit.Assert.assertNull(imageMetadata56);
        org.junit.Assert.assertNull(byteArray57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Pcx-Custom" + "'", str58, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters59);
        org.junit.Assert.assertNull(imageMetadata60);
        org.junit.Assert.assertNotNull(pcxImagingParameters61);
        org.junit.Assert.assertNull(byteArray62);
    }

    @Test
    public void test0856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0856");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        boolean boolean9 = pcxImageParser0.canAcceptExtension("");
        boolean boolean11 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str14 = pcxImageParser13.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser13.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata18 = pcxImageParser13.getMetadata(byteSource17);
        java.lang.String str19 = pcxImageParser13.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters20 = pcxImageParser13.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo21 = pcxImageParser0.getImageInfo(byteSource12, pcxImagingParameters20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Pcx-Custom" + "'", str14, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNull(imageMetadata18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Pcx-Custom" + "'", str19, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters20);
    }

    @Test
    public void test0857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0857");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        boolean boolean5 = pcxImageParser0.canAcceptExtension("");
        java.io.File file6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        java.lang.String str12 = pcxImageParser7.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata14 = pcxImageParser7.getMetadata(byteSource13);
        boolean boolean16 = pcxImageParser7.canAcceptExtension("");
        org.apache.commons.imaging.ImageFormat imageFormat17 = null;
        boolean boolean18 = pcxImageParser7.canAcceptType(imageFormat17);
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser20 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = null;
        byte[] byteArray23 = pcxImageParser20.getIccProfileBytes(byteSource21, pcxImagingParameters22);
        java.lang.String str24 = pcxImageParser20.getName();
        java.lang.String str25 = pcxImageParser20.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser27 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder28 = pcxImageParser27.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser27.getFormatCompliance(byteSource29);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser27.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser20.getMetadata(byteSource26, pcxImagingParameters31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser34.getMetadata(byteSource35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser38 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder39 = pcxImageParser38.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance41 = pcxImageParser38.getFormatCompliance(byteSource40);
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata43 = pcxImageParser38.getMetadata(byteSource42);
        boolean boolean45 = pcxImageParser38.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser38.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser34.getMetadata(byteSource37, pcxImagingParameters46);
        byte[] byteArray48 = pcxImageParser20.getIccProfileBytes(byteSource33, pcxImagingParameters46);
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance50 = pcxImageParser20.getFormatCompliance(byteSource49);
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser52 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters54 = null;
        byte[] byteArray55 = pcxImageParser52.getIccProfileBytes(byteSource53, pcxImagingParameters54);
        java.nio.ByteOrder byteOrder56 = pcxImageParser52.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser58 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder59 = pcxImageParser58.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance61 = pcxImageParser58.getFormatCompliance(byteSource60);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters62 = pcxImageParser58.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat63 = null;
        boolean boolean64 = pcxImageParser58.canAcceptType(imageFormat63);
        java.lang.String str65 = pcxImageParser58.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters66 = pcxImageParser58.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata67 = pcxImageParser52.getMetadata(byteSource57, pcxImagingParameters66);
        byte[] byteArray68 = pcxImageParser20.getIccProfileBytes(byteSource51, pcxImagingParameters66);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata69 = pcxImageParser7.getMetadata(byteSource19, pcxImagingParameters66);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo70 = pcxImageParser0.getImageInfo(file6, pcxImagingParameters66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "pcx" + "'", str12, "pcx");
        org.junit.Assert.assertNull(imageMetadata14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(byteArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Pcx-Custom" + "'", str24, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertNotNull(byteOrder39);
        org.junit.Assert.assertNull(formatCompliance41);
        org.junit.Assert.assertNull(imageMetadata43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
        org.junit.Assert.assertNull(imageMetadata47);
        org.junit.Assert.assertNull(byteArray48);
        org.junit.Assert.assertNull(formatCompliance50);
        org.junit.Assert.assertNull(byteArray55);
        org.junit.Assert.assertNotNull(byteOrder56);
        org.junit.Assert.assertNotNull(byteOrder59);
        org.junit.Assert.assertNull(formatCompliance61);
        org.junit.Assert.assertNotNull(pcxImagingParameters62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "pcx" + "'", str65, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters66);
        org.junit.Assert.assertNull(imageMetadata67);
        org.junit.Assert.assertNull(byteArray68);
        org.junit.Assert.assertNull(imageMetadata69);
    }

    @Test
    public void test0858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0858");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = null;
        byte[] byteArray17 = pcxImageParser14.getIccProfileBytes(byteSource15, pcxImagingParameters16);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser14.getDefaultParameters();
        byte[] byteArray19 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder22 = pcxImageParser21.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance24 = pcxImageParser21.getFormatCompliance(byteSource23);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat26 = null;
        boolean boolean27 = pcxImageParser21.canAcceptType(imageFormat26);
        java.lang.String str28 = pcxImageParser21.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = pcxImageParser21.getDefaultParameters();
        java.lang.String str30 = pcxImageParser21.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser0.getMetadata(byteSource20, pcxImagingParameters31);
        java.io.File file33 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser0.getMetadata(file33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(byteArray17);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNull(formatCompliance24);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "pcx" + "'", str28, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Pcx-Custom" + "'", str30, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
        org.junit.Assert.assertNull(imageMetadata32);
    }

    @Test
    public void test0859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0859");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser0.getMetadata(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser0.getMetadata(byteSource24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser0.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = null;
        byte[] byteArray32 = pcxImageParser29.getIccProfileBytes(byteSource30, pcxImagingParameters31);
        java.lang.String str33 = pcxImageParser29.getName();
        java.lang.String str34 = pcxImageParser29.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser36 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder37 = pcxImageParser36.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance39 = pcxImageParser36.getFormatCompliance(byteSource38);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser36.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser29.getMetadata(byteSource35, pcxImagingParameters40);
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser43 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata45 = pcxImageParser43.getMetadata(byteSource44);
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser47 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder48 = pcxImageParser47.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance50 = pcxImageParser47.getFormatCompliance(byteSource49);
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata52 = pcxImageParser47.getMetadata(byteSource51);
        boolean boolean54 = pcxImageParser47.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters55 = pcxImageParser47.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata56 = pcxImageParser43.getMetadata(byteSource46, pcxImagingParameters55);
        byte[] byteArray57 = pcxImageParser29.getIccProfileBytes(byteSource42, pcxImagingParameters55);
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance59 = pcxImageParser29.getFormatCompliance(byteSource58);
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser61 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters63 = null;
        byte[] byteArray64 = pcxImageParser61.getIccProfileBytes(byteSource62, pcxImagingParameters63);
        java.nio.ByteOrder byteOrder65 = pcxImageParser61.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource66 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser67 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder68 = pcxImageParser67.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance70 = pcxImageParser67.getFormatCompliance(byteSource69);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters71 = pcxImageParser67.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat72 = null;
        boolean boolean73 = pcxImageParser67.canAcceptType(imageFormat72);
        java.lang.String str74 = pcxImageParser67.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters75 = pcxImageParser67.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata76 = pcxImageParser61.getMetadata(byteSource66, pcxImagingParameters75);
        byte[] byteArray77 = pcxImageParser29.getIccProfileBytes(byteSource60, pcxImagingParameters75);
        byte[] byteArray78 = pcxImageParser0.getIccProfileBytes(byteSource28, pcxImagingParameters75);
        org.apache.commons.imaging.bytesource.ByteSource byteSource79 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo80 = pcxImageParser0.getImageInfo(byteSource79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNull(byteArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Pcx-Custom" + "'", str33, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Pcx-Custom" + "'", str34, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNull(formatCompliance39);
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(imageMetadata41);
        org.junit.Assert.assertNull(imageMetadata45);
        org.junit.Assert.assertNotNull(byteOrder48);
        org.junit.Assert.assertNull(formatCompliance50);
        org.junit.Assert.assertNull(imageMetadata52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters55);
        org.junit.Assert.assertNull(imageMetadata56);
        org.junit.Assert.assertNull(byteArray57);
        org.junit.Assert.assertNull(formatCompliance59);
        org.junit.Assert.assertNull(byteArray64);
        org.junit.Assert.assertNotNull(byteOrder65);
        org.junit.Assert.assertNotNull(byteOrder68);
        org.junit.Assert.assertNull(formatCompliance70);
        org.junit.Assert.assertNotNull(pcxImagingParameters71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "pcx" + "'", str74, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters75);
        org.junit.Assert.assertNull(imageMetadata76);
        org.junit.Assert.assertNull(byteArray77);
        org.junit.Assert.assertNull(byteArray78);
    }

    @Test
    public void test0860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0860");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        java.nio.ByteOrder byteOrder2 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance4 = pcxImageParser0.getFormatCompliance(byteSource3);
        java.lang.String str5 = pcxImageParser0.getName();
        boolean boolean7 = pcxImageParser0.canAcceptExtension("");
        java.io.File file8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser0.getMetadata(file8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertNull(formatCompliance4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0861");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser0.getFormatCompliance(byteSource5);
        org.apache.commons.imaging.ImageFormat imageFormat7 = null;
        boolean boolean8 = pcxImageParser0.canAcceptType(imageFormat7);
        java.io.File file9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser10.getDefaultParameters();
        java.lang.String str15 = pcxImageParser10.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata17 = pcxImageParser10.getMetadata(byteSource16);
        boolean boolean19 = pcxImageParser10.canAcceptExtension("");
        org.apache.commons.imaging.ImageFormat imageFormat20 = null;
        boolean boolean21 = pcxImageParser10.canAcceptType(imageFormat20);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser10.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo23 = pcxImageParser0.getImageInfo(file9, pcxImagingParameters22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "pcx" + "'", str15, "pcx");
        org.junit.Assert.assertNull(imageMetadata17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
    }

    @Test
    public void test0862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0862");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.ImageFormat imageFormat3 = null;
        boolean boolean4 = pcxImageParser0.canAcceptType(imageFormat3);
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder7 = pcxImageParser6.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance9 = pcxImageParser6.getFormatCompliance(byteSource8);
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata11 = pcxImageParser6.getMetadata(byteSource10);
        boolean boolean13 = pcxImageParser6.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = null;
        byte[] byteArray19 = pcxImageParser16.getIccProfileBytes(byteSource17, pcxImagingParameters18);
        java.lang.String str20 = pcxImageParser16.getName();
        java.lang.String str21 = pcxImageParser16.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance23 = pcxImageParser16.getFormatCompliance(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder26 = pcxImageParser25.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance28 = pcxImageParser25.getFormatCompliance(byteSource27);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = pcxImageParser25.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat30 = null;
        boolean boolean31 = pcxImageParser25.canAcceptType(imageFormat30);
        java.lang.String str32 = pcxImageParser25.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser25.getDefaultParameters();
        byte[] byteArray34 = pcxImageParser16.getIccProfileBytes(byteSource24, pcxImagingParameters33);
        byte[] byteArray35 = pcxImageParser6.getIccProfileBytes(byteSource15, pcxImagingParameters33);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension36 = pcxImageParser0.getImageSize(byteSource5, pcxImagingParameters33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNull(formatCompliance9);
        org.junit.Assert.assertNull(imageMetadata11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Pcx-Custom" + "'", str20, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance23);
        org.junit.Assert.assertNotNull(byteOrder26);
        org.junit.Assert.assertNull(formatCompliance28);
        org.junit.Assert.assertNotNull(pcxImagingParameters29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "pcx" + "'", str32, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
        org.junit.Assert.assertNull(byteArray34);
        org.junit.Assert.assertNull(byteArray35);
    }

    @Test
    public void test0863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0863");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder30 = pcxImageParser29.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser29.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser35.getMetadata(byteSource36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder40 = pcxImageParser39.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance42 = pcxImageParser39.getFormatCompliance(byteSource41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser39.getMetadata(byteSource43);
        boolean boolean46 = pcxImageParser39.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = pcxImageParser39.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser35.getMetadata(byteSource38, pcxImagingParameters47);
        byte[] byteArray49 = pcxImageParser29.getIccProfileBytes(byteSource34, pcxImagingParameters47);
        java.lang.String str50 = pcxImageParser29.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters51 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata52 = pcxImageParser0.getMetadata(byteSource28, pcxImagingParameters51);
        java.nio.ByteOrder byteOrder53 = pcxImageParser0.getByteOrder();
        java.io.File file54 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension55 = pcxImageParser0.getImageSize(file54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(byteOrder30);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNull(formatCompliance42);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters47);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNull(byteArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Pcx-Custom" + "'", str50, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters51);
        org.junit.Assert.assertNull(imageMetadata52);
        org.junit.Assert.assertNotNull(byteOrder53);
    }

    @Test
    public void test0864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0864");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat10 = null;
        boolean boolean11 = pcxImageParser0.canAcceptType(imageFormat10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata26 = pcxImageParser24.getMetadata(byteSource25);
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder29 = pcxImageParser28.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance31 = pcxImageParser28.getFormatCompliance(byteSource30);
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser28.getMetadata(byteSource32);
        boolean boolean35 = pcxImageParser28.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser28.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser24.getMetadata(byteSource27, pcxImagingParameters36);
        byte[] byteArray38 = pcxImageParser18.getIccProfileBytes(byteSource23, pcxImagingParameters36);
        java.lang.String str39 = pcxImageParser18.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters40);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo42 = pcxImageParser0.getImageInfo(byteSource13, pcxImagingParameters40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(pcxImagingParameters9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata26);
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertNull(formatCompliance31);
        org.junit.Assert.assertNull(imageMetadata33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertNull(byteArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Pcx-Custom" + "'", str39, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(imageMetadata41);
    }

    @Test
    public void test0865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0865");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat6 = null;
        boolean boolean7 = pcxImageParser0.canAcceptType(imageFormat6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser0.getMetadata(byteSource8);
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = null;
        byte[] byteArray14 = pcxImageParser11.getIccProfileBytes(byteSource12, pcxImagingParameters13);
        java.lang.String str15 = pcxImageParser11.getDefaultExtension();
        java.lang.String str16 = pcxImageParser11.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters20 = null;
        byte[] byteArray21 = pcxImageParser18.getIccProfileBytes(byteSource19, pcxImagingParameters20);
        java.lang.String str22 = pcxImageParser18.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser18.getMetadata(byteSource23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance26 = pcxImageParser18.getFormatCompliance(byteSource25);
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder29 = pcxImageParser28.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance31 = pcxImageParser28.getFormatCompliance(byteSource30);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser28.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = null;
        byte[] byteArray37 = pcxImageParser34.getIccProfileBytes(byteSource35, pcxImagingParameters36);
        java.lang.String str38 = pcxImageParser34.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = pcxImageParser34.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser28.getMetadata(byteSource33, pcxImagingParameters39);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = pcxImageParser28.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser18.getMetadata(byteSource27, pcxImagingParameters41);
        java.lang.String str43 = pcxImageParser18.getName();
        java.lang.String str44 = pcxImageParser18.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser46 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = null;
        byte[] byteArray49 = pcxImageParser46.getIccProfileBytes(byteSource47, pcxImagingParameters48);
        java.lang.String str50 = pcxImageParser46.getName();
        java.lang.String str51 = pcxImageParser46.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser53 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder54 = pcxImageParser53.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance56 = pcxImageParser53.getFormatCompliance(byteSource55);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters57 = pcxImageParser53.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata58 = pcxImageParser46.getMetadata(byteSource52, pcxImagingParameters57);
        java.lang.String str59 = pcxImageParser46.getName();
        org.apache.commons.imaging.ImageFormat imageFormat60 = null;
        boolean boolean61 = pcxImageParser46.canAcceptType(imageFormat60);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters62 = pcxImageParser46.getDefaultParameters();
        byte[] byteArray63 = pcxImageParser18.getIccProfileBytes(byteSource45, pcxImagingParameters62);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata64 = pcxImageParser11.getMetadata(byteSource17, pcxImagingParameters62);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata65 = pcxImageParser0.getMetadata(byteSource10, pcxImagingParameters62);
        org.apache.commons.imaging.bytesource.ByteSource byteSource66 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList67 = pcxImageParser0.getAllBufferedImages(byteSource66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertNull(byteArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "pcx" + "'", str15, "pcx");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Pcx-Custom" + "'", str16, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Pcx-Custom" + "'", str22, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertNull(formatCompliance26);
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertNull(formatCompliance31);
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
        org.junit.Assert.assertNull(byteArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "pcx" + "'", str38, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters39);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertNotNull(pcxImagingParameters41);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Pcx-Custom" + "'", str43, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Pcx-Custom" + "'", str44, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Pcx-Custom" + "'", str50, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Pcx-Custom" + "'", str51, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder54);
        org.junit.Assert.assertNull(formatCompliance56);
        org.junit.Assert.assertNotNull(pcxImagingParameters57);
        org.junit.Assert.assertNull(imageMetadata58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Pcx-Custom" + "'", str59, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters62);
        org.junit.Assert.assertNull(byteArray63);
        org.junit.Assert.assertNull(imageMetadata64);
        org.junit.Assert.assertNull(imageMetadata65);
    }

    @Test
    public void test0866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0866");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser4.getMetadata(byteSource8);
        boolean boolean11 = pcxImageParser4.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance15 = pcxImageParser0.getFormatCompliance(byteSource14);
        java.io.File file16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata17 = pcxImageParser0.getMetadata(file16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertNull(formatCompliance15);
    }

    @Test
    public void test0867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0867");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        boolean boolean5 = pcxImageParser0.canAcceptExtension("");
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata18 = pcxImageParser16.getMetadata(byteSource17);
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser20 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder21 = pcxImageParser20.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance23 = pcxImageParser20.getFormatCompliance(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser20.getMetadata(byteSource24);
        boolean boolean27 = pcxImageParser20.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser20.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser16.getMetadata(byteSource19, pcxImagingParameters28);
        byte[] byteArray30 = pcxImageParser10.getIccProfileBytes(byteSource15, pcxImagingParameters28);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser7.getMetadata(byteSource9, pcxImagingParameters28);
        byte[] byteArray32 = pcxImageParser0.getIccProfileBytes(byteSource6, pcxImagingParameters28);
        java.io.File file33 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean34 = pcxImageParser0.canAcceptExtension(file33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNull(imageMetadata18);
        org.junit.Assert.assertNotNull(byteOrder21);
        org.junit.Assert.assertNull(formatCompliance23);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertNull(byteArray30);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertNull(byteArray32);
    }

    @Test
    public void test0868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0868");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = null;
        byte[] byteArray33 = pcxImageParser30.getIccProfileBytes(byteSource31, pcxImagingParameters32);
        java.lang.String str34 = pcxImageParser30.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser30.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser0.getMetadata(byteSource29, pcxImagingParameters35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser38 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = null;
        byte[] byteArray41 = pcxImageParser38.getIccProfileBytes(byteSource39, pcxImagingParameters40);
        java.lang.String str42 = pcxImageParser38.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance44 = pcxImageParser38.getFormatCompliance(byteSource43);
        org.apache.commons.imaging.ImageFormat imageFormat45 = null;
        boolean boolean46 = pcxImageParser38.canAcceptType(imageFormat45);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser48 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder49 = pcxImageParser48.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance51 = pcxImageParser48.getFormatCompliance(byteSource50);
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser48.getMetadata(byteSource52);
        boolean boolean55 = pcxImageParser48.canAcceptExtension("hi!");
        org.apache.commons.imaging.ImageFormat imageFormat56 = null;
        boolean boolean57 = pcxImageParser48.canAcceptType(imageFormat56);
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser59 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata61 = pcxImageParser59.getMetadata(byteSource60);
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser63 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder64 = pcxImageParser63.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance66 = pcxImageParser63.getFormatCompliance(byteSource65);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters67 = pcxImageParser63.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource68 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser69 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource70 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata71 = pcxImageParser69.getMetadata(byteSource70);
        org.apache.commons.imaging.bytesource.ByteSource byteSource72 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser73 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder74 = pcxImageParser73.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource75 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance76 = pcxImageParser73.getFormatCompliance(byteSource75);
        org.apache.commons.imaging.bytesource.ByteSource byteSource77 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata78 = pcxImageParser73.getMetadata(byteSource77);
        boolean boolean80 = pcxImageParser73.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters81 = pcxImageParser73.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata82 = pcxImageParser69.getMetadata(byteSource72, pcxImagingParameters81);
        byte[] byteArray83 = pcxImageParser63.getIccProfileBytes(byteSource68, pcxImagingParameters81);
        java.lang.String str84 = pcxImageParser63.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters85 = pcxImageParser63.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata86 = pcxImageParser59.getMetadata(byteSource62, pcxImagingParameters85);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata87 = pcxImageParser48.getMetadata(byteSource58, pcxImagingParameters85);
        byte[] byteArray88 = pcxImageParser38.getIccProfileBytes(byteSource47, pcxImagingParameters85);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension89 = pcxImageParser0.getImageSize(byteSource37, pcxImagingParameters85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "pcx" + "'", str34, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertNull(byteArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Pcx-Custom" + "'", str42, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(byteOrder49);
        org.junit.Assert.assertNull(formatCompliance51);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(imageMetadata61);
        org.junit.Assert.assertNotNull(byteOrder64);
        org.junit.Assert.assertNull(formatCompliance66);
        org.junit.Assert.assertNotNull(pcxImagingParameters67);
        org.junit.Assert.assertNull(imageMetadata71);
        org.junit.Assert.assertNotNull(byteOrder74);
        org.junit.Assert.assertNull(formatCompliance76);
        org.junit.Assert.assertNull(imageMetadata78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters81);
        org.junit.Assert.assertNull(imageMetadata82);
        org.junit.Assert.assertNull(byteArray83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "Pcx-Custom" + "'", str84, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters85);
        org.junit.Assert.assertNull(imageMetadata86);
        org.junit.Assert.assertNull(imageMetadata87);
        org.junit.Assert.assertNull(byteArray88);
    }

    @Test
    public void test0869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0869");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = null;
        byte[] byteArray10 = pcxImageParser7.getIccProfileBytes(byteSource8, pcxImagingParameters9);
        java.lang.String str11 = pcxImageParser7.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser7.getMetadata(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance15 = pcxImageParser7.getFormatCompliance(byteSource14);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat17 = null;
        boolean boolean18 = pcxImageParser7.canAcceptType(imageFormat17);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser7.getDefaultParameters();
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource6, pcxImagingParameters19);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList22 = pcxImageParser0.getAllBufferedImages(byteSource21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Pcx-Custom" + "'", str11, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertNull(formatCompliance15);
        org.junit.Assert.assertNotNull(pcxImagingParameters16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
        org.junit.Assert.assertNull(byteArray20);
    }

    @Test
    public void test0870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0870");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser9.canAcceptType(imageFormat14);
        java.lang.String str16 = pcxImageParser9.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser9.getDefaultParameters();
        byte[] byteArray18 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters17);
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo20 = pcxImageParser0.getImageInfo(byteSource19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "pcx" + "'", str16, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
        org.junit.Assert.assertNull(byteArray18);
    }

    @Test
    public void test0871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0871");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat6 = null;
        boolean boolean7 = pcxImageParser0.canAcceptType(imageFormat6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser0.getMetadata(byteSource8);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = pcxImageParser0.getDefaultParameters();
        java.io.File file11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension12 = pcxImageParser0.getImageSize(file11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertNotNull(pcxImagingParameters10);
    }

    @Test
    public void test0872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0872");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        java.lang.String str9 = pcxImageParser0.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = pcxImageParser0.getDefaultParameters();
        java.io.File file11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension12 = pcxImageParser0.getImageSize(file11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Pcx-Custom" + "'", str9, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters10);
    }

    @Test
    public void test0873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0873");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser4.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser8.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.lang.String str29 = pcxImageParser8.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser4.getMetadata(byteSource7, pcxImagingParameters30);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters30);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = null;
        byte[] byteArray35 = pcxImageParser0.getIccProfileBytes(byteSource33, pcxImagingParameters34);
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str37 = pcxImageParser0.dumpImageFile(byteSource36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNull(byteArray35);
    }

    @Test
    public void test0874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0874");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser9.canAcceptType(imageFormat14);
        java.lang.String str16 = pcxImageParser9.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser9.getDefaultParameters();
        byte[] byteArray18 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters17);
        org.apache.commons.imaging.ImageFormat imageFormat19 = null;
        boolean boolean20 = pcxImageParser0.canAcceptType(imageFormat19);
        java.io.File file21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser22 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = null;
        byte[] byteArray25 = pcxImageParser22.getIccProfileBytes(byteSource23, pcxImagingParameters24);
        java.lang.String str26 = pcxImageParser22.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = pcxImageParser22.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder30 = pcxImageParser29.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser29.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = null;
        byte[] byteArray38 = pcxImageParser35.getIccProfileBytes(byteSource36, pcxImagingParameters37);
        java.lang.String str39 = pcxImageParser35.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser35.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser29.getMetadata(byteSource34, pcxImagingParameters40);
        byte[] byteArray42 = pcxImageParser22.getIccProfileBytes(byteSource28, pcxImagingParameters40);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension43 = pcxImageParser0.getImageSize(file21, pcxImagingParameters40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "pcx" + "'", str16, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(byteArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "pcx" + "'", str26, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters27);
        org.junit.Assert.assertNotNull(byteOrder30);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
        org.junit.Assert.assertNull(byteArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "pcx" + "'", str39, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(imageMetadata41);
        org.junit.Assert.assertNull(byteArray42);
    }

    @Test
    public void test0875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0875");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat10 = null;
        boolean boolean11 = pcxImageParser0.canAcceptType(imageFormat10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser0.getDefaultParameters();
        java.lang.String str13 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource14);
        java.lang.String str16 = pcxImageParser0.getName();
        java.io.File file17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata26 = pcxImageParser24.getMetadata(byteSource25);
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder29 = pcxImageParser28.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance31 = pcxImageParser28.getFormatCompliance(byteSource30);
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser28.getMetadata(byteSource32);
        boolean boolean35 = pcxImageParser28.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser28.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser24.getMetadata(byteSource27, pcxImagingParameters36);
        byte[] byteArray38 = pcxImageParser18.getIccProfileBytes(byteSource23, pcxImagingParameters36);
        java.lang.String str39 = pcxImageParser18.getName();
        java.lang.String str40 = pcxImageParser18.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser42 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder43 = pcxImageParser42.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance45 = pcxImageParser42.getFormatCompliance(byteSource44);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser42.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat47 = null;
        boolean boolean48 = pcxImageParser42.canAcceptType(imageFormat47);
        java.lang.String str49 = pcxImageParser42.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters50 = pcxImageParser42.getDefaultParameters();
        byte[] byteArray51 = pcxImageParser18.getIccProfileBytes(byteSource41, pcxImagingParameters50);
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser53 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder54 = pcxImageParser53.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser56 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder57 = pcxImageParser56.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance59 = pcxImageParser56.getFormatCompliance(byteSource58);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters60 = pcxImageParser56.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser62 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata64 = pcxImageParser62.getMetadata(byteSource63);
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser66 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder67 = pcxImageParser66.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource68 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance69 = pcxImageParser66.getFormatCompliance(byteSource68);
        org.apache.commons.imaging.bytesource.ByteSource byteSource70 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata71 = pcxImageParser66.getMetadata(byteSource70);
        boolean boolean73 = pcxImageParser66.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters74 = pcxImageParser66.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata75 = pcxImageParser62.getMetadata(byteSource65, pcxImagingParameters74);
        byte[] byteArray76 = pcxImageParser56.getIccProfileBytes(byteSource61, pcxImagingParameters74);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata77 = pcxImageParser53.getMetadata(byteSource55, pcxImagingParameters74);
        byte[] byteArray78 = pcxImageParser18.getIccProfileBytes(byteSource52, pcxImagingParameters74);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray79 = pcxImageParser0.getIccProfileBytes(file17, pcxImagingParameters74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(pcxImagingParameters9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Pcx-Custom" + "'", str16, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata26);
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertNull(formatCompliance31);
        org.junit.Assert.assertNull(imageMetadata33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertNull(byteArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Pcx-Custom" + "'", str39, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "pcx" + "'", str40, "pcx");
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNull(formatCompliance45);
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "pcx" + "'", str49, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters50);
        org.junit.Assert.assertNull(byteArray51);
        org.junit.Assert.assertNotNull(byteOrder54);
        org.junit.Assert.assertNotNull(byteOrder57);
        org.junit.Assert.assertNull(formatCompliance59);
        org.junit.Assert.assertNotNull(pcxImagingParameters60);
        org.junit.Assert.assertNull(imageMetadata64);
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertNull(formatCompliance69);
        org.junit.Assert.assertNull(imageMetadata71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters74);
        org.junit.Assert.assertNull(imageMetadata75);
        org.junit.Assert.assertNull(byteArray76);
        org.junit.Assert.assertNull(imageMetadata77);
        org.junit.Assert.assertNull(byteArray78);
    }

    @Test
    public void test0876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0876");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.nio.ByteOrder byteOrder29 = pcxImageParser0.getByteOrder();
        java.lang.String str30 = pcxImageParser0.getName();
        java.io.File file31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser32.getMetadata(byteSource33);
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser36 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder37 = pcxImageParser36.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance39 = pcxImageParser36.getFormatCompliance(byteSource38);
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser36.getMetadata(byteSource40);
        boolean boolean43 = pcxImageParser36.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = pcxImageParser36.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata45 = pcxImageParser32.getMetadata(byteSource35, pcxImagingParameters44);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo46 = pcxImageParser0.getImageInfo(file31, pcxImagingParameters44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Pcx-Custom" + "'", str30, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNull(formatCompliance39);
        org.junit.Assert.assertNull(imageMetadata41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters44);
        org.junit.Assert.assertNull(imageMetadata45);
    }

    @Test
    public void test0877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0877");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = null;
        byte[] byteArray16 = pcxImageParser13.getIccProfileBytes(byteSource14, pcxImagingParameters15);
        java.lang.String str17 = pcxImageParser13.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser7.getMetadata(byteSource12, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource6, pcxImagingParameters18);
        java.awt.image.BufferedImage bufferedImage21 = null;
        java.io.OutputStream outputStream22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser23 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser23.getMetadata(byteSource24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser23.getMetadata(byteSource26);
        org.apache.commons.imaging.ImageFormat imageFormat28 = null;
        boolean boolean29 = pcxImageParser23.canAcceptType(imageFormat28);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser23.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage21, outputStream22, pcxImagingParameters30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(byteArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "pcx" + "'", str17, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
    }

    @Test
    public void test0878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0878");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat10 = null;
        boolean boolean11 = pcxImageParser0.canAcceptType(imageFormat10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo13 = pcxImageParser0.getImageInfo(byteSource12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(pcxImagingParameters9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0879");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.ImageFormat imageFormat3 = null;
        boolean boolean4 = pcxImageParser0.canAcceptType(imageFormat3);
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.io.File file7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList8 = pcxImageParser0.getAllBufferedImages(file7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0880");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = null;
        byte[] byteArray36 = pcxImageParser33.getIccProfileBytes(byteSource34, pcxImagingParameters35);
        java.lang.String str37 = pcxImageParser33.getName();
        java.lang.String str38 = pcxImageParser33.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder41 = pcxImageParser40.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance43 = pcxImageParser40.getFormatCompliance(byteSource42);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = pcxImageParser40.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata45 = pcxImageParser33.getMetadata(byteSource39, pcxImagingParameters44);
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser47 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser47.getMetadata(byteSource48);
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser51 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder52 = pcxImageParser51.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance54 = pcxImageParser51.getFormatCompliance(byteSource53);
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata56 = pcxImageParser51.getMetadata(byteSource55);
        boolean boolean58 = pcxImageParser51.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters59 = pcxImageParser51.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata60 = pcxImageParser47.getMetadata(byteSource50, pcxImagingParameters59);
        byte[] byteArray61 = pcxImageParser33.getIccProfileBytes(byteSource46, pcxImagingParameters59);
        byte[] byteArray62 = pcxImageParser0.getIccProfileBytes(byteSource32, pcxImagingParameters59);
        java.lang.String str63 = pcxImageParser0.getDefaultExtension();
        java.io.File file64 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser65 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource66 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters67 = null;
        byte[] byteArray68 = pcxImageParser65.getIccProfileBytes(byteSource66, pcxImagingParameters67);
        java.nio.ByteOrder byteOrder69 = pcxImageParser65.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource70 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser71 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder72 = pcxImageParser71.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource73 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance74 = pcxImageParser71.getFormatCompliance(byteSource73);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters75 = pcxImageParser71.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat76 = null;
        boolean boolean77 = pcxImageParser71.canAcceptType(imageFormat76);
        java.lang.String str78 = pcxImageParser71.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters79 = pcxImageParser71.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata80 = pcxImageParser65.getMetadata(byteSource70, pcxImagingParameters79);
        org.apache.commons.imaging.bytesource.ByteSource byteSource81 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser82 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder83 = pcxImageParser82.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource84 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance85 = pcxImageParser82.getFormatCompliance(byteSource84);
        org.apache.commons.imaging.bytesource.ByteSource byteSource86 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata87 = pcxImageParser82.getMetadata(byteSource86);
        boolean boolean89 = pcxImageParser82.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters90 = pcxImageParser82.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata91 = pcxImageParser65.getMetadata(byteSource81, pcxImagingParameters90);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray92 = pcxImageParser0.getIccProfileBytes(file64, pcxImagingParameters90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Pcx-Custom" + "'", str37, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Pcx-Custom" + "'", str38, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder41);
        org.junit.Assert.assertNull(formatCompliance43);
        org.junit.Assert.assertNotNull(pcxImagingParameters44);
        org.junit.Assert.assertNull(imageMetadata45);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertNotNull(byteOrder52);
        org.junit.Assert.assertNull(formatCompliance54);
        org.junit.Assert.assertNull(imageMetadata56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters59);
        org.junit.Assert.assertNull(imageMetadata60);
        org.junit.Assert.assertNull(byteArray61);
        org.junit.Assert.assertNull(byteArray62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "pcx" + "'", str63, "pcx");
        org.junit.Assert.assertNull(byteArray68);
        org.junit.Assert.assertNotNull(byteOrder69);
        org.junit.Assert.assertNotNull(byteOrder72);
        org.junit.Assert.assertNull(formatCompliance74);
        org.junit.Assert.assertNotNull(pcxImagingParameters75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "pcx" + "'", str78, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters79);
        org.junit.Assert.assertNull(imageMetadata80);
        org.junit.Assert.assertNotNull(byteOrder83);
        org.junit.Assert.assertNull(formatCompliance85);
        org.junit.Assert.assertNull(imageMetadata87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters90);
        org.junit.Assert.assertNull(imageMetadata91);
    }

    @Test
    public void test0881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0881");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters6 = pcxImageParser0.getDefaultParameters();
        java.io.File file7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata10 = pcxImageParser8.getMetadata(byteSource9);
        org.apache.commons.imaging.ImageFormat imageFormat11 = null;
        boolean boolean12 = pcxImageParser8.canAcceptType(imageFormat11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser14.getDefaultParameters();
        java.lang.String str19 = pcxImageParser14.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata21 = pcxImageParser14.getMetadata(byteSource20);
        boolean boolean23 = pcxImageParser14.canAcceptExtension("");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = pcxImageParser14.getDefaultParameters();
        byte[] byteArray25 = pcxImageParser8.getIccProfileBytes(byteSource13, pcxImagingParameters24);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray26 = pcxImageParser0.getIccProfileBytes(file7, pcxImagingParameters24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNotNull(pcxImagingParameters6);
        org.junit.Assert.assertNull(imageMetadata10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "pcx" + "'", str19, "pcx");
        org.junit.Assert.assertNull(imageMetadata21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters24);
        org.junit.Assert.assertNull(byteArray25);
    }

    @Test
    public void test0882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0882");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.nio.ByteOrder byteOrder4 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser0.getFormatCompliance(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = null;
        byte[] byteArray11 = pcxImageParser8.getIccProfileBytes(byteSource9, pcxImagingParameters10);
        java.lang.String str12 = pcxImageParser8.getName();
        java.lang.String str13 = pcxImageParser8.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder16 = pcxImageParser15.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser15.getFormatCompliance(byteSource17);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser15.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata20 = pcxImageParser8.getMetadata(byteSource14, pcxImagingParameters19);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser22 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser22.getMetadata(byteSource23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder27 = pcxImageParser26.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance29 = pcxImageParser26.getFormatCompliance(byteSource28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser26.getMetadata(byteSource30);
        boolean boolean33 = pcxImageParser26.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser26.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser22.getMetadata(byteSource25, pcxImagingParameters34);
        byte[] byteArray36 = pcxImageParser8.getIccProfileBytes(byteSource21, pcxImagingParameters34);
        org.apache.commons.imaging.ImageFormat imageFormat37 = null;
        boolean boolean38 = pcxImageParser8.canAcceptType(imageFormat37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder41 = pcxImageParser40.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance43 = pcxImageParser40.getFormatCompliance(byteSource42);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = pcxImageParser40.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat45 = null;
        boolean boolean46 = pcxImageParser40.canAcceptType(imageFormat45);
        java.lang.String str47 = pcxImageParser40.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = pcxImageParser40.getDefaultParameters();
        byte[] byteArray49 = pcxImageParser8.getIccProfileBytes(byteSource39, pcxImagingParameters48);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata50 = pcxImageParser0.getMetadata(byteSource7, pcxImagingParameters48);
        org.apache.commons.imaging.ImageFormat imageFormat51 = null;
        boolean boolean52 = pcxImageParser0.canAcceptType(imageFormat51);
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNull(formatCompliance6);
        org.junit.Assert.assertNull(byteArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Pcx-Custom" + "'", str12, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNull(formatCompliance18);
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
        org.junit.Assert.assertNull(imageMetadata20);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNull(formatCompliance29);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(byteOrder41);
        org.junit.Assert.assertNull(formatCompliance43);
        org.junit.Assert.assertNotNull(pcxImagingParameters44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "pcx" + "'", str47, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters48);
        org.junit.Assert.assertNull(byteArray49);
        org.junit.Assert.assertNull(imageMetadata50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test0883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0883");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser0.canAcceptType(imageFormat23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance26 = pcxImageParser0.getFormatCompliance(byteSource25);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = pcxImageParser0.getDefaultParameters();
        java.io.File file28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = null;
        byte[] byteArray32 = pcxImageParser29.getIccProfileBytes(byteSource30, pcxImagingParameters31);
        java.lang.String str33 = pcxImageParser29.getName();
        java.lang.String str34 = pcxImageParser29.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser36 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder37 = pcxImageParser36.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance39 = pcxImageParser36.getFormatCompliance(byteSource38);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser36.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser29.getMetadata(byteSource35, pcxImagingParameters40);
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser43 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata45 = pcxImageParser43.getMetadata(byteSource44);
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser47 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder48 = pcxImageParser47.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance50 = pcxImageParser47.getFormatCompliance(byteSource49);
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata52 = pcxImageParser47.getMetadata(byteSource51);
        boolean boolean54 = pcxImageParser47.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters55 = pcxImageParser47.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata56 = pcxImageParser43.getMetadata(byteSource46, pcxImagingParameters55);
        byte[] byteArray57 = pcxImageParser29.getIccProfileBytes(byteSource42, pcxImagingParameters55);
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance59 = pcxImageParser29.getFormatCompliance(byteSource58);
        java.nio.ByteOrder byteOrder60 = pcxImageParser29.getByteOrder();
        java.nio.ByteOrder byteOrder61 = pcxImageParser29.getByteOrder();
        java.lang.String str62 = pcxImageParser29.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters63 = pcxImageParser29.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage64 = pcxImageParser0.getBufferedImage(file28, pcxImagingParameters63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(formatCompliance26);
        org.junit.Assert.assertNotNull(pcxImagingParameters27);
        org.junit.Assert.assertNull(byteArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Pcx-Custom" + "'", str33, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Pcx-Custom" + "'", str34, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNull(formatCompliance39);
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(imageMetadata41);
        org.junit.Assert.assertNull(imageMetadata45);
        org.junit.Assert.assertNotNull(byteOrder48);
        org.junit.Assert.assertNull(formatCompliance50);
        org.junit.Assert.assertNull(imageMetadata52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters55);
        org.junit.Assert.assertNull(imageMetadata56);
        org.junit.Assert.assertNull(byteArray57);
        org.junit.Assert.assertNull(formatCompliance59);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteOrder61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Pcx-Custom" + "'", str62, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters63);
    }

    @Test
    public void test0884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0884");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser0.getMetadata(byteSource21, pcxImagingParameters22);
        java.lang.String str24 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str27 = pcxImageParser26.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance29 = pcxImageParser26.getFormatCompliance(byteSource28);
        java.lang.String str30 = pcxImageParser26.getName();
        boolean boolean32 = pcxImageParser26.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder35 = pcxImageParser34.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance37 = pcxImageParser34.getFormatCompliance(byteSource36);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser34.getDefaultParameters();
        java.lang.String str39 = pcxImageParser34.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser34.getMetadata(byteSource40);
        boolean boolean43 = pcxImageParser34.canAcceptExtension("");
        boolean boolean45 = pcxImageParser34.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser47 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters49 = null;
        byte[] byteArray50 = pcxImageParser47.getIccProfileBytes(byteSource48, pcxImagingParameters49);
        java.lang.String str51 = pcxImageParser47.getName();
        java.lang.String str52 = pcxImageParser47.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser54 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder55 = pcxImageParser54.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance57 = pcxImageParser54.getFormatCompliance(byteSource56);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters58 = pcxImageParser54.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata59 = pcxImageParser47.getMetadata(byteSource53, pcxImagingParameters58);
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser61 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata63 = pcxImageParser61.getMetadata(byteSource62);
        org.apache.commons.imaging.bytesource.ByteSource byteSource64 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser65 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder66 = pcxImageParser65.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource67 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance68 = pcxImageParser65.getFormatCompliance(byteSource67);
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata70 = pcxImageParser65.getMetadata(byteSource69);
        boolean boolean72 = pcxImageParser65.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters73 = pcxImageParser65.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata74 = pcxImageParser61.getMetadata(byteSource64, pcxImagingParameters73);
        byte[] byteArray75 = pcxImageParser47.getIccProfileBytes(byteSource60, pcxImagingParameters73);
        org.apache.commons.imaging.bytesource.ByteSource byteSource76 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance77 = pcxImageParser47.getFormatCompliance(byteSource76);
        java.nio.ByteOrder byteOrder78 = pcxImageParser47.getByteOrder();
        java.nio.ByteOrder byteOrder79 = pcxImageParser47.getByteOrder();
        java.lang.String str80 = pcxImageParser47.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters81 = pcxImageParser47.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata82 = pcxImageParser34.getMetadata(byteSource46, pcxImagingParameters81);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata83 = pcxImageParser26.getMetadata(byteSource33, pcxImagingParameters81);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage84 = pcxImageParser0.getBufferedImage(byteSource25, pcxImagingParameters81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "pcx" + "'", str24, "pcx");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Pcx-Custom" + "'", str27, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Pcx-Custom" + "'", str30, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNull(formatCompliance37);
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "pcx" + "'", str39, "pcx");
        org.junit.Assert.assertNull(imageMetadata41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(byteArray50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Pcx-Custom" + "'", str51, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Pcx-Custom" + "'", str52, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder55);
        org.junit.Assert.assertNull(formatCompliance57);
        org.junit.Assert.assertNotNull(pcxImagingParameters58);
        org.junit.Assert.assertNull(imageMetadata59);
        org.junit.Assert.assertNull(imageMetadata63);
        org.junit.Assert.assertNotNull(byteOrder66);
        org.junit.Assert.assertNull(formatCompliance68);
        org.junit.Assert.assertNull(imageMetadata70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters73);
        org.junit.Assert.assertNull(imageMetadata74);
        org.junit.Assert.assertNull(byteArray75);
        org.junit.Assert.assertNull(formatCompliance77);
        org.junit.Assert.assertNotNull(byteOrder78);
        org.junit.Assert.assertNotNull(byteOrder79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "Pcx-Custom" + "'", str80, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters81);
        org.junit.Assert.assertNull(imageMetadata82);
        org.junit.Assert.assertNull(imageMetadata83);
    }

    @Test
    public void test0885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0885");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat10 = null;
        boolean boolean11 = pcxImageParser0.canAcceptType(imageFormat10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser0.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource14);
        java.io.File file16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser17.getMetadata(byteSource18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata21 = pcxImageParser17.getMetadata(byteSource20);
        org.apache.commons.imaging.ImageFormat imageFormat22 = null;
        boolean boolean23 = pcxImageParser17.canAcceptType(imageFormat22);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = pcxImageParser17.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser0.getMetadata(file16, pcxImagingParameters24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(pcxImagingParameters9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(imageMetadata21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters24);
    }

    @Test
    public void test0886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0886");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata4 = pcxImageParser0.getMetadata(byteSource3);
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder7 = pcxImageParser6.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance9 = pcxImageParser6.getFormatCompliance(byteSource8);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser12 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata14 = pcxImageParser12.getMetadata(byteSource13);
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder17 = pcxImageParser16.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance19 = pcxImageParser16.getFormatCompliance(byteSource18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata21 = pcxImageParser16.getMetadata(byteSource20);
        boolean boolean23 = pcxImageParser16.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser12.getMetadata(byteSource15, pcxImagingParameters24);
        byte[] byteArray26 = pcxImageParser6.getIccProfileBytes(byteSource11, pcxImagingParameters24);
        java.lang.String str27 = pcxImageParser6.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser6.canAcceptType(imageFormat29);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser6.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo33 = pcxImageParser0.getImageInfo(byteSource5, pcxImagingParameters32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata4);
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNull(formatCompliance9);
        org.junit.Assert.assertNotNull(pcxImagingParameters10);
        org.junit.Assert.assertNull(imageMetadata14);
        org.junit.Assert.assertNotNull(byteOrder17);
        org.junit.Assert.assertNull(formatCompliance19);
        org.junit.Assert.assertNull(imageMetadata21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters24);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertNull(byteArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Pcx-Custom" + "'", str27, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
    }

    @Test
    public void test0887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0887");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        java.io.File file8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata11 = pcxImageParser9.getMetadata(byteSource10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser9.getMetadata(byteSource12);
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser9.canAcceptType(imageFormat14);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = pcxImageParser9.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage17 = pcxImageParser0.getBufferedImage(file8, pcxImagingParameters16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertNull(imageMetadata11);
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters16);
    }

    @Test
    public void test0888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0888");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        java.nio.ByteOrder byteOrder2 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat3 = null;
        boolean boolean4 = pcxImageParser0.canAcceptType(imageFormat3);
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.io.File file7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(file7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0889");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat10 = null;
        boolean boolean11 = pcxImageParser0.canAcceptType(imageFormat10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser0.getFormatCompliance(byteSource12);
        java.awt.image.BufferedImage bufferedImage14 = null;
        java.io.OutputStream outputStream15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = null;
        byte[] byteArray19 = pcxImageParser16.getIccProfileBytes(byteSource17, pcxImagingParameters18);
        java.lang.String str20 = pcxImageParser16.getName();
        java.lang.String str21 = pcxImageParser16.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser23 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder24 = pcxImageParser23.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance26 = pcxImageParser23.getFormatCompliance(byteSource25);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = pcxImageParser23.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata28 = pcxImageParser16.getMetadata(byteSource22, pcxImagingParameters27);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser30.getMetadata(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder35 = pcxImageParser34.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance37 = pcxImageParser34.getFormatCompliance(byteSource36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata39 = pcxImageParser34.getMetadata(byteSource38);
        boolean boolean41 = pcxImageParser34.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser34.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata43 = pcxImageParser30.getMetadata(byteSource33, pcxImagingParameters42);
        byte[] byteArray44 = pcxImageParser16.getIccProfileBytes(byteSource29, pcxImagingParameters42);
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance46 = pcxImageParser16.getFormatCompliance(byteSource45);
        java.nio.ByteOrder byteOrder47 = pcxImageParser16.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser49 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters51 = null;
        byte[] byteArray52 = pcxImageParser49.getIccProfileBytes(byteSource50, pcxImagingParameters51);
        java.lang.String str53 = pcxImageParser49.getName();
        java.lang.String str54 = pcxImageParser49.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser56 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder57 = pcxImageParser56.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance59 = pcxImageParser56.getFormatCompliance(byteSource58);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters60 = pcxImageParser56.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata61 = pcxImageParser49.getMetadata(byteSource55, pcxImagingParameters60);
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser63 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource64 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata65 = pcxImageParser63.getMetadata(byteSource64);
        org.apache.commons.imaging.bytesource.ByteSource byteSource66 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser67 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder68 = pcxImageParser67.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance70 = pcxImageParser67.getFormatCompliance(byteSource69);
        org.apache.commons.imaging.bytesource.ByteSource byteSource71 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata72 = pcxImageParser67.getMetadata(byteSource71);
        boolean boolean74 = pcxImageParser67.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters75 = pcxImageParser67.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata76 = pcxImageParser63.getMetadata(byteSource66, pcxImagingParameters75);
        byte[] byteArray77 = pcxImageParser49.getIccProfileBytes(byteSource62, pcxImagingParameters75);
        byte[] byteArray78 = pcxImageParser16.getIccProfileBytes(byteSource48, pcxImagingParameters75);
        java.lang.String str79 = pcxImageParser16.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource80 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser81 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource82 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters83 = null;
        byte[] byteArray84 = pcxImageParser81.getIccProfileBytes(byteSource82, pcxImagingParameters83);
        java.nio.ByteOrder byteOrder85 = pcxImageParser81.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource86 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser87 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder88 = pcxImageParser87.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource89 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance90 = pcxImageParser87.getFormatCompliance(byteSource89);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters91 = pcxImageParser87.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat92 = null;
        boolean boolean93 = pcxImageParser87.canAcceptType(imageFormat92);
        java.lang.String str94 = pcxImageParser87.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters95 = pcxImageParser87.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata96 = pcxImageParser81.getMetadata(byteSource86, pcxImagingParameters95);
        byte[] byteArray97 = pcxImageParser16.getIccProfileBytes(byteSource80, pcxImagingParameters95);
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage14, outputStream15, pcxImagingParameters95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(pcxImagingParameters9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Pcx-Custom" + "'", str20, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder24);
        org.junit.Assert.assertNull(formatCompliance26);
        org.junit.Assert.assertNotNull(pcxImagingParameters27);
        org.junit.Assert.assertNull(imageMetadata28);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNull(formatCompliance37);
        org.junit.Assert.assertNull(imageMetadata39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertNull(imageMetadata43);
        org.junit.Assert.assertNull(byteArray44);
        org.junit.Assert.assertNull(formatCompliance46);
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNull(byteArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Pcx-Custom" + "'", str53, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Pcx-Custom" + "'", str54, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder57);
        org.junit.Assert.assertNull(formatCompliance59);
        org.junit.Assert.assertNotNull(pcxImagingParameters60);
        org.junit.Assert.assertNull(imageMetadata61);
        org.junit.Assert.assertNull(imageMetadata65);
        org.junit.Assert.assertNotNull(byteOrder68);
        org.junit.Assert.assertNull(formatCompliance70);
        org.junit.Assert.assertNull(imageMetadata72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters75);
        org.junit.Assert.assertNull(imageMetadata76);
        org.junit.Assert.assertNull(byteArray77);
        org.junit.Assert.assertNull(byteArray78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "pcx" + "'", str79, "pcx");
        org.junit.Assert.assertNull(byteArray84);
        org.junit.Assert.assertNotNull(byteOrder85);
        org.junit.Assert.assertNotNull(byteOrder88);
        org.junit.Assert.assertNull(formatCompliance90);
        org.junit.Assert.assertNotNull(pcxImagingParameters91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "pcx" + "'", str94, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters95);
        org.junit.Assert.assertNull(imageMetadata96);
        org.junit.Assert.assertNull(byteArray97);
    }

    @Test
    public void test0890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0890");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = null;
        byte[] byteArray36 = pcxImageParser33.getIccProfileBytes(byteSource34, pcxImagingParameters35);
        java.lang.String str37 = pcxImageParser33.getName();
        java.lang.String str38 = pcxImageParser33.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder41 = pcxImageParser40.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance43 = pcxImageParser40.getFormatCompliance(byteSource42);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = pcxImageParser40.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata45 = pcxImageParser33.getMetadata(byteSource39, pcxImagingParameters44);
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser47 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser47.getMetadata(byteSource48);
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser51 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder52 = pcxImageParser51.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance54 = pcxImageParser51.getFormatCompliance(byteSource53);
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata56 = pcxImageParser51.getMetadata(byteSource55);
        boolean boolean58 = pcxImageParser51.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters59 = pcxImageParser51.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata60 = pcxImageParser47.getMetadata(byteSource50, pcxImagingParameters59);
        byte[] byteArray61 = pcxImageParser33.getIccProfileBytes(byteSource46, pcxImagingParameters59);
        byte[] byteArray62 = pcxImageParser0.getIccProfileBytes(byteSource32, pcxImagingParameters59);
        java.lang.String str63 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource64 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser65 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource66 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters67 = null;
        byte[] byteArray68 = pcxImageParser65.getIccProfileBytes(byteSource66, pcxImagingParameters67);
        java.nio.ByteOrder byteOrder69 = pcxImageParser65.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource70 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser71 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder72 = pcxImageParser71.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource73 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance74 = pcxImageParser71.getFormatCompliance(byteSource73);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters75 = pcxImageParser71.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat76 = null;
        boolean boolean77 = pcxImageParser71.canAcceptType(imageFormat76);
        java.lang.String str78 = pcxImageParser71.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters79 = pcxImageParser71.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata80 = pcxImageParser65.getMetadata(byteSource70, pcxImagingParameters79);
        byte[] byteArray81 = pcxImageParser0.getIccProfileBytes(byteSource64, pcxImagingParameters79);
        java.io.File file82 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension83 = pcxImageParser0.getImageSize(file82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Pcx-Custom" + "'", str37, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Pcx-Custom" + "'", str38, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder41);
        org.junit.Assert.assertNull(formatCompliance43);
        org.junit.Assert.assertNotNull(pcxImagingParameters44);
        org.junit.Assert.assertNull(imageMetadata45);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertNotNull(byteOrder52);
        org.junit.Assert.assertNull(formatCompliance54);
        org.junit.Assert.assertNull(imageMetadata56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters59);
        org.junit.Assert.assertNull(imageMetadata60);
        org.junit.Assert.assertNull(byteArray61);
        org.junit.Assert.assertNull(byteArray62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "pcx" + "'", str63, "pcx");
        org.junit.Assert.assertNull(byteArray68);
        org.junit.Assert.assertNotNull(byteOrder69);
        org.junit.Assert.assertNotNull(byteOrder72);
        org.junit.Assert.assertNull(formatCompliance74);
        org.junit.Assert.assertNotNull(pcxImagingParameters75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "pcx" + "'", str78, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters79);
        org.junit.Assert.assertNull(imageMetadata80);
        org.junit.Assert.assertNull(byteArray81);
    }

    @Test
    public void test0891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0891");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        java.io.PrintWriter printWriter9 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = pcxImageParser0.dumpImageFile(printWriter9, byteSource10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
    }

    @Test
    public void test0892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0892");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser0.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata10 = pcxImageParser0.getMetadata(byteSource9);
        java.io.File file11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser12 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder13 = pcxImageParser12.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance15 = pcxImageParser12.getFormatCompliance(byteSource14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata17 = pcxImageParser12.getMetadata(byteSource16);
        java.nio.ByteOrder byteOrder18 = pcxImageParser12.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser20 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder21 = pcxImageParser20.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance23 = pcxImageParser20.getFormatCompliance(byteSource22);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = pcxImageParser20.getDefaultParameters();
        java.lang.String str25 = pcxImageParser20.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser20.getMetadata(byteSource26);
        boolean boolean29 = pcxImageParser20.canAcceptExtension("");
        boolean boolean31 = pcxImageParser20.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = null;
        byte[] byteArray36 = pcxImageParser33.getIccProfileBytes(byteSource34, pcxImagingParameters35);
        java.lang.String str37 = pcxImageParser33.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata39 = pcxImageParser33.getMetadata(byteSource38);
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance41 = pcxImageParser33.getFormatCompliance(byteSource40);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser33.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = null;
        byte[] byteArray47 = pcxImageParser44.getIccProfileBytes(byteSource45, pcxImagingParameters46);
        java.lang.String str48 = pcxImageParser44.getName();
        java.lang.String str49 = pcxImageParser44.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser51 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder52 = pcxImageParser51.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance54 = pcxImageParser51.getFormatCompliance(byteSource53);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters55 = pcxImageParser51.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata56 = pcxImageParser44.getMetadata(byteSource50, pcxImagingParameters55);
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser58 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata60 = pcxImageParser58.getMetadata(byteSource59);
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser62 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder63 = pcxImageParser62.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource64 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance65 = pcxImageParser62.getFormatCompliance(byteSource64);
        org.apache.commons.imaging.bytesource.ByteSource byteSource66 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata67 = pcxImageParser62.getMetadata(byteSource66);
        boolean boolean69 = pcxImageParser62.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters70 = pcxImageParser62.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata71 = pcxImageParser58.getMetadata(byteSource61, pcxImagingParameters70);
        byte[] byteArray72 = pcxImageParser44.getIccProfileBytes(byteSource57, pcxImagingParameters70);
        org.apache.commons.imaging.bytesource.ByteSource byteSource73 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance74 = pcxImageParser44.getFormatCompliance(byteSource73);
        org.apache.commons.imaging.bytesource.ByteSource byteSource75 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser76 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource77 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters78 = null;
        byte[] byteArray79 = pcxImageParser76.getIccProfileBytes(byteSource77, pcxImagingParameters78);
        java.nio.ByteOrder byteOrder80 = pcxImageParser76.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource81 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser82 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder83 = pcxImageParser82.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource84 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance85 = pcxImageParser82.getFormatCompliance(byteSource84);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters86 = pcxImageParser82.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat87 = null;
        boolean boolean88 = pcxImageParser82.canAcceptType(imageFormat87);
        java.lang.String str89 = pcxImageParser82.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters90 = pcxImageParser82.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata91 = pcxImageParser76.getMetadata(byteSource81, pcxImagingParameters90);
        byte[] byteArray92 = pcxImageParser44.getIccProfileBytes(byteSource75, pcxImagingParameters90);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata93 = pcxImageParser33.getMetadata(byteSource43, pcxImagingParameters90);
        byte[] byteArray94 = pcxImageParser20.getIccProfileBytes(byteSource32, pcxImagingParameters90);
        byte[] byteArray95 = pcxImageParser12.getIccProfileBytes(byteSource19, pcxImagingParameters90);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters96 = pcxImageParser12.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray97 = pcxImageParser0.getIccProfileBytes(file11, pcxImagingParameters96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNull(imageMetadata10);
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNull(formatCompliance15);
        org.junit.Assert.assertNull(imageMetadata17);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNotNull(byteOrder21);
        org.junit.Assert.assertNull(formatCompliance23);
        org.junit.Assert.assertNotNull(pcxImagingParameters24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "pcx" + "'", str25, "pcx");
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Pcx-Custom" + "'", str37, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata39);
        org.junit.Assert.assertNull(formatCompliance41);
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertNull(byteArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Pcx-Custom" + "'", str48, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Pcx-Custom" + "'", str49, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder52);
        org.junit.Assert.assertNull(formatCompliance54);
        org.junit.Assert.assertNotNull(pcxImagingParameters55);
        org.junit.Assert.assertNull(imageMetadata56);
        org.junit.Assert.assertNull(imageMetadata60);
        org.junit.Assert.assertNotNull(byteOrder63);
        org.junit.Assert.assertNull(formatCompliance65);
        org.junit.Assert.assertNull(imageMetadata67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters70);
        org.junit.Assert.assertNull(imageMetadata71);
        org.junit.Assert.assertNull(byteArray72);
        org.junit.Assert.assertNull(formatCompliance74);
        org.junit.Assert.assertNull(byteArray79);
        org.junit.Assert.assertNotNull(byteOrder80);
        org.junit.Assert.assertNotNull(byteOrder83);
        org.junit.Assert.assertNull(formatCompliance85);
        org.junit.Assert.assertNotNull(pcxImagingParameters86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "pcx" + "'", str89, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters90);
        org.junit.Assert.assertNull(imageMetadata91);
        org.junit.Assert.assertNull(byteArray92);
        org.junit.Assert.assertNull(imageMetadata93);
        org.junit.Assert.assertNull(byteArray94);
        org.junit.Assert.assertNull(byteArray95);
        org.junit.Assert.assertNotNull(pcxImagingParameters96);
    }

    @Test
    public void test0893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0893");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        java.nio.ByteOrder byteOrder28 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        java.io.File file31 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList32 = pcxImageParser0.getAllBufferedImages(file31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(byteOrder28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test0894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0894");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        java.io.File file7 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean8 = pcxImageParser0.canAcceptExtension(file7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
    }

    @Test
    public void test0895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0895");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser0.canAcceptType(imageFormat14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder18 = pcxImageParser17.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance20 = pcxImageParser17.getFormatCompliance(byteSource19);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser17.getDefaultParameters();
        java.lang.String str22 = pcxImageParser17.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser17.getMetadata(byteSource23);
        boolean boolean26 = pcxImageParser17.canAcceptExtension("");
        org.apache.commons.imaging.ImageFormat imageFormat27 = null;
        boolean boolean28 = pcxImageParser17.canAcceptType(imageFormat27);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = null;
        byte[] byteArray33 = pcxImageParser30.getIccProfileBytes(byteSource31, pcxImagingParameters32);
        java.lang.String str34 = pcxImageParser30.getName();
        java.lang.String str35 = pcxImageParser30.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser37 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder38 = pcxImageParser37.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance40 = pcxImageParser37.getFormatCompliance(byteSource39);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = pcxImageParser37.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser30.getMetadata(byteSource36, pcxImagingParameters41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser44.getMetadata(byteSource45);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser48 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder49 = pcxImageParser48.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance51 = pcxImageParser48.getFormatCompliance(byteSource50);
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser48.getMetadata(byteSource52);
        boolean boolean55 = pcxImageParser48.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters56 = pcxImageParser48.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata57 = pcxImageParser44.getMetadata(byteSource47, pcxImagingParameters56);
        byte[] byteArray58 = pcxImageParser30.getIccProfileBytes(byteSource43, pcxImagingParameters56);
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance60 = pcxImageParser30.getFormatCompliance(byteSource59);
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser62 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters64 = null;
        byte[] byteArray65 = pcxImageParser62.getIccProfileBytes(byteSource63, pcxImagingParameters64);
        java.nio.ByteOrder byteOrder66 = pcxImageParser62.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource67 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser68 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder69 = pcxImageParser68.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource70 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance71 = pcxImageParser68.getFormatCompliance(byteSource70);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters72 = pcxImageParser68.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat73 = null;
        boolean boolean74 = pcxImageParser68.canAcceptType(imageFormat73);
        java.lang.String str75 = pcxImageParser68.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters76 = pcxImageParser68.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata77 = pcxImageParser62.getMetadata(byteSource67, pcxImagingParameters76);
        byte[] byteArray78 = pcxImageParser30.getIccProfileBytes(byteSource61, pcxImagingParameters76);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata79 = pcxImageParser17.getMetadata(byteSource29, pcxImagingParameters76);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage80 = pcxImageParser0.getBufferedImage(byteSource16, pcxImagingParameters76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNull(formatCompliance20);
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Pcx-Custom" + "'", str34, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Pcx-Custom" + "'", str35, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder38);
        org.junit.Assert.assertNull(formatCompliance40);
        org.junit.Assert.assertNotNull(pcxImagingParameters41);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertNull(imageMetadata46);
        org.junit.Assert.assertNotNull(byteOrder49);
        org.junit.Assert.assertNull(formatCompliance51);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters56);
        org.junit.Assert.assertNull(imageMetadata57);
        org.junit.Assert.assertNull(byteArray58);
        org.junit.Assert.assertNull(formatCompliance60);
        org.junit.Assert.assertNull(byteArray65);
        org.junit.Assert.assertNotNull(byteOrder66);
        org.junit.Assert.assertNotNull(byteOrder69);
        org.junit.Assert.assertNull(formatCompliance71);
        org.junit.Assert.assertNotNull(pcxImagingParameters72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "pcx" + "'", str75, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters76);
        org.junit.Assert.assertNull(imageMetadata77);
        org.junit.Assert.assertNull(byteArray78);
        org.junit.Assert.assertNull(imageMetadata79);
    }

    @Test
    public void test0896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0896");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        boolean boolean8 = pcxImageParser0.canAcceptExtension("Pcx-Custom");
        java.io.File file9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata10 = pcxImageParser0.getMetadata(file9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0897");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        boolean boolean9 = pcxImageParser0.canAcceptExtension("");
        boolean boolean11 = pcxImageParser0.canAcceptExtension("hi!");
        java.awt.image.BufferedImage bufferedImage12 = null;
        java.io.OutputStream outputStream13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = null;
        byte[] byteArray17 = pcxImageParser14.getIccProfileBytes(byteSource15, pcxImagingParameters16);
        java.lang.String str18 = pcxImageParser14.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat19 = null;
        boolean boolean20 = pcxImageParser14.canAcceptType(imageFormat19);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser22 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser22.getMetadata(byteSource23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder27 = pcxImageParser26.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance29 = pcxImageParser26.getFormatCompliance(byteSource28);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser26.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser32.getMetadata(byteSource33);
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser36 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder37 = pcxImageParser36.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance39 = pcxImageParser36.getFormatCompliance(byteSource38);
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser36.getMetadata(byteSource40);
        boolean boolean43 = pcxImageParser36.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = pcxImageParser36.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata45 = pcxImageParser32.getMetadata(byteSource35, pcxImagingParameters44);
        byte[] byteArray46 = pcxImageParser26.getIccProfileBytes(byteSource31, pcxImagingParameters44);
        java.lang.String str47 = pcxImageParser26.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = pcxImageParser26.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser22.getMetadata(byteSource25, pcxImagingParameters48);
        byte[] byteArray50 = pcxImageParser14.getIccProfileBytes(byteSource21, pcxImagingParameters48);
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage12, outputStream13, pcxImagingParameters48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(byteArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "pcx" + "'", str18, "pcx");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNull(formatCompliance29);
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNull(formatCompliance39);
        org.junit.Assert.assertNull(imageMetadata41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters44);
        org.junit.Assert.assertNull(imageMetadata45);
        org.junit.Assert.assertNull(byteArray46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Pcx-Custom" + "'", str47, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters48);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertNull(byteArray50);
    }

    @Test
    public void test0898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0898");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo9 = pcxImageParser0.getImageInfo(byteSource8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0899");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = null;
        byte[] byteArray20 = pcxImageParser17.getIccProfileBytes(byteSource18, pcxImagingParameters19);
        java.lang.String str21 = pcxImageParser17.getName();
        java.lang.String str22 = pcxImageParser17.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser17.getMetadata(byteSource23, pcxImagingParameters28);
        java.lang.String str30 = pcxImageParser17.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser17.getMetadata(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = null;
        byte[] byteArray37 = pcxImageParser34.getIccProfileBytes(byteSource35, pcxImagingParameters36);
        java.lang.String str38 = pcxImageParser34.getName();
        java.lang.String str39 = pcxImageParser34.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser41 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder42 = pcxImageParser41.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance44 = pcxImageParser41.getFormatCompliance(byteSource43);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser41.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser34.getMetadata(byteSource40, pcxImagingParameters45);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser48 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters50 = null;
        byte[] byteArray51 = pcxImageParser48.getIccProfileBytes(byteSource49, pcxImagingParameters50);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser48.getDefaultParameters();
        byte[] byteArray53 = pcxImageParser34.getIccProfileBytes(byteSource47, pcxImagingParameters52);
        byte[] byteArray54 = pcxImageParser17.getIccProfileBytes(byteSource33, pcxImagingParameters52);
        byte[] byteArray55 = pcxImageParser9.getIccProfileBytes(byteSource16, pcxImagingParameters52);
        byte[] byteArray56 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters52);
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance58 = pcxImageParser0.getFormatCompliance(byteSource57);
        java.io.PrintWriter printWriter59 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean61 = pcxImageParser0.dumpImageFile(printWriter59, byteSource60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNotNull(pcxImagingParameters15);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Pcx-Custom" + "'", str22, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Pcx-Custom" + "'", str30, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNull(byteArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Pcx-Custom" + "'", str38, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Pcx-Custom" + "'", str39, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNull(formatCompliance44);
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertNull(imageMetadata46);
        org.junit.Assert.assertNull(byteArray51);
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(byteArray53);
        org.junit.Assert.assertNull(byteArray54);
        org.junit.Assert.assertNull(byteArray55);
        org.junit.Assert.assertNull(byteArray56);
        org.junit.Assert.assertNull(formatCompliance58);
    }

    @Test
    public void test0900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0900");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata4 = pcxImageParser0.getMetadata(byteSource3);
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        java.io.File file6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = pcxImageParser0.dumpImageFile(file6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
    }

    @Test
    public void test0901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0901");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        java.nio.ByteOrder byteOrder2 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance4 = pcxImageParser0.getFormatCompliance(byteSource3);
        java.lang.String str5 = pcxImageParser0.getName();
        boolean boolean7 = pcxImageParser0.canAcceptExtension("");
        java.lang.Class<?> wildcardClass8 = pcxImageParser0.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertNull(formatCompliance4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0902");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = null;
        byte[] byteArray20 = pcxImageParser17.getIccProfileBytes(byteSource18, pcxImagingParameters19);
        java.lang.String str21 = pcxImageParser17.getName();
        java.lang.String str22 = pcxImageParser17.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser17.getMetadata(byteSource23, pcxImagingParameters28);
        java.lang.String str30 = pcxImageParser17.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser17.getMetadata(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = null;
        byte[] byteArray37 = pcxImageParser34.getIccProfileBytes(byteSource35, pcxImagingParameters36);
        java.lang.String str38 = pcxImageParser34.getName();
        java.lang.String str39 = pcxImageParser34.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser41 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder42 = pcxImageParser41.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance44 = pcxImageParser41.getFormatCompliance(byteSource43);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser41.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser34.getMetadata(byteSource40, pcxImagingParameters45);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser48 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters50 = null;
        byte[] byteArray51 = pcxImageParser48.getIccProfileBytes(byteSource49, pcxImagingParameters50);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser48.getDefaultParameters();
        byte[] byteArray53 = pcxImageParser34.getIccProfileBytes(byteSource47, pcxImagingParameters52);
        byte[] byteArray54 = pcxImageParser17.getIccProfileBytes(byteSource33, pcxImagingParameters52);
        byte[] byteArray55 = pcxImageParser9.getIccProfileBytes(byteSource16, pcxImagingParameters52);
        byte[] byteArray56 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters52);
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance58 = pcxImageParser0.getFormatCompliance(byteSource57);
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance60 = pcxImageParser0.getFormatCompliance(byteSource59);
        java.io.File file61 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata62 = pcxImageParser0.getMetadata(file61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNotNull(pcxImagingParameters15);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Pcx-Custom" + "'", str22, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Pcx-Custom" + "'", str30, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNull(byteArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Pcx-Custom" + "'", str38, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Pcx-Custom" + "'", str39, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNull(formatCompliance44);
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertNull(imageMetadata46);
        org.junit.Assert.assertNull(byteArray51);
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(byteArray53);
        org.junit.Assert.assertNull(byteArray54);
        org.junit.Assert.assertNull(byteArray55);
        org.junit.Assert.assertNull(byteArray56);
        org.junit.Assert.assertNull(formatCompliance58);
        org.junit.Assert.assertNull(formatCompliance60);
    }

    @Test
    public void test0903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0903");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        java.lang.String str7 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList9 = pcxImageParser0.getAllBufferedImages(byteSource8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Pcx-Custom" + "'", str7, "Pcx-Custom");
    }

    @Test
    public void test0904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0904");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.nio.ByteOrder byteOrder29 = pcxImageParser0.getByteOrder();
        java.lang.String str30 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser0.getFormatCompliance(byteSource31);
        java.io.File file33 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str34 = pcxImageParser0.dumpImageFile(file33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "pcx" + "'", str30, "pcx");
        org.junit.Assert.assertNull(formatCompliance32);
    }

    @Test
    public void test0905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0905");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = null;
        byte[] byteArray9 = pcxImageParser6.getIccProfileBytes(byteSource7, pcxImagingParameters8);
        java.lang.String str10 = pcxImageParser6.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource5, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = null;
        byte[] byteArray18 = pcxImageParser15.getIccProfileBytes(byteSource16, pcxImagingParameters17);
        java.lang.String str19 = pcxImageParser15.getName();
        java.lang.String str20 = pcxImageParser15.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser22 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder23 = pcxImageParser22.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance25 = pcxImageParser22.getFormatCompliance(byteSource24);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser22.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser15.getMetadata(byteSource21, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = null;
        byte[] byteArray32 = pcxImageParser29.getIccProfileBytes(byteSource30, pcxImagingParameters31);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser29.getDefaultParameters();
        byte[] byteArray34 = pcxImageParser15.getIccProfileBytes(byteSource28, pcxImagingParameters33);
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser36 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder37 = pcxImageParser36.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance39 = pcxImageParser36.getFormatCompliance(byteSource38);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser36.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat41 = null;
        boolean boolean42 = pcxImageParser36.canAcceptType(imageFormat41);
        java.lang.String str43 = pcxImageParser36.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = pcxImageParser36.getDefaultParameters();
        java.lang.String str45 = pcxImageParser36.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser36.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser15.getMetadata(byteSource35, pcxImagingParameters46);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage48 = pcxImageParser0.getBufferedImage(byteSource14, pcxImagingParameters46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(byteArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "pcx" + "'", str10, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Pcx-Custom" + "'", str19, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Pcx-Custom" + "'", str20, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertNull(formatCompliance25);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray32);
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
        org.junit.Assert.assertNull(byteArray34);
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNull(formatCompliance39);
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "pcx" + "'", str43, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Pcx-Custom" + "'", str45, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
        org.junit.Assert.assertNull(imageMetadata47);
    }

    @Test
    public void test0906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0906");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser0.canAcceptType(imageFormat23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance26 = pcxImageParser0.getFormatCompliance(byteSource25);
        java.lang.String str27 = pcxImageParser0.getDefaultExtension();
        java.lang.String str28 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo30 = pcxImageParser0.getImageInfo(byteSource29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(formatCompliance26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "pcx" + "'", str27, "pcx");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Pcx-Custom" + "'", str28, "Pcx-Custom");
    }

    @Test
    public void test0907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0907");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        java.io.File file31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = null;
        byte[] byteArray35 = pcxImageParser32.getIccProfileBytes(byteSource33, pcxImagingParameters34);
        java.lang.String str36 = pcxImageParser32.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser32.getMetadata(byteSource37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance40 = pcxImageParser32.getFormatCompliance(byteSource39);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser43 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = null;
        byte[] byteArray46 = pcxImageParser43.getIccProfileBytes(byteSource44, pcxImagingParameters45);
        java.lang.String str47 = pcxImageParser43.getName();
        java.lang.String str48 = pcxImageParser43.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser50 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder51 = pcxImageParser50.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance53 = pcxImageParser50.getFormatCompliance(byteSource52);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters54 = pcxImageParser50.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata55 = pcxImageParser43.getMetadata(byteSource49, pcxImagingParameters54);
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser57 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata59 = pcxImageParser57.getMetadata(byteSource58);
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser61 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder62 = pcxImageParser61.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance64 = pcxImageParser61.getFormatCompliance(byteSource63);
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata66 = pcxImageParser61.getMetadata(byteSource65);
        boolean boolean68 = pcxImageParser61.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters69 = pcxImageParser61.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata70 = pcxImageParser57.getMetadata(byteSource60, pcxImagingParameters69);
        byte[] byteArray71 = pcxImageParser43.getIccProfileBytes(byteSource56, pcxImagingParameters69);
        org.apache.commons.imaging.bytesource.ByteSource byteSource72 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance73 = pcxImageParser43.getFormatCompliance(byteSource72);
        org.apache.commons.imaging.bytesource.ByteSource byteSource74 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser75 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource76 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters77 = null;
        byte[] byteArray78 = pcxImageParser75.getIccProfileBytes(byteSource76, pcxImagingParameters77);
        java.nio.ByteOrder byteOrder79 = pcxImageParser75.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource80 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser81 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder82 = pcxImageParser81.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource83 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance84 = pcxImageParser81.getFormatCompliance(byteSource83);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters85 = pcxImageParser81.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat86 = null;
        boolean boolean87 = pcxImageParser81.canAcceptType(imageFormat86);
        java.lang.String str88 = pcxImageParser81.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters89 = pcxImageParser81.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata90 = pcxImageParser75.getMetadata(byteSource80, pcxImagingParameters89);
        byte[] byteArray91 = pcxImageParser43.getIccProfileBytes(byteSource74, pcxImagingParameters89);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata92 = pcxImageParser32.getMetadata(byteSource42, pcxImagingParameters89);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension93 = pcxImageParser0.getImageSize(file31, pcxImagingParameters89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(byteArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Pcx-Custom" + "'", str36, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNull(formatCompliance40);
        org.junit.Assert.assertNotNull(pcxImagingParameters41);
        org.junit.Assert.assertNull(byteArray46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Pcx-Custom" + "'", str47, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Pcx-Custom" + "'", str48, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder51);
        org.junit.Assert.assertNull(formatCompliance53);
        org.junit.Assert.assertNotNull(pcxImagingParameters54);
        org.junit.Assert.assertNull(imageMetadata55);
        org.junit.Assert.assertNull(imageMetadata59);
        org.junit.Assert.assertNotNull(byteOrder62);
        org.junit.Assert.assertNull(formatCompliance64);
        org.junit.Assert.assertNull(imageMetadata66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters69);
        org.junit.Assert.assertNull(imageMetadata70);
        org.junit.Assert.assertNull(byteArray71);
        org.junit.Assert.assertNull(formatCompliance73);
        org.junit.Assert.assertNull(byteArray78);
        org.junit.Assert.assertNotNull(byteOrder79);
        org.junit.Assert.assertNotNull(byteOrder82);
        org.junit.Assert.assertNull(formatCompliance84);
        org.junit.Assert.assertNotNull(pcxImagingParameters85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "pcx" + "'", str88, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters89);
        org.junit.Assert.assertNull(imageMetadata90);
        org.junit.Assert.assertNull(byteArray91);
        org.junit.Assert.assertNull(imageMetadata92);
    }

    @Test
    public void test0908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0908");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = null;
        byte[] byteArray19 = pcxImageParser16.getIccProfileBytes(byteSource17, pcxImagingParameters18);
        java.lang.String str20 = pcxImageParser16.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser10.getMetadata(byteSource15, pcxImagingParameters21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser0.getMetadata(byteSource9, pcxImagingParameters23);
        java.lang.String str25 = pcxImageParser0.getName();
        java.lang.String str26 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = null;
        byte[] byteArray31 = pcxImageParser28.getIccProfileBytes(byteSource29, pcxImagingParameters30);
        java.lang.String str32 = pcxImageParser28.getName();
        java.lang.String str33 = pcxImageParser28.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder36 = pcxImageParser35.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance38 = pcxImageParser35.getFormatCompliance(byteSource37);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = pcxImageParser35.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser28.getMetadata(byteSource34, pcxImagingParameters39);
        java.lang.String str41 = pcxImageParser28.getName();
        org.apache.commons.imaging.ImageFormat imageFormat42 = null;
        boolean boolean43 = pcxImageParser28.canAcceptType(imageFormat42);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = pcxImageParser28.getDefaultParameters();
        byte[] byteArray45 = pcxImageParser0.getIccProfileBytes(byteSource27, pcxImagingParameters44);
        java.io.File file46 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser0.getMetadata(file46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "pcx" + "'", str20, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Pcx-Custom" + "'", str26, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Pcx-Custom" + "'", str32, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Pcx-Custom" + "'", str33, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNull(formatCompliance38);
        org.junit.Assert.assertNotNull(pcxImagingParameters39);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Pcx-Custom" + "'", str41, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters44);
        org.junit.Assert.assertNull(byteArray45);
    }

    @Test
    public void test0909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0909");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        boolean boolean29 = pcxImageParser0.canAcceptExtension("pcx");
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str31 = pcxImageParser0.dumpImageFile(byteSource30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test0910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0910");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat10 = null;
        boolean boolean11 = pcxImageParser0.canAcceptType(imageFormat10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser0.getDefaultParameters();
        java.lang.String str13 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource14);
        java.io.File file16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = null;
        byte[] byteArray20 = pcxImageParser17.getIccProfileBytes(byteSource18, pcxImagingParameters19);
        java.lang.String str21 = pcxImageParser17.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser17.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser17.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser0.getMetadata(file16, pcxImagingParameters23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(pcxImagingParameters9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
    }

    @Test
    public void test0911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0911");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.nio.ByteOrder byteOrder4 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser0.getFormatCompliance(byteSource5);
        java.io.PrintWriter printWriter7 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = pcxImageParser0.dumpImageFile(printWriter7, byteSource8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNull(formatCompliance6);
    }

    @Test
    public void test0912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0912");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.nio.ByteOrder byteOrder29 = pcxImageParser0.getByteOrder();
        java.lang.String str30 = pcxImageParser0.getName();
        java.io.File file31 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str32 = pcxImageParser0.dumpImageFile(file31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Pcx-Custom" + "'", str30, "Pcx-Custom");
    }

    @Test
    public void test0913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0913");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser0.getMetadata(byteSource22);
        java.lang.Class<?> wildcardClass24 = pcxImageParser0.getClass();
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0914");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.ImageFormat imageFormat8 = null;
        boolean boolean9 = pcxImageParser0.canAcceptType(imageFormat8);
        java.io.File file10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder12 = pcxImageParser11.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance14 = pcxImageParser11.getFormatCompliance(byteSource13);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = pcxImageParser11.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser17.getMetadata(byteSource18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder22 = pcxImageParser21.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance24 = pcxImageParser21.getFormatCompliance(byteSource23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata26 = pcxImageParser21.getMetadata(byteSource25);
        boolean boolean28 = pcxImageParser21.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata30 = pcxImageParser17.getMetadata(byteSource20, pcxImagingParameters29);
        byte[] byteArray31 = pcxImageParser11.getIccProfileBytes(byteSource16, pcxImagingParameters29);
        java.lang.String str32 = pcxImageParser11.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser11.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat34 = null;
        boolean boolean35 = pcxImageParser11.canAcceptType(imageFormat34);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser11.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = pcxImageParser11.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray38 = pcxImageParser0.getIccProfileBytes(file10, pcxImagingParameters37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(byteOrder12);
        org.junit.Assert.assertNull(formatCompliance14);
        org.junit.Assert.assertNotNull(pcxImagingParameters15);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNull(formatCompliance24);
        org.junit.Assert.assertNull(imageMetadata26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters29);
        org.junit.Assert.assertNull(imageMetadata30);
        org.junit.Assert.assertNull(byteArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Pcx-Custom" + "'", str32, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertNotNull(pcxImagingParameters37);
    }

    @Test
    public void test0915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0915");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser0.canAcceptType(imageFormat23);
        java.io.File file25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder27 = pcxImageParser26.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance29 = pcxImageParser26.getFormatCompliance(byteSource28);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser26.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser32.getMetadata(byteSource33);
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser36 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder37 = pcxImageParser36.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance39 = pcxImageParser36.getFormatCompliance(byteSource38);
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser36.getMetadata(byteSource40);
        boolean boolean43 = pcxImageParser36.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = pcxImageParser36.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata45 = pcxImageParser32.getMetadata(byteSource35, pcxImagingParameters44);
        byte[] byteArray46 = pcxImageParser26.getIccProfileBytes(byteSource31, pcxImagingParameters44);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray47 = pcxImageParser0.getIccProfileBytes(file25, pcxImagingParameters44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNull(formatCompliance29);
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNull(formatCompliance39);
        org.junit.Assert.assertNull(imageMetadata41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters44);
        org.junit.Assert.assertNull(imageMetadata45);
        org.junit.Assert.assertNull(byteArray46);
    }

    @Test
    public void test0916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0916");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        java.io.File file8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = null;
        byte[] byteArray12 = pcxImageParser9.getIccProfileBytes(byteSource10, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser9.getName();
        java.lang.String str14 = pcxImageParser9.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder17 = pcxImageParser16.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance19 = pcxImageParser16.getFormatCompliance(byteSource18);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters20 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata21 = pcxImageParser9.getMetadata(byteSource15, pcxImagingParameters20);
        java.lang.String str22 = pcxImageParser9.getName();
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser9.canAcceptType(imageFormat23);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser9.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray26 = pcxImageParser0.getIccProfileBytes(file8, pcxImagingParameters25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNull(byteArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Pcx-Custom" + "'", str14, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder17);
        org.junit.Assert.assertNull(formatCompliance19);
        org.junit.Assert.assertNotNull(pcxImagingParameters20);
        org.junit.Assert.assertNull(imageMetadata21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Pcx-Custom" + "'", str22, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
    }

    @Test
    public void test0917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0917");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.ImageFormat imageFormat3 = null;
        boolean boolean4 = pcxImageParser0.canAcceptType(imageFormat3);
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.io.File file7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser0.getMetadata(file7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0918");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        java.nio.ByteOrder byteOrder2 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat3 = null;
        boolean boolean4 = pcxImageParser0.canAcceptType(imageFormat3);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        java.lang.Class<?> wildcardClass6 = pcxImageParser0.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0919");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser0.getMetadata(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser0.getMetadata(byteSource24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser0.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = null;
        byte[] byteArray32 = pcxImageParser29.getIccProfileBytes(byteSource30, pcxImagingParameters31);
        java.lang.String str33 = pcxImageParser29.getName();
        java.lang.String str34 = pcxImageParser29.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser36 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder37 = pcxImageParser36.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance39 = pcxImageParser36.getFormatCompliance(byteSource38);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser36.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser29.getMetadata(byteSource35, pcxImagingParameters40);
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser43 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata45 = pcxImageParser43.getMetadata(byteSource44);
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser47 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder48 = pcxImageParser47.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance50 = pcxImageParser47.getFormatCompliance(byteSource49);
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata52 = pcxImageParser47.getMetadata(byteSource51);
        boolean boolean54 = pcxImageParser47.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters55 = pcxImageParser47.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata56 = pcxImageParser43.getMetadata(byteSource46, pcxImagingParameters55);
        byte[] byteArray57 = pcxImageParser29.getIccProfileBytes(byteSource42, pcxImagingParameters55);
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance59 = pcxImageParser29.getFormatCompliance(byteSource58);
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser61 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters63 = null;
        byte[] byteArray64 = pcxImageParser61.getIccProfileBytes(byteSource62, pcxImagingParameters63);
        java.nio.ByteOrder byteOrder65 = pcxImageParser61.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource66 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser67 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder68 = pcxImageParser67.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance70 = pcxImageParser67.getFormatCompliance(byteSource69);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters71 = pcxImageParser67.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat72 = null;
        boolean boolean73 = pcxImageParser67.canAcceptType(imageFormat72);
        java.lang.String str74 = pcxImageParser67.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters75 = pcxImageParser67.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata76 = pcxImageParser61.getMetadata(byteSource66, pcxImagingParameters75);
        byte[] byteArray77 = pcxImageParser29.getIccProfileBytes(byteSource60, pcxImagingParameters75);
        byte[] byteArray78 = pcxImageParser0.getIccProfileBytes(byteSource28, pcxImagingParameters75);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters79 = pcxImageParser0.getDefaultParameters();
        java.io.File file80 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList81 = pcxImageParser0.getAllBufferedImages(file80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNull(byteArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Pcx-Custom" + "'", str33, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Pcx-Custom" + "'", str34, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNull(formatCompliance39);
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(imageMetadata41);
        org.junit.Assert.assertNull(imageMetadata45);
        org.junit.Assert.assertNotNull(byteOrder48);
        org.junit.Assert.assertNull(formatCompliance50);
        org.junit.Assert.assertNull(imageMetadata52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters55);
        org.junit.Assert.assertNull(imageMetadata56);
        org.junit.Assert.assertNull(byteArray57);
        org.junit.Assert.assertNull(formatCompliance59);
        org.junit.Assert.assertNull(byteArray64);
        org.junit.Assert.assertNotNull(byteOrder65);
        org.junit.Assert.assertNotNull(byteOrder68);
        org.junit.Assert.assertNull(formatCompliance70);
        org.junit.Assert.assertNotNull(pcxImagingParameters71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "pcx" + "'", str74, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters75);
        org.junit.Assert.assertNull(imageMetadata76);
        org.junit.Assert.assertNull(byteArray77);
        org.junit.Assert.assertNull(byteArray78);
        org.junit.Assert.assertNotNull(pcxImagingParameters79);
    }

    @Test
    public void test0920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0920");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser0.getFormatCompliance(byteSource5);
        java.nio.ByteOrder byteOrder7 = pcxImageParser0.getByteOrder();
        java.lang.String str8 = pcxImageParser0.getName();
        java.io.File file9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser0.getFormatCompliance(file9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance6);
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Pcx-Custom" + "'", str8, "Pcx-Custom");
    }

    @Test
    public void test0921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0921");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser0.canAcceptType(imageFormat23);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser0.getDefaultParameters();
        java.io.PrintWriter printWriter26 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean28 = pcxImageParser0.dumpImageFile(printWriter26, byteSource27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
    }

    @Test
    public void test0922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0922");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser0.canAcceptType(imageFormat23);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser0.getDefaultParameters();
        java.nio.ByteOrder byteOrder27 = pcxImageParser0.getByteOrder();
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNotNull(byteOrder27);
    }

    @Test
    public void test0923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0923");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        java.nio.ByteOrder byteOrder32 = pcxImageParser0.getByteOrder();
        java.lang.String str33 = pcxImageParser0.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser0.getDefaultParameters();
        java.io.File file35 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray36 = pcxImageParser0.getIccProfileBytes(file35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Pcx-Custom" + "'", str33, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
    }

    @Test
    public void test0924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0924");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat37 = null;
        boolean boolean38 = pcxImageParser32.canAcceptType(imageFormat37);
        java.lang.String str39 = pcxImageParser32.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser32.getDefaultParameters();
        byte[] byteArray41 = pcxImageParser0.getIccProfileBytes(byteSource31, pcxImagingParameters40);
        java.lang.String str42 = pcxImageParser0.getName();
        boolean boolean44 = pcxImageParser0.canAcceptExtension("hi!");
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "pcx" + "'", str39, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(byteArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Pcx-Custom" + "'", str42, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test0925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0925");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        boolean boolean5 = pcxImageParser0.canAcceptExtension("Pcx-Custom");
        java.lang.String str6 = pcxImageParser0.getName();
        java.io.File file7 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray8 = pcxImageParser0.getIccProfileBytes(file7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Pcx-Custom" + "'", str6, "Pcx-Custom");
    }

    @Test
    public void test0926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0926");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = null;
        byte[] byteArray19 = pcxImageParser16.getIccProfileBytes(byteSource17, pcxImagingParameters18);
        java.lang.String str20 = pcxImageParser16.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser10.getMetadata(byteSource15, pcxImagingParameters21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser0.getMetadata(byteSource9, pcxImagingParameters23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str26 = pcxImageParser0.dumpImageFile(byteSource25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "pcx" + "'", str20, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(imageMetadata24);
    }

    @Test
    public void test0927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0927");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = null;
        byte[] byteArray17 = pcxImageParser14.getIccProfileBytes(byteSource15, pcxImagingParameters16);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser14.getDefaultParameters();
        byte[] byteArray19 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder22 = pcxImageParser21.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance24 = pcxImageParser21.getFormatCompliance(byteSource23);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat26 = null;
        boolean boolean27 = pcxImageParser21.canAcceptType(imageFormat26);
        java.lang.String str28 = pcxImageParser21.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = pcxImageParser21.getDefaultParameters();
        java.lang.String str30 = pcxImageParser21.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser0.getMetadata(byteSource20, pcxImagingParameters31);
        boolean boolean34 = pcxImageParser0.canAcceptExtension("pcx");
        java.io.File file35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser36 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder37 = pcxImageParser36.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance39 = pcxImageParser36.getFormatCompliance(byteSource38);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser36.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray41 = pcxImageParser0.getIccProfileBytes(file35, pcxImagingParameters40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(byteArray17);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNull(formatCompliance24);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "pcx" + "'", str28, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Pcx-Custom" + "'", str30, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNull(formatCompliance39);
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
    }

    @Test
    public void test0928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0928");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        org.apache.commons.imaging.ImageFormat imageFormat31 = null;
        boolean boolean32 = pcxImageParser0.canAcceptType(imageFormat31);
        java.io.PrintWriter printWriter33 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean35 = pcxImageParser0.dumpImageFile(printWriter33, byteSource34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test0929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0929");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        java.io.File file8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = null;
        byte[] byteArray20 = pcxImageParser17.getIccProfileBytes(byteSource18, pcxImagingParameters19);
        java.lang.String str21 = pcxImageParser17.getName();
        java.lang.String str22 = pcxImageParser17.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser17.getMetadata(byteSource23, pcxImagingParameters28);
        java.lang.String str30 = pcxImageParser17.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser17.getMetadata(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = null;
        byte[] byteArray37 = pcxImageParser34.getIccProfileBytes(byteSource35, pcxImagingParameters36);
        java.lang.String str38 = pcxImageParser34.getName();
        java.lang.String str39 = pcxImageParser34.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser41 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder42 = pcxImageParser41.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance44 = pcxImageParser41.getFormatCompliance(byteSource43);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser41.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser34.getMetadata(byteSource40, pcxImagingParameters45);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser48 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters50 = null;
        byte[] byteArray51 = pcxImageParser48.getIccProfileBytes(byteSource49, pcxImagingParameters50);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser48.getDefaultParameters();
        byte[] byteArray53 = pcxImageParser34.getIccProfileBytes(byteSource47, pcxImagingParameters52);
        byte[] byteArray54 = pcxImageParser17.getIccProfileBytes(byteSource33, pcxImagingParameters52);
        byte[] byteArray55 = pcxImageParser9.getIccProfileBytes(byteSource16, pcxImagingParameters52);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension56 = pcxImageParser0.getImageSize(file8, pcxImagingParameters52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNotNull(pcxImagingParameters15);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Pcx-Custom" + "'", str22, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Pcx-Custom" + "'", str30, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNull(byteArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Pcx-Custom" + "'", str38, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Pcx-Custom" + "'", str39, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNull(formatCompliance44);
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertNull(imageMetadata46);
        org.junit.Assert.assertNull(byteArray51);
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(byteArray53);
        org.junit.Assert.assertNull(byteArray54);
        org.junit.Assert.assertNull(byteArray55);
    }

    @Test
    public void test0930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0930");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser4.getMetadata(byteSource8);
        boolean boolean11 = pcxImageParser4.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters12);
        java.io.File file14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension15 = pcxImageParser0.getImageSize(file14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata13);
    }

    @Test
    public void test0931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0931");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        java.io.File file6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList7 = pcxImageParser0.getAllBufferedImages(file6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
    }

    @Test
    public void test0932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0932");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = null;
        byte[] byteArray9 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters8);
        java.nio.ByteOrder byteOrder10 = pcxImageParser0.getByteOrder();
        java.io.File file11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser12 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = null;
        byte[] byteArray15 = pcxImageParser12.getIccProfileBytes(byteSource13, pcxImagingParameters14);
        java.lang.String str16 = pcxImageParser12.getName();
        java.lang.String str17 = pcxImageParser12.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder20 = pcxImageParser19.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance22 = pcxImageParser19.getFormatCompliance(byteSource21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser19.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser12.getMetadata(byteSource18, pcxImagingParameters23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata28 = pcxImageParser26.getMetadata(byteSource27);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder31 = pcxImageParser30.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance33 = pcxImageParser30.getFormatCompliance(byteSource32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser30.getMetadata(byteSource34);
        boolean boolean37 = pcxImageParser30.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser30.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata39 = pcxImageParser26.getMetadata(byteSource29, pcxImagingParameters38);
        byte[] byteArray40 = pcxImageParser12.getIccProfileBytes(byteSource25, pcxImagingParameters38);
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance42 = pcxImageParser12.getFormatCompliance(byteSource41);
        java.nio.ByteOrder byteOrder43 = pcxImageParser12.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser45 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = null;
        byte[] byteArray48 = pcxImageParser45.getIccProfileBytes(byteSource46, pcxImagingParameters47);
        java.lang.String str49 = pcxImageParser45.getName();
        java.lang.String str50 = pcxImageParser45.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser52 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder53 = pcxImageParser52.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance55 = pcxImageParser52.getFormatCompliance(byteSource54);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters56 = pcxImageParser52.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata57 = pcxImageParser45.getMetadata(byteSource51, pcxImagingParameters56);
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser59 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata61 = pcxImageParser59.getMetadata(byteSource60);
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser63 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder64 = pcxImageParser63.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance66 = pcxImageParser63.getFormatCompliance(byteSource65);
        org.apache.commons.imaging.bytesource.ByteSource byteSource67 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata68 = pcxImageParser63.getMetadata(byteSource67);
        boolean boolean70 = pcxImageParser63.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters71 = pcxImageParser63.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata72 = pcxImageParser59.getMetadata(byteSource62, pcxImagingParameters71);
        byte[] byteArray73 = pcxImageParser45.getIccProfileBytes(byteSource58, pcxImagingParameters71);
        byte[] byteArray74 = pcxImageParser12.getIccProfileBytes(byteSource44, pcxImagingParameters71);
        java.lang.String str75 = pcxImageParser12.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource76 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser77 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource78 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters79 = null;
        byte[] byteArray80 = pcxImageParser77.getIccProfileBytes(byteSource78, pcxImagingParameters79);
        java.nio.ByteOrder byteOrder81 = pcxImageParser77.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource82 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser83 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder84 = pcxImageParser83.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource85 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance86 = pcxImageParser83.getFormatCompliance(byteSource85);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters87 = pcxImageParser83.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat88 = null;
        boolean boolean89 = pcxImageParser83.canAcceptType(imageFormat88);
        java.lang.String str90 = pcxImageParser83.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters91 = pcxImageParser83.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata92 = pcxImageParser77.getMetadata(byteSource82, pcxImagingParameters91);
        byte[] byteArray93 = pcxImageParser12.getIccProfileBytes(byteSource76, pcxImagingParameters91);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo94 = pcxImageParser0.getImageInfo(file11, pcxImagingParameters91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(byteArray9);
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(byteArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Pcx-Custom" + "'", str16, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Pcx-Custom" + "'", str17, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNull(formatCompliance22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertNull(imageMetadata28);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNull(formatCompliance33);
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
        org.junit.Assert.assertNull(imageMetadata39);
        org.junit.Assert.assertNull(byteArray40);
        org.junit.Assert.assertNull(formatCompliance42);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNull(byteArray48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Pcx-Custom" + "'", str49, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Pcx-Custom" + "'", str50, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder53);
        org.junit.Assert.assertNull(formatCompliance55);
        org.junit.Assert.assertNotNull(pcxImagingParameters56);
        org.junit.Assert.assertNull(imageMetadata57);
        org.junit.Assert.assertNull(imageMetadata61);
        org.junit.Assert.assertNotNull(byteOrder64);
        org.junit.Assert.assertNull(formatCompliance66);
        org.junit.Assert.assertNull(imageMetadata68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters71);
        org.junit.Assert.assertNull(imageMetadata72);
        org.junit.Assert.assertNull(byteArray73);
        org.junit.Assert.assertNull(byteArray74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "pcx" + "'", str75, "pcx");
        org.junit.Assert.assertNull(byteArray80);
        org.junit.Assert.assertNotNull(byteOrder81);
        org.junit.Assert.assertNotNull(byteOrder84);
        org.junit.Assert.assertNull(formatCompliance86);
        org.junit.Assert.assertNotNull(pcxImagingParameters87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "pcx" + "'", str90, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters91);
        org.junit.Assert.assertNull(imageMetadata92);
        org.junit.Assert.assertNull(byteArray93);
    }

    @Test
    public void test0933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0933");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        java.nio.ByteOrder byteOrder32 = pcxImageParser0.getByteOrder();
        java.lang.String str33 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser0.getMetadata(byteSource34);
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension38 = pcxImageParser0.getImageSize(byteSource36, pcxImagingParameters37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Pcx-Custom" + "'", str33, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata35);
    }

    @Test
    public void test0934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0934");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters6 = pcxImageParser0.getDefaultParameters();
        boolean boolean8 = pcxImageParser0.canAcceptExtension("");
        java.io.PrintWriter printWriter9 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = pcxImageParser0.dumpImageFile(printWriter9, byteSource10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNotNull(pcxImagingParameters6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0935");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser4.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser8.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.lang.String str29 = pcxImageParser8.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser4.getMetadata(byteSource7, pcxImagingParameters30);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters30);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = null;
        byte[] byteArray35 = pcxImageParser0.getIccProfileBytes(byteSource33, pcxImagingParameters34);
        org.apache.commons.imaging.ImageFormat imageFormat36 = null;
        boolean boolean37 = pcxImageParser0.canAcceptType(imageFormat36);
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNull(byteArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test0936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0936");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = null;
        byte[] byteArray13 = pcxImageParser10.getIccProfileBytes(byteSource11, pcxImagingParameters12);
        java.lang.String str14 = pcxImageParser10.getName();
        java.lang.String str15 = pcxImageParser10.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser10.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder20 = pcxImageParser19.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance22 = pcxImageParser19.getFormatCompliance(byteSource21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser19.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat24 = null;
        boolean boolean25 = pcxImageParser19.canAcceptType(imageFormat24);
        java.lang.String str26 = pcxImageParser19.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = pcxImageParser19.getDefaultParameters();
        byte[] byteArray28 = pcxImageParser10.getIccProfileBytes(byteSource18, pcxImagingParameters27);
        byte[] byteArray29 = pcxImageParser0.getIccProfileBytes(byteSource9, pcxImagingParameters27);
        java.io.File file30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = null;
        byte[] byteArray34 = pcxImageParser31.getIccProfileBytes(byteSource32, pcxImagingParameters33);
        java.lang.String str35 = pcxImageParser31.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser31.getMetadata(byteSource36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance39 = pcxImageParser31.getFormatCompliance(byteSource38);
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser41 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder42 = pcxImageParser41.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance44 = pcxImageParser41.getFormatCompliance(byteSource43);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser41.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser47 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters49 = null;
        byte[] byteArray50 = pcxImageParser47.getIccProfileBytes(byteSource48, pcxImagingParameters49);
        java.lang.String str51 = pcxImageParser47.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser47.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser41.getMetadata(byteSource46, pcxImagingParameters52);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters54 = pcxImageParser41.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata55 = pcxImageParser31.getMetadata(byteSource40, pcxImagingParameters54);
        java.lang.String str56 = pcxImageParser31.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters57 = pcxImageParser31.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage58 = pcxImageParser0.getBufferedImage(file30, pcxImagingParameters57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(byteArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Pcx-Custom" + "'", str14, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Pcx-Custom" + "'", str15, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNull(formatCompliance22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "pcx" + "'", str26, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(byteArray29);
        org.junit.Assert.assertNull(byteArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Pcx-Custom" + "'", str35, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertNull(formatCompliance39);
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNull(formatCompliance44);
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertNull(byteArray50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "pcx" + "'", str51, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertNotNull(pcxImagingParameters54);
        org.junit.Assert.assertNull(imageMetadata55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Pcx-Custom" + "'", str56, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters57);
    }

    @Test
    public void test0937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0937");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.nio.ByteOrder byteOrder4 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser0.getFormatCompliance(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = null;
        byte[] byteArray11 = pcxImageParser8.getIccProfileBytes(byteSource9, pcxImagingParameters10);
        java.lang.String str12 = pcxImageParser8.getName();
        java.lang.String str13 = pcxImageParser8.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder16 = pcxImageParser15.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser15.getFormatCompliance(byteSource17);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser15.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata20 = pcxImageParser8.getMetadata(byteSource14, pcxImagingParameters19);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser22 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser22.getMetadata(byteSource23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder27 = pcxImageParser26.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance29 = pcxImageParser26.getFormatCompliance(byteSource28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser26.getMetadata(byteSource30);
        boolean boolean33 = pcxImageParser26.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser26.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser22.getMetadata(byteSource25, pcxImagingParameters34);
        byte[] byteArray36 = pcxImageParser8.getIccProfileBytes(byteSource21, pcxImagingParameters34);
        org.apache.commons.imaging.ImageFormat imageFormat37 = null;
        boolean boolean38 = pcxImageParser8.canAcceptType(imageFormat37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder41 = pcxImageParser40.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance43 = pcxImageParser40.getFormatCompliance(byteSource42);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = pcxImageParser40.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat45 = null;
        boolean boolean46 = pcxImageParser40.canAcceptType(imageFormat45);
        java.lang.String str47 = pcxImageParser40.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = pcxImageParser40.getDefaultParameters();
        byte[] byteArray49 = pcxImageParser8.getIccProfileBytes(byteSource39, pcxImagingParameters48);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata50 = pcxImageParser0.getMetadata(byteSource7, pcxImagingParameters48);
        java.lang.Class<?> wildcardClass51 = pcxImageParser0.getClass();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNull(formatCompliance6);
        org.junit.Assert.assertNull(byteArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Pcx-Custom" + "'", str12, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNull(formatCompliance18);
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
        org.junit.Assert.assertNull(imageMetadata20);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNull(formatCompliance29);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(byteOrder41);
        org.junit.Assert.assertNull(formatCompliance43);
        org.junit.Assert.assertNotNull(pcxImagingParameters44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "pcx" + "'", str47, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters48);
        org.junit.Assert.assertNull(byteArray49);
        org.junit.Assert.assertNull(imageMetadata50);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test0938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0938");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = null;
        byte[] byteArray19 = pcxImageParser16.getIccProfileBytes(byteSource17, pcxImagingParameters18);
        java.lang.String str20 = pcxImageParser16.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser10.getMetadata(byteSource15, pcxImagingParameters21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser0.getMetadata(byteSource9, pcxImagingParameters23);
        java.lang.String str25 = pcxImageParser0.getName();
        java.lang.String str26 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = null;
        byte[] byteArray31 = pcxImageParser28.getIccProfileBytes(byteSource29, pcxImagingParameters30);
        java.lang.String str32 = pcxImageParser28.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser28.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder36 = pcxImageParser35.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance38 = pcxImageParser35.getFormatCompliance(byteSource37);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = pcxImageParser35.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser41 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = null;
        byte[] byteArray44 = pcxImageParser41.getIccProfileBytes(byteSource42, pcxImagingParameters43);
        java.lang.String str45 = pcxImageParser41.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser41.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser35.getMetadata(byteSource40, pcxImagingParameters46);
        byte[] byteArray48 = pcxImageParser28.getIccProfileBytes(byteSource34, pcxImagingParameters46);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo49 = pcxImageParser0.getImageInfo(byteSource27, pcxImagingParameters46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "pcx" + "'", str20, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Pcx-Custom" + "'", str26, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "pcx" + "'", str32, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNull(formatCompliance38);
        org.junit.Assert.assertNotNull(pcxImagingParameters39);
        org.junit.Assert.assertNull(byteArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "pcx" + "'", str45, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
        org.junit.Assert.assertNull(imageMetadata47);
        org.junit.Assert.assertNull(byteArray48);
    }

    @Test
    public void test0939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0939");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser0.getMetadata(byteSource32);
        java.lang.Class<?> wildcardClass34 = pcxImageParser0.getClass();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNull(imageMetadata33);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0940");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        boolean boolean30 = pcxImageParser0.canAcceptExtension("pcx");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser0.getDefaultParameters();
        java.lang.String str32 = pcxImageParser0.getName();
        java.io.File file33 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension34 = pcxImageParser0.getImageSize(file33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Pcx-Custom" + "'", str32, "Pcx-Custom");
    }

    @Test
    public void test0941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0941");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo32 = pcxImageParser0.getImageInfo(byteSource31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(formatCompliance30);
    }

    @Test
    public void test0942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0942");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.lang.String str4 = pcxImageParser0.getName();
        boolean boolean6 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        java.lang.String str13 = pcxImageParser8.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser8.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser8.canAcceptExtension("");
        boolean boolean19 = pcxImageParser8.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = null;
        byte[] byteArray24 = pcxImageParser21.getIccProfileBytes(byteSource22, pcxImagingParameters23);
        java.lang.String str25 = pcxImageParser21.getName();
        java.lang.String str26 = pcxImageParser21.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder29 = pcxImageParser28.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance31 = pcxImageParser28.getFormatCompliance(byteSource30);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser28.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser21.getMetadata(byteSource27, pcxImagingParameters32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser35.getMetadata(byteSource36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder40 = pcxImageParser39.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance42 = pcxImageParser39.getFormatCompliance(byteSource41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser39.getMetadata(byteSource43);
        boolean boolean46 = pcxImageParser39.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = pcxImageParser39.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser35.getMetadata(byteSource38, pcxImagingParameters47);
        byte[] byteArray49 = pcxImageParser21.getIccProfileBytes(byteSource34, pcxImagingParameters47);
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance51 = pcxImageParser21.getFormatCompliance(byteSource50);
        java.nio.ByteOrder byteOrder52 = pcxImageParser21.getByteOrder();
        java.nio.ByteOrder byteOrder53 = pcxImageParser21.getByteOrder();
        java.lang.String str54 = pcxImageParser21.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters55 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata56 = pcxImageParser8.getMetadata(byteSource20, pcxImagingParameters55);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata57 = pcxImageParser0.getMetadata(byteSource7, pcxImagingParameters55);
        java.io.File file58 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser59 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata61 = pcxImageParser59.getMetadata(byteSource60);
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser63 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder64 = pcxImageParser63.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance66 = pcxImageParser63.getFormatCompliance(byteSource65);
        org.apache.commons.imaging.bytesource.ByteSource byteSource67 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata68 = pcxImageParser63.getMetadata(byteSource67);
        boolean boolean70 = pcxImageParser63.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters71 = pcxImageParser63.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata72 = pcxImageParser59.getMetadata(byteSource62, pcxImagingParameters71);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata73 = pcxImageParser0.getMetadata(file58, pcxImagingParameters71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Pcx-Custom" + "'", str26, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertNull(formatCompliance31);
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
        org.junit.Assert.assertNull(imageMetadata33);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNull(formatCompliance42);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters47);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNull(byteArray49);
        org.junit.Assert.assertNull(formatCompliance51);
        org.junit.Assert.assertNotNull(byteOrder52);
        org.junit.Assert.assertNotNull(byteOrder53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Pcx-Custom" + "'", str54, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters55);
        org.junit.Assert.assertNull(imageMetadata56);
        org.junit.Assert.assertNull(imageMetadata57);
        org.junit.Assert.assertNull(imageMetadata61);
        org.junit.Assert.assertNotNull(byteOrder64);
        org.junit.Assert.assertNull(formatCompliance66);
        org.junit.Assert.assertNull(imageMetadata68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters71);
        org.junit.Assert.assertNull(imageMetadata72);
    }

    @Test
    public void test0943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0943");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser4.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser8.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.lang.String str29 = pcxImageParser8.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser4.getMetadata(byteSource7, pcxImagingParameters30);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters30);
        java.awt.image.BufferedImage bufferedImage33 = null;
        java.io.OutputStream outputStream34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = null;
        byte[] byteArray38 = pcxImageParser35.getIccProfileBytes(byteSource36, pcxImagingParameters37);
        java.lang.String str39 = pcxImageParser35.getName();
        java.lang.String str40 = pcxImageParser35.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser42 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder43 = pcxImageParser42.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance45 = pcxImageParser42.getFormatCompliance(byteSource44);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser42.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser35.getMetadata(byteSource41, pcxImagingParameters46);
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser49 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata51 = pcxImageParser49.getMetadata(byteSource50);
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser53 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder54 = pcxImageParser53.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance56 = pcxImageParser53.getFormatCompliance(byteSource55);
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata58 = pcxImageParser53.getMetadata(byteSource57);
        boolean boolean60 = pcxImageParser53.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters61 = pcxImageParser53.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata62 = pcxImageParser49.getMetadata(byteSource52, pcxImagingParameters61);
        byte[] byteArray63 = pcxImageParser35.getIccProfileBytes(byteSource48, pcxImagingParameters61);
        boolean boolean65 = pcxImageParser35.canAcceptExtension("pcx");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters66 = pcxImageParser35.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage33, outputStream34, pcxImagingParameters66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNull(byteArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Pcx-Custom" + "'", str39, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Pcx-Custom" + "'", str40, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNull(formatCompliance45);
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
        org.junit.Assert.assertNull(imageMetadata47);
        org.junit.Assert.assertNull(imageMetadata51);
        org.junit.Assert.assertNotNull(byteOrder54);
        org.junit.Assert.assertNull(formatCompliance56);
        org.junit.Assert.assertNull(imageMetadata58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters61);
        org.junit.Assert.assertNull(imageMetadata62);
        org.junit.Assert.assertNull(byteArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters66);
    }

    @Test
    public void test0944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0944");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser5 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = null;
        byte[] byteArray8 = pcxImageParser5.getIccProfileBytes(byteSource6, pcxImagingParameters7);
        java.lang.String str9 = pcxImageParser5.getName();
        java.lang.String str10 = pcxImageParser5.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser12 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder13 = pcxImageParser12.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance15 = pcxImageParser12.getFormatCompliance(byteSource14);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = pcxImageParser12.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata17 = pcxImageParser5.getMetadata(byteSource11, pcxImagingParameters16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata21 = pcxImageParser19.getMetadata(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser23 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder24 = pcxImageParser23.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance26 = pcxImageParser23.getFormatCompliance(byteSource25);
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata28 = pcxImageParser23.getMetadata(byteSource27);
        boolean boolean30 = pcxImageParser23.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser23.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser19.getMetadata(byteSource22, pcxImagingParameters31);
        byte[] byteArray33 = pcxImageParser5.getIccProfileBytes(byteSource18, pcxImagingParameters31);
        org.apache.commons.imaging.ImageFormat imageFormat34 = null;
        boolean boolean35 = pcxImageParser5.canAcceptType(imageFormat34);
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser37 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder38 = pcxImageParser37.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance40 = pcxImageParser37.getFormatCompliance(byteSource39);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = pcxImageParser37.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat42 = null;
        boolean boolean43 = pcxImageParser37.canAcceptType(imageFormat42);
        java.lang.String str44 = pcxImageParser37.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser37.getDefaultParameters();
        byte[] byteArray46 = pcxImageParser5.getIccProfileBytes(byteSource36, pcxImagingParameters45);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = pcxImageParser5.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension48 = pcxImageParser0.getImageSize(byteSource4, pcxImagingParameters47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(byteArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Pcx-Custom" + "'", str9, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Pcx-Custom" + "'", str10, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNull(formatCompliance15);
        org.junit.Assert.assertNotNull(pcxImagingParameters16);
        org.junit.Assert.assertNull(imageMetadata17);
        org.junit.Assert.assertNull(imageMetadata21);
        org.junit.Assert.assertNotNull(byteOrder24);
        org.junit.Assert.assertNull(formatCompliance26);
        org.junit.Assert.assertNull(imageMetadata28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(byteOrder38);
        org.junit.Assert.assertNull(formatCompliance40);
        org.junit.Assert.assertNotNull(pcxImagingParameters41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "pcx" + "'", str44, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertNull(byteArray46);
        org.junit.Assert.assertNotNull(pcxImagingParameters47);
    }

    @Test
    public void test0945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0945");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        java.nio.ByteOrder byteOrder2 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance4 = pcxImageParser0.getFormatCompliance(byteSource3);
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser8.getMetadata(byteSource12);
        boolean boolean15 = pcxImageParser8.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters20 = null;
        byte[] byteArray21 = pcxImageParser18.getIccProfileBytes(byteSource19, pcxImagingParameters20);
        java.lang.String str22 = pcxImageParser18.getName();
        java.lang.String str23 = pcxImageParser18.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance25 = pcxImageParser18.getFormatCompliance(byteSource24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser27 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder28 = pcxImageParser27.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser27.getFormatCompliance(byteSource29);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser27.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat32 = null;
        boolean boolean33 = pcxImageParser27.canAcceptType(imageFormat32);
        java.lang.String str34 = pcxImageParser27.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser27.getDefaultParameters();
        byte[] byteArray36 = pcxImageParser18.getIccProfileBytes(byteSource26, pcxImagingParameters35);
        byte[] byteArray37 = pcxImageParser8.getIccProfileBytes(byteSource17, pcxImagingParameters35);
        byte[] byteArray38 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str40 = pcxImageParser0.dumpImageFile(byteSource39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertNull(formatCompliance4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters16);
        org.junit.Assert.assertNull(byteArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Pcx-Custom" + "'", str22, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Pcx-Custom" + "'", str23, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance25);
        org.junit.Assert.assertNotNull(byteOrder28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "pcx" + "'", str34, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertNull(byteArray37);
        org.junit.Assert.assertNull(byteArray38);
    }

    @Test
    public void test0946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0946");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.nio.ByteOrder byteOrder4 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser0.getFormatCompliance(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = null;
        byte[] byteArray11 = pcxImageParser8.getIccProfileBytes(byteSource9, pcxImagingParameters10);
        java.lang.String str12 = pcxImageParser8.getName();
        java.lang.String str13 = pcxImageParser8.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder16 = pcxImageParser15.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser15.getFormatCompliance(byteSource17);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser15.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata20 = pcxImageParser8.getMetadata(byteSource14, pcxImagingParameters19);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser22 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser22.getMetadata(byteSource23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder27 = pcxImageParser26.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance29 = pcxImageParser26.getFormatCompliance(byteSource28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser26.getMetadata(byteSource30);
        boolean boolean33 = pcxImageParser26.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser26.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser22.getMetadata(byteSource25, pcxImagingParameters34);
        byte[] byteArray36 = pcxImageParser8.getIccProfileBytes(byteSource21, pcxImagingParameters34);
        org.apache.commons.imaging.ImageFormat imageFormat37 = null;
        boolean boolean38 = pcxImageParser8.canAcceptType(imageFormat37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder41 = pcxImageParser40.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance43 = pcxImageParser40.getFormatCompliance(byteSource42);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = pcxImageParser40.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat45 = null;
        boolean boolean46 = pcxImageParser40.canAcceptType(imageFormat45);
        java.lang.String str47 = pcxImageParser40.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = pcxImageParser40.getDefaultParameters();
        byte[] byteArray49 = pcxImageParser8.getIccProfileBytes(byteSource39, pcxImagingParameters48);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata50 = pcxImageParser0.getMetadata(byteSource7, pcxImagingParameters48);
        java.io.File file51 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean52 = pcxImageParser0.canAcceptExtension(file51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNull(formatCompliance6);
        org.junit.Assert.assertNull(byteArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Pcx-Custom" + "'", str12, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNull(formatCompliance18);
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
        org.junit.Assert.assertNull(imageMetadata20);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNull(formatCompliance29);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(byteOrder41);
        org.junit.Assert.assertNull(formatCompliance43);
        org.junit.Assert.assertNotNull(pcxImagingParameters44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "pcx" + "'", str47, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters48);
        org.junit.Assert.assertNull(byteArray49);
        org.junit.Assert.assertNull(imageMetadata50);
    }

    @Test
    public void test0947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0947");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        boolean boolean5 = pcxImageParser0.canAcceptExtension("");
        java.io.File file6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList7 = pcxImageParser0.getAllBufferedImages(file6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0948");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        boolean boolean10 = pcxImageParser0.canAcceptExtension("");
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = null;
        byte[] byteArray17 = pcxImageParser14.getIccProfileBytes(byteSource15, pcxImagingParameters16);
        java.lang.String str18 = pcxImageParser14.getName();
        java.lang.String str19 = pcxImageParser14.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder22 = pcxImageParser21.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance24 = pcxImageParser21.getFormatCompliance(byteSource23);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata26 = pcxImageParser14.getMetadata(byteSource20, pcxImagingParameters25);
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance28 = pcxImageParser14.getFormatCompliance(byteSource27);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser14.getFormatCompliance(byteSource29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str33 = pcxImageParser32.getName();
        java.nio.ByteOrder byteOrder34 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat35 = null;
        boolean boolean36 = pcxImageParser32.canAcceptType(imageFormat35);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = pcxImageParser32.getDefaultParameters();
        byte[] byteArray38 = pcxImageParser14.getIccProfileBytes(byteSource31, pcxImagingParameters37);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage39 = pcxImageParser0.getBufferedImage(byteSource13, pcxImagingParameters37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(byteArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Pcx-Custom" + "'", str18, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Pcx-Custom" + "'", str19, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNull(formatCompliance24);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
        org.junit.Assert.assertNull(imageMetadata26);
        org.junit.Assert.assertNull(formatCompliance28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Pcx-Custom" + "'", str33, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters37);
        org.junit.Assert.assertNull(byteArray38);
    }

    @Test
    public void test0949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0949");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.nio.ByteOrder byteOrder7 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser0.getFormatCompliance(byteSource9);
        java.io.File file11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser12 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = null;
        byte[] byteArray15 = pcxImageParser12.getIccProfileBytes(byteSource13, pcxImagingParameters14);
        java.lang.String str16 = pcxImageParser12.getName();
        java.lang.String str17 = pcxImageParser12.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder20 = pcxImageParser19.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance22 = pcxImageParser19.getFormatCompliance(byteSource21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser19.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser12.getMetadata(byteSource18, pcxImagingParameters23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata28 = pcxImageParser26.getMetadata(byteSource27);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder31 = pcxImageParser30.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance33 = pcxImageParser30.getFormatCompliance(byteSource32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser30.getMetadata(byteSource34);
        boolean boolean37 = pcxImageParser30.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser30.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata39 = pcxImageParser26.getMetadata(byteSource29, pcxImagingParameters38);
        byte[] byteArray40 = pcxImageParser12.getIccProfileBytes(byteSource25, pcxImagingParameters38);
        boolean boolean42 = pcxImageParser12.canAcceptExtension("pcx");
        java.nio.ByteOrder byteOrder43 = pcxImageParser12.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser45 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser45.getMetadata(byteSource46);
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser49 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder50 = pcxImageParser49.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance52 = pcxImageParser49.getFormatCompliance(byteSource51);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters53 = pcxImageParser49.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser55 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata57 = pcxImageParser55.getMetadata(byteSource56);
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser59 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder60 = pcxImageParser59.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance62 = pcxImageParser59.getFormatCompliance(byteSource61);
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata64 = pcxImageParser59.getMetadata(byteSource63);
        boolean boolean66 = pcxImageParser59.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters67 = pcxImageParser59.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata68 = pcxImageParser55.getMetadata(byteSource58, pcxImagingParameters67);
        byte[] byteArray69 = pcxImageParser49.getIccProfileBytes(byteSource54, pcxImagingParameters67);
        java.lang.String str70 = pcxImageParser49.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters71 = pcxImageParser49.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata72 = pcxImageParser45.getMetadata(byteSource48, pcxImagingParameters71);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters73 = pcxImageParser45.getDefaultParameters();
        byte[] byteArray74 = pcxImageParser12.getIccProfileBytes(byteSource44, pcxImagingParameters73);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage75 = pcxImageParser0.getBufferedImage(file11, pcxImagingParameters73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNull(byteArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Pcx-Custom" + "'", str16, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Pcx-Custom" + "'", str17, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNull(formatCompliance22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertNull(imageMetadata28);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNull(formatCompliance33);
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
        org.junit.Assert.assertNull(imageMetadata39);
        org.junit.Assert.assertNull(byteArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNull(imageMetadata47);
        org.junit.Assert.assertNotNull(byteOrder50);
        org.junit.Assert.assertNull(formatCompliance52);
        org.junit.Assert.assertNotNull(pcxImagingParameters53);
        org.junit.Assert.assertNull(imageMetadata57);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNull(formatCompliance62);
        org.junit.Assert.assertNull(imageMetadata64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters67);
        org.junit.Assert.assertNull(imageMetadata68);
        org.junit.Assert.assertNull(byteArray69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Pcx-Custom" + "'", str70, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters71);
        org.junit.Assert.assertNull(imageMetadata72);
        org.junit.Assert.assertNotNull(pcxImagingParameters73);
        org.junit.Assert.assertNull(byteArray74);
    }

    @Test
    public void test0950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0950");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.lang.String str4 = pcxImageParser0.getName();
        boolean boolean6 = pcxImageParser0.canAcceptExtension("hi!");
        java.io.File file7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        java.lang.String str13 = pcxImageParser8.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser8.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser8.canAcceptExtension("");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser8.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension19 = pcxImageParser0.getImageSize(file7, pcxImagingParameters18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
    }

    @Test
    public void test0951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0951");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.lang.String str4 = pcxImageParser0.getName();
        boolean boolean6 = pcxImageParser0.canAcceptExtension("hi!");
        java.lang.String str7 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str10 = pcxImageParser9.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        java.lang.String str13 = pcxImageParser9.getName();
        java.lang.String str14 = pcxImageParser9.getName();
        org.apache.commons.imaging.ImageFormat imageFormat15 = null;
        boolean boolean16 = pcxImageParser9.canAcceptType(imageFormat15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata18 = pcxImageParser9.getMetadata(byteSource17);
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser20 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = null;
        byte[] byteArray23 = pcxImageParser20.getIccProfileBytes(byteSource21, pcxImagingParameters22);
        java.lang.String str24 = pcxImageParser20.getDefaultExtension();
        java.lang.String str25 = pcxImageParser20.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser27 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = null;
        byte[] byteArray30 = pcxImageParser27.getIccProfileBytes(byteSource28, pcxImagingParameters29);
        java.lang.String str31 = pcxImageParser27.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser27.getMetadata(byteSource32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser27.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser37 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder38 = pcxImageParser37.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance40 = pcxImageParser37.getFormatCompliance(byteSource39);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = pcxImageParser37.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser43 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = null;
        byte[] byteArray46 = pcxImageParser43.getIccProfileBytes(byteSource44, pcxImagingParameters45);
        java.lang.String str47 = pcxImageParser43.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = pcxImageParser43.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser37.getMetadata(byteSource42, pcxImagingParameters48);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters50 = pcxImageParser37.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata51 = pcxImageParser27.getMetadata(byteSource36, pcxImagingParameters50);
        java.lang.String str52 = pcxImageParser27.getName();
        java.lang.String str53 = pcxImageParser27.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser55 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters57 = null;
        byte[] byteArray58 = pcxImageParser55.getIccProfileBytes(byteSource56, pcxImagingParameters57);
        java.lang.String str59 = pcxImageParser55.getName();
        java.lang.String str60 = pcxImageParser55.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser62 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder63 = pcxImageParser62.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource64 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance65 = pcxImageParser62.getFormatCompliance(byteSource64);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters66 = pcxImageParser62.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata67 = pcxImageParser55.getMetadata(byteSource61, pcxImagingParameters66);
        java.lang.String str68 = pcxImageParser55.getName();
        org.apache.commons.imaging.ImageFormat imageFormat69 = null;
        boolean boolean70 = pcxImageParser55.canAcceptType(imageFormat69);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters71 = pcxImageParser55.getDefaultParameters();
        byte[] byteArray72 = pcxImageParser27.getIccProfileBytes(byteSource54, pcxImagingParameters71);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata73 = pcxImageParser20.getMetadata(byteSource26, pcxImagingParameters71);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata74 = pcxImageParser9.getMetadata(byteSource19, pcxImagingParameters71);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata75 = pcxImageParser0.getMetadata(byteSource8, pcxImagingParameters71);
        org.apache.commons.imaging.bytesource.ByteSource byteSource76 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList77 = pcxImageParser0.getAllBufferedImages(byteSource76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Pcx-Custom" + "'", str7, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Pcx-Custom" + "'", str10, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Pcx-Custom" + "'", str14, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(imageMetadata18);
        org.junit.Assert.assertNull(byteArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "pcx" + "'", str24, "pcx");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Pcx-Custom" + "'", str31, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNotNull(byteOrder38);
        org.junit.Assert.assertNull(formatCompliance40);
        org.junit.Assert.assertNotNull(pcxImagingParameters41);
        org.junit.Assert.assertNull(byteArray46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "pcx" + "'", str47, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters48);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertNotNull(pcxImagingParameters50);
        org.junit.Assert.assertNull(imageMetadata51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Pcx-Custom" + "'", str52, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Pcx-Custom" + "'", str53, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Pcx-Custom" + "'", str59, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Pcx-Custom" + "'", str60, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder63);
        org.junit.Assert.assertNull(formatCompliance65);
        org.junit.Assert.assertNotNull(pcxImagingParameters66);
        org.junit.Assert.assertNull(imageMetadata67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Pcx-Custom" + "'", str68, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters71);
        org.junit.Assert.assertNull(byteArray72);
        org.junit.Assert.assertNull(imageMetadata73);
        org.junit.Assert.assertNull(imageMetadata74);
        org.junit.Assert.assertNull(imageMetadata75);
    }

    @Test
    public void test0952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0952");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser0.getDefaultParameters();
        java.lang.String str29 = pcxImageParser0.getName();
        java.io.File file30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str32 = pcxImageParser31.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance34 = pcxImageParser31.getFormatCompliance(byteSource33);
        java.lang.String str35 = pcxImageParser31.getName();
        java.lang.String str36 = pcxImageParser31.getName();
        org.apache.commons.imaging.ImageFormat imageFormat37 = null;
        boolean boolean38 = pcxImageParser31.canAcceptType(imageFormat37);
        boolean boolean40 = pcxImageParser31.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser42 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = null;
        byte[] byteArray45 = pcxImageParser42.getIccProfileBytes(byteSource43, pcxImagingParameters44);
        java.lang.String str46 = pcxImageParser42.getName();
        java.lang.String str47 = pcxImageParser42.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser49 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder50 = pcxImageParser49.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance52 = pcxImageParser49.getFormatCompliance(byteSource51);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters53 = pcxImageParser49.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata54 = pcxImageParser42.getMetadata(byteSource48, pcxImagingParameters53);
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser56 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters58 = null;
        byte[] byteArray59 = pcxImageParser56.getIccProfileBytes(byteSource57, pcxImagingParameters58);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters60 = pcxImageParser56.getDefaultParameters();
        byte[] byteArray61 = pcxImageParser42.getIccProfileBytes(byteSource55, pcxImagingParameters60);
        byte[] byteArray62 = pcxImageParser31.getIccProfileBytes(byteSource41, pcxImagingParameters60);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray63 = pcxImageParser0.getIccProfileBytes(file30, pcxImagingParameters60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Pcx-Custom" + "'", str32, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Pcx-Custom" + "'", str35, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Pcx-Custom" + "'", str36, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(byteArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Pcx-Custom" + "'", str46, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Pcx-Custom" + "'", str47, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder50);
        org.junit.Assert.assertNull(formatCompliance52);
        org.junit.Assert.assertNotNull(pcxImagingParameters53);
        org.junit.Assert.assertNull(imageMetadata54);
        org.junit.Assert.assertNull(byteArray59);
        org.junit.Assert.assertNotNull(pcxImagingParameters60);
        org.junit.Assert.assertNull(byteArray61);
        org.junit.Assert.assertNull(byteArray62);
    }

    @Test
    public void test0953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0953");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        boolean boolean14 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser0.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser0.getFormatCompliance(byteSource17);
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = pcxImageParser0.dumpImageFile(byteSource19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNull(formatCompliance18);
    }

    @Test
    public void test0954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0954");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        boolean boolean5 = pcxImageParser0.canAcceptExtension("Pcx-Custom");
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        java.lang.Class<?> wildcardClass8 = pcxImageParser0.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0955");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata4 = pcxImageParser0.getMetadata(byteSource3);
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        java.lang.String str6 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = null;
        byte[] byteArray13 = pcxImageParser10.getIccProfileBytes(byteSource11, pcxImagingParameters12);
        java.lang.String str14 = pcxImageParser10.getName();
        java.lang.String str15 = pcxImageParser10.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder18 = pcxImageParser17.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance20 = pcxImageParser17.getFormatCompliance(byteSource19);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser17.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser10.getMetadata(byteSource16, pcxImagingParameters21);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo23 = pcxImageParser0.getImageInfo(byteSource9, pcxImagingParameters21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "pcx" + "'", str6, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(byteArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Pcx-Custom" + "'", str14, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Pcx-Custom" + "'", str15, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNull(formatCompliance20);
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
    }

    @Test
    public void test0956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0956");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        java.nio.ByteOrder byteOrder32 = pcxImageParser0.getByteOrder();
        java.lang.String str33 = pcxImageParser0.getName();
        java.io.File file34 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension35 = pcxImageParser0.getImageSize(file34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Pcx-Custom" + "'", str33, "Pcx-Custom");
    }

    @Test
    public void test0957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0957");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser0.canAcceptType(imageFormat23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance26 = pcxImageParser0.getFormatCompliance(byteSource25);
        java.lang.String str27 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str29 = pcxImageParser0.dumpImageFile(byteSource28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(formatCompliance26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "pcx" + "'", str27, "pcx");
    }

    @Test
    public void test0958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0958");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser4.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser8.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.lang.String str29 = pcxImageParser8.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser4.getMetadata(byteSource7, pcxImagingParameters30);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters30);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = null;
        byte[] byteArray35 = pcxImageParser0.getIccProfileBytes(byteSource33, pcxImagingParameters34);
        java.io.File file36 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance37 = pcxImageParser0.getFormatCompliance(file36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNull(byteArray35);
    }

    @Test
    public void test0959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0959");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser3 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder4 = pcxImageParser3.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser3.getFormatCompliance(byteSource5);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = pcxImageParser3.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata11 = pcxImageParser9.getMetadata(byteSource10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder14 = pcxImageParser13.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser13.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata18 = pcxImageParser13.getMetadata(byteSource17);
        boolean boolean20 = pcxImageParser13.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser9.getMetadata(byteSource12, pcxImagingParameters21);
        byte[] byteArray23 = pcxImageParser3.getIccProfileBytes(byteSource8, pcxImagingParameters21);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser0.getMetadata(byteSource2, pcxImagingParameters21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser0.getDefaultParameters();
        java.io.File file26 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(file26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNull(formatCompliance6);
        org.junit.Assert.assertNotNull(pcxImagingParameters7);
        org.junit.Assert.assertNull(imageMetadata11);
        org.junit.Assert.assertNotNull(byteOrder14);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNull(imageMetadata18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNull(byteArray23);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
    }

    @Test
    public void test0960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0960");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        boolean boolean14 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser0.getFormatCompliance(byteSource15);
        java.io.PrintWriter printWriter17 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean19 = pcxImageParser0.dumpImageFile(printWriter17, byteSource18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(formatCompliance16);
    }

    @Test
    public void test0961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0961");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.lang.String str6 = pcxImageParser0.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = pcxImageParser0.dumpImageFile(byteSource8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Pcx-Custom" + "'", str6, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters7);
    }

    @Test
    public void test0962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0962");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        java.nio.ByteOrder byteOrder2 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance4 = pcxImageParser0.getFormatCompliance(byteSource3);
        java.lang.String str5 = pcxImageParser0.getName();
        java.io.File file6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = null;
        byte[] byteArray10 = pcxImageParser7.getIccProfileBytes(byteSource8, pcxImagingParameters9);
        java.lang.String str11 = pcxImageParser7.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser7.getMetadata(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance15 = pcxImageParser7.getFormatCompliance(byteSource14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder18 = pcxImageParser17.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance20 = pcxImageParser17.getFormatCompliance(byteSource19);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser17.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser23 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = null;
        byte[] byteArray26 = pcxImageParser23.getIccProfileBytes(byteSource24, pcxImagingParameters25);
        java.lang.String str27 = pcxImageParser23.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser23.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser17.getMetadata(byteSource22, pcxImagingParameters28);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser17.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser7.getMetadata(byteSource16, pcxImagingParameters30);
        java.lang.String str32 = pcxImageParser7.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser7.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage34 = pcxImageParser0.getBufferedImage(file6, pcxImagingParameters33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertNull(formatCompliance4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Pcx-Custom" + "'", str11, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertNull(formatCompliance15);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNull(formatCompliance20);
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(byteArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "pcx" + "'", str27, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Pcx-Custom" + "'", str32, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
    }

    @Test
    public void test0963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0963");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata4 = pcxImageParser0.getMetadata(byteSource3);
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        java.io.File file6 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean7 = pcxImageParser0.canAcceptExtension(file6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
    }

    @Test
    public void test0964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0964");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser4.getMetadata(byteSource8);
        boolean boolean11 = pcxImageParser4.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters12);
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser0.canAcceptType(imageFormat14);
        boolean boolean17 = pcxImageParser0.canAcceptExtension("pcx");
        java.io.File file18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList19 = pcxImageParser0.getAllBufferedImages(file18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0965");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        boolean boolean9 = pcxImageParser0.canAcceptExtension("");
        boolean boolean11 = pcxImageParser0.canAcceptExtension("hi!");
        java.lang.Class<?> wildcardClass12 = pcxImageParser0.getClass();
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0966");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.io.File file5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser0.getFormatCompliance(file5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
    }

    @Test
    public void test0967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0967");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.nio.ByteOrder byteOrder4 = pcxImageParser0.getByteOrder();
        java.nio.ByteOrder byteOrder5 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        java.io.File file8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata14 = pcxImageParser9.getMetadata(byteSource13);
        java.nio.ByteOrder byteOrder15 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder18 = pcxImageParser17.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance20 = pcxImageParser17.getFormatCompliance(byteSource19);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser17.getDefaultParameters();
        java.lang.String str22 = pcxImageParser17.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser17.getMetadata(byteSource23);
        boolean boolean26 = pcxImageParser17.canAcceptExtension("");
        boolean boolean28 = pcxImageParser17.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = null;
        byte[] byteArray33 = pcxImageParser30.getIccProfileBytes(byteSource31, pcxImagingParameters32);
        java.lang.String str34 = pcxImageParser30.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser30.getMetadata(byteSource35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance38 = pcxImageParser30.getFormatCompliance(byteSource37);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = pcxImageParser30.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser41 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = null;
        byte[] byteArray44 = pcxImageParser41.getIccProfileBytes(byteSource42, pcxImagingParameters43);
        java.lang.String str45 = pcxImageParser41.getName();
        java.lang.String str46 = pcxImageParser41.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser48 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder49 = pcxImageParser48.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance51 = pcxImageParser48.getFormatCompliance(byteSource50);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser48.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser41.getMetadata(byteSource47, pcxImagingParameters52);
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser55 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata57 = pcxImageParser55.getMetadata(byteSource56);
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser59 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder60 = pcxImageParser59.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance62 = pcxImageParser59.getFormatCompliance(byteSource61);
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata64 = pcxImageParser59.getMetadata(byteSource63);
        boolean boolean66 = pcxImageParser59.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters67 = pcxImageParser59.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata68 = pcxImageParser55.getMetadata(byteSource58, pcxImagingParameters67);
        byte[] byteArray69 = pcxImageParser41.getIccProfileBytes(byteSource54, pcxImagingParameters67);
        org.apache.commons.imaging.bytesource.ByteSource byteSource70 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance71 = pcxImageParser41.getFormatCompliance(byteSource70);
        org.apache.commons.imaging.bytesource.ByteSource byteSource72 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser73 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource74 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters75 = null;
        byte[] byteArray76 = pcxImageParser73.getIccProfileBytes(byteSource74, pcxImagingParameters75);
        java.nio.ByteOrder byteOrder77 = pcxImageParser73.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource78 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser79 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder80 = pcxImageParser79.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource81 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance82 = pcxImageParser79.getFormatCompliance(byteSource81);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters83 = pcxImageParser79.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat84 = null;
        boolean boolean85 = pcxImageParser79.canAcceptType(imageFormat84);
        java.lang.String str86 = pcxImageParser79.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters87 = pcxImageParser79.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata88 = pcxImageParser73.getMetadata(byteSource78, pcxImagingParameters87);
        byte[] byteArray89 = pcxImageParser41.getIccProfileBytes(byteSource72, pcxImagingParameters87);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata90 = pcxImageParser30.getMetadata(byteSource40, pcxImagingParameters87);
        byte[] byteArray91 = pcxImageParser17.getIccProfileBytes(byteSource29, pcxImagingParameters87);
        byte[] byteArray92 = pcxImageParser9.getIccProfileBytes(byteSource16, pcxImagingParameters87);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters93 = pcxImageParser9.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage94 = pcxImageParser0.getBufferedImage(file8, pcxImagingParameters93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNull(imageMetadata14);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNull(formatCompliance20);
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Pcx-Custom" + "'", str34, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertNull(formatCompliance38);
        org.junit.Assert.assertNotNull(pcxImagingParameters39);
        org.junit.Assert.assertNull(byteArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Pcx-Custom" + "'", str45, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Pcx-Custom" + "'", str46, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder49);
        org.junit.Assert.assertNull(formatCompliance51);
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertNull(imageMetadata57);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNull(formatCompliance62);
        org.junit.Assert.assertNull(imageMetadata64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters67);
        org.junit.Assert.assertNull(imageMetadata68);
        org.junit.Assert.assertNull(byteArray69);
        org.junit.Assert.assertNull(formatCompliance71);
        org.junit.Assert.assertNull(byteArray76);
        org.junit.Assert.assertNotNull(byteOrder77);
        org.junit.Assert.assertNotNull(byteOrder80);
        org.junit.Assert.assertNull(formatCompliance82);
        org.junit.Assert.assertNotNull(pcxImagingParameters83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "pcx" + "'", str86, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters87);
        org.junit.Assert.assertNull(imageMetadata88);
        org.junit.Assert.assertNull(byteArray89);
        org.junit.Assert.assertNull(imageMetadata90);
        org.junit.Assert.assertNull(byteArray91);
        org.junit.Assert.assertNull(byteArray92);
        org.junit.Assert.assertNotNull(pcxImagingParameters93);
    }

    @Test
    public void test0968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0968");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser0.getFormatCompliance(byteSource31);
        java.lang.String str33 = pcxImageParser0.getName();
        java.io.File file34 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList35 = pcxImageParser0.getAllBufferedImages(file34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Pcx-Custom" + "'", str33, "Pcx-Custom");
    }

    @Test
    public void test0969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0969");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser0.canAcceptType(imageFormat23);
        java.io.File file25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder27 = pcxImageParser26.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance29 = pcxImageParser26.getFormatCompliance(byteSource28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser26.getMetadata(byteSource30);
        boolean boolean33 = pcxImageParser26.canAcceptExtension("hi!");
        org.apache.commons.imaging.ImageFormat imageFormat34 = null;
        boolean boolean35 = pcxImageParser26.canAcceptType(imageFormat34);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser26.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage37 = pcxImageParser0.getBufferedImage(file25, pcxImagingParameters36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNull(formatCompliance29);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
    }

    @Test
    public void test0970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0970");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getName();
        java.lang.String str6 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = pcxImageParser0.dumpImageFile(byteSource7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "pcx" + "'", str6, "pcx");
    }

    @Test
    public void test0971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0971");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        java.io.File file28 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray29 = pcxImageParser0.getIccProfileBytes(file28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
    }

    @Test
    public void test0972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0972");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = null;
        byte[] byteArray17 = pcxImageParser14.getIccProfileBytes(byteSource15, pcxImagingParameters16);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser14.getDefaultParameters();
        byte[] byteArray19 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters18);
        boolean boolean21 = pcxImageParser0.canAcceptExtension("hi!");
        java.io.File file22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser23 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder24 = pcxImageParser23.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance26 = pcxImageParser23.getFormatCompliance(byteSource25);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = pcxImageParser23.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = null;
        byte[] byteArray32 = pcxImageParser29.getIccProfileBytes(byteSource30, pcxImagingParameters31);
        java.lang.String str33 = pcxImageParser29.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser23.getMetadata(byteSource28, pcxImagingParameters34);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser23.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo37 = pcxImageParser0.getImageInfo(file22, pcxImagingParameters36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(byteArray17);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(byteOrder24);
        org.junit.Assert.assertNull(formatCompliance26);
        org.junit.Assert.assertNotNull(pcxImagingParameters27);
        org.junit.Assert.assertNull(byteArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "pcx" + "'", str33, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
    }

    @Test
    public void test0973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0973");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder30 = pcxImageParser29.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser29.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser35.getMetadata(byteSource36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder40 = pcxImageParser39.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance42 = pcxImageParser39.getFormatCompliance(byteSource41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser39.getMetadata(byteSource43);
        boolean boolean46 = pcxImageParser39.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = pcxImageParser39.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser35.getMetadata(byteSource38, pcxImagingParameters47);
        byte[] byteArray49 = pcxImageParser29.getIccProfileBytes(byteSource34, pcxImagingParameters47);
        java.lang.String str50 = pcxImageParser29.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters51 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata52 = pcxImageParser0.getMetadata(byteSource28, pcxImagingParameters51);
        java.io.File file53 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser54 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters56 = null;
        byte[] byteArray57 = pcxImageParser54.getIccProfileBytes(byteSource55, pcxImagingParameters56);
        java.lang.String str58 = pcxImageParser54.getName();
        java.lang.String str59 = pcxImageParser54.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser61 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder62 = pcxImageParser61.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance64 = pcxImageParser61.getFormatCompliance(byteSource63);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters65 = pcxImageParser61.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata66 = pcxImageParser54.getMetadata(byteSource60, pcxImagingParameters65);
        java.lang.String str67 = pcxImageParser54.getName();
        org.apache.commons.imaging.ImageFormat imageFormat68 = null;
        boolean boolean69 = pcxImageParser54.canAcceptType(imageFormat68);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters70 = pcxImageParser54.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension71 = pcxImageParser0.getImageSize(file53, pcxImagingParameters70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(byteOrder30);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNull(formatCompliance42);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters47);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNull(byteArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Pcx-Custom" + "'", str50, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters51);
        org.junit.Assert.assertNull(imageMetadata52);
        org.junit.Assert.assertNull(byteArray57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Pcx-Custom" + "'", str58, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Pcx-Custom" + "'", str59, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder62);
        org.junit.Assert.assertNull(formatCompliance64);
        org.junit.Assert.assertNotNull(pcxImagingParameters65);
        org.junit.Assert.assertNull(imageMetadata66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Pcx-Custom" + "'", str67, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters70);
    }

    @Test
    public void test0974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0974");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        java.io.File file6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = null;
        byte[] byteArray16 = pcxImageParser13.getIccProfileBytes(byteSource14, pcxImagingParameters15);
        java.lang.String str17 = pcxImageParser13.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser7.getMetadata(byteSource12, pcxImagingParameters18);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters20 = pcxImageParser7.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata21 = pcxImageParser0.getMetadata(file6, pcxImagingParameters20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(byteArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "pcx" + "'", str17, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNotNull(pcxImagingParameters20);
    }

    @Test
    public void test0975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0975");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.nio.ByteOrder byteOrder4 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser0.getFormatCompliance(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = null;
        byte[] byteArray11 = pcxImageParser8.getIccProfileBytes(byteSource9, pcxImagingParameters10);
        java.lang.String str12 = pcxImageParser8.getName();
        java.lang.String str13 = pcxImageParser8.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder16 = pcxImageParser15.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser15.getFormatCompliance(byteSource17);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser15.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata20 = pcxImageParser8.getMetadata(byteSource14, pcxImagingParameters19);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser22 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser22.getMetadata(byteSource23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder27 = pcxImageParser26.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance29 = pcxImageParser26.getFormatCompliance(byteSource28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser26.getMetadata(byteSource30);
        boolean boolean33 = pcxImageParser26.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser26.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser22.getMetadata(byteSource25, pcxImagingParameters34);
        byte[] byteArray36 = pcxImageParser8.getIccProfileBytes(byteSource21, pcxImagingParameters34);
        org.apache.commons.imaging.ImageFormat imageFormat37 = null;
        boolean boolean38 = pcxImageParser8.canAcceptType(imageFormat37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder41 = pcxImageParser40.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance43 = pcxImageParser40.getFormatCompliance(byteSource42);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = pcxImageParser40.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat45 = null;
        boolean boolean46 = pcxImageParser40.canAcceptType(imageFormat45);
        java.lang.String str47 = pcxImageParser40.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = pcxImageParser40.getDefaultParameters();
        byte[] byteArray49 = pcxImageParser8.getIccProfileBytes(byteSource39, pcxImagingParameters48);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata50 = pcxImageParser0.getMetadata(byteSource7, pcxImagingParameters48);
        java.io.File file51 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser52 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters54 = null;
        byte[] byteArray55 = pcxImageParser52.getIccProfileBytes(byteSource53, pcxImagingParameters54);
        java.lang.String str56 = pcxImageParser52.getName();
        java.lang.String str57 = pcxImageParser52.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser59 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder60 = pcxImageParser59.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance62 = pcxImageParser59.getFormatCompliance(byteSource61);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters63 = pcxImageParser59.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata64 = pcxImageParser52.getMetadata(byteSource58, pcxImagingParameters63);
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance66 = pcxImageParser52.getFormatCompliance(byteSource65);
        org.apache.commons.imaging.bytesource.ByteSource byteSource67 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance68 = pcxImageParser52.getFormatCompliance(byteSource67);
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser70 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str71 = pcxImageParser70.getName();
        java.nio.ByteOrder byteOrder72 = pcxImageParser70.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat73 = null;
        boolean boolean74 = pcxImageParser70.canAcceptType(imageFormat73);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters75 = pcxImageParser70.getDefaultParameters();
        byte[] byteArray76 = pcxImageParser52.getIccProfileBytes(byteSource69, pcxImagingParameters75);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray77 = pcxImageParser0.getIccProfileBytes(file51, pcxImagingParameters75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNull(formatCompliance6);
        org.junit.Assert.assertNull(byteArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Pcx-Custom" + "'", str12, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNull(formatCompliance18);
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
        org.junit.Assert.assertNull(imageMetadata20);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNull(formatCompliance29);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(byteOrder41);
        org.junit.Assert.assertNull(formatCompliance43);
        org.junit.Assert.assertNotNull(pcxImagingParameters44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "pcx" + "'", str47, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters48);
        org.junit.Assert.assertNull(byteArray49);
        org.junit.Assert.assertNull(imageMetadata50);
        org.junit.Assert.assertNull(byteArray55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Pcx-Custom" + "'", str56, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Pcx-Custom" + "'", str57, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNull(formatCompliance62);
        org.junit.Assert.assertNotNull(pcxImagingParameters63);
        org.junit.Assert.assertNull(imageMetadata64);
        org.junit.Assert.assertNull(formatCompliance66);
        org.junit.Assert.assertNull(formatCompliance68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Pcx-Custom" + "'", str71, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters75);
        org.junit.Assert.assertNull(byteArray76);
    }

    @Test
    public void test0976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0976");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        java.nio.ByteOrder byteOrder2 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat3 = null;
        boolean boolean4 = pcxImageParser0.canAcceptType(imageFormat3);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = pcxImageParser0.dumpImageFile(byteSource6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
    }

    @Test
    public void test0977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0977");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        boolean boolean9 = pcxImageParser0.canAcceptExtension("");
        boolean boolean11 = pcxImageParser0.canAcceptExtension("hi!");
        java.nio.ByteOrder byteOrder12 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList14 = pcxImageParser0.getAllBufferedImages(byteSource13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(byteOrder12);
    }

    @Test
    public void test0978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0978");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.ImageFormat imageFormat1 = null;
        boolean boolean2 = pcxImageParser0.canAcceptType(imageFormat1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance4 = pcxImageParser0.getFormatCompliance(byteSource3);
        java.awt.image.BufferedImage bufferedImage5 = null;
        java.io.OutputStream outputStream6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = null;
        byte[] byteArray10 = pcxImageParser7.getIccProfileBytes(byteSource8, pcxImagingParameters9);
        java.nio.ByteOrder byteOrder11 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder14 = pcxImageParser13.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser13.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat18 = null;
        boolean boolean19 = pcxImageParser13.canAcceptType(imageFormat18);
        java.lang.String str20 = pcxImageParser13.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser7.getMetadata(byteSource12, pcxImagingParameters21);
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser24.getMetadata(byteSource28);
        boolean boolean31 = pcxImageParser24.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser7.getMetadata(byteSource23, pcxImagingParameters32);
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage5, outputStream6, pcxImagingParameters32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(formatCompliance4);
        org.junit.Assert.assertNull(byteArray10);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNotNull(byteOrder14);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "pcx" + "'", str20, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
        org.junit.Assert.assertNull(imageMetadata33);
    }

    @Test
    public void test0979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0979");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance14 = pcxImageParser0.getFormatCompliance(byteSource13);
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser0.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str19 = pcxImageParser18.getName();
        java.nio.ByteOrder byteOrder20 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat21 = null;
        boolean boolean22 = pcxImageParser18.canAcceptType(imageFormat21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser18.getDefaultParameters();
        byte[] byteArray24 = pcxImageParser0.getIccProfileBytes(byteSource17, pcxImagingParameters23);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass25 = byteArray24.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(formatCompliance14);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Pcx-Custom" + "'", str19, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(byteArray24);
    }

    @Test
    public void test0980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0980");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.lang.String str4 = pcxImageParser0.getName();
        boolean boolean6 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        java.lang.String str13 = pcxImageParser8.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser8.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser8.canAcceptExtension("");
        boolean boolean19 = pcxImageParser8.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = null;
        byte[] byteArray24 = pcxImageParser21.getIccProfileBytes(byteSource22, pcxImagingParameters23);
        java.lang.String str25 = pcxImageParser21.getName();
        java.lang.String str26 = pcxImageParser21.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder29 = pcxImageParser28.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance31 = pcxImageParser28.getFormatCompliance(byteSource30);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser28.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser21.getMetadata(byteSource27, pcxImagingParameters32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser35.getMetadata(byteSource36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder40 = pcxImageParser39.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance42 = pcxImageParser39.getFormatCompliance(byteSource41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser39.getMetadata(byteSource43);
        boolean boolean46 = pcxImageParser39.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = pcxImageParser39.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser35.getMetadata(byteSource38, pcxImagingParameters47);
        byte[] byteArray49 = pcxImageParser21.getIccProfileBytes(byteSource34, pcxImagingParameters47);
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance51 = pcxImageParser21.getFormatCompliance(byteSource50);
        java.nio.ByteOrder byteOrder52 = pcxImageParser21.getByteOrder();
        java.nio.ByteOrder byteOrder53 = pcxImageParser21.getByteOrder();
        java.lang.String str54 = pcxImageParser21.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters55 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata56 = pcxImageParser8.getMetadata(byteSource20, pcxImagingParameters55);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata57 = pcxImageParser0.getMetadata(byteSource7, pcxImagingParameters55);
        java.io.File file58 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList59 = pcxImageParser0.getAllBufferedImages(file58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Pcx-Custom" + "'", str26, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertNull(formatCompliance31);
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
        org.junit.Assert.assertNull(imageMetadata33);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNull(formatCompliance42);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters47);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNull(byteArray49);
        org.junit.Assert.assertNull(formatCompliance51);
        org.junit.Assert.assertNotNull(byteOrder52);
        org.junit.Assert.assertNotNull(byteOrder53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Pcx-Custom" + "'", str54, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters55);
        org.junit.Assert.assertNull(imageMetadata56);
        org.junit.Assert.assertNull(imageMetadata57);
    }

    @Test
    public void test0981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0981");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = null;
        byte[] byteArray20 = pcxImageParser17.getIccProfileBytes(byteSource18, pcxImagingParameters19);
        java.lang.String str21 = pcxImageParser17.getName();
        java.lang.String str22 = pcxImageParser17.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser17.getMetadata(byteSource23, pcxImagingParameters28);
        java.lang.String str30 = pcxImageParser17.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser17.getMetadata(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = null;
        byte[] byteArray37 = pcxImageParser34.getIccProfileBytes(byteSource35, pcxImagingParameters36);
        java.lang.String str38 = pcxImageParser34.getName();
        java.lang.String str39 = pcxImageParser34.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser41 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder42 = pcxImageParser41.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance44 = pcxImageParser41.getFormatCompliance(byteSource43);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser41.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser34.getMetadata(byteSource40, pcxImagingParameters45);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser48 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters50 = null;
        byte[] byteArray51 = pcxImageParser48.getIccProfileBytes(byteSource49, pcxImagingParameters50);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser48.getDefaultParameters();
        byte[] byteArray53 = pcxImageParser34.getIccProfileBytes(byteSource47, pcxImagingParameters52);
        byte[] byteArray54 = pcxImageParser17.getIccProfileBytes(byteSource33, pcxImagingParameters52);
        byte[] byteArray55 = pcxImageParser9.getIccProfileBytes(byteSource16, pcxImagingParameters52);
        byte[] byteArray56 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters52);
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance58 = pcxImageParser0.getFormatCompliance(byteSource57);
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance60 = pcxImageParser0.getFormatCompliance(byteSource59);
        java.io.File file61 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser62 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters64 = null;
        byte[] byteArray65 = pcxImageParser62.getIccProfileBytes(byteSource63, pcxImagingParameters64);
        java.lang.String str66 = pcxImageParser62.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource67 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata68 = pcxImageParser62.getMetadata(byteSource67);
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance70 = pcxImageParser62.getFormatCompliance(byteSource69);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters71 = pcxImageParser62.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat72 = null;
        boolean boolean73 = pcxImageParser62.canAcceptType(imageFormat72);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters74 = pcxImageParser62.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata75 = pcxImageParser0.getMetadata(file61, pcxImagingParameters74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNotNull(pcxImagingParameters15);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Pcx-Custom" + "'", str22, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Pcx-Custom" + "'", str30, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNull(byteArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Pcx-Custom" + "'", str38, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Pcx-Custom" + "'", str39, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNull(formatCompliance44);
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertNull(imageMetadata46);
        org.junit.Assert.assertNull(byteArray51);
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(byteArray53);
        org.junit.Assert.assertNull(byteArray54);
        org.junit.Assert.assertNull(byteArray55);
        org.junit.Assert.assertNull(byteArray56);
        org.junit.Assert.assertNull(formatCompliance58);
        org.junit.Assert.assertNull(formatCompliance60);
        org.junit.Assert.assertNull(byteArray65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Pcx-Custom" + "'", str66, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata68);
        org.junit.Assert.assertNull(formatCompliance70);
        org.junit.Assert.assertNotNull(pcxImagingParameters71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters74);
    }

    @Test
    public void test0982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0982");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat2 = null;
        boolean boolean3 = pcxImageParser0.canAcceptType(imageFormat2);
        org.apache.commons.imaging.ImageFormat imageFormat4 = null;
        boolean boolean5 = pcxImageParser0.canAcceptType(imageFormat4);
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList7 = pcxImageParser0.getAllBufferedImages(byteSource6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0983");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser4.getMetadata(byteSource8);
        boolean boolean11 = pcxImageParser4.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters12);
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser0.canAcceptType(imageFormat14);
        java.io.File file16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = null;
        byte[] byteArray20 = pcxImageParser17.getIccProfileBytes(byteSource18, pcxImagingParameters19);
        java.nio.ByteOrder byteOrder21 = pcxImageParser17.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser23 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder24 = pcxImageParser23.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance26 = pcxImageParser23.getFormatCompliance(byteSource25);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = pcxImageParser23.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat28 = null;
        boolean boolean29 = pcxImageParser23.canAcceptType(imageFormat28);
        java.lang.String str30 = pcxImageParser23.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser23.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser17.getMetadata(byteSource22, pcxImagingParameters31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder35 = pcxImageParser34.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance37 = pcxImageParser34.getFormatCompliance(byteSource36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata39 = pcxImageParser34.getMetadata(byteSource38);
        boolean boolean41 = pcxImageParser34.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser34.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata43 = pcxImageParser17.getMetadata(byteSource33, pcxImagingParameters42);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension44 = pcxImageParser0.getImageSize(file16, pcxImagingParameters42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertNotNull(byteOrder21);
        org.junit.Assert.assertNotNull(byteOrder24);
        org.junit.Assert.assertNull(formatCompliance26);
        org.junit.Assert.assertNotNull(pcxImagingParameters27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "pcx" + "'", str30, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNull(formatCompliance37);
        org.junit.Assert.assertNull(imageMetadata39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertNull(imageMetadata43);
    }

    @Test
    public void test0984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0984");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        java.nio.ByteOrder byteOrder2 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat3 = null;
        boolean boolean4 = pcxImageParser0.canAcceptType(imageFormat3);
        java.awt.image.BufferedImage bufferedImage5 = null;
        java.io.OutputStream outputStream6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser7.getMetadata(byteSource11);
        java.nio.ByteOrder byteOrder13 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder16 = pcxImageParser15.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser15.getFormatCompliance(byteSource17);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser15.getDefaultParameters();
        java.lang.String str20 = pcxImageParser15.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser15.getMetadata(byteSource21);
        boolean boolean24 = pcxImageParser15.canAcceptExtension("");
        boolean boolean26 = pcxImageParser15.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = null;
        byte[] byteArray31 = pcxImageParser28.getIccProfileBytes(byteSource29, pcxImagingParameters30);
        java.lang.String str32 = pcxImageParser28.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser28.getMetadata(byteSource33);
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance36 = pcxImageParser28.getFormatCompliance(byteSource35);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = pcxImageParser28.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = null;
        byte[] byteArray42 = pcxImageParser39.getIccProfileBytes(byteSource40, pcxImagingParameters41);
        java.lang.String str43 = pcxImageParser39.getName();
        java.lang.String str44 = pcxImageParser39.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser46 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder47 = pcxImageParser46.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance49 = pcxImageParser46.getFormatCompliance(byteSource48);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters50 = pcxImageParser46.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata51 = pcxImageParser39.getMetadata(byteSource45, pcxImagingParameters50);
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser53 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata55 = pcxImageParser53.getMetadata(byteSource54);
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser57 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder58 = pcxImageParser57.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance60 = pcxImageParser57.getFormatCompliance(byteSource59);
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata62 = pcxImageParser57.getMetadata(byteSource61);
        boolean boolean64 = pcxImageParser57.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters65 = pcxImageParser57.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata66 = pcxImageParser53.getMetadata(byteSource56, pcxImagingParameters65);
        byte[] byteArray67 = pcxImageParser39.getIccProfileBytes(byteSource52, pcxImagingParameters65);
        org.apache.commons.imaging.bytesource.ByteSource byteSource68 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance69 = pcxImageParser39.getFormatCompliance(byteSource68);
        org.apache.commons.imaging.bytesource.ByteSource byteSource70 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser71 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource72 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters73 = null;
        byte[] byteArray74 = pcxImageParser71.getIccProfileBytes(byteSource72, pcxImagingParameters73);
        java.nio.ByteOrder byteOrder75 = pcxImageParser71.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource76 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser77 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder78 = pcxImageParser77.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource79 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance80 = pcxImageParser77.getFormatCompliance(byteSource79);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters81 = pcxImageParser77.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat82 = null;
        boolean boolean83 = pcxImageParser77.canAcceptType(imageFormat82);
        java.lang.String str84 = pcxImageParser77.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters85 = pcxImageParser77.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata86 = pcxImageParser71.getMetadata(byteSource76, pcxImagingParameters85);
        byte[] byteArray87 = pcxImageParser39.getIccProfileBytes(byteSource70, pcxImagingParameters85);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata88 = pcxImageParser28.getMetadata(byteSource38, pcxImagingParameters85);
        byte[] byteArray89 = pcxImageParser15.getIccProfileBytes(byteSource27, pcxImagingParameters85);
        byte[] byteArray90 = pcxImageParser7.getIccProfileBytes(byteSource14, pcxImagingParameters85);
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage5, outputStream6, pcxImagingParameters85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNull(formatCompliance18);
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "pcx" + "'", str20, "pcx");
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(byteArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Pcx-Custom" + "'", str32, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertNull(formatCompliance36);
        org.junit.Assert.assertNotNull(pcxImagingParameters37);
        org.junit.Assert.assertNull(byteArray42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Pcx-Custom" + "'", str43, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Pcx-Custom" + "'", str44, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNull(formatCompliance49);
        org.junit.Assert.assertNotNull(pcxImagingParameters50);
        org.junit.Assert.assertNull(imageMetadata51);
        org.junit.Assert.assertNull(imageMetadata55);
        org.junit.Assert.assertNotNull(byteOrder58);
        org.junit.Assert.assertNull(formatCompliance60);
        org.junit.Assert.assertNull(imageMetadata62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters65);
        org.junit.Assert.assertNull(imageMetadata66);
        org.junit.Assert.assertNull(byteArray67);
        org.junit.Assert.assertNull(formatCompliance69);
        org.junit.Assert.assertNull(byteArray74);
        org.junit.Assert.assertNotNull(byteOrder75);
        org.junit.Assert.assertNotNull(byteOrder78);
        org.junit.Assert.assertNull(formatCompliance80);
        org.junit.Assert.assertNotNull(pcxImagingParameters81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "pcx" + "'", str84, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters85);
        org.junit.Assert.assertNull(imageMetadata86);
        org.junit.Assert.assertNull(byteArray87);
        org.junit.Assert.assertNull(imageMetadata88);
        org.junit.Assert.assertNull(byteArray89);
        org.junit.Assert.assertNull(byteArray90);
    }

    @Test
    public void test0985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0985");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser4.getMetadata(byteSource8);
        boolean boolean11 = pcxImageParser4.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters12);
        java.awt.image.BufferedImage bufferedImage14 = null;
        java.io.OutputStream outputStream15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = null;
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage14, outputStream15, pcxImagingParameters16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata13);
    }

    @Test
    public void test0986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0986");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        boolean boolean5 = pcxImageParser0.canAcceptExtension("");
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata11 = pcxImageParser9.getMetadata(byteSource10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder14 = pcxImageParser13.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser13.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata18 = pcxImageParser13.getMetadata(byteSource17);
        boolean boolean20 = pcxImageParser13.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser9.getMetadata(byteSource12, pcxImagingParameters21);
        byte[] byteArray23 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters21);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo25 = pcxImageParser0.getImageInfo(byteSource24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNull(imageMetadata11);
        org.junit.Assert.assertNotNull(byteOrder14);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNull(imageMetadata18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNull(byteArray23);
    }

    @Test
    public void test0987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0987");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat22 = null;
        boolean boolean23 = pcxImageParser0.canAcceptType(imageFormat22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList25 = pcxImageParser0.getAllBufferedImages(byteSource24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test0988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0988");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        java.io.File file3 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean4 = pcxImageParser0.canAcceptExtension(file3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
    }

    @Test
    public void test0989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0989");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        boolean boolean30 = pcxImageParser0.canAcceptExtension("pcx");
        java.io.File file31 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean32 = pcxImageParser0.canAcceptExtension(file31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test0990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0990");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser8.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.lang.String str29 = pcxImageParser8.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat31 = null;
        boolean boolean32 = pcxImageParser8.canAcceptType(imageFormat31);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser8.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo34 = pcxImageParser0.getImageInfo(byteSource7, pcxImagingParameters33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
    }

    @Test
    public void test0991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0991");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.ImageFormat imageFormat8 = null;
        boolean boolean9 = pcxImageParser0.canAcceptType(imageFormat8);
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata11 = pcxImageParser0.getMetadata(byteSource10);
        java.io.File file12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder14 = pcxImageParser13.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser13.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata21 = pcxImageParser19.getMetadata(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser23 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder24 = pcxImageParser23.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance26 = pcxImageParser23.getFormatCompliance(byteSource25);
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata28 = pcxImageParser23.getMetadata(byteSource27);
        boolean boolean30 = pcxImageParser23.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser23.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser19.getMetadata(byteSource22, pcxImagingParameters31);
        byte[] byteArray33 = pcxImageParser13.getIccProfileBytes(byteSource18, pcxImagingParameters31);
        java.lang.String str34 = pcxImageParser13.getDefaultExtension();
        java.lang.String str35 = pcxImageParser13.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat36 = null;
        boolean boolean37 = pcxImageParser13.canAcceptType(imageFormat36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance39 = pcxImageParser13.getFormatCompliance(byteSource38);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser13.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray41 = pcxImageParser0.getIccProfileBytes(file12, pcxImagingParameters40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(imageMetadata11);
        org.junit.Assert.assertNotNull(byteOrder14);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
        org.junit.Assert.assertNull(imageMetadata21);
        org.junit.Assert.assertNotNull(byteOrder24);
        org.junit.Assert.assertNull(formatCompliance26);
        org.junit.Assert.assertNull(imageMetadata28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "pcx" + "'", str34, "pcx");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "pcx" + "'", str35, "pcx");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(formatCompliance39);
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
    }

    @Test
    public void test0992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0992");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        java.io.File file5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata18 = pcxImageParser16.getMetadata(byteSource17);
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser20 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder21 = pcxImageParser20.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance23 = pcxImageParser20.getFormatCompliance(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser20.getMetadata(byteSource24);
        boolean boolean27 = pcxImageParser20.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser20.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser16.getMetadata(byteSource19, pcxImagingParameters28);
        byte[] byteArray30 = pcxImageParser10.getIccProfileBytes(byteSource15, pcxImagingParameters28);
        java.lang.String str31 = pcxImageParser10.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters32);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser36 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = null;
        byte[] byteArray39 = pcxImageParser36.getIccProfileBytes(byteSource37, pcxImagingParameters38);
        java.lang.String str40 = pcxImageParser36.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = pcxImageParser36.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser6.getMetadata(byteSource35, pcxImagingParameters41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser6.getMetadata(byteSource43);
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser46 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser46.getMetadata(byteSource47);
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata50 = pcxImageParser46.getMetadata(byteSource49);
        java.lang.String str51 = pcxImageParser46.getDefaultExtension();
        java.lang.String str52 = pcxImageParser46.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters53 = pcxImageParser46.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata54 = pcxImageParser6.getMetadata(byteSource45, pcxImagingParameters53);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata55 = pcxImageParser0.getMetadata(file5, pcxImagingParameters53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNull(imageMetadata18);
        org.junit.Assert.assertNotNull(byteOrder21);
        org.junit.Assert.assertNull(formatCompliance23);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertNull(byteArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Pcx-Custom" + "'", str31, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
        org.junit.Assert.assertNull(imageMetadata33);
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
        org.junit.Assert.assertNull(byteArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "pcx" + "'", str40, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters41);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNull(imageMetadata50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "pcx" + "'", str51, "pcx");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "pcx" + "'", str52, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters53);
        org.junit.Assert.assertNull(imageMetadata54);
    }

    @Test
    public void test0993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0993");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        java.nio.ByteOrder byteOrder9 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser0.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = null;
        byte[] byteArray16 = pcxImageParser13.getIccProfileBytes(byteSource14, pcxImagingParameters15);
        java.lang.String str17 = pcxImageParser13.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser13.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension19 = pcxImageParser0.getImageSize(byteSource12, pcxImagingParameters18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNull(byteArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "pcx" + "'", str17, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
    }

    @Test
    public void test0994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0994");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        java.nio.ByteOrder byteOrder7 = pcxImageParser0.getByteOrder();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNotNull(byteOrder7);
    }

    @Test
    public void test0995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0995");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        boolean boolean30 = pcxImageParser0.canAcceptExtension("pcx");
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat32 = null;
        boolean boolean33 = pcxImageParser0.canAcceptType(imageFormat32);
        java.io.File file34 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension35 = pcxImageParser0.getImageSize(file34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test0996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0996");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser0.canAcceptType(imageFormat14);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = pcxImageParser0.getDefaultParameters();
        java.lang.String str17 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder20 = pcxImageParser19.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance22 = pcxImageParser19.getFormatCompliance(byteSource21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser19.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser25.getMetadata(byteSource26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder30 = pcxImageParser29.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser29.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser29.getMetadata(byteSource33);
        boolean boolean36 = pcxImageParser29.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser25.getMetadata(byteSource28, pcxImagingParameters37);
        byte[] byteArray39 = pcxImageParser19.getIccProfileBytes(byteSource24, pcxImagingParameters37);
        java.lang.String str40 = pcxImageParser19.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = pcxImageParser19.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage42 = pcxImageParser0.getBufferedImage(byteSource18, pcxImagingParameters41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "pcx" + "'", str17, "pcx");
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNull(formatCompliance22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(byteOrder30);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters37);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNull(byteArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Pcx-Custom" + "'", str40, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters41);
    }

    @Test
    public void test0997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0997");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.nio.ByteOrder byteOrder4 = pcxImageParser0.getByteOrder();
        java.io.File file5 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean6 = pcxImageParser0.canAcceptExtension(file5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(byteOrder4);
    }

    @Test
    public void test0998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0998");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance5 = pcxImageParser0.getFormatCompliance(byteSource4);
        java.io.PrintWriter printWriter6 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean8 = pcxImageParser0.dumpImageFile(printWriter6, byteSource7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(formatCompliance5);
    }

    @Test
    public void test0999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0999");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser9.canAcceptType(imageFormat14);
        java.lang.String str16 = pcxImageParser9.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser9.getDefaultParameters();
        byte[] byteArray18 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters17);
        org.apache.commons.imaging.ImageFormat imageFormat19 = null;
        boolean boolean20 = pcxImageParser0.canAcceptType(imageFormat19);
        org.apache.commons.imaging.ImageFormat imageFormat21 = null;
        boolean boolean22 = pcxImageParser0.canAcceptType(imageFormat21);
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = null;
        byte[] byteArray33 = pcxImageParser30.getIccProfileBytes(byteSource31, pcxImagingParameters32);
        java.lang.String str34 = pcxImageParser30.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser30.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser24.getMetadata(byteSource29, pcxImagingParameters35);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser0.getMetadata(byteSource23, pcxImagingParameters37);
        java.io.File file39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = null;
        byte[] byteArray43 = pcxImageParser40.getIccProfileBytes(byteSource41, pcxImagingParameters42);
        java.lang.String str44 = pcxImageParser40.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser40.getMetadata(byteSource45);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance48 = pcxImageParser40.getFormatCompliance(byteSource47);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters49 = pcxImageParser40.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension50 = pcxImageParser0.getImageSize(file39, pcxImagingParameters49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "pcx" + "'", str16, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "pcx" + "'", str34, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertNotNull(pcxImagingParameters37);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNull(byteArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Pcx-Custom" + "'", str44, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata46);
        org.junit.Assert.assertNull(formatCompliance48);
        org.junit.Assert.assertNotNull(pcxImagingParameters49);
    }

    @Test
    public void test1000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test1000");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = null;
        byte[] byteArray33 = pcxImageParser30.getIccProfileBytes(byteSource31, pcxImagingParameters32);
        java.lang.String str34 = pcxImageParser30.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser30.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser0.getMetadata(byteSource29, pcxImagingParameters35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser0.getMetadata(byteSource37);
        java.io.File file39 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean40 = pcxImageParser0.canAcceptExtension(file39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "pcx" + "'", str34, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertNull(imageMetadata38);
    }
}

