/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test0001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0001");
        java.util.List<org.apache.commons.imaging.AbstractImageParser<?>> wildcardAbstractImageParserList0 = org.apache.commons.imaging.AbstractImageParser.getAllImageParsers();
        java.lang.Class<?> wildcardClass1 = wildcardAbstractImageParserList0.getClass();
        org.junit.Assert.assertNotNull(wildcardAbstractImageParserList0);
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test0002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0002");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.io.File file1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension2 = pcxImageParser0.getImageSize(file1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0003");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.io.File file1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(file1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0004");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage3 = pcxImageParser0.getBufferedImage(byteSource1, pcxImagingParameters2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0005");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.io.File file1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = pcxImageParser0.dumpImageFile(file1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0006");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.io.File file1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(file1, pcxImagingParameters2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0007");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo2 = pcxImageParser0.getImageInfo(byteSource1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0008");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.io.File file4 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray5 = pcxImageParser0.getIccProfileBytes(file4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
    }

    @Test
    public void test0009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0009");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.io.File file1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo3 = pcxImageParser0.getImageInfo(file1, pcxImagingParameters2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0010");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.io.File file4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str5 = pcxImageParser0.dumpImageFile(file4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
    }

    @Test
    public void test0011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0011");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str4 = pcxImageParser0.dumpImageFile(byteSource3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
    }

    @Test
    public void test0012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0012");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        java.io.File file3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray5 = pcxImageParser0.getIccProfileBytes(file3, pcxImagingParameters4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
    }

    @Test
    public void test0013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0013");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.io.File file5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension6 = pcxImageParser0.getImageSize(file5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
    }

    @Test
    public void test0014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0014");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo8 = pcxImageParser0.getImageInfo(byteSource6, pcxImagingParameters7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
    }

    @Test
    public void test0015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0015");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test0016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0016");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        java.io.File file2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata3 = pcxImageParser0.getMetadata(file2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
    }

    @Test
    public void test0017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0017");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters3 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage4 = pcxImageParser0.getBufferedImage(byteSource2, pcxImagingParameters3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
    }

    @Test
    public void test0018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0018");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo3 = pcxImageParser0.getImageInfo(byteSource2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
    }

    @Test
    public void test0019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0019");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList5 = pcxImageParser0.getAllBufferedImages(byteSource4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
    }

    @Test
    public void test0020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0020");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList7 = pcxImageParser0.getAllBufferedImages(byteSource6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
    }

    @Test
    public void test0021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0021");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.io.File file5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser0.getFormatCompliance(file5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
    }

    @Test
    public void test0022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0022");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList2 = pcxImageParser0.getAllBufferedImages(byteSource1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0023");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        java.io.File file6 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray7 = pcxImageParser0.getIccProfileBytes(file6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
    }

    @Test
    public void test0024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0024");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        java.lang.Class<?> wildcardClass2 = pcxImageParser0.getClass();
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0025");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        java.io.File file2 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters3 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage4 = pcxImageParser0.getBufferedImage(file2, pcxImagingParameters3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
    }

    @Test
    public void test0026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0026");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters3 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension4 = pcxImageParser0.getImageSize(byteSource2, pcxImagingParameters3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
    }

    @Test
    public void test0027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0027");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension8 = pcxImageParser0.getImageSize(byteSource6, pcxImagingParameters7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
    }

    @Test
    public void test0028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0028");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        java.io.File file2 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(file2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
    }

    @Test
    public void test0029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0029");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.io.File file1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance2 = pcxImageParser0.getFormatCompliance(file1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0030");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        java.io.File file2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str3 = pcxImageParser0.dumpImageFile(file2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
    }

    @Test
    public void test0031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0031");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = null;
        byte[] byteArray6 = pcxImageParser0.getIccProfileBytes(byteSource4, pcxImagingParameters5);
        java.io.File file7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser0.getMetadata(file7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNull(byteArray6);
    }

    @Test
    public void test0032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0032");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        java.io.File file2 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean3 = pcxImageParser0.canAcceptExtension(file2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
    }

    @Test
    public void test0033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0033");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = null;
        byte[] byteArray6 = pcxImageParser0.getIccProfileBytes(byteSource4, pcxImagingParameters5);
        java.io.File file7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(file7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNull(byteArray6);
    }

    @Test
    public void test0034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0034");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        java.io.File file6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray8 = pcxImageParser0.getIccProfileBytes(file6, pcxImagingParameters7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
    }

    @Test
    public void test0035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0035");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = null;
        byte[] byteArray6 = pcxImageParser0.getIccProfileBytes(byteSource4, pcxImagingParameters5);
        java.lang.Class<?> wildcardClass7 = pcxImageParser0.getClass();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNull(byteArray6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0036");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        java.io.File file3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata4 = pcxImageParser0.getMetadata(file3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
    }

    @Test
    public void test0037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0037");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.io.File file4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(file4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
    }

    @Test
    public void test0038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0038");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = pcxImageParser0.dumpImageFile(byteSource6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
    }

    @Test
    public void test0039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0039");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.io.File file4 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(file4, pcxImagingParameters5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
    }

    @Test
    public void test0040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0040");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.io.File file1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata3 = pcxImageParser0.getMetadata(file1, pcxImagingParameters2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0041");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.io.File file4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList5 = pcxImageParser0.getAllBufferedImages(file4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
    }

    @Test
    public void test0042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0042");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        java.awt.image.BufferedImage bufferedImage7 = null;
        java.io.OutputStream outputStream8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser9.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage7, outputStream8, pcxImagingParameters13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
    }

    @Test
    public void test0043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0043");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        java.io.File file7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension13 = pcxImageParser0.getImageSize(file7, pcxImagingParameters12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
    }

    @Test
    public void test0044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0044");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo7 = pcxImageParser0.getImageInfo(byteSource6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
    }

    @Test
    public void test0045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0045");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder7 = pcxImageParser6.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance9 = pcxImageParser6.getFormatCompliance(byteSource8);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = pcxImageParser6.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo11 = pcxImageParser0.getImageInfo(byteSource5, pcxImagingParameters10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNull(formatCompliance9);
        org.junit.Assert.assertNotNull(pcxImagingParameters10);
    }

    @Test
    public void test0046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0046");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.io.File file4 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser5 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder6 = pcxImageParser5.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser5.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = pcxImageParser5.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo10 = pcxImageParser0.getImageInfo(file4, pcxImagingParameters9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(pcxImagingParameters9);
    }

    @Test
    public void test0047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0047");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage12 = pcxImageParser0.getBufferedImage(byteSource6, pcxImagingParameters11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
    }

    @Test
    public void test0048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0048");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo6 = pcxImageParser0.getImageInfo(byteSource4, pcxImagingParameters5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
    }

    @Test
    public void test0049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0049");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = null;
        byte[] byteArray6 = pcxImageParser0.getIccProfileBytes(byteSource4, pcxImagingParameters5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList8 = pcxImageParser0.getAllBufferedImages(byteSource7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNull(byteArray6);
    }

    @Test
    public void test0050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0050");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList3 = pcxImageParser0.getAllBufferedImages(byteSource2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
    }

    @Test
    public void test0051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0051");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        java.io.File file6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo12 = pcxImageParser0.getImageInfo(file6, pcxImagingParameters11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
    }

    @Test
    public void test0052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0052");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser3 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder4 = pcxImageParser3.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser3.getFormatCompliance(byteSource5);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = pcxImageParser3.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo8 = pcxImageParser0.getImageInfo(byteSource2, pcxImagingParameters7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNull(formatCompliance6);
        org.junit.Assert.assertNotNull(pcxImagingParameters7);
    }

    @Test
    public void test0053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0053");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList3 = pcxImageParser0.getAllBufferedImages(byteSource2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
    }

    @Test
    public void test0054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0054");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        java.io.File file7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension8 = pcxImageParser0.getImageSize(file7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
    }

    @Test
    public void test0055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0055");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.io.File file6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension7 = pcxImageParser0.getImageSize(file6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
    }

    @Test
    public void test0056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0056");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo6 = pcxImageParser0.getImageInfo(byteSource5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
    }

    @Test
    public void test0057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0057");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat2 = null;
        boolean boolean3 = pcxImageParser0.canAcceptType(imageFormat2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser5 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder6 = pcxImageParser5.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser5.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = pcxImageParser5.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage10 = pcxImageParser0.getBufferedImage(byteSource4, pcxImagingParameters9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(pcxImagingParameters9);
    }

    @Test
    public void test0058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0058");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        java.io.File file2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList3 = pcxImageParser0.getAllBufferedImages(file2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
    }

    @Test
    public void test0059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0059");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata4 = pcxImageParser0.getMetadata(byteSource3);
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder7 = pcxImageParser6.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance9 = pcxImageParser6.getFormatCompliance(byteSource8);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = pcxImageParser6.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage11 = pcxImageParser0.getBufferedImage(byteSource5, pcxImagingParameters10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata4);
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNull(formatCompliance9);
        org.junit.Assert.assertNotNull(pcxImagingParameters10);
    }

    @Test
    public void test0060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0060");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        java.io.File file2 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser3 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder4 = pcxImageParser3.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser3.getFormatCompliance(byteSource5);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = pcxImageParser3.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage8 = pcxImageParser0.getBufferedImage(file2, pcxImagingParameters7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNull(formatCompliance6);
        org.junit.Assert.assertNotNull(pcxImagingParameters7);
    }

    @Test
    public void test0061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0061");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str5 = pcxImageParser0.dumpImageFile(byteSource4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
    }

    @Test
    public void test0062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0062");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata4 = pcxImageParser0.getMetadata(byteSource3);
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        java.io.PrintWriter printWriter6 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean8 = pcxImageParser0.dumpImageFile(printWriter6, byteSource7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
    }

    @Test
    public void test0063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0063");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension12 = pcxImageParser0.getImageSize(byteSource6, pcxImagingParameters11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
    }

    @Test
    public void test0064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0064");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata4 = pcxImageParser0.getMetadata(byteSource3);
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo6 = pcxImageParser0.getImageInfo(byteSource5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata4);
    }

    @Test
    public void test0065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0065");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        java.io.File file8 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray9 = pcxImageParser0.getIccProfileBytes(file8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0066");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.nio.ByteOrder byteOrder4 = pcxImageParser0.getByteOrder();
        java.io.File file5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder7 = pcxImageParser6.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance9 = pcxImageParser6.getFormatCompliance(byteSource8);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = pcxImageParser6.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo11 = pcxImageParser0.getImageInfo(file5, pcxImagingParameters10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNull(formatCompliance9);
        org.junit.Assert.assertNotNull(pcxImagingParameters10);
    }

    @Test
    public void test0067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0067");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.awt.image.BufferedImage bufferedImage4 = null;
        java.io.OutputStream outputStream5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder7 = pcxImageParser6.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance9 = pcxImageParser6.getFormatCompliance(byteSource8);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = pcxImageParser6.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage4, outputStream5, pcxImagingParameters10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNull(formatCompliance9);
        org.junit.Assert.assertNotNull(pcxImagingParameters10);
    }

    @Test
    public void test0068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0068");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.io.File file4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(file4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
    }

    @Test
    public void test0069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0069");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        java.io.File file2 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser3 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder4 = pcxImageParser3.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser3.getFormatCompliance(byteSource5);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = pcxImageParser3.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension8 = pcxImageParser0.getImageSize(file2, pcxImagingParameters7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNull(formatCompliance6);
        org.junit.Assert.assertNotNull(pcxImagingParameters7);
    }

    @Test
    public void test0070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0070");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        java.lang.Class<?> wildcardClass6 = pcxImagingParameters5.getClass();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0071");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser4.getMetadata(byteSource8);
        boolean boolean11 = pcxImageParser4.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters12);
        java.io.File file14 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(file14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata13);
    }

    @Test
    public void test0072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0072");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser7.getMetadata(byteSource8);
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder12 = pcxImageParser11.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance14 = pcxImageParser11.getFormatCompliance(byteSource13);
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser11.getMetadata(byteSource15);
        boolean boolean18 = pcxImageParser11.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser11.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata20 = pcxImageParser7.getMetadata(byteSource10, pcxImagingParameters19);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo21 = pcxImageParser0.getImageInfo(byteSource6, pcxImagingParameters19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertNotNull(byteOrder12);
        org.junit.Assert.assertNull(formatCompliance14);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
        org.junit.Assert.assertNull(imageMetadata20);
    }

    @Test
    public void test0073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0073");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        java.io.File file3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters6 = null;
        byte[] byteArray7 = pcxImageParser4.getIccProfileBytes(byteSource5, pcxImagingParameters6);
        java.lang.String str8 = pcxImageParser4.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = pcxImageParser4.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata10 = pcxImageParser0.getMetadata(file3, pcxImagingParameters9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(byteArray7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "pcx" + "'", str8, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters9);
    }

    @Test
    public void test0074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0074");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.io.File file4 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser5 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder6 = pcxImageParser5.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser5.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = pcxImageParser5.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension10 = pcxImageParser0.getImageSize(file4, pcxImagingParameters9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(pcxImagingParameters9);
    }

    @Test
    public void test0075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0075");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata10 = pcxImageParser8.getMetadata(byteSource9);
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser12 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder13 = pcxImageParser12.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance15 = pcxImageParser12.getFormatCompliance(byteSource14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata17 = pcxImageParser12.getMetadata(byteSource16);
        boolean boolean19 = pcxImageParser12.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters20 = pcxImageParser12.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata21 = pcxImageParser8.getMetadata(byteSource11, pcxImagingParameters20);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension22 = pcxImageParser0.getImageSize(byteSource7, pcxImagingParameters20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(imageMetadata10);
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNull(formatCompliance15);
        org.junit.Assert.assertNull(imageMetadata17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters20);
        org.junit.Assert.assertNull(imageMetadata21);
    }

    @Test
    public void test0076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0076");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.io.File file4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str5 = pcxImageParser0.dumpImageFile(file4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
    }

    @Test
    public void test0077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0077");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.nio.ByteOrder byteOrder4 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str6 = pcxImageParser0.dumpImageFile(byteSource5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(byteOrder4);
    }

    @Test
    public void test0078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0078");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo6 = pcxImageParser0.getImageInfo(byteSource5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
    }

    @Test
    public void test0079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0079");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser7.getMetadata(byteSource8);
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder12 = pcxImageParser11.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance14 = pcxImageParser11.getFormatCompliance(byteSource13);
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser11.getMetadata(byteSource15);
        boolean boolean18 = pcxImageParser11.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser11.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata20 = pcxImageParser7.getMetadata(byteSource10, pcxImagingParameters19);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage21 = pcxImageParser0.getBufferedImage(byteSource6, pcxImagingParameters19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertNotNull(byteOrder12);
        org.junit.Assert.assertNull(formatCompliance14);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
        org.junit.Assert.assertNull(imageMetadata20);
    }

    @Test
    public void test0080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0080");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.io.File file4 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser5 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = null;
        byte[] byteArray8 = pcxImageParser5.getIccProfileBytes(byteSource6, pcxImagingParameters7);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = pcxImageParser5.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata10 = pcxImageParser0.getMetadata(file4, pcxImagingParameters9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(byteArray8);
        org.junit.Assert.assertNotNull(pcxImagingParameters9);
    }

    @Test
    public void test0081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0081");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo5 = pcxImageParser0.getImageInfo(byteSource4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
    }

    @Test
    public void test0082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0082");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.nio.ByteOrder byteOrder4 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = null;
        byte[] byteArray9 = pcxImageParser6.getIccProfileBytes(byteSource7, pcxImagingParameters8);
        java.lang.String str10 = pcxImageParser6.getName();
        java.lang.String str11 = pcxImageParser6.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder14 = pcxImageParser13.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser13.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata18 = pcxImageParser6.getMetadata(byteSource12, pcxImagingParameters17);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo19 = pcxImageParser0.getImageInfo(byteSource5, pcxImagingParameters17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNull(byteArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Pcx-Custom" + "'", str10, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Pcx-Custom" + "'", str11, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder14);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
        org.junit.Assert.assertNull(imageMetadata18);
    }

    @Test
    public void test0083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0083");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        java.io.File file6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(file6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
    }

    @Test
    public void test0084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0084");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser30.getMetadata(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder35 = pcxImageParser34.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance37 = pcxImageParser34.getFormatCompliance(byteSource36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata39 = pcxImageParser34.getMetadata(byteSource38);
        boolean boolean41 = pcxImageParser34.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser34.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata43 = pcxImageParser30.getMetadata(byteSource33, pcxImagingParameters42);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension44 = pcxImageParser0.getImageSize(byteSource29, pcxImagingParameters42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNull(formatCompliance37);
        org.junit.Assert.assertNull(imageMetadata39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertNull(imageMetadata43);
    }

    @Test
    public void test0085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0085");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder7 = pcxImageParser6.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance9 = pcxImageParser6.getFormatCompliance(byteSource8);
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata11 = pcxImageParser6.getMetadata(byteSource10);
        boolean boolean13 = pcxImageParser6.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser6.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo15 = pcxImageParser0.getImageInfo(byteSource5, pcxImagingParameters14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNull(formatCompliance9);
        org.junit.Assert.assertNull(imageMetadata11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
    }

    @Test
    public void test0086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0086");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.nio.ByteOrder byteOrder4 = pcxImageParser0.getByteOrder();
        java.io.File file5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList6 = pcxImageParser0.getAllBufferedImages(file5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(byteOrder4);
    }

    @Test
    public void test0087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0087");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata14 = pcxImageParser9.getMetadata(byteSource13);
        boolean boolean16 = pcxImageParser9.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser9.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo18 = pcxImageParser0.getImageInfo(byteSource8, pcxImagingParameters17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNull(imageMetadata14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
    }

    @Test
    public void test0088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0088");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str5 = pcxImageParser0.dumpImageFile(byteSource4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
    }

    @Test
    public void test0089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0089");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.io.File file5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = null;
        byte[] byteArray9 = pcxImageParser6.getIccProfileBytes(byteSource7, pcxImagingParameters8);
        java.lang.String str10 = pcxImageParser6.getName();
        java.lang.String str11 = pcxImageParser6.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder14 = pcxImageParser13.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser13.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata18 = pcxImageParser6.getMetadata(byteSource12, pcxImagingParameters17);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray19 = pcxImageParser0.getIccProfileBytes(file5, pcxImagingParameters17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(byteArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Pcx-Custom" + "'", str10, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Pcx-Custom" + "'", str11, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder14);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
        org.junit.Assert.assertNull(imageMetadata18);
    }

    @Test
    public void test0090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0090");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.io.File file13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = null;
        byte[] byteArray17 = pcxImageParser14.getIccProfileBytes(byteSource15, pcxImagingParameters16);
        java.lang.String str18 = pcxImageParser14.getName();
        java.lang.String str19 = pcxImageParser14.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder22 = pcxImageParser21.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance24 = pcxImageParser21.getFormatCompliance(byteSource23);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata26 = pcxImageParser14.getMetadata(byteSource20, pcxImagingParameters25);
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata30 = pcxImageParser28.getMetadata(byteSource29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser32.getMetadata(byteSource36);
        boolean boolean39 = pcxImageParser32.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser28.getMetadata(byteSource31, pcxImagingParameters40);
        byte[] byteArray42 = pcxImageParser14.getIccProfileBytes(byteSource27, pcxImagingParameters40);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray43 = pcxImageParser0.getIccProfileBytes(file13, pcxImagingParameters40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(byteArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Pcx-Custom" + "'", str18, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Pcx-Custom" + "'", str19, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNull(formatCompliance24);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
        org.junit.Assert.assertNull(imageMetadata26);
        org.junit.Assert.assertNull(imageMetadata30);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(imageMetadata41);
        org.junit.Assert.assertNull(byteArray42);
    }

    @Test
    public void test0091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0091");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        java.io.File file8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = null;
        byte[] byteArray12 = pcxImageParser9.getIccProfileBytes(byteSource10, pcxImagingParameters11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser9.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage14 = pcxImageParser0.getBufferedImage(file8, pcxImagingParameters13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(byteArray12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
    }

    @Test
    public void test0092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0092");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.io.File file6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(file6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
    }

    @Test
    public void test0093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0093");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo4 = pcxImageParser0.getImageInfo(byteSource3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
    }

    @Test
    public void test0094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0094");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.Class<?> wildcardClass5 = pcxImagingParameters4.getClass();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0095");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser5 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = null;
        byte[] byteArray8 = pcxImageParser5.getIccProfileBytes(byteSource6, pcxImagingParameters7);
        java.lang.String str9 = pcxImageParser5.getName();
        java.lang.String str10 = pcxImageParser5.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser12 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder13 = pcxImageParser12.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance15 = pcxImageParser12.getFormatCompliance(byteSource14);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = pcxImageParser12.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata17 = pcxImageParser5.getMetadata(byteSource11, pcxImagingParameters16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata21 = pcxImageParser19.getMetadata(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser23 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder24 = pcxImageParser23.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance26 = pcxImageParser23.getFormatCompliance(byteSource25);
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata28 = pcxImageParser23.getMetadata(byteSource27);
        boolean boolean30 = pcxImageParser23.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser23.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser19.getMetadata(byteSource22, pcxImagingParameters31);
        byte[] byteArray33 = pcxImageParser5.getIccProfileBytes(byteSource18, pcxImagingParameters31);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension34 = pcxImageParser0.getImageSize(byteSource4, pcxImagingParameters31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(byteArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Pcx-Custom" + "'", str9, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Pcx-Custom" + "'", str10, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNull(formatCompliance15);
        org.junit.Assert.assertNotNull(pcxImagingParameters16);
        org.junit.Assert.assertNull(imageMetadata17);
        org.junit.Assert.assertNull(imageMetadata21);
        org.junit.Assert.assertNotNull(byteOrder24);
        org.junit.Assert.assertNull(formatCompliance26);
        org.junit.Assert.assertNull(imageMetadata28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNull(byteArray33);
    }

    @Test
    public void test0096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0096");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser4.getMetadata(byteSource8);
        boolean boolean11 = pcxImageParser4.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters12);
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser0.canAcceptType(imageFormat14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo18 = pcxImageParser0.getImageInfo(byteSource16, pcxImagingParameters17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test0097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0097");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo3 = pcxImageParser0.getImageInfo(byteSource2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
    }

    @Test
    public void test0098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0098");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = null;
        byte[] byteArray12 = pcxImageParser9.getIccProfileBytes(byteSource10, pcxImagingParameters11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser9.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension14 = pcxImageParser0.getImageSize(byteSource8, pcxImagingParameters13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(byteArray12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
    }

    @Test
    public void test0099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0099");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.nio.ByteOrder byteOrder4 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList6 = pcxImageParser0.getAllBufferedImages(byteSource5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(byteOrder4);
    }

    @Test
    public void test0100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0100");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        java.io.File file5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = null;
        byte[] byteArray9 = pcxImageParser6.getIccProfileBytes(byteSource7, pcxImagingParameters8);
        java.lang.String str10 = pcxImageParser6.getName();
        java.lang.String str11 = pcxImageParser6.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder14 = pcxImageParser13.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser13.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata18 = pcxImageParser6.getMetadata(byteSource12, pcxImagingParameters17);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray19 = pcxImageParser0.getIccProfileBytes(file5, pcxImagingParameters17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertNull(byteArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Pcx-Custom" + "'", str10, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Pcx-Custom" + "'", str11, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder14);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
        org.junit.Assert.assertNull(imageMetadata18);
    }

    @Test
    public void test0101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0101");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.nio.ByteOrder byteOrder4 = pcxImageParser0.getByteOrder();
        java.io.File file5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = null;
        byte[] byteArray9 = pcxImageParser6.getIccProfileBytes(byteSource7, pcxImagingParameters8);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = pcxImageParser6.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray11 = pcxImageParser0.getIccProfileBytes(file5, pcxImagingParameters10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNull(byteArray9);
        org.junit.Assert.assertNotNull(pcxImagingParameters10);
    }

    @Test
    public void test0102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0102");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat2 = null;
        boolean boolean3 = pcxImageParser0.canAcceptType(imageFormat2);
        java.io.File file4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance5 = pcxImageParser0.getFormatCompliance(file4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test0103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0103");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser5 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder6 = pcxImageParser5.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser5.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata10 = pcxImageParser5.getMetadata(byteSource9);
        boolean boolean12 = pcxImageParser5.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser5.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo14 = pcxImageParser0.getImageInfo(byteSource4, pcxImagingParameters13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNull(imageMetadata10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
    }

    @Test
    public void test0104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0104");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        java.io.File file7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = null;
        byte[] byteArray11 = pcxImageParser8.getIccProfileBytes(byteSource9, pcxImagingParameters10);
        java.lang.String str12 = pcxImageParser8.getName();
        java.lang.String str13 = pcxImageParser8.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder16 = pcxImageParser15.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser15.getFormatCompliance(byteSource17);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser15.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata20 = pcxImageParser8.getMetadata(byteSource14, pcxImagingParameters19);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray21 = pcxImageParser0.getIccProfileBytes(file7, pcxImagingParameters19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(byteArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Pcx-Custom" + "'", str12, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNull(formatCompliance18);
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
        org.junit.Assert.assertNull(imageMetadata20);
    }

    @Test
    public void test0105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0105");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata4 = pcxImageParser0.getMetadata(byteSource3);
        java.io.File file5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension6 = pcxImageParser0.getImageSize(file5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata4);
    }

    @Test
    public void test0106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0106");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.io.PrintWriter printWriter29 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean31 = pcxImageParser0.dumpImageFile(printWriter29, byteSource30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
    }

    @Test
    public void test0107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0107");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata14 = pcxImageParser9.getMetadata(byteSource13);
        boolean boolean16 = pcxImageParser9.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser9.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension18 = pcxImageParser0.getImageSize(byteSource8, pcxImagingParameters17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNull(imageMetadata14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
    }

    @Test
    public void test0108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0108");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        java.io.File file9 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean10 = pcxImageParser0.canAcceptExtension(file9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
    }

    @Test
    public void test0109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0109");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        java.io.File file3 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str4 = pcxImageParser0.dumpImageFile(file3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
    }

    @Test
    public void test0110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0110");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = pcxImageParser0.dumpImageFile(byteSource13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
    }

    @Test
    public void test0111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0111");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.io.File file6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = null;
        byte[] byteArray10 = pcxImageParser7.getIccProfileBytes(byteSource8, pcxImagingParameters9);
        java.lang.String str11 = pcxImageParser7.getName();
        java.lang.String str12 = pcxImageParser7.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser7.getMetadata(byteSource13, pcxImagingParameters18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser21.getMetadata(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder26 = pcxImageParser25.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance28 = pcxImageParser25.getFormatCompliance(byteSource27);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata30 = pcxImageParser25.getMetadata(byteSource29);
        boolean boolean32 = pcxImageParser25.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser25.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser21.getMetadata(byteSource24, pcxImagingParameters33);
        byte[] byteArray35 = pcxImageParser7.getIccProfileBytes(byteSource20, pcxImagingParameters33);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension36 = pcxImageParser0.getImageSize(file6, pcxImagingParameters33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNull(byteArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Pcx-Custom" + "'", str11, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Pcx-Custom" + "'", str12, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNotNull(byteOrder26);
        org.junit.Assert.assertNull(formatCompliance28);
        org.junit.Assert.assertNull(imageMetadata30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertNull(byteArray35);
    }

    @Test
    public void test0112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0112");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.io.File file4 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser5 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder6 = pcxImageParser5.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser5.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = pcxImageParser5.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension10 = pcxImageParser0.getImageSize(file4, pcxImagingParameters9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(pcxImagingParameters9);
    }

    @Test
    public void test0113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0113");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        java.io.File file8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata11 = pcxImageParser9.getMetadata(byteSource10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder14 = pcxImageParser13.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser13.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata18 = pcxImageParser13.getMetadata(byteSource17);
        boolean boolean20 = pcxImageParser13.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser9.getMetadata(byteSource12, pcxImagingParameters21);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage23 = pcxImageParser0.getBufferedImage(file8, pcxImagingParameters21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(imageMetadata11);
        org.junit.Assert.assertNotNull(byteOrder14);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNull(imageMetadata18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
    }

    @Test
    public void test0114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0114");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.io.File file5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder7 = pcxImageParser6.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance9 = pcxImageParser6.getFormatCompliance(byteSource8);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat11 = null;
        boolean boolean12 = pcxImageParser6.canAcceptType(imageFormat11);
        java.lang.String str13 = pcxImageParser6.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser6.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo15 = pcxImageParser0.getImageInfo(file5, pcxImagingParameters14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNull(formatCompliance9);
        org.junit.Assert.assertNotNull(pcxImagingParameters10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
    }

    @Test
    public void test0115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0115");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.awt.image.BufferedImage bufferedImage1 = null;
        java.io.OutputStream outputStream2 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser3 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = null;
        byte[] byteArray6 = pcxImageParser3.getIccProfileBytes(byteSource4, pcxImagingParameters5);
        java.lang.String str7 = pcxImageParser3.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser3.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage1, outputStream2, pcxImagingParameters8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
    }

    @Test
    public void test0116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0116");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.io.PrintWriter printWriter5 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean7 = pcxImageParser0.dumpImageFile(printWriter5, byteSource6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
    }

    @Test
    public void test0117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0117");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList8 = pcxImageParser0.getAllBufferedImages(byteSource7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
    }

    @Test
    public void test0118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0118");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.io.File file4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance5 = pcxImageParser0.getFormatCompliance(file4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
    }

    @Test
    public void test0119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0119");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        java.io.File file8 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray9 = pcxImageParser0.getIccProfileBytes(file8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
    }

    @Test
    public void test0120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0120");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = null;
        byte[] byteArray19 = pcxImageParser16.getIccProfileBytes(byteSource17, pcxImagingParameters18);
        java.lang.String str20 = pcxImageParser16.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser10.getMetadata(byteSource15, pcxImagingParameters21);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo23 = pcxImageParser0.getImageInfo(byteSource9, pcxImagingParameters21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "pcx" + "'", str20, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
    }

    @Test
    public void test0121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0121");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str6 = pcxImageParser0.dumpImageFile(byteSource5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
    }

    @Test
    public void test0122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0122");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.io.File file29 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList30 = pcxImageParser0.getAllBufferedImages(file29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
    }

    @Test
    public void test0123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0123");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat2 = null;
        boolean boolean3 = pcxImageParser0.canAcceptType(imageFormat2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser5 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder6 = pcxImageParser5.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser5.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = pcxImageParser5.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat10 = null;
        boolean boolean11 = pcxImageParser5.canAcceptType(imageFormat10);
        java.lang.String str12 = pcxImageParser5.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser5.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage14 = pcxImageParser0.getBufferedImage(byteSource4, pcxImagingParameters13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(pcxImagingParameters9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "pcx" + "'", str12, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
    }

    @Test
    public void test0124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0124");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat2 = null;
        boolean boolean3 = pcxImageParser0.canAcceptType(imageFormat2);
        java.io.File file4 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser5 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = null;
        byte[] byteArray8 = pcxImageParser5.getIccProfileBytes(byteSource6, pcxImagingParameters7);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = pcxImageParser5.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata10 = pcxImageParser0.getMetadata(file4, pcxImagingParameters9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(byteArray8);
        org.junit.Assert.assertNotNull(pcxImagingParameters9);
    }

    @Test
    public void test0125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0125");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser4.getMetadata(byteSource8);
        boolean boolean11 = pcxImageParser4.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters12);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass14 = imageMetadata13.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata13);
    }

    @Test
    public void test0126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0126");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.io.File file4 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser5 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser5.getMetadata(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata14 = pcxImageParser9.getMetadata(byteSource13);
        boolean boolean16 = pcxImageParser9.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata18 = pcxImageParser5.getMetadata(byteSource8, pcxImagingParameters17);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser0.getMetadata(file4, pcxImagingParameters17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNull(imageMetadata14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
        org.junit.Assert.assertNull(imageMetadata18);
    }

    @Test
    public void test0127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0127");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        java.io.File file8 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = pcxImageParser0.canAcceptExtension(file8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0128");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat2 = null;
        boolean boolean3 = pcxImageParser0.canAcceptType(imageFormat2);
        java.io.File file4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension5 = pcxImageParser0.getImageSize(file4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test0129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0129");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.nio.ByteOrder byteOrder4 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = null;
        byte[] byteArray9 = pcxImageParser6.getIccProfileBytes(byteSource7, pcxImagingParameters8);
        java.lang.String str10 = pcxImageParser6.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser6.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension12 = pcxImageParser0.getImageSize(byteSource5, pcxImagingParameters11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNull(byteArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "pcx" + "'", str10, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
    }

    @Test
    public void test0130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0130");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata4 = pcxImageParser0.getMetadata(byteSource3);
        java.io.File file5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder7 = pcxImageParser6.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance9 = pcxImageParser6.getFormatCompliance(byteSource8);
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata11 = pcxImageParser6.getMetadata(byteSource10);
        boolean boolean13 = pcxImageParser6.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser6.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension15 = pcxImageParser0.getImageSize(file5, pcxImagingParameters14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata4);
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNull(formatCompliance9);
        org.junit.Assert.assertNull(imageMetadata11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
    }

    @Test
    public void test0131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0131");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        java.io.File file7 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray8 = pcxImageParser0.getIccProfileBytes(file7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
    }

    @Test
    public void test0132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0132");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass7 = imageMetadata6.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
    }

    @Test
    public void test0133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0133");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = null;
        byte[] byteArray9 = pcxImageParser6.getIccProfileBytes(byteSource7, pcxImagingParameters8);
        java.lang.String str10 = pcxImageParser6.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource5, pcxImagingParameters11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder16 = pcxImageParser15.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser15.getFormatCompliance(byteSource17);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser15.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser21.getMetadata(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder26 = pcxImageParser25.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance28 = pcxImageParser25.getFormatCompliance(byteSource27);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata30 = pcxImageParser25.getMetadata(byteSource29);
        boolean boolean32 = pcxImageParser25.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser25.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser21.getMetadata(byteSource24, pcxImagingParameters33);
        byte[] byteArray35 = pcxImageParser15.getIccProfileBytes(byteSource20, pcxImagingParameters33);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension36 = pcxImageParser0.getImageSize(byteSource14, pcxImagingParameters33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(byteArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "pcx" + "'", str10, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNull(formatCompliance18);
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNotNull(byteOrder26);
        org.junit.Assert.assertNull(formatCompliance28);
        org.junit.Assert.assertNull(imageMetadata30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertNull(byteArray35);
    }

    @Test
    public void test0134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0134");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        java.io.File file22 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList23 = pcxImageParser0.getAllBufferedImages(file22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
    }

    @Test
    public void test0135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0135");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass4 = formatCompliance3.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
    }

    @Test
    public void test0136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0136");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat2 = null;
        boolean boolean3 = pcxImageParser0.canAcceptType(imageFormat2);
        java.io.File file4 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser5 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser5.getMetadata(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata14 = pcxImageParser9.getMetadata(byteSource13);
        boolean boolean16 = pcxImageParser9.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata18 = pcxImageParser5.getMetadata(byteSource8, pcxImagingParameters17);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage19 = pcxImageParser0.getBufferedImage(file4, pcxImagingParameters17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNull(imageMetadata14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
        org.junit.Assert.assertNull(imageMetadata18);
    }

    @Test
    public void test0137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0137");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = null;
        byte[] byteArray9 = pcxImageParser6.getIccProfileBytes(byteSource7, pcxImagingParameters8);
        java.lang.String str10 = pcxImageParser6.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource5, pcxImagingParameters11);
        java.io.File file13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = null;
        byte[] byteArray17 = pcxImageParser14.getIccProfileBytes(byteSource15, pcxImagingParameters16);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser14.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage19 = pcxImageParser0.getBufferedImage(file13, pcxImagingParameters18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(byteArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "pcx" + "'", str10, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(byteArray17);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
    }

    @Test
    public void test0138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0138");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.awt.image.BufferedImage bufferedImage5 = null;
        java.io.OutputStream outputStream6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage5, outputStream6, pcxImagingParameters11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
    }

    @Test
    public void test0139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0139");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat2 = null;
        boolean boolean3 = pcxImageParser0.canAcceptType(imageFormat2);
        java.io.File file4 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser5 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder6 = pcxImageParser5.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser5.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = pcxImageParser5.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = null;
        byte[] byteArray14 = pcxImageParser11.getIccProfileBytes(byteSource12, pcxImagingParameters13);
        java.lang.String str15 = pcxImageParser11.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = pcxImageParser11.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata17 = pcxImageParser5.getMetadata(byteSource10, pcxImagingParameters16);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage18 = pcxImageParser0.getBufferedImage(file4, pcxImagingParameters16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(pcxImagingParameters9);
        org.junit.Assert.assertNull(byteArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "pcx" + "'", str15, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters16);
        org.junit.Assert.assertNull(imageMetadata17);
    }

    @Test
    public void test0140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0140");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        java.io.File file22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser23 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder24 = pcxImageParser23.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance26 = pcxImageParser23.getFormatCompliance(byteSource25);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = pcxImageParser23.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat28 = null;
        boolean boolean29 = pcxImageParser23.canAcceptType(imageFormat28);
        java.lang.String str30 = pcxImageParser23.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser23.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray32 = pcxImageParser0.getIccProfileBytes(file22, pcxImagingParameters31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder24);
        org.junit.Assert.assertNull(formatCompliance26);
        org.junit.Assert.assertNotNull(pcxImagingParameters27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "pcx" + "'", str30, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
    }

    @Test
    public void test0141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0141");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo22 = pcxImageParser0.getImageInfo(byteSource21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
    }

    @Test
    public void test0142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0142");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo10 = pcxImageParser0.getImageInfo(byteSource9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(formatCompliance8);
    }

    @Test
    public void test0143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0143");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser0.getFormatCompliance(byteSource5);
        java.io.File file7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = pcxImageParser0.dumpImageFile(file7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance6);
    }

    @Test
    public void test0144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0144");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.io.File file4 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean5 = pcxImageParser0.canAcceptExtension(file4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
    }

    @Test
    public void test0145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0145");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        java.io.File file3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = null;
        byte[] byteArray13 = pcxImageParser10.getIccProfileBytes(byteSource11, pcxImagingParameters12);
        java.lang.String str14 = pcxImageParser10.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser4.getMetadata(byteSource9, pcxImagingParameters15);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser4.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension18 = pcxImageParser0.getImageSize(file3, pcxImagingParameters17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(byteArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "pcx" + "'", str14, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters15);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
    }

    @Test
    public void test0146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0146");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        boolean boolean6 = pcxImageParser0.canAcceptExtension("hi!");
        java.io.File file7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser0.getMetadata(file7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0147");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata17 = pcxImageParser15.getMetadata(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder20 = pcxImageParser19.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance22 = pcxImageParser19.getFormatCompliance(byteSource21);
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser19.getMetadata(byteSource23);
        boolean boolean26 = pcxImageParser19.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = pcxImageParser19.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata28 = pcxImageParser15.getMetadata(byteSource18, pcxImagingParameters27);
        byte[] byteArray29 = pcxImageParser9.getIccProfileBytes(byteSource14, pcxImagingParameters27);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage30 = pcxImageParser0.getBufferedImage(byteSource8, pcxImagingParameters27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertNull(imageMetadata17);
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNull(formatCompliance22);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters27);
        org.junit.Assert.assertNull(imageMetadata28);
        org.junit.Assert.assertNull(byteArray29);
    }

    @Test
    public void test0148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0148");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.io.PrintWriter printWriter31 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean33 = pcxImageParser0.dumpImageFile(printWriter31, byteSource32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
    }

    @Test
    public void test0149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0149");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.io.File file13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = pcxImageParser0.canAcceptExtension(file13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
    }

    @Test
    public void test0150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0150");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.io.File file5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension6 = pcxImageParser0.getImageSize(file5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
    }

    @Test
    public void test0151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0151");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList14 = pcxImageParser0.getAllBufferedImages(byteSource13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
    }

    @Test
    public void test0152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0152");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        java.io.File file9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata10 = pcxImageParser0.getMetadata(file9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(formatCompliance8);
    }

    @Test
    public void test0153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0153");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.nio.ByteOrder byteOrder29 = pcxImageParser0.getByteOrder();
        java.io.File file30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder32 = pcxImageParser31.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance34 = pcxImageParser31.getFormatCompliance(byteSource33);
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser31.getMetadata(byteSource35);
        boolean boolean38 = pcxImageParser31.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = pcxImageParser31.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension40 = pcxImageParser0.getImageSize(file30, pcxImagingParameters39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertNull(formatCompliance34);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters39);
    }

    @Test
    public void test0154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0154");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = null;
        byte[] byteArray35 = pcxImageParser32.getIccProfileBytes(byteSource33, pcxImagingParameters34);
        java.nio.ByteOrder byteOrder36 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser38 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder39 = pcxImageParser38.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance41 = pcxImageParser38.getFormatCompliance(byteSource40);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser38.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat43 = null;
        boolean boolean44 = pcxImageParser38.canAcceptType(imageFormat43);
        java.lang.String str45 = pcxImageParser38.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser38.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser32.getMetadata(byteSource37, pcxImagingParameters46);
        byte[] byteArray48 = pcxImageParser0.getIccProfileBytes(byteSource31, pcxImagingParameters46);
        java.io.File file49 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList50 = pcxImageParser0.getAllBufferedImages(file49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNull(byteArray35);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteOrder39);
        org.junit.Assert.assertNull(formatCompliance41);
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "pcx" + "'", str45, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
        org.junit.Assert.assertNull(imageMetadata47);
        org.junit.Assert.assertNull(byteArray48);
    }

    @Test
    public void test0155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0155");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.nio.ByteOrder byteOrder29 = pcxImageParser0.getByteOrder();
        java.io.File file30 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser0.getMetadata(file30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNotNull(byteOrder29);
    }

    @Test
    public void test0156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0156");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        java.lang.Class<?> wildcardClass3 = pcxImageParser0.getClass();
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0157");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        java.io.File file6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser7.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser0.getMetadata(file6, pcxImagingParameters12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
    }

    @Test
    public void test0158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0158");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = null;
        byte[] byteArray9 = pcxImageParser6.getIccProfileBytes(byteSource7, pcxImagingParameters8);
        java.lang.String str10 = pcxImageParser6.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource5, pcxImagingParameters11);
        java.io.PrintWriter printWriter13 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = pcxImageParser0.dumpImageFile(printWriter13, byteSource14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(byteArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "pcx" + "'", str10, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
    }

    @Test
    public void test0159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0159");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        java.io.File file7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList8 = pcxImageParser0.getAllBufferedImages(file7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
    }

    @Test
    public void test0160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0160");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo8 = pcxImageParser0.getImageInfo(byteSource7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0161");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        java.io.File file9 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray10 = pcxImageParser0.getIccProfileBytes(file9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
    }

    @Test
    public void test0162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0162");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser5 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser5.getMetadata(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata14 = pcxImageParser9.getMetadata(byteSource13);
        boolean boolean16 = pcxImageParser9.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata18 = pcxImageParser5.getMetadata(byteSource8, pcxImagingParameters17);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension19 = pcxImageParser0.getImageSize(byteSource4, pcxImagingParameters17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNull(imageMetadata14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
        org.junit.Assert.assertNull(imageMetadata18);
    }

    @Test
    public void test0163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0163");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        java.io.File file6 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray7 = pcxImageParser0.getIccProfileBytes(file6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
    }

    @Test
    public void test0164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0164");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.io.File file6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(file6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
    }

    @Test
    public void test0165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0165");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = null;
        byte[] byteArray10 = pcxImageParser7.getIccProfileBytes(byteSource8, pcxImagingParameters9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo12 = pcxImageParser0.getImageInfo(byteSource6, pcxImagingParameters11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
    }

    @Test
    public void test0166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0166");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getName();
        java.io.File file6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(file6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
    }

    @Test
    public void test0167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0167");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.io.PrintWriter printWriter5 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean7 = pcxImageParser0.dumpImageFile(printWriter5, byteSource6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
    }

    @Test
    public void test0168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0168");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = null;
        byte[] byteArray11 = pcxImageParser8.getIccProfileBytes(byteSource9, pcxImagingParameters10);
        java.lang.String str12 = pcxImageParser8.getName();
        java.lang.String str13 = pcxImageParser8.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder16 = pcxImageParser15.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser15.getFormatCompliance(byteSource17);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser15.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata20 = pcxImageParser8.getMetadata(byteSource14, pcxImagingParameters19);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser22 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser22.getMetadata(byteSource23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder27 = pcxImageParser26.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance29 = pcxImageParser26.getFormatCompliance(byteSource28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser26.getMetadata(byteSource30);
        boolean boolean33 = pcxImageParser26.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser26.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser22.getMetadata(byteSource25, pcxImagingParameters34);
        byte[] byteArray36 = pcxImageParser8.getIccProfileBytes(byteSource21, pcxImagingParameters34);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension37 = pcxImageParser0.getImageSize(byteSource7, pcxImagingParameters34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(byteArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Pcx-Custom" + "'", str12, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNull(formatCompliance18);
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
        org.junit.Assert.assertNull(imageMetadata20);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNull(formatCompliance29);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertNull(byteArray36);
    }

    @Test
    public void test0169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0169");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        java.io.File file8 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray9 = pcxImageParser0.getIccProfileBytes(file8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance7);
    }

    @Test
    public void test0170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0170");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser4.getMetadata(byteSource8);
        boolean boolean11 = pcxImageParser4.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters12);
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser0.canAcceptType(imageFormat14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo17 = pcxImageParser0.getImageInfo(byteSource16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test0171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0171");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        java.io.File file5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = null;
        byte[] byteArray9 = pcxImageParser6.getIccProfileBytes(byteSource7, pcxImagingParameters8);
        java.lang.String str10 = pcxImageParser6.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser6.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension12 = pcxImageParser0.getImageSize(file5, pcxImagingParameters11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertNull(byteArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "pcx" + "'", str10, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
    }

    @Test
    public void test0172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0172");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        boolean boolean14 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser0.getFormatCompliance(byteSource15);
        java.io.File file17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList18 = pcxImageParser0.getAllBufferedImages(file17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(formatCompliance16);
    }

    @Test
    public void test0173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0173");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        java.io.File file22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser23 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder24 = pcxImageParser23.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance26 = pcxImageParser23.getFormatCompliance(byteSource25);
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata28 = pcxImageParser23.getMetadata(byteSource27);
        boolean boolean30 = pcxImageParser23.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser23.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension32 = pcxImageParser0.getImageSize(file22, pcxImagingParameters31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder24);
        org.junit.Assert.assertNull(formatCompliance26);
        org.junit.Assert.assertNull(imageMetadata28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
    }

    @Test
    public void test0174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0174");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo7 = pcxImageParser0.getImageInfo(byteSource6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
    }

    @Test
    public void test0175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0175");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        boolean boolean5 = pcxImageParser0.canAcceptExtension("Pcx-Custom");
        java.io.PrintWriter printWriter6 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean8 = pcxImageParser0.dumpImageFile(printWriter6, byteSource7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0176");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.lang.Class<?> wildcardClass6 = pcxImageParser0.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0177");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters7);
        java.io.File file9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser0.getFormatCompliance(file9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNull(imageMetadata8);
    }

    @Test
    public void test0178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0178");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        java.io.File file2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(file2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
    }

    @Test
    public void test0179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0179");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser4.getMetadata(byteSource8);
        boolean boolean11 = pcxImageParser4.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters12);
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser0.canAcceptType(imageFormat14);
        java.io.File file16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser17.getMetadata(byteSource18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder22 = pcxImageParser21.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance24 = pcxImageParser21.getFormatCompliance(byteSource23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata26 = pcxImageParser21.getMetadata(byteSource25);
        boolean boolean28 = pcxImageParser21.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata30 = pcxImageParser17.getMetadata(byteSource20, pcxImagingParameters29);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage31 = pcxImageParser0.getBufferedImage(file16, pcxImagingParameters29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNull(formatCompliance24);
        org.junit.Assert.assertNull(imageMetadata26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters29);
        org.junit.Assert.assertNull(imageMetadata30);
    }

    @Test
    public void test0180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0180");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata4 = pcxImageParser0.getMetadata(byteSource3);
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.io.File file7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList8 = pcxImageParser0.getAllBufferedImages(file7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0181");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance14 = pcxImageParser0.getFormatCompliance(byteSource13);
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo16 = pcxImageParser0.getImageInfo(byteSource15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(formatCompliance14);
    }

    @Test
    public void test0182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0182");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.nio.ByteOrder byteOrder4 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder7 = pcxImageParser6.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance9 = pcxImageParser6.getFormatCompliance(byteSource8);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat11 = null;
        boolean boolean12 = pcxImageParser6.canAcceptType(imageFormat11);
        java.lang.String str13 = pcxImageParser6.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource5, pcxImagingParameters14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo17 = pcxImageParser0.getImageInfo(byteSource16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNull(formatCompliance9);
        org.junit.Assert.assertNotNull(pcxImagingParameters10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNull(imageMetadata15);
    }

    @Test
    public void test0183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0183");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        java.awt.image.BufferedImage bufferedImage2 = null;
        java.io.OutputStream outputStream3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage2, outputStream3, pcxImagingParameters22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
    }

    @Test
    public void test0184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0184");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.io.File file21 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance22 = pcxImageParser0.getFormatCompliance(file21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
    }

    @Test
    public void test0185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0185");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        java.io.File file9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = null;
        byte[] byteArray13 = pcxImageParser10.getIccProfileBytes(byteSource11, pcxImagingParameters12);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser10.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray15 = pcxImageParser0.getIccProfileBytes(file9, pcxImagingParameters14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(byteArray13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
    }

    @Test
    public void test0186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0186");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = null;
        byte[] byteArray10 = pcxImageParser7.getIccProfileBytes(byteSource8, pcxImagingParameters9);
        java.nio.ByteOrder byteOrder11 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder14 = pcxImageParser13.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser13.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat18 = null;
        boolean boolean19 = pcxImageParser13.canAcceptType(imageFormat18);
        java.lang.String str20 = pcxImageParser13.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser7.getMetadata(byteSource12, pcxImagingParameters21);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage23 = pcxImageParser0.getBufferedImage(byteSource6, pcxImagingParameters21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray10);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNotNull(byteOrder14);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "pcx" + "'", str20, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
    }

    @Test
    public void test0187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0187");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.nio.ByteOrder byteOrder4 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder7 = pcxImageParser6.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance9 = pcxImageParser6.getFormatCompliance(byteSource8);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat11 = null;
        boolean boolean12 = pcxImageParser6.canAcceptType(imageFormat11);
        java.lang.String str13 = pcxImageParser6.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource5, pcxImagingParameters14);
        java.io.File file16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser17.getMetadata(byteSource18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder22 = pcxImageParser21.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance24 = pcxImageParser21.getFormatCompliance(byteSource23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata26 = pcxImageParser21.getMetadata(byteSource25);
        boolean boolean28 = pcxImageParser21.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata30 = pcxImageParser17.getMetadata(byteSource20, pcxImagingParameters29);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage31 = pcxImageParser0.getBufferedImage(file16, pcxImagingParameters29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNull(formatCompliance9);
        org.junit.Assert.assertNotNull(pcxImagingParameters10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNull(formatCompliance24);
        org.junit.Assert.assertNull(imageMetadata26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters29);
        org.junit.Assert.assertNull(imageMetadata30);
    }

    @Test
    public void test0188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0188");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = null;
        byte[] byteArray17 = pcxImageParser14.getIccProfileBytes(byteSource15, pcxImagingParameters16);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser14.getDefaultParameters();
        byte[] byteArray19 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo21 = pcxImageParser0.getImageInfo(byteSource20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(byteArray17);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(byteArray19);
    }

    @Test
    public void test0189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0189");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        java.io.File file9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage19 = pcxImageParser0.getBufferedImage(file9, pcxImagingParameters18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
    }

    @Test
    public void test0190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0190");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        java.lang.Class<?> wildcardClass6 = pcxImagingParameters5.getClass();
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0191");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        java.io.File file8 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = pcxImageParser0.canAcceptExtension(file8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNull(imageMetadata7);
    }

    @Test
    public void test0192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0192");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = null;
        byte[] byteArray35 = pcxImageParser32.getIccProfileBytes(byteSource33, pcxImagingParameters34);
        java.nio.ByteOrder byteOrder36 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser38 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder39 = pcxImageParser38.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance41 = pcxImageParser38.getFormatCompliance(byteSource40);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser38.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat43 = null;
        boolean boolean44 = pcxImageParser38.canAcceptType(imageFormat43);
        java.lang.String str45 = pcxImageParser38.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser38.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser32.getMetadata(byteSource37, pcxImagingParameters46);
        byte[] byteArray48 = pcxImageParser0.getIccProfileBytes(byteSource31, pcxImagingParameters46);
        java.io.File file49 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension50 = pcxImageParser0.getImageSize(file49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNull(byteArray35);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteOrder39);
        org.junit.Assert.assertNull(formatCompliance41);
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "pcx" + "'", str45, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
        org.junit.Assert.assertNull(imageMetadata47);
        org.junit.Assert.assertNull(byteArray48);
    }

    @Test
    public void test0193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0193");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        java.io.File file7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension8 = pcxImageParser0.getImageSize(file7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
    }

    @Test
    public void test0194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0194");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser4.getMetadata(byteSource8);
        boolean boolean11 = pcxImageParser4.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters12);
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser0.canAcceptType(imageFormat14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = pcxImageParser0.dumpImageFile(byteSource16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test0195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0195");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        java.io.File file14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = null;
        byte[] byteArray18 = pcxImageParser15.getIccProfileBytes(byteSource16, pcxImagingParameters17);
        java.lang.String str19 = pcxImageParser15.getName();
        java.lang.String str20 = pcxImageParser15.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser22 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder23 = pcxImageParser22.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance25 = pcxImageParser22.getFormatCompliance(byteSource24);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser22.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser15.getMetadata(byteSource21, pcxImagingParameters26);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata28 = pcxImageParser0.getMetadata(file14, pcxImagingParameters26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Pcx-Custom" + "'", str19, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Pcx-Custom" + "'", str20, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertNull(formatCompliance25);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
    }

    @Test
    public void test0196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0196");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage9 = pcxImageParser0.getBufferedImage(byteSource7, pcxImagingParameters8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNotNull(byteOrder6);
    }

    @Test
    public void test0197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0197");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = null;
        byte[] byteArray17 = pcxImageParser14.getIccProfileBytes(byteSource15, pcxImagingParameters16);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser14.getDefaultParameters();
        byte[] byteArray19 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters18);
        java.io.File file20 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray21 = pcxImageParser0.getIccProfileBytes(file20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(byteArray17);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(byteArray19);
    }

    @Test
    public void test0198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0198");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        java.lang.Class<?> wildcardClass31 = pcxImageParser0.getClass();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0199");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = null;
        byte[] byteArray11 = pcxImageParser8.getIccProfileBytes(byteSource9, pcxImagingParameters10);
        java.lang.String str12 = pcxImageParser8.getName();
        java.lang.String str13 = pcxImageParser8.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder16 = pcxImageParser15.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser15.getFormatCompliance(byteSource17);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser15.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata20 = pcxImageParser8.getMetadata(byteSource14, pcxImagingParameters19);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo21 = pcxImageParser0.getImageInfo(byteSource7, pcxImagingParameters19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(byteArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Pcx-Custom" + "'", str12, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNull(formatCompliance18);
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
        org.junit.Assert.assertNull(imageMetadata20);
    }

    @Test
    public void test0200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0200");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.nio.ByteOrder byteOrder4 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder7 = pcxImageParser6.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance9 = pcxImageParser6.getFormatCompliance(byteSource8);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat11 = null;
        boolean boolean12 = pcxImageParser6.canAcceptType(imageFormat11);
        java.lang.String str13 = pcxImageParser6.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource5, pcxImagingParameters14);
        java.awt.image.BufferedImage bufferedImage16 = null;
        java.io.OutputStream outputStream17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters20 = null;
        byte[] byteArray21 = pcxImageParser18.getIccProfileBytes(byteSource19, pcxImagingParameters20);
        java.lang.String str22 = pcxImageParser18.getName();
        java.lang.String str23 = pcxImageParser18.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder26 = pcxImageParser25.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance28 = pcxImageParser25.getFormatCompliance(byteSource27);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = pcxImageParser25.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata30 = pcxImageParser18.getMetadata(byteSource24, pcxImagingParameters29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser32.getMetadata(byteSource33);
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser36 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder37 = pcxImageParser36.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance39 = pcxImageParser36.getFormatCompliance(byteSource38);
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser36.getMetadata(byteSource40);
        boolean boolean43 = pcxImageParser36.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = pcxImageParser36.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata45 = pcxImageParser32.getMetadata(byteSource35, pcxImagingParameters44);
        byte[] byteArray46 = pcxImageParser18.getIccProfileBytes(byteSource31, pcxImagingParameters44);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance48 = pcxImageParser18.getFormatCompliance(byteSource47);
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser50 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = null;
        byte[] byteArray53 = pcxImageParser50.getIccProfileBytes(byteSource51, pcxImagingParameters52);
        java.nio.ByteOrder byteOrder54 = pcxImageParser50.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser56 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder57 = pcxImageParser56.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance59 = pcxImageParser56.getFormatCompliance(byteSource58);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters60 = pcxImageParser56.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat61 = null;
        boolean boolean62 = pcxImageParser56.canAcceptType(imageFormat61);
        java.lang.String str63 = pcxImageParser56.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters64 = pcxImageParser56.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata65 = pcxImageParser50.getMetadata(byteSource55, pcxImagingParameters64);
        byte[] byteArray66 = pcxImageParser18.getIccProfileBytes(byteSource49, pcxImagingParameters64);
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage16, outputStream17, pcxImagingParameters64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNull(formatCompliance9);
        org.junit.Assert.assertNotNull(pcxImagingParameters10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertNull(byteArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Pcx-Custom" + "'", str22, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Pcx-Custom" + "'", str23, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder26);
        org.junit.Assert.assertNull(formatCompliance28);
        org.junit.Assert.assertNotNull(pcxImagingParameters29);
        org.junit.Assert.assertNull(imageMetadata30);
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNull(formatCompliance39);
        org.junit.Assert.assertNull(imageMetadata41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters44);
        org.junit.Assert.assertNull(imageMetadata45);
        org.junit.Assert.assertNull(byteArray46);
        org.junit.Assert.assertNull(formatCompliance48);
        org.junit.Assert.assertNull(byteArray53);
        org.junit.Assert.assertNotNull(byteOrder54);
        org.junit.Assert.assertNotNull(byteOrder57);
        org.junit.Assert.assertNull(formatCompliance59);
        org.junit.Assert.assertNotNull(pcxImagingParameters60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "pcx" + "'", str63, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters64);
        org.junit.Assert.assertNull(imageMetadata65);
        org.junit.Assert.assertNull(byteArray66);
    }

    @Test
    public void test0201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0201");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat37 = null;
        boolean boolean38 = pcxImageParser32.canAcceptType(imageFormat37);
        java.lang.String str39 = pcxImageParser32.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser32.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension41 = pcxImageParser0.getImageSize(byteSource31, pcxImagingParameters40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "pcx" + "'", str39, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
    }

    @Test
    public void test0202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0202");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata4 = pcxImageParser0.getMetadata(byteSource3);
        java.io.File file5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = null;
        byte[] byteArray9 = pcxImageParser6.getIccProfileBytes(byteSource7, pcxImagingParameters8);
        java.lang.String str10 = pcxImageParser6.getName();
        java.lang.String str11 = pcxImageParser6.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder14 = pcxImageParser13.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser13.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata18 = pcxImageParser6.getMetadata(byteSource12, pcxImagingParameters17);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage19 = pcxImageParser0.getBufferedImage(file5, pcxImagingParameters17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata4);
        org.junit.Assert.assertNull(byteArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Pcx-Custom" + "'", str10, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Pcx-Custom" + "'", str11, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder14);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
        org.junit.Assert.assertNull(imageMetadata18);
    }

    @Test
    public void test0203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0203");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        java.io.File file7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser8.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.lang.String str29 = pcxImageParser8.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser8.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension31 = pcxImageParser0.getImageSize(file7, pcxImagingParameters30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
    }

    @Test
    public void test0204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0204");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        java.io.File file7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList8 = pcxImageParser0.getAllBufferedImages(file7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNotNull(byteOrder6);
    }

    @Test
    public void test0205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0205");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str6 = pcxImageParser0.dumpImageFile(byteSource5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
    }

    @Test
    public void test0206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0206");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        boolean boolean6 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = null;
        byte[] byteArray11 = pcxImageParser8.getIccProfileBytes(byteSource9, pcxImagingParameters10);
        java.lang.String str12 = pcxImageParser8.getName();
        java.lang.String str13 = pcxImageParser8.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder16 = pcxImageParser15.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser15.getFormatCompliance(byteSource17);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser15.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata20 = pcxImageParser8.getMetadata(byteSource14, pcxImagingParameters19);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser22 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser22.getMetadata(byteSource23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder27 = pcxImageParser26.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance29 = pcxImageParser26.getFormatCompliance(byteSource28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser26.getMetadata(byteSource30);
        boolean boolean33 = pcxImageParser26.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser26.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser22.getMetadata(byteSource25, pcxImagingParameters34);
        byte[] byteArray36 = pcxImageParser8.getIccProfileBytes(byteSource21, pcxImagingParameters34);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance38 = pcxImageParser8.getFormatCompliance(byteSource37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = null;
        byte[] byteArray43 = pcxImageParser40.getIccProfileBytes(byteSource41, pcxImagingParameters42);
        java.nio.ByteOrder byteOrder44 = pcxImageParser40.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser46 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder47 = pcxImageParser46.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance49 = pcxImageParser46.getFormatCompliance(byteSource48);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters50 = pcxImageParser46.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat51 = null;
        boolean boolean52 = pcxImageParser46.canAcceptType(imageFormat51);
        java.lang.String str53 = pcxImageParser46.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters54 = pcxImageParser46.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata55 = pcxImageParser40.getMetadata(byteSource45, pcxImagingParameters54);
        byte[] byteArray56 = pcxImageParser8.getIccProfileBytes(byteSource39, pcxImagingParameters54);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage57 = pcxImageParser0.getBufferedImage(byteSource7, pcxImagingParameters54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(byteArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Pcx-Custom" + "'", str12, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNull(formatCompliance18);
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
        org.junit.Assert.assertNull(imageMetadata20);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNull(formatCompliance29);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertNull(formatCompliance38);
        org.junit.Assert.assertNull(byteArray43);
        org.junit.Assert.assertNotNull(byteOrder44);
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNull(formatCompliance49);
        org.junit.Assert.assertNotNull(pcxImagingParameters50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "pcx" + "'", str53, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters54);
        org.junit.Assert.assertNull(imageMetadata55);
        org.junit.Assert.assertNull(byteArray56);
    }

    @Test
    public void test0207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0207");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser24.getMetadata(byteSource28);
        boolean boolean31 = pcxImageParser24.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser24.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo33 = pcxImageParser0.getImageInfo(byteSource23, pcxImagingParameters32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
    }

    @Test
    public void test0208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0208");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser4.getMetadata(byteSource8);
        boolean boolean11 = pcxImageParser4.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters12);
        java.io.File file14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList15 = pcxImageParser0.getAllBufferedImages(file14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata13);
    }

    @Test
    public void test0209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0209");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.io.File file4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension5 = pcxImageParser0.getImageSize(file4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
    }

    @Test
    public void test0210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0210");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.nio.ByteOrder byteOrder29 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str31 = pcxImageParser0.dumpImageFile(byteSource30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNotNull(byteOrder29);
    }

    @Test
    public void test0211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0211");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        java.io.File file5 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray6 = pcxImageParser0.getIccProfileBytes(file5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
    }

    @Test
    public void test0212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0212");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        java.io.File file22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser23 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder24 = pcxImageParser23.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance26 = pcxImageParser23.getFormatCompliance(byteSource25);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = pcxImageParser23.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = null;
        byte[] byteArray32 = pcxImageParser29.getIccProfileBytes(byteSource30, pcxImagingParameters31);
        java.lang.String str33 = pcxImageParser29.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser23.getMetadata(byteSource28, pcxImagingParameters34);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo36 = pcxImageParser0.getImageInfo(file22, pcxImagingParameters34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder24);
        org.junit.Assert.assertNull(formatCompliance26);
        org.junit.Assert.assertNotNull(pcxImagingParameters27);
        org.junit.Assert.assertNull(byteArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "pcx" + "'", str33, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
        org.junit.Assert.assertNull(imageMetadata35);
    }

    @Test
    public void test0213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0213");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = null;
        byte[] byteArray35 = pcxImageParser32.getIccProfileBytes(byteSource33, pcxImagingParameters34);
        java.nio.ByteOrder byteOrder36 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser38 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder39 = pcxImageParser38.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance41 = pcxImageParser38.getFormatCompliance(byteSource40);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser38.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat43 = null;
        boolean boolean44 = pcxImageParser38.canAcceptType(imageFormat43);
        java.lang.String str45 = pcxImageParser38.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser38.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser32.getMetadata(byteSource37, pcxImagingParameters46);
        byte[] byteArray48 = pcxImageParser0.getIccProfileBytes(byteSource31, pcxImagingParameters46);
        java.io.File file49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser50 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder51 = pcxImageParser50.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance53 = pcxImageParser50.getFormatCompliance(byteSource52);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters54 = pcxImageParser50.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters55 = pcxImageParser50.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension56 = pcxImageParser0.getImageSize(file49, pcxImagingParameters55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNull(byteArray35);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteOrder39);
        org.junit.Assert.assertNull(formatCompliance41);
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "pcx" + "'", str45, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
        org.junit.Assert.assertNull(imageMetadata47);
        org.junit.Assert.assertNull(byteArray48);
        org.junit.Assert.assertNotNull(byteOrder51);
        org.junit.Assert.assertNull(formatCompliance53);
        org.junit.Assert.assertNotNull(pcxImagingParameters54);
        org.junit.Assert.assertNotNull(pcxImagingParameters55);
    }

    @Test
    public void test0214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0214");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser4.getMetadata(byteSource8);
        boolean boolean11 = pcxImageParser4.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters12);
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser0.canAcceptType(imageFormat14);
        java.io.File file16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder18 = pcxImageParser17.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance20 = pcxImageParser17.getFormatCompliance(byteSource19);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser17.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser23 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = null;
        byte[] byteArray26 = pcxImageParser23.getIccProfileBytes(byteSource24, pcxImagingParameters25);
        java.lang.String str27 = pcxImageParser23.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser23.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser17.getMetadata(byteSource22, pcxImagingParameters28);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser17.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray31 = pcxImageParser0.getIccProfileBytes(file16, pcxImagingParameters30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNull(formatCompliance20);
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(byteArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "pcx" + "'", str27, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
    }

    @Test
    public void test0215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0215");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        java.io.File file7 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean8 = pcxImageParser0.canAcceptExtension(file7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNotNull(byteOrder6);
    }

    @Test
    public void test0216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0216");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        java.io.File file22 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance23 = pcxImageParser0.getFormatCompliance(file22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
    }

    @Test
    public void test0217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0217");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        java.io.PrintWriter printWriter9 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = pcxImageParser0.dumpImageFile(printWriter9, byteSource10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
    }

    @Test
    public void test0218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0218");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance14 = pcxImageParser0.getFormatCompliance(byteSource13);
        java.io.File file15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList16 = pcxImageParser0.getAllBufferedImages(file15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(formatCompliance14);
    }

    @Test
    public void test0219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0219");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = null;
        byte[] byteArray9 = pcxImageParser6.getIccProfileBytes(byteSource7, pcxImagingParameters8);
        java.lang.String str10 = pcxImageParser6.getName();
        java.lang.String str11 = pcxImageParser6.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder14 = pcxImageParser13.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser13.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata18 = pcxImageParser6.getMetadata(byteSource12, pcxImagingParameters17);
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser20 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser20.getMetadata(byteSource21);
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser24.getMetadata(byteSource28);
        boolean boolean31 = pcxImageParser24.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser20.getMetadata(byteSource23, pcxImagingParameters32);
        byte[] byteArray34 = pcxImageParser6.getIccProfileBytes(byteSource19, pcxImagingParameters32);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage35 = pcxImageParser0.getBufferedImage(byteSource5, pcxImagingParameters32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Pcx-Custom" + "'", str10, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Pcx-Custom" + "'", str11, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder14);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
        org.junit.Assert.assertNull(imageMetadata18);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
        org.junit.Assert.assertNull(imageMetadata33);
        org.junit.Assert.assertNull(byteArray34);
    }

    @Test
    public void test0220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0220");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        java.io.File file32 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList33 = pcxImageParser0.getAllBufferedImages(file32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder31);
    }

    @Test
    public void test0221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0221");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.Class<?> wildcardClass5 = pcxImagingParameters4.getClass();
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0222");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.io.PrintWriter printWriter6 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean8 = pcxImageParser0.dumpImageFile(printWriter6, byteSource7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
    }

    @Test
    public void test0223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0223");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance14 = pcxImageParser0.getFormatCompliance(byteSource13);
        java.io.PrintWriter printWriter15 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = pcxImageParser0.dumpImageFile(printWriter15, byteSource16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(formatCompliance14);
    }

    @Test
    public void test0224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0224");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.io.File file29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = null;
        byte[] byteArray33 = pcxImageParser30.getIccProfileBytes(byteSource31, pcxImagingParameters32);
        java.lang.String str34 = pcxImageParser30.getName();
        java.lang.String str35 = pcxImageParser30.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser37 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder38 = pcxImageParser37.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance40 = pcxImageParser37.getFormatCompliance(byteSource39);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = pcxImageParser37.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser30.getMetadata(byteSource36, pcxImagingParameters41);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo43 = pcxImageParser0.getImageInfo(file29, pcxImagingParameters41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Pcx-Custom" + "'", str34, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Pcx-Custom" + "'", str35, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder38);
        org.junit.Assert.assertNull(formatCompliance40);
        org.junit.Assert.assertNotNull(pcxImagingParameters41);
        org.junit.Assert.assertNull(imageMetadata42);
    }

    @Test
    public void test0225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0225");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser0.getDefaultParameters();
        java.io.File file23 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance24 = pcxImageParser0.getFormatCompliance(file23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
    }

    @Test
    public void test0226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0226");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.nio.ByteOrder byteOrder4 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder7 = pcxImageParser6.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance9 = pcxImageParser6.getFormatCompliance(byteSource8);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat11 = null;
        boolean boolean12 = pcxImageParser6.canAcceptType(imageFormat11);
        java.lang.String str13 = pcxImageParser6.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource5, pcxImagingParameters14);
        java.io.File file16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = null;
        byte[] byteArray20 = pcxImageParser17.getIccProfileBytes(byteSource18, pcxImagingParameters19);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser17.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension22 = pcxImageParser0.getImageSize(file16, pcxImagingParameters21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNull(formatCompliance9);
        org.junit.Assert.assertNotNull(pcxImagingParameters10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
    }

    @Test
    public void test0227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0227");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        java.io.File file8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList9 = pcxImageParser0.getAllBufferedImages(file8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0228");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata4 = pcxImageParser0.getMetadata(byteSource3);
        java.lang.Class<?> wildcardClass5 = pcxImageParser0.getClass();
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0229");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.io.File file31 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str32 = pcxImageParser0.dumpImageFile(file31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
    }

    @Test
    public void test0230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0230");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = null;
        byte[] byteArray9 = pcxImageParser6.getIccProfileBytes(byteSource7, pcxImagingParameters8);
        java.lang.String str10 = pcxImageParser6.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource5, pcxImagingParameters11);
        java.io.File file13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo23 = pcxImageParser0.getImageInfo(file13, pcxImagingParameters22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(byteArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "pcx" + "'", str10, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
    }

    @Test
    public void test0231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0231");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.ImageFormat imageFormat1 = null;
        boolean boolean2 = pcxImageParser0.canAcceptType(imageFormat1);
        java.io.File file3 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList4 = pcxImageParser0.getAllBufferedImages(file3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0232");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        java.lang.Class<?> wildcardClass22 = pcxImageParser0.getClass();
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0233");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser4.getMetadata(byteSource8);
        boolean boolean11 = pcxImageParser4.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance15 = pcxImageParser0.getFormatCompliance(byteSource14);
        java.io.File file16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension17 = pcxImageParser0.getImageSize(file16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertNull(formatCompliance15);
    }

    @Test
    public void test0234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0234");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        boolean boolean5 = pcxImageParser0.canAcceptExtension("Pcx-Custom");
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo7 = pcxImageParser0.getImageInfo(byteSource6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0235");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser4.getMetadata(byteSource8);
        boolean boolean11 = pcxImageParser4.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters12);
        java.io.File file14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata17 = pcxImageParser15.getMetadata(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder20 = pcxImageParser19.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance22 = pcxImageParser19.getFormatCompliance(byteSource21);
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser19.getMetadata(byteSource23);
        boolean boolean26 = pcxImageParser19.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = pcxImageParser19.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata28 = pcxImageParser15.getMetadata(byteSource18, pcxImagingParameters27);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo29 = pcxImageParser0.getImageInfo(file14, pcxImagingParameters27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertNull(imageMetadata17);
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNull(formatCompliance22);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters27);
        org.junit.Assert.assertNull(imageMetadata28);
    }

    @Test
    public void test0236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0236");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat2 = null;
        boolean boolean3 = pcxImageParser0.canAcceptType(imageFormat2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser5 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = null;
        byte[] byteArray8 = pcxImageParser5.getIccProfileBytes(byteSource6, pcxImagingParameters7);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = pcxImageParser5.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension10 = pcxImageParser0.getImageSize(byteSource4, pcxImagingParameters9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(byteArray8);
        org.junit.Assert.assertNotNull(pcxImagingParameters9);
    }

    @Test
    public void test0237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0237");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser4.getMetadata(byteSource8);
        boolean boolean11 = pcxImageParser4.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance15 = pcxImageParser0.getFormatCompliance(byteSource14);
        java.io.File file16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser17.getMetadata(byteSource18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder22 = pcxImageParser21.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance24 = pcxImageParser21.getFormatCompliance(byteSource23);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser27 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser27.getMetadata(byteSource28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder32 = pcxImageParser31.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance34 = pcxImageParser31.getFormatCompliance(byteSource33);
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser31.getMetadata(byteSource35);
        boolean boolean38 = pcxImageParser31.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = pcxImageParser31.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser27.getMetadata(byteSource30, pcxImagingParameters39);
        byte[] byteArray41 = pcxImageParser21.getIccProfileBytes(byteSource26, pcxImagingParameters39);
        java.lang.String str42 = pcxImageParser21.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser17.getMetadata(byteSource20, pcxImagingParameters43);
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser46 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder47 = pcxImageParser46.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance49 = pcxImageParser46.getFormatCompliance(byteSource48);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters50 = pcxImageParser46.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser52 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata54 = pcxImageParser52.getMetadata(byteSource53);
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser56 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder57 = pcxImageParser56.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance59 = pcxImageParser56.getFormatCompliance(byteSource58);
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata61 = pcxImageParser56.getMetadata(byteSource60);
        boolean boolean63 = pcxImageParser56.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters64 = pcxImageParser56.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata65 = pcxImageParser52.getMetadata(byteSource55, pcxImagingParameters64);
        byte[] byteArray66 = pcxImageParser46.getIccProfileBytes(byteSource51, pcxImagingParameters64);
        java.lang.String str67 = pcxImageParser46.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters68 = pcxImageParser46.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata69 = pcxImageParser17.getMetadata(byteSource45, pcxImagingParameters68);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray70 = pcxImageParser0.getIccProfileBytes(file16, pcxImagingParameters68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertNull(formatCompliance15);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNull(formatCompliance24);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertNull(formatCompliance34);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters39);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertNull(byteArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Pcx-Custom" + "'", str42, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNull(formatCompliance49);
        org.junit.Assert.assertNotNull(pcxImagingParameters50);
        org.junit.Assert.assertNull(imageMetadata54);
        org.junit.Assert.assertNotNull(byteOrder57);
        org.junit.Assert.assertNull(formatCompliance59);
        org.junit.Assert.assertNull(imageMetadata61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters64);
        org.junit.Assert.assertNull(imageMetadata65);
        org.junit.Assert.assertNull(byteArray66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Pcx-Custom" + "'", str67, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters68);
        org.junit.Assert.assertNull(imageMetadata69);
    }

    @Test
    public void test0238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0238");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        java.io.File file9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser0.getFormatCompliance(file9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(formatCompliance8);
    }

    @Test
    public void test0239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0239");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = pcxImageParser0.dumpImageFile(byteSource6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
    }

    @Test
    public void test0240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0240");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser0.getFormatCompliance(byteSource31);
        java.io.File file33 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension34 = pcxImageParser0.getImageSize(file33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(formatCompliance32);
    }

    @Test
    public void test0241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0241");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata3 = pcxImageParser0.getMetadata(byteSource2);
        java.io.File file4 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser5 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = null;
        byte[] byteArray8 = pcxImageParser5.getIccProfileBytes(byteSource6, pcxImagingParameters7);
        java.lang.String str9 = pcxImageParser5.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = pcxImageParser5.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser5.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray12 = pcxImageParser0.getIccProfileBytes(file4, pcxImagingParameters11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata3);
        org.junit.Assert.assertNull(byteArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "pcx" + "'", str9, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
    }

    @Test
    public void test0242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0242");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        java.io.File file22 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser0.getMetadata(file22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
    }

    @Test
    public void test0243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0243");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata4 = pcxImageParser0.getMetadata(byteSource3);
        java.nio.ByteOrder byteOrder5 = pcxImageParser0.getByteOrder();
        java.io.File file6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = null;
        byte[] byteArray16 = pcxImageParser13.getIccProfileBytes(byteSource14, pcxImagingParameters15);
        java.lang.String str17 = pcxImageParser13.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser7.getMetadata(byteSource12, pcxImagingParameters18);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension20 = pcxImageParser0.getImageSize(file6, pcxImagingParameters18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata4);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(byteArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "pcx" + "'", str17, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
    }

    @Test
    public void test0244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0244");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata4 = pcxImageParser0.getMetadata(byteSource3);
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = null;
        byte[] byteArray11 = pcxImageParser8.getIccProfileBytes(byteSource9, pcxImagingParameters10);
        java.lang.String str12 = pcxImageParser8.getName();
        java.lang.String str13 = pcxImageParser8.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance15 = pcxImageParser8.getFormatCompliance(byteSource14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder18 = pcxImageParser17.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance20 = pcxImageParser17.getFormatCompliance(byteSource19);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser17.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat22 = null;
        boolean boolean23 = pcxImageParser17.canAcceptType(imageFormat22);
        java.lang.String str24 = pcxImageParser17.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser17.getDefaultParameters();
        byte[] byteArray26 = pcxImageParser8.getIccProfileBytes(byteSource16, pcxImagingParameters25);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension27 = pcxImageParser0.getImageSize(byteSource7, pcxImagingParameters25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(byteArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Pcx-Custom" + "'", str12, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance15);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNull(formatCompliance20);
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "pcx" + "'", str24, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
        org.junit.Assert.assertNull(byteArray26);
    }

    @Test
    public void test0245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0245");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        boolean boolean9 = pcxImageParser0.canAcceptExtension("");
        java.io.File file10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList11 = pcxImageParser0.getAllBufferedImages(file10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0246");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        java.lang.Class<?> wildcardClass14 = pcxImageParser0.getClass();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0247");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser23 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = null;
        byte[] byteArray26 = pcxImageParser23.getIccProfileBytes(byteSource24, pcxImagingParameters25);
        java.lang.String str27 = pcxImageParser23.getName();
        java.lang.String str28 = pcxImageParser23.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder31 = pcxImageParser30.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance33 = pcxImageParser30.getFormatCompliance(byteSource32);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser30.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser23.getMetadata(byteSource29, pcxImagingParameters34);
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser37 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata39 = pcxImageParser37.getMetadata(byteSource38);
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser41 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder42 = pcxImageParser41.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance44 = pcxImageParser41.getFormatCompliance(byteSource43);
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser41.getMetadata(byteSource45);
        boolean boolean48 = pcxImageParser41.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters49 = pcxImageParser41.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata50 = pcxImageParser37.getMetadata(byteSource40, pcxImagingParameters49);
        byte[] byteArray51 = pcxImageParser23.getIccProfileBytes(byteSource36, pcxImagingParameters49);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo52 = pcxImageParser0.getImageInfo(byteSource22, pcxImagingParameters49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertNull(byteArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Pcx-Custom" + "'", str27, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Pcx-Custom" + "'", str28, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNull(formatCompliance33);
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertNull(imageMetadata39);
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNull(formatCompliance44);
        org.junit.Assert.assertNull(imageMetadata46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters49);
        org.junit.Assert.assertNull(imageMetadata50);
        org.junit.Assert.assertNull(byteArray51);
    }

    @Test
    public void test0248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0248");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        boolean boolean14 = pcxImageParser0.canAcceptExtension("hi!");
        java.awt.image.BufferedImage bufferedImage15 = null;
        java.io.OutputStream outputStream16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = null;
        byte[] byteArray20 = pcxImageParser17.getIccProfileBytes(byteSource18, pcxImagingParameters19);
        java.lang.String str21 = pcxImageParser17.getName();
        java.lang.String str22 = pcxImageParser17.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser17.getMetadata(byteSource23, pcxImagingParameters28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = null;
        byte[] byteArray34 = pcxImageParser31.getIccProfileBytes(byteSource32, pcxImagingParameters33);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser31.getDefaultParameters();
        byte[] byteArray36 = pcxImageParser17.getIccProfileBytes(byteSource30, pcxImagingParameters35);
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage15, outputStream16, pcxImagingParameters35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Pcx-Custom" + "'", str22, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertNull(byteArray34);
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(byteArray36);
    }

    @Test
    public void test0249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0249");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser4.getMetadata(byteSource8);
        boolean boolean11 = pcxImageParser4.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters12);
        java.io.File file14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder16 = pcxImageParser15.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser15.getFormatCompliance(byteSource17);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser15.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters20 = pcxImageParser15.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo21 = pcxImageParser0.getImageInfo(file14, pcxImagingParameters20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNull(formatCompliance18);
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
        org.junit.Assert.assertNotNull(pcxImagingParameters20);
    }

    @Test
    public void test0250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0250");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        boolean boolean6 = pcxImageParser0.canAcceptExtension("hi!");
        java.lang.String str7 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser9.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo15 = pcxImageParser0.getImageInfo(byteSource8, pcxImagingParameters14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Pcx-Custom" + "'", str7, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
    }

    @Test
    public void test0251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0251");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo7 = pcxImageParser0.getImageInfo(byteSource6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
    }

    @Test
    public void test0252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0252");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.nio.ByteOrder byteOrder4 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder7 = pcxImageParser6.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance9 = pcxImageParser6.getFormatCompliance(byteSource8);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat11 = null;
        boolean boolean12 = pcxImageParser6.canAcceptType(imageFormat11);
        java.lang.String str13 = pcxImageParser6.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource5, pcxImagingParameters14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder18 = pcxImageParser17.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance20 = pcxImageParser17.getFormatCompliance(byteSource19);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser17.getMetadata(byteSource21);
        boolean boolean24 = pcxImageParser17.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser17.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata26 = pcxImageParser0.getMetadata(byteSource16, pcxImagingParameters25);
        java.io.File file27 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata28 = pcxImageParser0.getMetadata(file27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNull(formatCompliance9);
        org.junit.Assert.assertNotNull(pcxImagingParameters10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNull(formatCompliance20);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
        org.junit.Assert.assertNull(imageMetadata26);
    }

    @Test
    public void test0253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0253");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.nio.ByteOrder byteOrder29 = pcxImageParser0.getByteOrder();
        java.io.File file30 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str31 = pcxImageParser0.dumpImageFile(file30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNotNull(byteOrder29);
    }

    @Test
    public void test0254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0254");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        java.awt.image.BufferedImage bufferedImage23 = null;
        java.io.OutputStream outputStream24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder26 = pcxImageParser25.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance28 = pcxImageParser25.getFormatCompliance(byteSource27);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata30 = pcxImageParser25.getMetadata(byteSource29);
        boolean boolean32 = pcxImageParser25.canAcceptExtension("hi!");
        org.apache.commons.imaging.ImageFormat imageFormat33 = null;
        boolean boolean34 = pcxImageParser25.canAcceptType(imageFormat33);
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser36 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser36.getMetadata(byteSource37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder41 = pcxImageParser40.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance43 = pcxImageParser40.getFormatCompliance(byteSource42);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = pcxImageParser40.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser46 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser46.getMetadata(byteSource47);
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser50 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder51 = pcxImageParser50.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance53 = pcxImageParser50.getFormatCompliance(byteSource52);
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata55 = pcxImageParser50.getMetadata(byteSource54);
        boolean boolean57 = pcxImageParser50.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters58 = pcxImageParser50.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata59 = pcxImageParser46.getMetadata(byteSource49, pcxImagingParameters58);
        byte[] byteArray60 = pcxImageParser40.getIccProfileBytes(byteSource45, pcxImagingParameters58);
        java.lang.String str61 = pcxImageParser40.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters62 = pcxImageParser40.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata63 = pcxImageParser36.getMetadata(byteSource39, pcxImagingParameters62);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata64 = pcxImageParser25.getMetadata(byteSource35, pcxImagingParameters62);
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage23, outputStream24, pcxImagingParameters62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertNotNull(byteOrder26);
        org.junit.Assert.assertNull(formatCompliance28);
        org.junit.Assert.assertNull(imageMetadata30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNotNull(byteOrder41);
        org.junit.Assert.assertNull(formatCompliance43);
        org.junit.Assert.assertNotNull(pcxImagingParameters44);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNotNull(byteOrder51);
        org.junit.Assert.assertNull(formatCompliance53);
        org.junit.Assert.assertNull(imageMetadata55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters58);
        org.junit.Assert.assertNull(imageMetadata59);
        org.junit.Assert.assertNull(byteArray60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Pcx-Custom" + "'", str61, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters62);
        org.junit.Assert.assertNull(imageMetadata63);
        org.junit.Assert.assertNull(imageMetadata64);
    }

    @Test
    public void test0255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0255");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource14);
        java.io.File file16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = null;
        byte[] byteArray20 = pcxImageParser17.getIccProfileBytes(byteSource18, pcxImagingParameters19);
        java.lang.String str21 = pcxImageParser17.getName();
        java.lang.String str22 = pcxImageParser17.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser17.getMetadata(byteSource23, pcxImagingParameters28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser31.getMetadata(byteSource32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder36 = pcxImageParser35.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance38 = pcxImageParser35.getFormatCompliance(byteSource37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser35.getMetadata(byteSource39);
        boolean boolean42 = pcxImageParser35.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser35.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser31.getMetadata(byteSource34, pcxImagingParameters43);
        byte[] byteArray45 = pcxImageParser17.getIccProfileBytes(byteSource30, pcxImagingParameters43);
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance47 = pcxImageParser17.getFormatCompliance(byteSource46);
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser49 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters51 = null;
        byte[] byteArray52 = pcxImageParser49.getIccProfileBytes(byteSource50, pcxImagingParameters51);
        java.nio.ByteOrder byteOrder53 = pcxImageParser49.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser55 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder56 = pcxImageParser55.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance58 = pcxImageParser55.getFormatCompliance(byteSource57);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters59 = pcxImageParser55.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat60 = null;
        boolean boolean61 = pcxImageParser55.canAcceptType(imageFormat60);
        java.lang.String str62 = pcxImageParser55.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters63 = pcxImageParser55.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata64 = pcxImageParser49.getMetadata(byteSource54, pcxImagingParameters63);
        byte[] byteArray65 = pcxImageParser17.getIccProfileBytes(byteSource48, pcxImagingParameters63);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension66 = pcxImageParser0.getImageSize(file16, pcxImagingParameters63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Pcx-Custom" + "'", str22, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertNull(imageMetadata33);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNull(formatCompliance38);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertNull(byteArray45);
        org.junit.Assert.assertNull(formatCompliance47);
        org.junit.Assert.assertNull(byteArray52);
        org.junit.Assert.assertNotNull(byteOrder53);
        org.junit.Assert.assertNotNull(byteOrder56);
        org.junit.Assert.assertNull(formatCompliance58);
        org.junit.Assert.assertNotNull(pcxImagingParameters59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "pcx" + "'", str62, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters63);
        org.junit.Assert.assertNull(imageMetadata64);
        org.junit.Assert.assertNull(byteArray65);
    }

    @Test
    public void test0256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0256");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        boolean boolean14 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser0.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = pcxImageParser0.dumpImageFile(byteSource17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(formatCompliance16);
    }

    @Test
    public void test0257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0257");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        java.nio.ByteOrder byteOrder28 = pcxImageParser0.getByteOrder();
        java.io.PrintWriter printWriter29 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean31 = pcxImageParser0.dumpImageFile(printWriter29, byteSource30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(byteOrder28);
    }

    @Test
    public void test0258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0258");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        java.lang.String str8 = pcxImageParser0.getName();
        java.io.File file9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata10 = pcxImageParser0.getMetadata(file9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Pcx-Custom" + "'", str8, "Pcx-Custom");
    }

    @Test
    public void test0259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0259");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.lang.String str4 = pcxImageParser0.getName();
        boolean boolean6 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat13 = null;
        boolean boolean14 = pcxImageParser8.canAcceptType(imageFormat13);
        java.lang.String str15 = pcxImageParser8.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = pcxImageParser8.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo17 = pcxImageParser0.getImageInfo(byteSource7, pcxImagingParameters16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "pcx" + "'", str15, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters16);
    }

    @Test
    public void test0260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0260");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        boolean boolean14 = pcxImageParser0.canAcceptExtension("hi!");
        java.io.File file15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = pcxImageParser0.dumpImageFile(file15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0261");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        boolean boolean14 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList16 = pcxImageParser0.getAllBufferedImages(byteSource15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0262");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo9 = pcxImageParser0.getImageInfo(byteSource8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNull(imageMetadata7);
    }

    @Test
    public void test0263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0263");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata3 = pcxImageParser0.getMetadata(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str5 = pcxImageParser0.dumpImageFile(byteSource4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata3);
    }

    @Test
    public void test0264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0264");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser0.getFormatCompliance(byteSource5);
        java.io.File file7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser0.getMetadata(file7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance6);
    }

    @Test
    public void test0265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0265");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder30 = pcxImageParser29.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser29.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser35.getMetadata(byteSource36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder40 = pcxImageParser39.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance42 = pcxImageParser39.getFormatCompliance(byteSource41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser39.getMetadata(byteSource43);
        boolean boolean46 = pcxImageParser39.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = pcxImageParser39.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser35.getMetadata(byteSource38, pcxImagingParameters47);
        byte[] byteArray49 = pcxImageParser29.getIccProfileBytes(byteSource34, pcxImagingParameters47);
        java.lang.String str50 = pcxImageParser29.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters51 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata52 = pcxImageParser0.getMetadata(byteSource28, pcxImagingParameters51);
        java.lang.Class<?> wildcardClass53 = pcxImageParser0.getClass();
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(byteOrder30);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNull(formatCompliance42);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters47);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNull(byteArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Pcx-Custom" + "'", str50, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters51);
        org.junit.Assert.assertNull(imageMetadata52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0266");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        java.io.File file7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(file7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNotNull(byteOrder6);
    }

    @Test
    public void test0267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0267");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        java.lang.String str8 = pcxImageParser0.getDefaultExtension();
        java.io.File file9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata10 = pcxImageParser0.getMetadata(file9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "pcx" + "'", str8, "pcx");
    }

    @Test
    public void test0268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0268");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser5 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser5.getMetadata(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata14 = pcxImageParser9.getMetadata(byteSource13);
        boolean boolean16 = pcxImageParser9.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata18 = pcxImageParser5.getMetadata(byteSource8, pcxImagingParameters17);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage19 = pcxImageParser0.getBufferedImage(byteSource4, pcxImagingParameters17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNull(imageMetadata14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
        org.junit.Assert.assertNull(imageMetadata18);
    }

    @Test
    public void test0269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0269");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        java.nio.ByteOrder byteOrder9 = pcxImageParser0.getByteOrder();
        java.io.File file10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder12 = pcxImageParser11.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance14 = pcxImageParser11.getFormatCompliance(byteSource13);
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser11.getMetadata(byteSource15);
        boolean boolean18 = pcxImageParser11.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser11.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(file10, pcxImagingParameters19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNotNull(byteOrder12);
        org.junit.Assert.assertNull(formatCompliance14);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
    }

    @Test
    public void test0270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0270");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser23 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser23.getMetadata(byteSource24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser27 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder28 = pcxImageParser27.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser27.getFormatCompliance(byteSource29);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser27.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser33.getMetadata(byteSource34);
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser37 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder38 = pcxImageParser37.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance40 = pcxImageParser37.getFormatCompliance(byteSource39);
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser37.getMetadata(byteSource41);
        boolean boolean44 = pcxImageParser37.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser37.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser33.getMetadata(byteSource36, pcxImagingParameters45);
        byte[] byteArray47 = pcxImageParser27.getIccProfileBytes(byteSource32, pcxImagingParameters45);
        java.lang.String str48 = pcxImageParser27.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters49 = pcxImageParser27.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata50 = pcxImageParser23.getMetadata(byteSource26, pcxImagingParameters49);
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser52 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder53 = pcxImageParser52.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance55 = pcxImageParser52.getFormatCompliance(byteSource54);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters56 = pcxImageParser52.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser58 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata60 = pcxImageParser58.getMetadata(byteSource59);
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser62 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder63 = pcxImageParser62.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource64 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance65 = pcxImageParser62.getFormatCompliance(byteSource64);
        org.apache.commons.imaging.bytesource.ByteSource byteSource66 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata67 = pcxImageParser62.getMetadata(byteSource66);
        boolean boolean69 = pcxImageParser62.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters70 = pcxImageParser62.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata71 = pcxImageParser58.getMetadata(byteSource61, pcxImagingParameters70);
        byte[] byteArray72 = pcxImageParser52.getIccProfileBytes(byteSource57, pcxImagingParameters70);
        java.lang.String str73 = pcxImageParser52.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters74 = pcxImageParser52.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata75 = pcxImageParser23.getMetadata(byteSource51, pcxImagingParameters74);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension76 = pcxImageParser0.getImageSize(byteSource22, pcxImagingParameters74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertNotNull(byteOrder28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertNotNull(byteOrder38);
        org.junit.Assert.assertNull(formatCompliance40);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertNull(imageMetadata46);
        org.junit.Assert.assertNull(byteArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Pcx-Custom" + "'", str48, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters49);
        org.junit.Assert.assertNull(imageMetadata50);
        org.junit.Assert.assertNotNull(byteOrder53);
        org.junit.Assert.assertNull(formatCompliance55);
        org.junit.Assert.assertNotNull(pcxImagingParameters56);
        org.junit.Assert.assertNull(imageMetadata60);
        org.junit.Assert.assertNotNull(byteOrder63);
        org.junit.Assert.assertNull(formatCompliance65);
        org.junit.Assert.assertNull(imageMetadata67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters70);
        org.junit.Assert.assertNull(imageMetadata71);
        org.junit.Assert.assertNull(byteArray72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "Pcx-Custom" + "'", str73, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters74);
        org.junit.Assert.assertNull(imageMetadata75);
    }

    @Test
    public void test0271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0271");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser0.getMetadata(byteSource32);
        java.io.File file34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder36 = pcxImageParser35.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance38 = pcxImageParser35.getFormatCompliance(byteSource37);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = pcxImageParser35.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser41 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata43 = pcxImageParser41.getMetadata(byteSource42);
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser45 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder46 = pcxImageParser45.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance48 = pcxImageParser45.getFormatCompliance(byteSource47);
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata50 = pcxImageParser45.getMetadata(byteSource49);
        boolean boolean52 = pcxImageParser45.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters53 = pcxImageParser45.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata54 = pcxImageParser41.getMetadata(byteSource44, pcxImagingParameters53);
        byte[] byteArray55 = pcxImageParser35.getIccProfileBytes(byteSource40, pcxImagingParameters53);
        java.lang.String str56 = pcxImageParser35.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters57 = pcxImageParser35.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata58 = pcxImageParser0.getMetadata(file34, pcxImagingParameters57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNull(imageMetadata33);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNull(formatCompliance38);
        org.junit.Assert.assertNotNull(pcxImagingParameters39);
        org.junit.Assert.assertNull(imageMetadata43);
        org.junit.Assert.assertNotNull(byteOrder46);
        org.junit.Assert.assertNull(formatCompliance48);
        org.junit.Assert.assertNull(imageMetadata50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters53);
        org.junit.Assert.assertNull(imageMetadata54);
        org.junit.Assert.assertNull(byteArray55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Pcx-Custom" + "'", str56, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters57);
    }

    @Test
    public void test0272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0272");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        java.io.File file5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser0.getFormatCompliance(file5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
    }

    @Test
    public void test0273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0273");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        java.io.File file3 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension4 = pcxImageParser0.getImageSize(file3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
    }

    @Test
    public void test0274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0274");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.awt.image.BufferedImage bufferedImage4 = null;
        java.io.OutputStream outputStream5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder7 = pcxImageParser6.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance9 = pcxImageParser6.getFormatCompliance(byteSource8);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser12 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata14 = pcxImageParser12.getMetadata(byteSource13);
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder17 = pcxImageParser16.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance19 = pcxImageParser16.getFormatCompliance(byteSource18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata21 = pcxImageParser16.getMetadata(byteSource20);
        boolean boolean23 = pcxImageParser16.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser12.getMetadata(byteSource15, pcxImagingParameters24);
        byte[] byteArray26 = pcxImageParser6.getIccProfileBytes(byteSource11, pcxImagingParameters24);
        java.lang.String str27 = pcxImageParser6.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser6.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage4, outputStream5, pcxImagingParameters28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNull(formatCompliance9);
        org.junit.Assert.assertNotNull(pcxImagingParameters10);
        org.junit.Assert.assertNull(imageMetadata14);
        org.junit.Assert.assertNotNull(byteOrder17);
        org.junit.Assert.assertNull(formatCompliance19);
        org.junit.Assert.assertNull(imageMetadata21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters24);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertNull(byteArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Pcx-Custom" + "'", str27, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
    }

    @Test
    public void test0275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0275");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat37 = null;
        boolean boolean38 = pcxImageParser32.canAcceptType(imageFormat37);
        java.lang.String str39 = pcxImageParser32.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser32.getDefaultParameters();
        byte[] byteArray41 = pcxImageParser0.getIccProfileBytes(byteSource31, pcxImagingParameters40);
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo43 = pcxImageParser0.getImageInfo(byteSource42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "pcx" + "'", str39, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(byteArray41);
    }

    @Test
    public void test0276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0276");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser4.getMetadata(byteSource8);
        boolean boolean11 = pcxImageParser4.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = null;
        byte[] byteArray18 = pcxImageParser15.getIccProfileBytes(byteSource16, pcxImagingParameters17);
        java.nio.ByteOrder byteOrder19 = pcxImageParser15.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder22 = pcxImageParser21.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance24 = pcxImageParser21.getFormatCompliance(byteSource23);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat26 = null;
        boolean boolean27 = pcxImageParser21.canAcceptType(imageFormat26);
        java.lang.String str28 = pcxImageParser21.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata30 = pcxImageParser15.getMetadata(byteSource20, pcxImagingParameters29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser32.getMetadata(byteSource36);
        boolean boolean39 = pcxImageParser32.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser15.getMetadata(byteSource31, pcxImagingParameters40);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage42 = pcxImageParser0.getBufferedImage(byteSource14, pcxImagingParameters40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNull(formatCompliance24);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "pcx" + "'", str28, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters29);
        org.junit.Assert.assertNull(imageMetadata30);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(imageMetadata41);
    }

    @Test
    public void test0277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0277");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.nio.ByteOrder byteOrder4 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder7 = pcxImageParser6.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance9 = pcxImageParser6.getFormatCompliance(byteSource8);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat11 = null;
        boolean boolean12 = pcxImageParser6.canAcceptType(imageFormat11);
        java.lang.String str13 = pcxImageParser6.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource5, pcxImagingParameters14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder18 = pcxImageParser17.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance20 = pcxImageParser17.getFormatCompliance(byteSource19);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser17.getMetadata(byteSource21);
        boolean boolean24 = pcxImageParser17.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser17.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata26 = pcxImageParser0.getMetadata(byteSource16, pcxImagingParameters25);
        java.io.File file27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = null;
        byte[] byteArray31 = pcxImageParser28.getIccProfileBytes(byteSource29, pcxImagingParameters30);
        java.lang.String str32 = pcxImageParser28.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser28.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo34 = pcxImageParser0.getImageInfo(file27, pcxImagingParameters33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNull(formatCompliance9);
        org.junit.Assert.assertNotNull(pcxImagingParameters10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNull(formatCompliance20);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
        org.junit.Assert.assertNull(imageMetadata26);
        org.junit.Assert.assertNull(byteArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "pcx" + "'", str32, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
    }

    @Test
    public void test0278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0278");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        java.lang.String str8 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = null;
        byte[] byteArray13 = pcxImageParser10.getIccProfileBytes(byteSource11, pcxImagingParameters12);
        java.lang.String str14 = pcxImageParser10.getName();
        java.lang.String str15 = pcxImageParser10.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder18 = pcxImageParser17.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance20 = pcxImageParser17.getFormatCompliance(byteSource19);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser17.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser10.getMetadata(byteSource16, pcxImagingParameters21);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage23 = pcxImageParser0.getBufferedImage(byteSource9, pcxImagingParameters21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Pcx-Custom" + "'", str8, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Pcx-Custom" + "'", str14, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Pcx-Custom" + "'", str15, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNull(formatCompliance20);
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
    }

    @Test
    public void test0279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0279");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        java.io.File file22 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean23 = pcxImageParser0.canAcceptExtension(file22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
    }

    @Test
    public void test0280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0280");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.io.File file5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder7 = pcxImageParser6.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance9 = pcxImageParser6.getFormatCompliance(byteSource8);
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata11 = pcxImageParser6.getMetadata(byteSource10);
        boolean boolean13 = pcxImageParser6.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser6.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension15 = pcxImageParser0.getImageSize(file5, pcxImagingParameters14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNull(formatCompliance9);
        org.junit.Assert.assertNull(imageMetadata11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
    }

    @Test
    public void test0281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0281");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        java.io.File file6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(file6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
    }

    @Test
    public void test0282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0282");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = null;
        byte[] byteArray9 = pcxImageParser6.getIccProfileBytes(byteSource7, pcxImagingParameters8);
        java.lang.String str10 = pcxImageParser6.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource5, pcxImagingParameters11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser0.getDefaultParameters();
        java.io.File file14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = null;
        byte[] byteArray18 = pcxImageParser15.getIccProfileBytes(byteSource16, pcxImagingParameters17);
        java.nio.ByteOrder byteOrder19 = pcxImageParser15.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder22 = pcxImageParser21.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance24 = pcxImageParser21.getFormatCompliance(byteSource23);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat26 = null;
        boolean boolean27 = pcxImageParser21.canAcceptType(imageFormat26);
        java.lang.String str28 = pcxImageParser21.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata30 = pcxImageParser15.getMetadata(byteSource20, pcxImagingParameters29);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage31 = pcxImageParser0.getBufferedImage(file14, pcxImagingParameters29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(byteArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "pcx" + "'", str10, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNull(formatCompliance24);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "pcx" + "'", str28, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters29);
        org.junit.Assert.assertNull(imageMetadata30);
    }

    @Test
    public void test0283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0283");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance5 = pcxImageParser0.getFormatCompliance(byteSource4);
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = pcxImageParser0.dumpImageFile(byteSource6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(formatCompliance5);
    }

    @Test
    public void test0284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0284");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        java.nio.ByteOrder byteOrder28 = pcxImageParser0.getByteOrder();
        java.io.File file29 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str30 = pcxImageParser0.dumpImageFile(file29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(byteOrder28);
    }

    @Test
    public void test0285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0285");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo7 = pcxImageParser0.getImageInfo(byteSource6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
    }

    @Test
    public void test0286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0286");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat37 = null;
        boolean boolean38 = pcxImageParser32.canAcceptType(imageFormat37);
        java.lang.String str39 = pcxImageParser32.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser32.getDefaultParameters();
        byte[] byteArray41 = pcxImageParser0.getIccProfileBytes(byteSource31, pcxImagingParameters40);
        java.io.File file42 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray43 = pcxImageParser0.getIccProfileBytes(file42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "pcx" + "'", str39, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(byteArray41);
    }

    @Test
    public void test0287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0287");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.nio.ByteOrder byteOrder4 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder7 = pcxImageParser6.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance9 = pcxImageParser6.getFormatCompliance(byteSource8);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat11 = null;
        boolean boolean12 = pcxImageParser6.canAcceptType(imageFormat11);
        java.lang.String str13 = pcxImageParser6.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource5, pcxImagingParameters14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder18 = pcxImageParser17.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance20 = pcxImageParser17.getFormatCompliance(byteSource19);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser17.getMetadata(byteSource21);
        boolean boolean24 = pcxImageParser17.canAcceptExtension("hi!");
        org.apache.commons.imaging.ImageFormat imageFormat25 = null;
        boolean boolean26 = pcxImageParser17.canAcceptType(imageFormat25);
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata30 = pcxImageParser28.getMetadata(byteSource29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser38 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser38.getMetadata(byteSource39);
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser42 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder43 = pcxImageParser42.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance45 = pcxImageParser42.getFormatCompliance(byteSource44);
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser42.getMetadata(byteSource46);
        boolean boolean49 = pcxImageParser42.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters50 = pcxImageParser42.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata51 = pcxImageParser38.getMetadata(byteSource41, pcxImagingParameters50);
        byte[] byteArray52 = pcxImageParser32.getIccProfileBytes(byteSource37, pcxImagingParameters50);
        java.lang.String str53 = pcxImageParser32.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters54 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata55 = pcxImageParser28.getMetadata(byteSource31, pcxImagingParameters54);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata56 = pcxImageParser17.getMetadata(byteSource27, pcxImagingParameters54);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage57 = pcxImageParser0.getBufferedImage(byteSource16, pcxImagingParameters54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNull(formatCompliance9);
        org.junit.Assert.assertNotNull(pcxImagingParameters10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNull(formatCompliance20);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(imageMetadata30);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNull(formatCompliance45);
        org.junit.Assert.assertNull(imageMetadata47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters50);
        org.junit.Assert.assertNull(imageMetadata51);
        org.junit.Assert.assertNull(byteArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Pcx-Custom" + "'", str53, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters54);
        org.junit.Assert.assertNull(imageMetadata55);
        org.junit.Assert.assertNull(imageMetadata56);
    }

    @Test
    public void test0288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0288");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        java.io.File file6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = null;
        byte[] byteArray10 = pcxImageParser7.getIccProfileBytes(byteSource8, pcxImagingParameters9);
        java.lang.String str11 = pcxImageParser7.getName();
        java.lang.String str12 = pcxImageParser7.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser7.getMetadata(byteSource13, pcxImagingParameters18);
        java.lang.String str20 = pcxImageParser7.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser7.getMetadata(byteSource21);
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = null;
        byte[] byteArray27 = pcxImageParser24.getIccProfileBytes(byteSource25, pcxImagingParameters26);
        java.lang.String str28 = pcxImageParser24.getName();
        java.lang.String str29 = pcxImageParser24.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder32 = pcxImageParser31.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance34 = pcxImageParser31.getFormatCompliance(byteSource33);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser31.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser24.getMetadata(byteSource30, pcxImagingParameters35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser38 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = null;
        byte[] byteArray41 = pcxImageParser38.getIccProfileBytes(byteSource39, pcxImagingParameters40);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser38.getDefaultParameters();
        byte[] byteArray43 = pcxImageParser24.getIccProfileBytes(byteSource37, pcxImagingParameters42);
        byte[] byteArray44 = pcxImageParser7.getIccProfileBytes(byteSource23, pcxImagingParameters42);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage45 = pcxImageParser0.getBufferedImage(file6, pcxImagingParameters42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNull(byteArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Pcx-Custom" + "'", str11, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Pcx-Custom" + "'", str12, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Pcx-Custom" + "'", str20, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNull(byteArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Pcx-Custom" + "'", str28, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertNull(formatCompliance34);
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertNull(byteArray41);
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertNull(byteArray43);
        org.junit.Assert.assertNull(byteArray44);
    }

    @Test
    public void test0289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0289");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        java.io.File file7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = null;
        byte[] byteArray11 = pcxImageParser8.getIccProfileBytes(byteSource9, pcxImagingParameters10);
        java.lang.String str12 = pcxImageParser8.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata14 = pcxImageParser8.getMetadata(byteSource13);
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser8.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser8.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension18 = pcxImageParser0.getImageSize(file7, pcxImagingParameters17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(byteArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Pcx-Custom" + "'", str12, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata14);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
    }

    @Test
    public void test0290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0290");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList33 = pcxImageParser0.getAllBufferedImages(byteSource32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder31);
    }

    @Test
    public void test0291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0291");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.io.File file5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder7 = pcxImageParser6.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance9 = pcxImageParser6.getFormatCompliance(byteSource8);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser12 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = null;
        byte[] byteArray15 = pcxImageParser12.getIccProfileBytes(byteSource13, pcxImagingParameters14);
        java.lang.String str16 = pcxImageParser12.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser12.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata18 = pcxImageParser6.getMetadata(byteSource11, pcxImagingParameters17);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser6.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo20 = pcxImageParser0.getImageInfo(file5, pcxImagingParameters19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNull(formatCompliance9);
        org.junit.Assert.assertNotNull(pcxImagingParameters10);
        org.junit.Assert.assertNull(byteArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "pcx" + "'", str16, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
        org.junit.Assert.assertNull(imageMetadata18);
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
    }

    @Test
    public void test0292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0292");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = null;
        byte[] byteArray20 = pcxImageParser17.getIccProfileBytes(byteSource18, pcxImagingParameters19);
        java.lang.String str21 = pcxImageParser17.getName();
        java.lang.String str22 = pcxImageParser17.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser17.getMetadata(byteSource23, pcxImagingParameters28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = null;
        byte[] byteArray34 = pcxImageParser31.getIccProfileBytes(byteSource32, pcxImagingParameters33);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser31.getDefaultParameters();
        byte[] byteArray36 = pcxImageParser17.getIccProfileBytes(byteSource30, pcxImagingParameters35);
        byte[] byteArray37 = pcxImageParser0.getIccProfileBytes(byteSource16, pcxImagingParameters35);
        java.io.File file38 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension39 = pcxImageParser0.getImageSize(file38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Pcx-Custom" + "'", str22, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertNull(byteArray34);
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertNull(byteArray37);
    }

    @Test
    public void test0293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0293");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser9.canAcceptType(imageFormat14);
        java.lang.String str16 = pcxImageParser9.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser9.getDefaultParameters();
        byte[] byteArray18 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters17);
        org.apache.commons.imaging.ImageFormat imageFormat19 = null;
        boolean boolean20 = pcxImageParser0.canAcceptType(imageFormat19);
        java.io.File file21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser22 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder23 = pcxImageParser22.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance25 = pcxImageParser22.getFormatCompliance(byteSource24);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser22.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo27 = pcxImageParser0.getImageInfo(file21, pcxImagingParameters26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "pcx" + "'", str16, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertNull(formatCompliance25);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
    }

    @Test
    public void test0294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0294");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        java.nio.ByteOrder byteOrder2 = pcxImageParser0.getByteOrder();
        java.awt.image.BufferedImage bufferedImage3 = null;
        java.io.OutputStream outputStream4 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser5 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = null;
        byte[] byteArray8 = pcxImageParser5.getIccProfileBytes(byteSource6, pcxImagingParameters7);
        java.lang.String str9 = pcxImageParser5.getName();
        java.lang.String str10 = pcxImageParser5.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser12 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder13 = pcxImageParser12.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance15 = pcxImageParser12.getFormatCompliance(byteSource14);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = pcxImageParser12.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata17 = pcxImageParser5.getMetadata(byteSource11, pcxImagingParameters16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata21 = pcxImageParser19.getMetadata(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser23 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder24 = pcxImageParser23.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance26 = pcxImageParser23.getFormatCompliance(byteSource25);
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata28 = pcxImageParser23.getMetadata(byteSource27);
        boolean boolean30 = pcxImageParser23.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser23.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser19.getMetadata(byteSource22, pcxImagingParameters31);
        byte[] byteArray33 = pcxImageParser5.getIccProfileBytes(byteSource18, pcxImagingParameters31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser5.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser37 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = null;
        byte[] byteArray40 = pcxImageParser37.getIccProfileBytes(byteSource38, pcxImagingParameters39);
        java.nio.ByteOrder byteOrder41 = pcxImageParser37.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser43 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder44 = pcxImageParser43.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance46 = pcxImageParser43.getFormatCompliance(byteSource45);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = pcxImageParser43.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat48 = null;
        boolean boolean49 = pcxImageParser43.canAcceptType(imageFormat48);
        java.lang.String str50 = pcxImageParser43.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters51 = pcxImageParser43.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata52 = pcxImageParser37.getMetadata(byteSource42, pcxImagingParameters51);
        byte[] byteArray53 = pcxImageParser5.getIccProfileBytes(byteSource36, pcxImagingParameters51);
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage3, outputStream4, pcxImagingParameters51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertNull(byteArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Pcx-Custom" + "'", str9, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Pcx-Custom" + "'", str10, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNull(formatCompliance15);
        org.junit.Assert.assertNotNull(pcxImagingParameters16);
        org.junit.Assert.assertNull(imageMetadata17);
        org.junit.Assert.assertNull(imageMetadata21);
        org.junit.Assert.assertNotNull(byteOrder24);
        org.junit.Assert.assertNull(formatCompliance26);
        org.junit.Assert.assertNull(imageMetadata28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNull(byteArray40);
        org.junit.Assert.assertNotNull(byteOrder41);
        org.junit.Assert.assertNotNull(byteOrder44);
        org.junit.Assert.assertNull(formatCompliance46);
        org.junit.Assert.assertNotNull(pcxImagingParameters47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "pcx" + "'", str50, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters51);
        org.junit.Assert.assertNull(imageMetadata52);
        org.junit.Assert.assertNull(byteArray53);
    }

    @Test
    public void test0295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0295");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.awt.image.BufferedImage bufferedImage4 = null;
        java.io.OutputStream outputStream5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder7 = pcxImageParser6.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance9 = pcxImageParser6.getFormatCompliance(byteSource8);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser6.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage4, outputStream5, pcxImagingParameters12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNull(formatCompliance9);
        org.junit.Assert.assertNotNull(pcxImagingParameters10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
    }

    @Test
    public void test0296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0296");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata4 = pcxImageParser0.getMetadata(byteSource3);
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder7 = pcxImageParser6.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance9 = pcxImageParser6.getFormatCompliance(byteSource8);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser12 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata14 = pcxImageParser12.getMetadata(byteSource13);
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder17 = pcxImageParser16.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance19 = pcxImageParser16.getFormatCompliance(byteSource18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata21 = pcxImageParser16.getMetadata(byteSource20);
        boolean boolean23 = pcxImageParser16.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser12.getMetadata(byteSource15, pcxImagingParameters24);
        byte[] byteArray26 = pcxImageParser6.getIccProfileBytes(byteSource11, pcxImagingParameters24);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension27 = pcxImageParser0.getImageSize(byteSource5, pcxImagingParameters24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata4);
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNull(formatCompliance9);
        org.junit.Assert.assertNotNull(pcxImagingParameters10);
        org.junit.Assert.assertNull(imageMetadata14);
        org.junit.Assert.assertNotNull(byteOrder17);
        org.junit.Assert.assertNull(formatCompliance19);
        org.junit.Assert.assertNull(imageMetadata21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters24);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertNull(byteArray26);
    }

    @Test
    public void test0297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0297");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        boolean boolean14 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser0.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters20 = null;
        byte[] byteArray21 = pcxImageParser18.getIccProfileBytes(byteSource19, pcxImagingParameters20);
        java.nio.ByteOrder byteOrder22 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser24.canAcceptType(imageFormat29);
        java.lang.String str31 = pcxImageParser24.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser18.getMetadata(byteSource23, pcxImagingParameters32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder36 = pcxImageParser35.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance38 = pcxImageParser35.getFormatCompliance(byteSource37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser35.getMetadata(byteSource39);
        boolean boolean42 = pcxImageParser35.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser35.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser18.getMetadata(byteSource34, pcxImagingParameters43);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo45 = pcxImageParser0.getImageInfo(byteSource17, pcxImagingParameters43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNull(byteArray21);
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "pcx" + "'", str31, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
        org.junit.Assert.assertNull(imageMetadata33);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNull(formatCompliance38);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertNull(imageMetadata44);
    }

    @Test
    public void test0298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0298");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata4 = pcxImageParser0.getMetadata(byteSource3);
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        java.awt.image.BufferedImage bufferedImage6 = null;
        java.io.OutputStream outputStream7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder12 = pcxImageParser11.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance14 = pcxImageParser11.getFormatCompliance(byteSource13);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = pcxImageParser11.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser17.getMetadata(byteSource18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder22 = pcxImageParser21.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance24 = pcxImageParser21.getFormatCompliance(byteSource23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata26 = pcxImageParser21.getMetadata(byteSource25);
        boolean boolean28 = pcxImageParser21.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata30 = pcxImageParser17.getMetadata(byteSource20, pcxImagingParameters29);
        byte[] byteArray31 = pcxImageParser11.getIccProfileBytes(byteSource16, pcxImagingParameters29);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser8.getMetadata(byteSource10, pcxImagingParameters29);
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage6, outputStream7, pcxImagingParameters29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNotNull(byteOrder12);
        org.junit.Assert.assertNull(formatCompliance14);
        org.junit.Assert.assertNotNull(pcxImagingParameters15);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNull(formatCompliance24);
        org.junit.Assert.assertNull(imageMetadata26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters29);
        org.junit.Assert.assertNull(imageMetadata30);
        org.junit.Assert.assertNull(byteArray31);
        org.junit.Assert.assertNull(imageMetadata32);
    }

    @Test
    public void test0299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0299");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser9.canAcceptType(imageFormat14);
        java.lang.String str16 = pcxImageParser9.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser9.getDefaultParameters();
        byte[] byteArray18 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters17);
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList20 = pcxImageParser0.getAllBufferedImages(byteSource19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "pcx" + "'", str16, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
        org.junit.Assert.assertNull(byteArray18);
    }

    @Test
    public void test0300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0300");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.lang.String str4 = pcxImageParser0.getName();
        boolean boolean6 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = null;
        byte[] byteArray11 = pcxImageParser8.getIccProfileBytes(byteSource9, pcxImagingParameters10);
        java.lang.String str12 = pcxImageParser8.getName();
        java.lang.String str13 = pcxImageParser8.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder16 = pcxImageParser15.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser15.getFormatCompliance(byteSource17);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser15.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata20 = pcxImageParser8.getMetadata(byteSource14, pcxImagingParameters19);
        java.lang.String str21 = pcxImageParser8.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser8.getMetadata(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = null;
        byte[] byteArray28 = pcxImageParser25.getIccProfileBytes(byteSource26, pcxImagingParameters27);
        java.lang.String str29 = pcxImageParser25.getName();
        java.lang.String str30 = pcxImageParser25.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser25.getMetadata(byteSource31, pcxImagingParameters36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = null;
        byte[] byteArray42 = pcxImageParser39.getIccProfileBytes(byteSource40, pcxImagingParameters41);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser39.getDefaultParameters();
        byte[] byteArray44 = pcxImageParser25.getIccProfileBytes(byteSource38, pcxImagingParameters43);
        byte[] byteArray45 = pcxImageParser8.getIccProfileBytes(byteSource24, pcxImagingParameters43);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension46 = pcxImageParser0.getImageSize(byteSource7, pcxImagingParameters43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(byteArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Pcx-Custom" + "'", str12, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNull(formatCompliance18);
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
        org.junit.Assert.assertNull(imageMetadata20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Pcx-Custom" + "'", str30, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertNull(byteArray42);
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertNull(byteArray44);
        org.junit.Assert.assertNull(byteArray45);
    }

    @Test
    public void test0301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0301");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser0.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder35 = pcxImageParser34.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance37 = pcxImageParser34.getFormatCompliance(byteSource36);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser34.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo39 = pcxImageParser0.getImageInfo(byteSource33, pcxImagingParameters38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNull(formatCompliance37);
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
    }

    @Test
    public void test0302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0302");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        java.awt.image.BufferedImage bufferedImage8 = null;
        java.io.OutputStream outputStream9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder14 = pcxImageParser13.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser13.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata21 = pcxImageParser19.getMetadata(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser23 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder24 = pcxImageParser23.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance26 = pcxImageParser23.getFormatCompliance(byteSource25);
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata28 = pcxImageParser23.getMetadata(byteSource27);
        boolean boolean30 = pcxImageParser23.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser23.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser19.getMetadata(byteSource22, pcxImagingParameters31);
        byte[] byteArray33 = pcxImageParser13.getIccProfileBytes(byteSource18, pcxImagingParameters31);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser10.getMetadata(byteSource12, pcxImagingParameters31);
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage8, outputStream9, pcxImagingParameters31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNotNull(byteOrder14);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
        org.junit.Assert.assertNull(imageMetadata21);
        org.junit.Assert.assertNotNull(byteOrder24);
        org.junit.Assert.assertNull(formatCompliance26);
        org.junit.Assert.assertNull(imageMetadata28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertNull(imageMetadata34);
    }

    @Test
    public void test0303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0303");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.io.File file13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = null;
        byte[] byteArray17 = pcxImageParser14.getIccProfileBytes(byteSource15, pcxImagingParameters16);
        java.lang.String str18 = pcxImageParser14.getName();
        java.lang.String str19 = pcxImageParser14.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder22 = pcxImageParser21.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance24 = pcxImageParser21.getFormatCompliance(byteSource23);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata26 = pcxImageParser14.getMetadata(byteSource20, pcxImagingParameters25);
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata30 = pcxImageParser28.getMetadata(byteSource29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser32.getMetadata(byteSource36);
        boolean boolean39 = pcxImageParser32.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser28.getMetadata(byteSource31, pcxImagingParameters40);
        byte[] byteArray42 = pcxImageParser14.getIccProfileBytes(byteSource27, pcxImagingParameters40);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance44 = pcxImageParser14.getFormatCompliance(byteSource43);
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser46 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = null;
        byte[] byteArray49 = pcxImageParser46.getIccProfileBytes(byteSource47, pcxImagingParameters48);
        java.nio.ByteOrder byteOrder50 = pcxImageParser46.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser52 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder53 = pcxImageParser52.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance55 = pcxImageParser52.getFormatCompliance(byteSource54);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters56 = pcxImageParser52.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat57 = null;
        boolean boolean58 = pcxImageParser52.canAcceptType(imageFormat57);
        java.lang.String str59 = pcxImageParser52.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters60 = pcxImageParser52.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata61 = pcxImageParser46.getMetadata(byteSource51, pcxImagingParameters60);
        byte[] byteArray62 = pcxImageParser14.getIccProfileBytes(byteSource45, pcxImagingParameters60);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage63 = pcxImageParser0.getBufferedImage(file13, pcxImagingParameters60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(byteArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Pcx-Custom" + "'", str18, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Pcx-Custom" + "'", str19, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNull(formatCompliance24);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
        org.junit.Assert.assertNull(imageMetadata26);
        org.junit.Assert.assertNull(imageMetadata30);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(imageMetadata41);
        org.junit.Assert.assertNull(byteArray42);
        org.junit.Assert.assertNull(formatCompliance44);
        org.junit.Assert.assertNull(byteArray49);
        org.junit.Assert.assertNotNull(byteOrder50);
        org.junit.Assert.assertNotNull(byteOrder53);
        org.junit.Assert.assertNull(formatCompliance55);
        org.junit.Assert.assertNotNull(pcxImagingParameters56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "pcx" + "'", str59, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters60);
        org.junit.Assert.assertNull(imageMetadata61);
        org.junit.Assert.assertNull(byteArray62);
    }

    @Test
    public void test0304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0304");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.ImageFormat imageFormat8 = null;
        boolean boolean9 = pcxImageParser0.canAcceptType(imageFormat8);
        java.io.File file10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList11 = pcxImageParser0.getAllBufferedImages(file10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0305");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        java.nio.ByteOrder byteOrder2 = pcxImageParser0.getByteOrder();
        java.io.File file3 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray4 = pcxImageParser0.getIccProfileBytes(file3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder2);
    }

    @Test
    public void test0306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0306");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str30 = pcxImageParser0.dumpImageFile(byteSource29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
    }

    @Test
    public void test0307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0307");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        java.io.PrintWriter printWriter14 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean16 = pcxImageParser0.dumpImageFile(printWriter14, byteSource15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
    }

    @Test
    public void test0308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0308");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        boolean boolean5 = pcxImageParser0.canAcceptExtension("Pcx-Custom");
        java.io.File file6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = pcxImageParser0.dumpImageFile(file6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0309");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser24.canAcceptType(imageFormat29);
        java.lang.String str31 = pcxImageParser24.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser24.getDefaultParameters();
        byte[] byteArray33 = pcxImageParser0.getIccProfileBytes(byteSource23, pcxImagingParameters32);
        java.io.File file34 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList35 = pcxImageParser0.getAllBufferedImages(file34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "pcx" + "'", str31, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
        org.junit.Assert.assertNull(byteArray33);
    }

    @Test
    public void test0310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0310");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        java.awt.image.BufferedImage bufferedImage23 = null;
        java.io.OutputStream outputStream24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = null;
        byte[] byteArray28 = pcxImageParser25.getIccProfileBytes(byteSource26, pcxImagingParameters27);
        java.lang.String str29 = pcxImageParser25.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser25.getMetadata(byteSource30);
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance33 = pcxImageParser25.getFormatCompliance(byteSource32);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser25.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage23, outputStream24, pcxImagingParameters34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertNull(formatCompliance33);
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
    }

    @Test
    public void test0311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0311");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        java.lang.String str5 = pcxImageParser0.getName();
        java.lang.Class<?> wildcardClass6 = pcxImageParser0.getClass();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0312");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata4 = pcxImageParser0.getMetadata(byteSource3);
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder7 = pcxImageParser6.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance9 = pcxImageParser6.getFormatCompliance(byteSource8);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser12 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata14 = pcxImageParser12.getMetadata(byteSource13);
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder17 = pcxImageParser16.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance19 = pcxImageParser16.getFormatCompliance(byteSource18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata21 = pcxImageParser16.getMetadata(byteSource20);
        boolean boolean23 = pcxImageParser16.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser12.getMetadata(byteSource15, pcxImagingParameters24);
        byte[] byteArray26 = pcxImageParser6.getIccProfileBytes(byteSource11, pcxImagingParameters24);
        java.lang.String str27 = pcxImageParser6.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser6.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension29 = pcxImageParser0.getImageSize(byteSource5, pcxImagingParameters28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata4);
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNull(formatCompliance9);
        org.junit.Assert.assertNotNull(pcxImagingParameters10);
        org.junit.Assert.assertNull(imageMetadata14);
        org.junit.Assert.assertNotNull(byteOrder17);
        org.junit.Assert.assertNull(formatCompliance19);
        org.junit.Assert.assertNull(imageMetadata21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters24);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertNull(byteArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Pcx-Custom" + "'", str27, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
    }

    @Test
    public void test0313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0313");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        boolean boolean29 = pcxImageParser0.canAcceptExtension("pcx");
        java.io.File file30 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance31 = pcxImageParser0.getFormatCompliance(file30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test0314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0314");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.awt.image.BufferedImage bufferedImage21 = null;
        java.io.OutputStream outputStream22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser23 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder24 = pcxImageParser23.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance26 = pcxImageParser23.getFormatCompliance(byteSource25);
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata28 = pcxImageParser23.getMetadata(byteSource27);
        boolean boolean30 = pcxImageParser23.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser23.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage21, outputStream22, pcxImagingParameters31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertNotNull(byteOrder24);
        org.junit.Assert.assertNull(formatCompliance26);
        org.junit.Assert.assertNull(imageMetadata28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
    }

    @Test
    public void test0315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0315");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.io.File file7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = null;
        byte[] byteArray11 = pcxImageParser8.getIccProfileBytes(byteSource9, pcxImagingParameters10);
        java.lang.String str12 = pcxImageParser8.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata14 = pcxImageParser8.getMetadata(byteSource13);
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser8.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser8.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension18 = pcxImageParser0.getImageSize(file7, pcxImagingParameters17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(byteArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Pcx-Custom" + "'", str12, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata14);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
    }

    @Test
    public void test0316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0316");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser0.getDefaultParameters();
        java.io.File file29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = null;
        byte[] byteArray33 = pcxImageParser30.getIccProfileBytes(byteSource31, pcxImagingParameters32);
        java.lang.String str34 = pcxImageParser30.getName();
        java.lang.String str35 = pcxImageParser30.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser37 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder38 = pcxImageParser37.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance40 = pcxImageParser37.getFormatCompliance(byteSource39);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = pcxImageParser37.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser30.getMetadata(byteSource36, pcxImagingParameters41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser44.getMetadata(byteSource45);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser48 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder49 = pcxImageParser48.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance51 = pcxImageParser48.getFormatCompliance(byteSource50);
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser48.getMetadata(byteSource52);
        boolean boolean55 = pcxImageParser48.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters56 = pcxImageParser48.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata57 = pcxImageParser44.getMetadata(byteSource47, pcxImagingParameters56);
        byte[] byteArray58 = pcxImageParser30.getIccProfileBytes(byteSource43, pcxImagingParameters56);
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance60 = pcxImageParser30.getFormatCompliance(byteSource59);
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser62 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters64 = null;
        byte[] byteArray65 = pcxImageParser62.getIccProfileBytes(byteSource63, pcxImagingParameters64);
        java.nio.ByteOrder byteOrder66 = pcxImageParser62.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource67 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser68 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder69 = pcxImageParser68.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource70 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance71 = pcxImageParser68.getFormatCompliance(byteSource70);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters72 = pcxImageParser68.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat73 = null;
        boolean boolean74 = pcxImageParser68.canAcceptType(imageFormat73);
        java.lang.String str75 = pcxImageParser68.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters76 = pcxImageParser68.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata77 = pcxImageParser62.getMetadata(byteSource67, pcxImagingParameters76);
        byte[] byteArray78 = pcxImageParser30.getIccProfileBytes(byteSource61, pcxImagingParameters76);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray79 = pcxImageParser0.getIccProfileBytes(file29, pcxImagingParameters76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Pcx-Custom" + "'", str34, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Pcx-Custom" + "'", str35, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder38);
        org.junit.Assert.assertNull(formatCompliance40);
        org.junit.Assert.assertNotNull(pcxImagingParameters41);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertNull(imageMetadata46);
        org.junit.Assert.assertNotNull(byteOrder49);
        org.junit.Assert.assertNull(formatCompliance51);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters56);
        org.junit.Assert.assertNull(imageMetadata57);
        org.junit.Assert.assertNull(byteArray58);
        org.junit.Assert.assertNull(formatCompliance60);
        org.junit.Assert.assertNull(byteArray65);
        org.junit.Assert.assertNotNull(byteOrder66);
        org.junit.Assert.assertNotNull(byteOrder69);
        org.junit.Assert.assertNull(formatCompliance71);
        org.junit.Assert.assertNotNull(pcxImagingParameters72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "pcx" + "'", str75, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters76);
        org.junit.Assert.assertNull(imageMetadata77);
        org.junit.Assert.assertNull(byteArray78);
    }

    @Test
    public void test0317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0317");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser4.getMetadata(byteSource8);
        boolean boolean11 = pcxImageParser4.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters12);
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser0.canAcceptType(imageFormat14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = null;
        byte[] byteArray20 = pcxImageParser17.getIccProfileBytes(byteSource18, pcxImagingParameters19);
        java.lang.String str21 = pcxImageParser17.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser17.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser17.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage24 = pcxImageParser0.getBufferedImage(byteSource16, pcxImagingParameters23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
    }

    @Test
    public void test0318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0318");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = pcxImageParser0.dumpImageFile(byteSource7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNotNull(byteOrder6);
    }

    @Test
    public void test0319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0319");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        java.io.File file31 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean32 = pcxImageParser0.canAcceptExtension(file31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test0320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0320");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.io.File file29 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray30 = pcxImageParser0.getIccProfileBytes(file29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
    }

    @Test
    public void test0321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0321");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        java.io.File file9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension10 = pcxImageParser0.getImageSize(file9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(formatCompliance8);
    }

    @Test
    public void test0322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0322");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        java.nio.ByteOrder byteOrder32 = pcxImageParser0.getByteOrder();
        java.lang.String str33 = pcxImageParser0.getName();
        java.io.File file34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder36 = pcxImageParser35.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser38 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder39 = pcxImageParser38.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance41 = pcxImageParser38.getFormatCompliance(byteSource40);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser38.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser44.getMetadata(byteSource45);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser48 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder49 = pcxImageParser48.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance51 = pcxImageParser48.getFormatCompliance(byteSource50);
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser48.getMetadata(byteSource52);
        boolean boolean55 = pcxImageParser48.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters56 = pcxImageParser48.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata57 = pcxImageParser44.getMetadata(byteSource47, pcxImagingParameters56);
        byte[] byteArray58 = pcxImageParser38.getIccProfileBytes(byteSource43, pcxImagingParameters56);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata59 = pcxImageParser35.getMetadata(byteSource37, pcxImagingParameters56);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata60 = pcxImageParser0.getMetadata(file34, pcxImagingParameters56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Pcx-Custom" + "'", str33, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteOrder39);
        org.junit.Assert.assertNull(formatCompliance41);
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertNull(imageMetadata46);
        org.junit.Assert.assertNotNull(byteOrder49);
        org.junit.Assert.assertNull(formatCompliance51);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters56);
        org.junit.Assert.assertNull(imageMetadata57);
        org.junit.Assert.assertNull(byteArray58);
        org.junit.Assert.assertNull(imageMetadata59);
    }

    @Test
    public void test0323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0323");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        java.awt.image.BufferedImage bufferedImage23 = null;
        java.io.OutputStream outputStream24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser25.getMetadata(byteSource26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder30 = pcxImageParser29.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser29.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser29.getMetadata(byteSource33);
        boolean boolean36 = pcxImageParser29.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser25.getMetadata(byteSource28, pcxImagingParameters37);
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage23, outputStream24, pcxImagingParameters37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(byteOrder30);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters37);
        org.junit.Assert.assertNull(imageMetadata38);
    }

    @Test
    public void test0324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0324");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata4 = pcxImageParser0.getMetadata(byteSource3);
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        java.io.File file6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = null;
        byte[] byteArray10 = pcxImageParser7.getIccProfileBytes(byteSource8, pcxImagingParameters9);
        java.lang.String str11 = pcxImageParser7.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser7.getMetadata(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance15 = pcxImageParser7.getFormatCompliance(byteSource14);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = pcxImageParser7.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray17 = pcxImageParser0.getIccProfileBytes(file6, pcxImagingParameters16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNull(byteArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Pcx-Custom" + "'", str11, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertNull(formatCompliance15);
        org.junit.Assert.assertNotNull(pcxImagingParameters16);
    }

    @Test
    public void test0325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0325");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        java.io.File file8 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray9 = pcxImageParser0.getIccProfileBytes(file8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNull(imageMetadata7);
    }

    @Test
    public void test0326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0326");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.nio.ByteOrder byteOrder29 = pcxImageParser0.getByteOrder();
        java.io.File file30 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension31 = pcxImageParser0.getImageSize(file30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNotNull(byteOrder29);
    }

    @Test
    public void test0327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0327");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        java.io.File file23 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser0.getMetadata(file23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
    }

    @Test
    public void test0328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0328");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        java.io.File file6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata18 = pcxImageParser16.getMetadata(byteSource17);
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser20 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder21 = pcxImageParser20.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance23 = pcxImageParser20.getFormatCompliance(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser20.getMetadata(byteSource24);
        boolean boolean27 = pcxImageParser20.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser20.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser16.getMetadata(byteSource19, pcxImagingParameters28);
        byte[] byteArray30 = pcxImageParser10.getIccProfileBytes(byteSource15, pcxImagingParameters28);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser7.getMetadata(byteSource9, pcxImagingParameters28);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray32 = pcxImageParser0.getIccProfileBytes(file6, pcxImagingParameters28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNull(imageMetadata18);
        org.junit.Assert.assertNotNull(byteOrder21);
        org.junit.Assert.assertNull(formatCompliance23);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertNull(byteArray30);
        org.junit.Assert.assertNull(imageMetadata31);
    }

    @Test
    public void test0329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0329");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList10 = pcxImageParser0.getAllBufferedImages(byteSource9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
    }

    @Test
    public void test0330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0330");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = null;
        byte[] byteArray33 = pcxImageParser30.getIccProfileBytes(byteSource31, pcxImagingParameters32);
        java.lang.String str34 = pcxImageParser30.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser30.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser0.getMetadata(byteSource29, pcxImagingParameters35);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass37 = imageMetadata36.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "pcx" + "'", str34, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(imageMetadata36);
    }

    @Test
    public void test0331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0331");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        java.io.File file32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder34 = pcxImageParser33.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance36 = pcxImageParser33.getFormatCompliance(byteSource35);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = pcxImageParser33.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat38 = null;
        boolean boolean39 = pcxImageParser33.canAcceptType(imageFormat38);
        java.lang.String str40 = pcxImageParser33.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = pcxImageParser33.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage42 = pcxImageParser0.getBufferedImage(file32, pcxImagingParameters41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(byteOrder34);
        org.junit.Assert.assertNull(formatCompliance36);
        org.junit.Assert.assertNotNull(pcxImagingParameters37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "pcx" + "'", str40, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters41);
    }

    @Test
    public void test0332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0332");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        java.io.File file23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = null;
        byte[] byteArray27 = pcxImageParser24.getIccProfileBytes(byteSource25, pcxImagingParameters26);
        java.lang.String str28 = pcxImageParser24.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata30 = pcxImageParser24.getMetadata(byteSource29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser24.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder35 = pcxImageParser34.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance37 = pcxImageParser34.getFormatCompliance(byteSource36);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser34.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = null;
        byte[] byteArray43 = pcxImageParser40.getIccProfileBytes(byteSource41, pcxImagingParameters42);
        java.lang.String str44 = pcxImageParser40.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser40.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser34.getMetadata(byteSource39, pcxImagingParameters45);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = pcxImageParser34.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser24.getMetadata(byteSource33, pcxImagingParameters47);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension49 = pcxImageParser0.getImageSize(file23, pcxImagingParameters47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertNull(byteArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Pcx-Custom" + "'", str28, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata30);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNull(formatCompliance37);
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
        org.junit.Assert.assertNull(byteArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "pcx" + "'", str44, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertNull(imageMetadata46);
        org.junit.Assert.assertNotNull(pcxImagingParameters47);
        org.junit.Assert.assertNull(imageMetadata48);
    }

    @Test
    public void test0333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0333");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = null;
        byte[] byteArray35 = pcxImageParser32.getIccProfileBytes(byteSource33, pcxImagingParameters34);
        java.lang.String str36 = pcxImageParser32.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser32.getMetadata(byteSource37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance40 = pcxImageParser32.getFormatCompliance(byteSource39);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = pcxImageParser32.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension42 = pcxImageParser0.getImageSize(byteSource31, pcxImagingParameters41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNull(byteArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Pcx-Custom" + "'", str36, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNull(formatCompliance40);
        org.junit.Assert.assertNotNull(pcxImagingParameters41);
    }

    @Test
    public void test0334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0334");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        java.nio.ByteOrder byteOrder32 = pcxImageParser0.getByteOrder();
        java.lang.String str33 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = null;
        byte[] byteArray38 = pcxImageParser35.getIccProfileBytes(byteSource36, pcxImagingParameters37);
        java.nio.ByteOrder byteOrder39 = pcxImageParser35.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser41 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder42 = pcxImageParser41.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance44 = pcxImageParser41.getFormatCompliance(byteSource43);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser41.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat46 = null;
        boolean boolean47 = pcxImageParser41.canAcceptType(imageFormat46);
        java.lang.String str48 = pcxImageParser41.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters49 = pcxImageParser41.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata50 = pcxImageParser35.getMetadata(byteSource40, pcxImagingParameters49);
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser52 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder53 = pcxImageParser52.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance55 = pcxImageParser52.getFormatCompliance(byteSource54);
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata57 = pcxImageParser52.getMetadata(byteSource56);
        boolean boolean59 = pcxImageParser52.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters60 = pcxImageParser52.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata61 = pcxImageParser35.getMetadata(byteSource51, pcxImagingParameters60);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension62 = pcxImageParser0.getImageSize(byteSource34, pcxImagingParameters60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Pcx-Custom" + "'", str33, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray38);
        org.junit.Assert.assertNotNull(byteOrder39);
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNull(formatCompliance44);
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "pcx" + "'", str48, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters49);
        org.junit.Assert.assertNull(imageMetadata50);
        org.junit.Assert.assertNotNull(byteOrder53);
        org.junit.Assert.assertNull(formatCompliance55);
        org.junit.Assert.assertNull(imageMetadata57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters60);
        org.junit.Assert.assertNull(imageMetadata61);
    }

    @Test
    public void test0335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0335");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        java.nio.ByteOrder byteOrder32 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder35 = pcxImageParser34.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance37 = pcxImageParser34.getFormatCompliance(byteSource36);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser34.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser40.getMetadata(byteSource41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder45 = pcxImageParser44.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance47 = pcxImageParser44.getFormatCompliance(byteSource46);
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser44.getMetadata(byteSource48);
        boolean boolean51 = pcxImageParser44.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser44.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser40.getMetadata(byteSource43, pcxImagingParameters52);
        byte[] byteArray54 = pcxImageParser34.getIccProfileBytes(byteSource39, pcxImagingParameters52);
        java.lang.String str55 = pcxImageParser34.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters56 = pcxImageParser34.getDefaultParameters();
        byte[] byteArray57 = pcxImageParser0.getIccProfileBytes(byteSource33, pcxImagingParameters56);
        java.io.File file58 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance59 = pcxImageParser0.getFormatCompliance(file58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNull(formatCompliance37);
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertNotNull(byteOrder45);
        org.junit.Assert.assertNull(formatCompliance47);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertNull(byteArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Pcx-Custom" + "'", str55, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters56);
        org.junit.Assert.assertNull(byteArray57);
    }

    @Test
    public void test0336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0336");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.io.File file6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(file6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
    }

    @Test
    public void test0337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0337");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser0.canAcceptType(imageFormat14);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = pcxImageParser0.getDefaultParameters();
        java.io.File file17 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean18 = pcxImageParser0.canAcceptExtension(file17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters16);
    }

    @Test
    public void test0338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0338");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        java.io.File file9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = null;
        byte[] byteArray13 = pcxImageParser10.getIccProfileBytes(byteSource11, pcxImagingParameters12);
        java.lang.String str14 = pcxImageParser10.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser10.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser10.getFormatCompliance(byteSource17);
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser20 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder21 = pcxImageParser20.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance23 = pcxImageParser20.getFormatCompliance(byteSource22);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = pcxImageParser20.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = null;
        byte[] byteArray29 = pcxImageParser26.getIccProfileBytes(byteSource27, pcxImagingParameters28);
        java.lang.String str30 = pcxImageParser26.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser26.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser20.getMetadata(byteSource25, pcxImagingParameters31);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser20.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser10.getMetadata(byteSource19, pcxImagingParameters33);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray35 = pcxImageParser0.getIccProfileBytes(file9, pcxImagingParameters33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNull(byteArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Pcx-Custom" + "'", str14, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNull(formatCompliance18);
        org.junit.Assert.assertNotNull(byteOrder21);
        org.junit.Assert.assertNull(formatCompliance23);
        org.junit.Assert.assertNotNull(pcxImagingParameters24);
        org.junit.Assert.assertNull(byteArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "pcx" + "'", str30, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
        org.junit.Assert.assertNull(imageMetadata34);
    }

    @Test
    public void test0339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0339");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.ImageFormat imageFormat1 = null;
        boolean boolean2 = pcxImageParser0.canAcceptType(imageFormat1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters6 = null;
        byte[] byteArray7 = pcxImageParser4.getIccProfileBytes(byteSource5, pcxImagingParameters6);
        java.lang.String str8 = pcxImageParser4.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = pcxImageParser4.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage10 = pcxImageParser0.getBufferedImage(byteSource3, pcxImagingParameters9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(byteArray7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "pcx" + "'", str8, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters9);
    }

    @Test
    public void test0340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0340");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        java.io.File file9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension19 = pcxImageParser0.getImageSize(file9, pcxImagingParameters18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
    }

    @Test
    public void test0341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0341");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList9 = pcxImageParser0.getAllBufferedImages(byteSource8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance7);
    }

    @Test
    public void test0342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0342");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata3 = pcxImageParser0.getMetadata(byteSource2);
        java.io.PrintWriter printWriter4 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean6 = pcxImageParser0.dumpImageFile(printWriter4, byteSource5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata3);
    }

    @Test
    public void test0343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0343");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        java.nio.ByteOrder byteOrder2 = pcxImageParser0.getByteOrder();
        java.io.File file3 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean4 = pcxImageParser0.canAcceptExtension(file3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder2);
    }

    @Test
    public void test0344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0344");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        java.lang.String str9 = pcxImageParser0.getName();
        java.lang.Class<?> wildcardClass10 = pcxImageParser0.getClass();
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Pcx-Custom" + "'", str9, "Pcx-Custom");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0345");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters6 = pcxImageParser0.getDefaultParameters();
        java.io.File file7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = null;
        byte[] byteArray17 = pcxImageParser14.getIccProfileBytes(byteSource15, pcxImagingParameters16);
        java.lang.String str18 = pcxImageParser14.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata20 = pcxImageParser8.getMetadata(byteSource13, pcxImagingParameters19);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension21 = pcxImageParser0.getImageSize(file7, pcxImagingParameters19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNotNull(pcxImagingParameters6);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(byteArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "pcx" + "'", str18, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
        org.junit.Assert.assertNull(imageMetadata20);
    }

    @Test
    public void test0346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0346");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        java.nio.ByteOrder byteOrder32 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder35 = pcxImageParser34.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance37 = pcxImageParser34.getFormatCompliance(byteSource36);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser34.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser40.getMetadata(byteSource41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder45 = pcxImageParser44.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance47 = pcxImageParser44.getFormatCompliance(byteSource46);
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser44.getMetadata(byteSource48);
        boolean boolean51 = pcxImageParser44.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser44.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser40.getMetadata(byteSource43, pcxImagingParameters52);
        byte[] byteArray54 = pcxImageParser34.getIccProfileBytes(byteSource39, pcxImagingParameters52);
        java.lang.String str55 = pcxImageParser34.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters56 = pcxImageParser34.getDefaultParameters();
        byte[] byteArray57 = pcxImageParser0.getIccProfileBytes(byteSource33, pcxImagingParameters56);
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance59 = pcxImageParser0.getFormatCompliance(byteSource58);
        java.io.File file60 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser61 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters63 = null;
        byte[] byteArray64 = pcxImageParser61.getIccProfileBytes(byteSource62, pcxImagingParameters63);
        java.lang.String str65 = pcxImageParser61.getName();
        java.lang.String str66 = pcxImageParser61.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource67 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance68 = pcxImageParser61.getFormatCompliance(byteSource67);
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser70 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder71 = pcxImageParser70.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource72 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance73 = pcxImageParser70.getFormatCompliance(byteSource72);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters74 = pcxImageParser70.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat75 = null;
        boolean boolean76 = pcxImageParser70.canAcceptType(imageFormat75);
        java.lang.String str77 = pcxImageParser70.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters78 = pcxImageParser70.getDefaultParameters();
        byte[] byteArray79 = pcxImageParser61.getIccProfileBytes(byteSource69, pcxImagingParameters78);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters80 = pcxImageParser61.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension81 = pcxImageParser0.getImageSize(file60, pcxImagingParameters80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNull(formatCompliance37);
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertNotNull(byteOrder45);
        org.junit.Assert.assertNull(formatCompliance47);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertNull(byteArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Pcx-Custom" + "'", str55, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters56);
        org.junit.Assert.assertNull(byteArray57);
        org.junit.Assert.assertNull(formatCompliance59);
        org.junit.Assert.assertNull(byteArray64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Pcx-Custom" + "'", str65, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Pcx-Custom" + "'", str66, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance68);
        org.junit.Assert.assertNotNull(byteOrder71);
        org.junit.Assert.assertNull(formatCompliance73);
        org.junit.Assert.assertNotNull(pcxImagingParameters74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "pcx" + "'", str77, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters78);
        org.junit.Assert.assertNull(byteArray79);
        org.junit.Assert.assertNotNull(pcxImagingParameters80);
    }

    @Test
    public void test0347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0347");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        boolean boolean29 = pcxImageParser0.canAcceptExtension("pcx");
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder32 = pcxImageParser31.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance34 = pcxImageParser31.getFormatCompliance(byteSource33);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser31.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser31.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = pcxImageParser31.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = null;
        byte[] byteArray42 = pcxImageParser39.getIccProfileBytes(byteSource40, pcxImagingParameters41);
        java.lang.String str43 = pcxImageParser39.getName();
        java.lang.String str44 = pcxImageParser39.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser46 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder47 = pcxImageParser46.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance49 = pcxImageParser46.getFormatCompliance(byteSource48);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters50 = pcxImageParser46.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata51 = pcxImageParser39.getMetadata(byteSource45, pcxImagingParameters50);
        java.lang.String str52 = pcxImageParser39.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata54 = pcxImageParser39.getMetadata(byteSource53);
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser56 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters58 = null;
        byte[] byteArray59 = pcxImageParser56.getIccProfileBytes(byteSource57, pcxImagingParameters58);
        java.lang.String str60 = pcxImageParser56.getName();
        java.lang.String str61 = pcxImageParser56.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser63 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder64 = pcxImageParser63.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance66 = pcxImageParser63.getFormatCompliance(byteSource65);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters67 = pcxImageParser63.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata68 = pcxImageParser56.getMetadata(byteSource62, pcxImagingParameters67);
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser70 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource71 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters72 = null;
        byte[] byteArray73 = pcxImageParser70.getIccProfileBytes(byteSource71, pcxImagingParameters72);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters74 = pcxImageParser70.getDefaultParameters();
        byte[] byteArray75 = pcxImageParser56.getIccProfileBytes(byteSource69, pcxImagingParameters74);
        byte[] byteArray76 = pcxImageParser39.getIccProfileBytes(byteSource55, pcxImagingParameters74);
        byte[] byteArray77 = pcxImageParser31.getIccProfileBytes(byteSource38, pcxImagingParameters74);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension78 = pcxImageParser0.getImageSize(byteSource30, pcxImagingParameters74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertNull(formatCompliance34);
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertNotNull(pcxImagingParameters37);
        org.junit.Assert.assertNull(byteArray42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Pcx-Custom" + "'", str43, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Pcx-Custom" + "'", str44, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNull(formatCompliance49);
        org.junit.Assert.assertNotNull(pcxImagingParameters50);
        org.junit.Assert.assertNull(imageMetadata51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Pcx-Custom" + "'", str52, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata54);
        org.junit.Assert.assertNull(byteArray59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Pcx-Custom" + "'", str60, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Pcx-Custom" + "'", str61, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder64);
        org.junit.Assert.assertNull(formatCompliance66);
        org.junit.Assert.assertNotNull(pcxImagingParameters67);
        org.junit.Assert.assertNull(imageMetadata68);
        org.junit.Assert.assertNull(byteArray73);
        org.junit.Assert.assertNotNull(pcxImagingParameters74);
        org.junit.Assert.assertNull(byteArray75);
        org.junit.Assert.assertNull(byteArray76);
        org.junit.Assert.assertNull(byteArray77);
    }

    @Test
    public void test0348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0348");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        java.io.File file22 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList23 = pcxImageParser0.getAllBufferedImages(file22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
    }

    @Test
    public void test0349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0349");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata4 = pcxImageParser0.getMetadata(byteSource3);
        java.awt.image.BufferedImage bufferedImage5 = null;
        java.io.OutputStream outputStream6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = null;
        byte[] byteArray10 = pcxImageParser7.getIccProfileBytes(byteSource8, pcxImagingParameters9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage5, outputStream6, pcxImagingParameters11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata4);
        org.junit.Assert.assertNull(byteArray10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
    }

    @Test
    public void test0350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0350");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        java.io.File file9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser20 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser20.getMetadata(byteSource21);
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser24.getMetadata(byteSource28);
        boolean boolean31 = pcxImageParser24.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser20.getMetadata(byteSource23, pcxImagingParameters32);
        byte[] byteArray34 = pcxImageParser14.getIccProfileBytes(byteSource19, pcxImagingParameters32);
        java.lang.String str35 = pcxImageParser14.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder40 = pcxImageParser39.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance42 = pcxImageParser39.getFormatCompliance(byteSource41);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser39.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser45 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser45.getMetadata(byteSource46);
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser49 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder50 = pcxImageParser49.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance52 = pcxImageParser49.getFormatCompliance(byteSource51);
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata54 = pcxImageParser49.getMetadata(byteSource53);
        boolean boolean56 = pcxImageParser49.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters57 = pcxImageParser49.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata58 = pcxImageParser45.getMetadata(byteSource48, pcxImagingParameters57);
        byte[] byteArray59 = pcxImageParser39.getIccProfileBytes(byteSource44, pcxImagingParameters57);
        java.lang.String str60 = pcxImageParser39.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters61 = pcxImageParser39.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata62 = pcxImageParser10.getMetadata(byteSource38, pcxImagingParameters61);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata63 = pcxImageParser0.getMetadata(file9, pcxImagingParameters61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
        org.junit.Assert.assertNull(imageMetadata33);
        org.junit.Assert.assertNull(byteArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Pcx-Custom" + "'", str35, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNull(formatCompliance42);
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertNull(imageMetadata47);
        org.junit.Assert.assertNotNull(byteOrder50);
        org.junit.Assert.assertNull(formatCompliance52);
        org.junit.Assert.assertNull(imageMetadata54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters57);
        org.junit.Assert.assertNull(imageMetadata58);
        org.junit.Assert.assertNull(byteArray59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Pcx-Custom" + "'", str60, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters61);
        org.junit.Assert.assertNull(imageMetadata62);
    }

    @Test
    public void test0351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0351");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        java.io.File file6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension12 = pcxImageParser0.getImageSize(file6, pcxImagingParameters11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
    }

    @Test
    public void test0352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0352");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        java.io.PrintWriter printWriter31 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean33 = pcxImageParser0.dumpImageFile(printWriter31, byteSource32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test0353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0353");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.io.File file21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension22 = pcxImageParser0.getImageSize(file21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
    }

    @Test
    public void test0354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0354");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters7);
        java.lang.String str9 = pcxImageParser0.getDefaultExtension();
        java.io.File file10 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray11 = pcxImageParser0.getIccProfileBytes(file10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "pcx" + "'", str9, "pcx");
    }

    @Test
    public void test0355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0355");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.nio.ByteOrder byteOrder29 = pcxImageParser0.getByteOrder();
        java.io.File file30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = null;
        byte[] byteArray34 = pcxImageParser31.getIccProfileBytes(byteSource32, pcxImagingParameters33);
        java.lang.String str35 = pcxImageParser31.getName();
        java.lang.String str36 = pcxImageParser31.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser38 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder39 = pcxImageParser38.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance41 = pcxImageParser38.getFormatCompliance(byteSource40);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser38.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata43 = pcxImageParser31.getMetadata(byteSource37, pcxImagingParameters42);
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser45 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser45.getMetadata(byteSource46);
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser49 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder50 = pcxImageParser49.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance52 = pcxImageParser49.getFormatCompliance(byteSource51);
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata54 = pcxImageParser49.getMetadata(byteSource53);
        boolean boolean56 = pcxImageParser49.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters57 = pcxImageParser49.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata58 = pcxImageParser45.getMetadata(byteSource48, pcxImagingParameters57);
        byte[] byteArray59 = pcxImageParser31.getIccProfileBytes(byteSource44, pcxImagingParameters57);
        org.apache.commons.imaging.ImageFormat imageFormat60 = null;
        boolean boolean61 = pcxImageParser31.canAcceptType(imageFormat60);
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser63 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder64 = pcxImageParser63.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance66 = pcxImageParser63.getFormatCompliance(byteSource65);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters67 = pcxImageParser63.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat68 = null;
        boolean boolean69 = pcxImageParser63.canAcceptType(imageFormat68);
        java.lang.String str70 = pcxImageParser63.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters71 = pcxImageParser63.getDefaultParameters();
        byte[] byteArray72 = pcxImageParser31.getIccProfileBytes(byteSource62, pcxImagingParameters71);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata73 = pcxImageParser0.getMetadata(file30, pcxImagingParameters71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertNull(byteArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Pcx-Custom" + "'", str35, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Pcx-Custom" + "'", str36, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder39);
        org.junit.Assert.assertNull(formatCompliance41);
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertNull(imageMetadata43);
        org.junit.Assert.assertNull(imageMetadata47);
        org.junit.Assert.assertNotNull(byteOrder50);
        org.junit.Assert.assertNull(formatCompliance52);
        org.junit.Assert.assertNull(imageMetadata54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters57);
        org.junit.Assert.assertNull(imageMetadata58);
        org.junit.Assert.assertNull(byteArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(byteOrder64);
        org.junit.Assert.assertNull(formatCompliance66);
        org.junit.Assert.assertNotNull(pcxImagingParameters67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "pcx" + "'", str70, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters71);
        org.junit.Assert.assertNull(byteArray72);
    }

    @Test
    public void test0356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0356");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource14);
        java.io.File file16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension17 = pcxImageParser0.getImageSize(file16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata15);
    }

    @Test
    public void test0357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0357");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser4.getMetadata(byteSource8);
        boolean boolean11 = pcxImageParser4.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance15 = pcxImageParser0.getFormatCompliance(byteSource14);
        java.io.PrintWriter printWriter16 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean18 = pcxImageParser0.dumpImageFile(printWriter16, byteSource17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertNull(formatCompliance15);
    }

    @Test
    public void test0358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0358");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = null;
        byte[] byteArray33 = pcxImageParser30.getIccProfileBytes(byteSource31, pcxImagingParameters32);
        java.lang.String str34 = pcxImageParser30.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser30.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser0.getMetadata(byteSource29, pcxImagingParameters35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo38 = pcxImageParser0.getImageInfo(byteSource37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "pcx" + "'", str34, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(imageMetadata36);
    }

    @Test
    public void test0359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0359");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        java.nio.ByteOrder byteOrder2 = pcxImageParser0.getByteOrder();
        java.lang.String str3 = pcxImageParser0.getName();
        java.io.PrintWriter printWriter4 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean6 = pcxImageParser0.dumpImageFile(printWriter4, byteSource5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Pcx-Custom" + "'", str3, "Pcx-Custom");
    }

    @Test
    public void test0360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0360");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        java.io.File file9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata18 = pcxImageParser16.getMetadata(byteSource17);
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser20 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder21 = pcxImageParser20.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance23 = pcxImageParser20.getFormatCompliance(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser20.getMetadata(byteSource24);
        boolean boolean27 = pcxImageParser20.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser20.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser16.getMetadata(byteSource19, pcxImagingParameters28);
        byte[] byteArray30 = pcxImageParser10.getIccProfileBytes(byteSource15, pcxImagingParameters28);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser0.getMetadata(file9, pcxImagingParameters28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNull(imageMetadata18);
        org.junit.Assert.assertNotNull(byteOrder21);
        org.junit.Assert.assertNull(formatCompliance23);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertNull(byteArray30);
    }

    @Test
    public void test0361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0361");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.awt.image.BufferedImage bufferedImage7 = null;
        java.io.OutputStream outputStream8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata11 = pcxImageParser9.getMetadata(byteSource10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser13.getMetadata(byteSource14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder18 = pcxImageParser17.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance20 = pcxImageParser17.getFormatCompliance(byteSource19);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser17.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser23 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser23.getMetadata(byteSource24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser27 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder28 = pcxImageParser27.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser27.getFormatCompliance(byteSource29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser27.getMetadata(byteSource31);
        boolean boolean34 = pcxImageParser27.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser27.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser23.getMetadata(byteSource26, pcxImagingParameters35);
        byte[] byteArray37 = pcxImageParser17.getIccProfileBytes(byteSource22, pcxImagingParameters35);
        java.lang.String str38 = pcxImageParser17.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = pcxImageParser17.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser13.getMetadata(byteSource16, pcxImagingParameters39);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser9.getMetadata(byteSource12, pcxImagingParameters39);
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage7, outputStream8, pcxImagingParameters39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(imageMetadata11);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNull(formatCompliance20);
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertNotNull(byteOrder28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertNull(byteArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Pcx-Custom" + "'", str38, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters39);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertNull(imageMetadata41);
    }

    @Test
    public void test0362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0362");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        java.nio.ByteOrder byteOrder28 = pcxImageParser0.getByteOrder();
        java.io.File file29 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension30 = pcxImageParser0.getImageSize(file29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(byteOrder28);
    }

    @Test
    public void test0363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0363");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        java.io.File file8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = null;
        byte[] byteArray12 = pcxImageParser9.getIccProfileBytes(byteSource10, pcxImagingParameters11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser9.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo14 = pcxImageParser0.getImageInfo(file8, pcxImagingParameters13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
        org.junit.Assert.assertNull(byteArray12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
    }

    @Test
    public void test0364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0364");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        java.io.File file9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList10 = pcxImageParser0.getAllBufferedImages(file9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
    }

    @Test
    public void test0365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0365");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        java.io.File file6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(file6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
    }

    @Test
    public void test0366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0366");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getName();
        java.io.File file6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = null;
        byte[] byteArray10 = pcxImageParser7.getIccProfileBytes(byteSource8, pcxImagingParameters9);
        java.lang.String str11 = pcxImageParser7.getName();
        java.lang.String str12 = pcxImageParser7.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser7.getMetadata(byteSource13, pcxImagingParameters18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser21.getMetadata(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder26 = pcxImageParser25.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance28 = pcxImageParser25.getFormatCompliance(byteSource27);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata30 = pcxImageParser25.getMetadata(byteSource29);
        boolean boolean32 = pcxImageParser25.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser25.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser21.getMetadata(byteSource24, pcxImagingParameters33);
        byte[] byteArray35 = pcxImageParser7.getIccProfileBytes(byteSource20, pcxImagingParameters33);
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance37 = pcxImageParser7.getFormatCompliance(byteSource36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = null;
        byte[] byteArray42 = pcxImageParser39.getIccProfileBytes(byteSource40, pcxImagingParameters41);
        java.nio.ByteOrder byteOrder43 = pcxImageParser39.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser45 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder46 = pcxImageParser45.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance48 = pcxImageParser45.getFormatCompliance(byteSource47);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters49 = pcxImageParser45.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat50 = null;
        boolean boolean51 = pcxImageParser45.canAcceptType(imageFormat50);
        java.lang.String str52 = pcxImageParser45.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters53 = pcxImageParser45.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata54 = pcxImageParser39.getMetadata(byteSource44, pcxImagingParameters53);
        byte[] byteArray55 = pcxImageParser7.getIccProfileBytes(byteSource38, pcxImagingParameters53);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray56 = pcxImageParser0.getIccProfileBytes(file6, pcxImagingParameters53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Pcx-Custom" + "'", str11, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Pcx-Custom" + "'", str12, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNotNull(byteOrder26);
        org.junit.Assert.assertNull(formatCompliance28);
        org.junit.Assert.assertNull(imageMetadata30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertNull(byteArray35);
        org.junit.Assert.assertNull(formatCompliance37);
        org.junit.Assert.assertNull(byteArray42);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteOrder46);
        org.junit.Assert.assertNull(formatCompliance48);
        org.junit.Assert.assertNotNull(pcxImagingParameters49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "pcx" + "'", str52, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters53);
        org.junit.Assert.assertNull(imageMetadata54);
        org.junit.Assert.assertNull(byteArray55);
    }

    @Test
    public void test0367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0367");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser0.canAcceptType(imageFormat23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder27 = pcxImageParser26.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance29 = pcxImageParser26.getFormatCompliance(byteSource28);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser26.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser26.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension32 = pcxImageParser0.getImageSize(byteSource25, pcxImagingParameters31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNull(formatCompliance29);
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
    }

    @Test
    public void test0368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0368");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        java.lang.String str9 = pcxImageParser0.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = pcxImageParser0.getDefaultParameters();
        java.io.PrintWriter printWriter11 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = pcxImageParser0.dumpImageFile(printWriter11, byteSource12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Pcx-Custom" + "'", str9, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters10);
    }

    @Test
    public void test0369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0369");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters6 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo8 = pcxImageParser0.getImageInfo(byteSource7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNotNull(pcxImagingParameters6);
    }

    @Test
    public void test0370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0370");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo23 = pcxImageParser0.getImageInfo(byteSource22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
    }

    @Test
    public void test0371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0371");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters7);
        java.lang.String str9 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList11 = pcxImageParser0.getAllBufferedImages(byteSource10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "pcx" + "'", str9, "pcx");
    }

    @Test
    public void test0372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0372");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = null;
        byte[] byteArray35 = pcxImageParser32.getIccProfileBytes(byteSource33, pcxImagingParameters34);
        java.nio.ByteOrder byteOrder36 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser38 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder39 = pcxImageParser38.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance41 = pcxImageParser38.getFormatCompliance(byteSource40);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser38.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat43 = null;
        boolean boolean44 = pcxImageParser38.canAcceptType(imageFormat43);
        java.lang.String str45 = pcxImageParser38.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser38.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser32.getMetadata(byteSource37, pcxImagingParameters46);
        byte[] byteArray48 = pcxImageParser0.getIccProfileBytes(byteSource31, pcxImagingParameters46);
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser50 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = null;
        byte[] byteArray53 = pcxImageParser50.getIccProfileBytes(byteSource51, pcxImagingParameters52);
        java.lang.String str54 = pcxImageParser50.getName();
        java.lang.String str55 = pcxImageParser50.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser57 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder58 = pcxImageParser57.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance60 = pcxImageParser57.getFormatCompliance(byteSource59);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters61 = pcxImageParser57.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata62 = pcxImageParser50.getMetadata(byteSource56, pcxImagingParameters61);
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser64 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata66 = pcxImageParser64.getMetadata(byteSource65);
        org.apache.commons.imaging.bytesource.ByteSource byteSource67 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser68 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder69 = pcxImageParser68.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource70 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance71 = pcxImageParser68.getFormatCompliance(byteSource70);
        org.apache.commons.imaging.bytesource.ByteSource byteSource72 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata73 = pcxImageParser68.getMetadata(byteSource72);
        boolean boolean75 = pcxImageParser68.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters76 = pcxImageParser68.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata77 = pcxImageParser64.getMetadata(byteSource67, pcxImagingParameters76);
        byte[] byteArray78 = pcxImageParser50.getIccProfileBytes(byteSource63, pcxImagingParameters76);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension79 = pcxImageParser0.getImageSize(byteSource49, pcxImagingParameters76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNull(byteArray35);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteOrder39);
        org.junit.Assert.assertNull(formatCompliance41);
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "pcx" + "'", str45, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
        org.junit.Assert.assertNull(imageMetadata47);
        org.junit.Assert.assertNull(byteArray48);
        org.junit.Assert.assertNull(byteArray53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Pcx-Custom" + "'", str54, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Pcx-Custom" + "'", str55, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder58);
        org.junit.Assert.assertNull(formatCompliance60);
        org.junit.Assert.assertNotNull(pcxImagingParameters61);
        org.junit.Assert.assertNull(imageMetadata62);
        org.junit.Assert.assertNull(imageMetadata66);
        org.junit.Assert.assertNotNull(byteOrder69);
        org.junit.Assert.assertNull(formatCompliance71);
        org.junit.Assert.assertNull(imageMetadata73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters76);
        org.junit.Assert.assertNull(imageMetadata77);
        org.junit.Assert.assertNull(byteArray78);
    }

    @Test
    public void test0373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0373");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        java.lang.String str8 = pcxImageParser0.getName();
        java.io.File file9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat15 = null;
        boolean boolean16 = pcxImageParser10.canAcceptType(imageFormat15);
        java.lang.String str17 = pcxImageParser10.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        java.lang.String str19 = pcxImageParser10.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters20 = pcxImageParser10.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension21 = pcxImageParser0.getImageSize(file9, pcxImagingParameters20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Pcx-Custom" + "'", str8, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "pcx" + "'", str17, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Pcx-Custom" + "'", str19, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters20);
    }

    @Test
    public void test0374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0374");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser0.getDefaultParameters();
        java.io.File file23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str24 = pcxImageParser0.dumpImageFile(file23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
    }

    @Test
    public void test0375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0375");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = null;
        byte[] byteArray12 = pcxImageParser9.getIccProfileBytes(byteSource10, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser9.getName();
        java.lang.String str14 = pcxImageParser9.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder17 = pcxImageParser16.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance19 = pcxImageParser16.getFormatCompliance(byteSource18);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters20 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata21 = pcxImageParser9.getMetadata(byteSource15, pcxImagingParameters20);
        java.lang.String str22 = pcxImageParser9.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser9.getMetadata(byteSource23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = null;
        byte[] byteArray29 = pcxImageParser26.getIccProfileBytes(byteSource27, pcxImagingParameters28);
        java.lang.String str30 = pcxImageParser26.getName();
        java.lang.String str31 = pcxImageParser26.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder34 = pcxImageParser33.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance36 = pcxImageParser33.getFormatCompliance(byteSource35);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = pcxImageParser33.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser26.getMetadata(byteSource32, pcxImagingParameters37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = null;
        byte[] byteArray43 = pcxImageParser40.getIccProfileBytes(byteSource41, pcxImagingParameters42);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = pcxImageParser40.getDefaultParameters();
        byte[] byteArray45 = pcxImageParser26.getIccProfileBytes(byteSource39, pcxImagingParameters44);
        byte[] byteArray46 = pcxImageParser9.getIccProfileBytes(byteSource25, pcxImagingParameters44);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension47 = pcxImageParser0.getImageSize(byteSource8, pcxImagingParameters44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(byteArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Pcx-Custom" + "'", str14, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder17);
        org.junit.Assert.assertNull(formatCompliance19);
        org.junit.Assert.assertNotNull(pcxImagingParameters20);
        org.junit.Assert.assertNull(imageMetadata21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Pcx-Custom" + "'", str22, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertNull(byteArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Pcx-Custom" + "'", str30, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Pcx-Custom" + "'", str31, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder34);
        org.junit.Assert.assertNull(formatCompliance36);
        org.junit.Assert.assertNotNull(pcxImagingParameters37);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNull(byteArray43);
        org.junit.Assert.assertNotNull(pcxImagingParameters44);
        org.junit.Assert.assertNull(byteArray45);
        org.junit.Assert.assertNull(byteArray46);
    }

    @Test
    public void test0376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0376");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        java.io.File file32 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser0.getMetadata(file32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder31);
    }

    @Test
    public void test0377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0377");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        java.io.File file31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser38 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser38.getMetadata(byteSource39);
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser42 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder43 = pcxImageParser42.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance45 = pcxImageParser42.getFormatCompliance(byteSource44);
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser42.getMetadata(byteSource46);
        boolean boolean49 = pcxImageParser42.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters50 = pcxImageParser42.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata51 = pcxImageParser38.getMetadata(byteSource41, pcxImagingParameters50);
        byte[] byteArray52 = pcxImageParser32.getIccProfileBytes(byteSource37, pcxImagingParameters50);
        java.lang.String str53 = pcxImageParser32.getName();
        java.lang.String str54 = pcxImageParser32.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser56 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder57 = pcxImageParser56.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance59 = pcxImageParser56.getFormatCompliance(byteSource58);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters60 = pcxImageParser56.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat61 = null;
        boolean boolean62 = pcxImageParser56.canAcceptType(imageFormat61);
        java.lang.String str63 = pcxImageParser56.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters64 = pcxImageParser56.getDefaultParameters();
        byte[] byteArray65 = pcxImageParser32.getIccProfileBytes(byteSource55, pcxImagingParameters64);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray66 = pcxImageParser0.getIccProfileBytes(file31, pcxImagingParameters64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNull(formatCompliance45);
        org.junit.Assert.assertNull(imageMetadata47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters50);
        org.junit.Assert.assertNull(imageMetadata51);
        org.junit.Assert.assertNull(byteArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Pcx-Custom" + "'", str53, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "pcx" + "'", str54, "pcx");
        org.junit.Assert.assertNotNull(byteOrder57);
        org.junit.Assert.assertNull(formatCompliance59);
        org.junit.Assert.assertNotNull(pcxImagingParameters60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "pcx" + "'", str63, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters64);
        org.junit.Assert.assertNull(byteArray65);
    }

    @Test
    public void test0378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0378");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = null;
        byte[] byteArray20 = pcxImageParser17.getIccProfileBytes(byteSource18, pcxImagingParameters19);
        java.lang.String str21 = pcxImageParser17.getName();
        java.lang.String str22 = pcxImageParser17.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser17.getMetadata(byteSource23, pcxImagingParameters28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = null;
        byte[] byteArray34 = pcxImageParser31.getIccProfileBytes(byteSource32, pcxImagingParameters33);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser31.getDefaultParameters();
        byte[] byteArray36 = pcxImageParser17.getIccProfileBytes(byteSource30, pcxImagingParameters35);
        byte[] byteArray37 = pcxImageParser0.getIccProfileBytes(byteSource16, pcxImagingParameters35);
        java.io.File file38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder40 = pcxImageParser39.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance42 = pcxImageParser39.getFormatCompliance(byteSource41);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser39.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = pcxImageParser39.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray45 = pcxImageParser0.getIccProfileBytes(file38, pcxImagingParameters44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Pcx-Custom" + "'", str22, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertNull(byteArray34);
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertNull(byteArray37);
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNull(formatCompliance42);
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertNotNull(pcxImagingParameters44);
    }

    @Test
    public void test0379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0379");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = null;
        byte[] byteArray10 = pcxImageParser7.getIccProfileBytes(byteSource8, pcxImagingParameters9);
        java.lang.String str11 = pcxImageParser7.getName();
        java.lang.String str12 = pcxImageParser7.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance14 = pcxImageParser7.getFormatCompliance(byteSource13);
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder17 = pcxImageParser16.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance19 = pcxImageParser16.getFormatCompliance(byteSource18);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters20 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat21 = null;
        boolean boolean22 = pcxImageParser16.canAcceptType(imageFormat21);
        java.lang.String str23 = pcxImageParser16.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = pcxImageParser16.getDefaultParameters();
        byte[] byteArray25 = pcxImageParser7.getIccProfileBytes(byteSource15, pcxImagingParameters24);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo26 = pcxImageParser0.getImageInfo(byteSource6, pcxImagingParameters24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNull(byteArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Pcx-Custom" + "'", str11, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Pcx-Custom" + "'", str12, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance14);
        org.junit.Assert.assertNotNull(byteOrder17);
        org.junit.Assert.assertNull(formatCompliance19);
        org.junit.Assert.assertNotNull(pcxImagingParameters20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "pcx" + "'", str23, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters24);
        org.junit.Assert.assertNull(byteArray25);
    }

    @Test
    public void test0380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0380");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.ImageFormat imageFormat8 = null;
        boolean boolean9 = pcxImageParser0.canAcceptType(imageFormat8);
        java.io.File file10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata11 = pcxImageParser0.getMetadata(file10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0381");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = null;
        byte[] byteArray19 = pcxImageParser16.getIccProfileBytes(byteSource17, pcxImagingParameters18);
        java.lang.String str20 = pcxImageParser16.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser10.getMetadata(byteSource15, pcxImagingParameters21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser0.getMetadata(byteSource9, pcxImagingParameters23);
        java.lang.String str25 = pcxImageParser0.getName();
        java.lang.String str26 = pcxImageParser0.getName();
        java.io.PrintWriter printWriter27 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean29 = pcxImageParser0.dumpImageFile(printWriter27, byteSource28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "pcx" + "'", str20, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Pcx-Custom" + "'", str26, "Pcx-Custom");
    }

    @Test
    public void test0382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0382");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = null;
        byte[] byteArray10 = pcxImageParser7.getIccProfileBytes(byteSource8, pcxImagingParameters9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage12 = pcxImageParser0.getBufferedImage(byteSource6, pcxImagingParameters11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
    }

    @Test
    public void test0383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0383");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        boolean boolean9 = pcxImageParser0.canAcceptExtension("pcx");
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser11.getMetadata(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder16 = pcxImageParser15.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser15.getFormatCompliance(byteSource17);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser15.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser21.getMetadata(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder26 = pcxImageParser25.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance28 = pcxImageParser25.getFormatCompliance(byteSource27);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata30 = pcxImageParser25.getMetadata(byteSource29);
        boolean boolean32 = pcxImageParser25.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser25.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser21.getMetadata(byteSource24, pcxImagingParameters33);
        byte[] byteArray35 = pcxImageParser15.getIccProfileBytes(byteSource20, pcxImagingParameters33);
        java.lang.String str36 = pcxImageParser15.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = pcxImageParser15.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser11.getMetadata(byteSource14, pcxImagingParameters37);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = pcxImageParser11.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo40 = pcxImageParser0.getImageInfo(byteSource10, pcxImagingParameters39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNull(formatCompliance18);
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNotNull(byteOrder26);
        org.junit.Assert.assertNull(formatCompliance28);
        org.junit.Assert.assertNull(imageMetadata30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertNull(byteArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Pcx-Custom" + "'", str36, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters37);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNotNull(pcxImagingParameters39);
    }

    @Test
    public void test0384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0384");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.nio.ByteOrder byteOrder29 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo31 = pcxImageParser0.getImageInfo(byteSource30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNotNull(byteOrder29);
    }

    @Test
    public void test0385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0385");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.ImageFormat imageFormat8 = null;
        boolean boolean9 = pcxImageParser0.canAcceptType(imageFormat8);
        java.io.File file10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder12 = pcxImageParser11.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance14 = pcxImageParser11.getFormatCompliance(byteSource13);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = pcxImageParser11.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat16 = null;
        boolean boolean17 = pcxImageParser11.canAcceptType(imageFormat16);
        java.lang.String str18 = pcxImageParser11.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser11.getDefaultParameters();
        java.lang.String str20 = pcxImageParser11.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser11.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo22 = pcxImageParser0.getImageInfo(file10, pcxImagingParameters21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(byteOrder12);
        org.junit.Assert.assertNull(formatCompliance14);
        org.junit.Assert.assertNotNull(pcxImagingParameters15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "pcx" + "'", str18, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Pcx-Custom" + "'", str20, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
    }

    @Test
    public void test0386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0386");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.nio.ByteOrder byteOrder4 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder7 = pcxImageParser6.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance9 = pcxImageParser6.getFormatCompliance(byteSource8);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat11 = null;
        boolean boolean12 = pcxImageParser6.canAcceptType(imageFormat11);
        java.lang.String str13 = pcxImageParser6.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource5, pcxImagingParameters14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder18 = pcxImageParser17.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance20 = pcxImageParser17.getFormatCompliance(byteSource19);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser17.getMetadata(byteSource21);
        boolean boolean24 = pcxImageParser17.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser17.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata26 = pcxImageParser0.getMetadata(byteSource16, pcxImagingParameters25);
        java.io.File file27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder29 = pcxImageParser28.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance31 = pcxImageParser28.getFormatCompliance(byteSource30);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser28.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser34.getMetadata(byteSource35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser38 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder39 = pcxImageParser38.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance41 = pcxImageParser38.getFormatCompliance(byteSource40);
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata43 = pcxImageParser38.getMetadata(byteSource42);
        boolean boolean45 = pcxImageParser38.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser38.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser34.getMetadata(byteSource37, pcxImagingParameters46);
        byte[] byteArray48 = pcxImageParser28.getIccProfileBytes(byteSource33, pcxImagingParameters46);
        java.lang.String str49 = pcxImageParser28.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters50 = pcxImageParser28.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension51 = pcxImageParser0.getImageSize(file27, pcxImagingParameters50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNull(formatCompliance9);
        org.junit.Assert.assertNotNull(pcxImagingParameters10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNull(formatCompliance20);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
        org.junit.Assert.assertNull(imageMetadata26);
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertNull(formatCompliance31);
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertNotNull(byteOrder39);
        org.junit.Assert.assertNull(formatCompliance41);
        org.junit.Assert.assertNull(imageMetadata43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
        org.junit.Assert.assertNull(imageMetadata47);
        org.junit.Assert.assertNull(byteArray48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Pcx-Custom" + "'", str49, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters50);
    }

    @Test
    public void test0387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0387");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = null;
        byte[] byteArray35 = pcxImageParser32.getIccProfileBytes(byteSource33, pcxImagingParameters34);
        java.nio.ByteOrder byteOrder36 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser38 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder39 = pcxImageParser38.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance41 = pcxImageParser38.getFormatCompliance(byteSource40);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser38.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat43 = null;
        boolean boolean44 = pcxImageParser38.canAcceptType(imageFormat43);
        java.lang.String str45 = pcxImageParser38.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser38.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser32.getMetadata(byteSource37, pcxImagingParameters46);
        byte[] byteArray48 = pcxImageParser0.getIccProfileBytes(byteSource31, pcxImagingParameters46);
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser50 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder51 = pcxImageParser50.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance53 = pcxImageParser50.getFormatCompliance(byteSource52);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters54 = pcxImageParser50.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat55 = null;
        boolean boolean56 = pcxImageParser50.canAcceptType(imageFormat55);
        java.lang.String str57 = pcxImageParser50.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters58 = pcxImageParser50.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage59 = pcxImageParser0.getBufferedImage(byteSource49, pcxImagingParameters58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNull(byteArray35);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteOrder39);
        org.junit.Assert.assertNull(formatCompliance41);
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "pcx" + "'", str45, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
        org.junit.Assert.assertNull(imageMetadata47);
        org.junit.Assert.assertNull(byteArray48);
        org.junit.Assert.assertNotNull(byteOrder51);
        org.junit.Assert.assertNull(formatCompliance53);
        org.junit.Assert.assertNotNull(pcxImagingParameters54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "pcx" + "'", str57, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters58);
    }

    @Test
    public void test0388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0388");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        java.awt.image.BufferedImage bufferedImage2 = null;
        java.io.OutputStream outputStream3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage2, outputStream3, pcxImagingParameters22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
    }

    @Test
    public void test0389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0389");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        java.io.File file14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = null;
        byte[] byteArray18 = pcxImageParser15.getIccProfileBytes(byteSource16, pcxImagingParameters17);
        java.lang.String str19 = pcxImageParser15.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters20 = pcxImageParser15.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension21 = pcxImageParser0.getImageSize(file14, pcxImagingParameters20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "pcx" + "'", str19, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters20);
    }

    @Test
    public void test0390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0390");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str30 = pcxImageParser0.dumpImageFile(byteSource29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
    }

    @Test
    public void test0391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0391");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList30 = pcxImageParser0.getAllBufferedImages(byteSource29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
    }

    @Test
    public void test0392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0392");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata17 = pcxImageParser0.getMetadata(byteSource16);
        java.io.File file18 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser0.getMetadata(file18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertNull(imageMetadata17);
    }

    @Test
    public void test0393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0393");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource14);
        org.apache.commons.imaging.ImageFormat imageFormat16 = null;
        boolean boolean17 = pcxImageParser0.canAcceptType(imageFormat16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder20 = pcxImageParser19.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance22 = pcxImageParser19.getFormatCompliance(byteSource21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser19.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser25.getMetadata(byteSource26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder30 = pcxImageParser29.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser29.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser29.getMetadata(byteSource33);
        boolean boolean36 = pcxImageParser29.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser25.getMetadata(byteSource28, pcxImagingParameters37);
        byte[] byteArray39 = pcxImageParser19.getIccProfileBytes(byteSource24, pcxImagingParameters37);
        java.lang.String str40 = pcxImageParser19.getName();
        java.lang.String str41 = pcxImageParser19.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser43 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder44 = pcxImageParser43.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance46 = pcxImageParser43.getFormatCompliance(byteSource45);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = pcxImageParser43.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat48 = null;
        boolean boolean49 = pcxImageParser43.canAcceptType(imageFormat48);
        java.lang.String str50 = pcxImageParser43.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters51 = pcxImageParser43.getDefaultParameters();
        byte[] byteArray52 = pcxImageParser19.getIccProfileBytes(byteSource42, pcxImagingParameters51);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage53 = pcxImageParser0.getBufferedImage(byteSource18, pcxImagingParameters51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNull(formatCompliance22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(byteOrder30);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters37);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNull(byteArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Pcx-Custom" + "'", str40, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "pcx" + "'", str41, "pcx");
        org.junit.Assert.assertNotNull(byteOrder44);
        org.junit.Assert.assertNull(formatCompliance46);
        org.junit.Assert.assertNotNull(pcxImagingParameters47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "pcx" + "'", str50, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters51);
        org.junit.Assert.assertNull(byteArray52);
    }

    @Test
    public void test0394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0394");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = null;
        byte[] byteArray9 = pcxImageParser6.getIccProfileBytes(byteSource7, pcxImagingParameters8);
        java.lang.String str10 = pcxImageParser6.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource5, pcxImagingParameters11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser0.getDefaultParameters();
        java.io.File file14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension15 = pcxImageParser0.getImageSize(file14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(byteArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "pcx" + "'", str10, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
    }

    @Test
    public void test0395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0395");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.ImageFormat imageFormat8 = null;
        boolean boolean9 = pcxImageParser0.canAcceptType(imageFormat8);
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser0.getFormatCompliance(byteSource10);
        java.io.File file12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser0.getMetadata(file12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(formatCompliance11);
    }

    @Test
    public void test0396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0396");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo32 = pcxImageParser0.getImageInfo(byteSource31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test0397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0397");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser0.getFormatCompliance(byteSource5);
        java.nio.ByteOrder byteOrder7 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = pcxImageParser0.dumpImageFile(byteSource8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance6);
        org.junit.Assert.assertNotNull(byteOrder7);
    }

    @Test
    public void test0398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0398");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat2 = null;
        boolean boolean3 = pcxImageParser0.canAcceptType(imageFormat2);
        java.io.File file4 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser5 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = null;
        byte[] byteArray8 = pcxImageParser5.getIccProfileBytes(byteSource6, pcxImagingParameters7);
        java.lang.String str9 = pcxImageParser5.getName();
        java.lang.String str10 = pcxImageParser5.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser12 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder13 = pcxImageParser12.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance15 = pcxImageParser12.getFormatCompliance(byteSource14);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = pcxImageParser12.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata17 = pcxImageParser5.getMetadata(byteSource11, pcxImagingParameters16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata21 = pcxImageParser19.getMetadata(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser23 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder24 = pcxImageParser23.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance26 = pcxImageParser23.getFormatCompliance(byteSource25);
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata28 = pcxImageParser23.getMetadata(byteSource27);
        boolean boolean30 = pcxImageParser23.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser23.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser19.getMetadata(byteSource22, pcxImagingParameters31);
        byte[] byteArray33 = pcxImageParser5.getIccProfileBytes(byteSource18, pcxImagingParameters31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser5.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser37 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = null;
        byte[] byteArray40 = pcxImageParser37.getIccProfileBytes(byteSource38, pcxImagingParameters39);
        java.nio.ByteOrder byteOrder41 = pcxImageParser37.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser43 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder44 = pcxImageParser43.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance46 = pcxImageParser43.getFormatCompliance(byteSource45);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = pcxImageParser43.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat48 = null;
        boolean boolean49 = pcxImageParser43.canAcceptType(imageFormat48);
        java.lang.String str50 = pcxImageParser43.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters51 = pcxImageParser43.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata52 = pcxImageParser37.getMetadata(byteSource42, pcxImagingParameters51);
        byte[] byteArray53 = pcxImageParser5.getIccProfileBytes(byteSource36, pcxImagingParameters51);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension54 = pcxImageParser0.getImageSize(file4, pcxImagingParameters51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(byteArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Pcx-Custom" + "'", str9, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Pcx-Custom" + "'", str10, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNull(formatCompliance15);
        org.junit.Assert.assertNotNull(pcxImagingParameters16);
        org.junit.Assert.assertNull(imageMetadata17);
        org.junit.Assert.assertNull(imageMetadata21);
        org.junit.Assert.assertNotNull(byteOrder24);
        org.junit.Assert.assertNull(formatCompliance26);
        org.junit.Assert.assertNull(imageMetadata28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNull(byteArray40);
        org.junit.Assert.assertNotNull(byteOrder41);
        org.junit.Assert.assertNotNull(byteOrder44);
        org.junit.Assert.assertNull(formatCompliance46);
        org.junit.Assert.assertNotNull(pcxImagingParameters47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "pcx" + "'", str50, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters51);
        org.junit.Assert.assertNull(imageMetadata52);
        org.junit.Assert.assertNull(byteArray53);
    }

    @Test
    public void test0399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0399");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance14 = pcxImageParser0.getFormatCompliance(byteSource13);
        java.io.File file15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension16 = pcxImageParser0.getImageSize(file15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(formatCompliance14);
    }

    @Test
    public void test0400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0400");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser0.canAcceptType(imageFormat23);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser0.getDefaultParameters();
        java.io.File file26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList27 = pcxImageParser0.getAllBufferedImages(file26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
    }

    @Test
    public void test0401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0401");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.ImageFormat imageFormat8 = null;
        boolean boolean9 = pcxImageParser0.canAcceptType(imageFormat8);
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser0.getFormatCompliance(byteSource10);
        java.io.File file12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension13 = pcxImageParser0.getImageSize(file12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(formatCompliance11);
    }

    @Test
    public void test0402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0402");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser5 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = null;
        byte[] byteArray8 = pcxImageParser5.getIccProfileBytes(byteSource6, pcxImagingParameters7);
        java.lang.String str9 = pcxImageParser5.getName();
        java.lang.String str10 = pcxImageParser5.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser12 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder13 = pcxImageParser12.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance15 = pcxImageParser12.getFormatCompliance(byteSource14);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = pcxImageParser12.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata17 = pcxImageParser5.getMetadata(byteSource11, pcxImagingParameters16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata21 = pcxImageParser19.getMetadata(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser23 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder24 = pcxImageParser23.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance26 = pcxImageParser23.getFormatCompliance(byteSource25);
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata28 = pcxImageParser23.getMetadata(byteSource27);
        boolean boolean30 = pcxImageParser23.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser23.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser19.getMetadata(byteSource22, pcxImagingParameters31);
        byte[] byteArray33 = pcxImageParser5.getIccProfileBytes(byteSource18, pcxImagingParameters31);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo34 = pcxImageParser0.getImageInfo(byteSource4, pcxImagingParameters31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(byteArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Pcx-Custom" + "'", str9, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Pcx-Custom" + "'", str10, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNull(formatCompliance15);
        org.junit.Assert.assertNotNull(pcxImagingParameters16);
        org.junit.Assert.assertNull(imageMetadata17);
        org.junit.Assert.assertNull(imageMetadata21);
        org.junit.Assert.assertNotNull(byteOrder24);
        org.junit.Assert.assertNull(formatCompliance26);
        org.junit.Assert.assertNull(imageMetadata28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNull(byteArray33);
    }

    @Test
    public void test0403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0403");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        java.io.File file7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension8 = pcxImageParser0.getImageSize(file7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
    }

    @Test
    public void test0404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0404");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser9.canAcceptType(imageFormat14);
        java.lang.String str16 = pcxImageParser9.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser9.getDefaultParameters();
        byte[] byteArray18 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters17);
        java.io.File file19 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean20 = pcxImageParser0.canAcceptExtension(file19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "pcx" + "'", str16, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
        org.junit.Assert.assertNull(byteArray18);
    }

    @Test
    public void test0405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0405");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = null;
        byte[] byteArray13 = pcxImageParser10.getIccProfileBytes(byteSource11, pcxImagingParameters12);
        java.lang.String str14 = pcxImageParser10.getName();
        java.lang.String str15 = pcxImageParser10.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder18 = pcxImageParser17.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance20 = pcxImageParser17.getFormatCompliance(byteSource19);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser17.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser10.getMetadata(byteSource16, pcxImagingParameters21);
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = null;
        byte[] byteArray27 = pcxImageParser24.getIccProfileBytes(byteSource25, pcxImagingParameters26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        byte[] byteArray29 = pcxImageParser10.getIccProfileBytes(byteSource23, pcxImagingParameters28);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo30 = pcxImageParser0.getImageInfo(byteSource9, pcxImagingParameters28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(byteArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Pcx-Custom" + "'", str14, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Pcx-Custom" + "'", str15, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNull(formatCompliance20);
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNull(byteArray27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(byteArray29);
    }

    @Test
    public void test0406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0406");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        boolean boolean9 = pcxImageParser0.canAcceptExtension("");
        boolean boolean11 = pcxImageParser0.canAcceptExtension("hi!");
        java.io.File file12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder14 = pcxImageParser13.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser13.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = null;
        byte[] byteArray22 = pcxImageParser19.getIccProfileBytes(byteSource20, pcxImagingParameters21);
        java.lang.String str23 = pcxImageParser19.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = pcxImageParser19.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser13.getMetadata(byteSource18, pcxImagingParameters24);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser13.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage27 = pcxImageParser0.getBufferedImage(file12, pcxImagingParameters26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(byteOrder14);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
        org.junit.Assert.assertNull(byteArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "pcx" + "'", str23, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters24);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
    }

    @Test
    public void test0407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0407");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        java.nio.ByteOrder byteOrder32 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder35 = pcxImageParser34.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance37 = pcxImageParser34.getFormatCompliance(byteSource36);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser34.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser40.getMetadata(byteSource41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder45 = pcxImageParser44.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance47 = pcxImageParser44.getFormatCompliance(byteSource46);
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser44.getMetadata(byteSource48);
        boolean boolean51 = pcxImageParser44.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser44.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser40.getMetadata(byteSource43, pcxImagingParameters52);
        byte[] byteArray54 = pcxImageParser34.getIccProfileBytes(byteSource39, pcxImagingParameters52);
        java.lang.String str55 = pcxImageParser34.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters56 = pcxImageParser34.getDefaultParameters();
        byte[] byteArray57 = pcxImageParser0.getIccProfileBytes(byteSource33, pcxImagingParameters56);
        org.apache.commons.imaging.ImageFormat imageFormat58 = null;
        boolean boolean59 = pcxImageParser0.canAcceptType(imageFormat58);
        java.io.File file60 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance61 = pcxImageParser0.getFormatCompliance(file60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNull(formatCompliance37);
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertNotNull(byteOrder45);
        org.junit.Assert.assertNull(formatCompliance47);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertNull(byteArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Pcx-Custom" + "'", str55, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters56);
        org.junit.Assert.assertNull(byteArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test0408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0408");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = null;
        byte[] byteArray6 = pcxImageParser0.getIccProfileBytes(byteSource4, pcxImagingParameters5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension13 = pcxImageParser0.getImageSize(byteSource7, pcxImagingParameters12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNull(byteArray6);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
    }

    @Test
    public void test0409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0409");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        java.nio.ByteOrder byteOrder32 = pcxImageParser0.getByteOrder();
        java.io.File file33 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList34 = pcxImageParser0.getAllBufferedImages(file33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(byteOrder32);
    }

    @Test
    public void test0410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0410");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo23 = pcxImageParser0.getImageInfo(byteSource22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
    }

    @Test
    public void test0411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0411");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        boolean boolean14 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser0.getFormatCompliance(byteSource15);
        java.lang.String str17 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo19 = pcxImageParser0.getImageInfo(byteSource18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Pcx-Custom" + "'", str17, "Pcx-Custom");
    }

    @Test
    public void test0412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0412");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.io.File file4 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser5 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = null;
        byte[] byteArray8 = pcxImageParser5.getIccProfileBytes(byteSource6, pcxImagingParameters7);
        java.lang.String str9 = pcxImageParser5.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = pcxImageParser5.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser5.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo12 = pcxImageParser0.getImageInfo(file4, pcxImagingParameters11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNull(byteArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "pcx" + "'", str9, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
    }

    @Test
    public void test0413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0413");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        java.io.File file7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(file7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
    }

    @Test
    public void test0414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0414");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = null;
        byte[] byteArray12 = pcxImageParser9.getIccProfileBytes(byteSource10, pcxImagingParameters11);
        java.nio.ByteOrder byteOrder13 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder16 = pcxImageParser15.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser15.getFormatCompliance(byteSource17);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser15.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat20 = null;
        boolean boolean21 = pcxImageParser15.canAcceptType(imageFormat20);
        java.lang.String str22 = pcxImageParser15.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser15.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser9.getMetadata(byteSource14, pcxImagingParameters23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata28 = pcxImageParser26.getMetadata(byteSource27);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder31 = pcxImageParser30.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance33 = pcxImageParser30.getFormatCompliance(byteSource32);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser30.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser36 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser36.getMetadata(byteSource37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder41 = pcxImageParser40.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance43 = pcxImageParser40.getFormatCompliance(byteSource42);
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata45 = pcxImageParser40.getMetadata(byteSource44);
        boolean boolean47 = pcxImageParser40.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = pcxImageParser40.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser36.getMetadata(byteSource39, pcxImagingParameters48);
        byte[] byteArray50 = pcxImageParser30.getIccProfileBytes(byteSource35, pcxImagingParameters48);
        java.lang.String str51 = pcxImageParser30.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser30.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser26.getMetadata(byteSource29, pcxImagingParameters52);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters54 = pcxImageParser26.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser56 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters58 = null;
        byte[] byteArray59 = pcxImageParser56.getIccProfileBytes(byteSource57, pcxImagingParameters58);
        java.lang.String str60 = pcxImageParser56.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters61 = pcxImageParser56.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata62 = pcxImageParser26.getMetadata(byteSource55, pcxImagingParameters61);
        byte[] byteArray63 = pcxImageParser9.getIccProfileBytes(byteSource25, pcxImagingParameters61);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage64 = pcxImageParser0.getBufferedImage(byteSource8, pcxImagingParameters61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Pcx-Custom" + "'", str7, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray12);
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNull(formatCompliance18);
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertNull(imageMetadata28);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNull(formatCompliance33);
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNotNull(byteOrder41);
        org.junit.Assert.assertNull(formatCompliance43);
        org.junit.Assert.assertNull(imageMetadata45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters48);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertNull(byteArray50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Pcx-Custom" + "'", str51, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertNotNull(pcxImagingParameters54);
        org.junit.Assert.assertNull(byteArray59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "pcx" + "'", str60, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters61);
        org.junit.Assert.assertNull(imageMetadata62);
        org.junit.Assert.assertNull(byteArray63);
    }

    @Test
    public void test0415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0415");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = null;
        byte[] byteArray17 = pcxImageParser14.getIccProfileBytes(byteSource15, pcxImagingParameters16);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser14.getDefaultParameters();
        byte[] byteArray19 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder22 = pcxImageParser21.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance24 = pcxImageParser21.getFormatCompliance(byteSource23);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat26 = null;
        boolean boolean27 = pcxImageParser21.canAcceptType(imageFormat26);
        java.lang.String str28 = pcxImageParser21.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = pcxImageParser21.getDefaultParameters();
        java.lang.String str30 = pcxImageParser21.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser0.getMetadata(byteSource20, pcxImagingParameters31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = null;
        byte[] byteArray37 = pcxImageParser34.getIccProfileBytes(byteSource35, pcxImagingParameters36);
        java.lang.String str38 = pcxImageParser34.getName();
        java.lang.String str39 = pcxImageParser34.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser41 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder42 = pcxImageParser41.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance44 = pcxImageParser41.getFormatCompliance(byteSource43);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser41.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser34.getMetadata(byteSource40, pcxImagingParameters45);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser48 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata50 = pcxImageParser48.getMetadata(byteSource49);
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser52 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder53 = pcxImageParser52.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance55 = pcxImageParser52.getFormatCompliance(byteSource54);
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata57 = pcxImageParser52.getMetadata(byteSource56);
        boolean boolean59 = pcxImageParser52.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters60 = pcxImageParser52.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata61 = pcxImageParser48.getMetadata(byteSource51, pcxImagingParameters60);
        byte[] byteArray62 = pcxImageParser34.getIccProfileBytes(byteSource47, pcxImagingParameters60);
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance64 = pcxImageParser34.getFormatCompliance(byteSource63);
        java.nio.ByteOrder byteOrder65 = pcxImageParser34.getByteOrder();
        java.nio.ByteOrder byteOrder66 = pcxImageParser34.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource67 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser68 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder69 = pcxImageParser68.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource70 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance71 = pcxImageParser68.getFormatCompliance(byteSource70);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters72 = pcxImageParser68.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource73 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser74 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource75 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata76 = pcxImageParser74.getMetadata(byteSource75);
        org.apache.commons.imaging.bytesource.ByteSource byteSource77 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser78 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder79 = pcxImageParser78.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource80 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance81 = pcxImageParser78.getFormatCompliance(byteSource80);
        org.apache.commons.imaging.bytesource.ByteSource byteSource82 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata83 = pcxImageParser78.getMetadata(byteSource82);
        boolean boolean85 = pcxImageParser78.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters86 = pcxImageParser78.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata87 = pcxImageParser74.getMetadata(byteSource77, pcxImagingParameters86);
        byte[] byteArray88 = pcxImageParser68.getIccProfileBytes(byteSource73, pcxImagingParameters86);
        java.lang.String str89 = pcxImageParser68.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters90 = pcxImageParser68.getDefaultParameters();
        byte[] byteArray91 = pcxImageParser34.getIccProfileBytes(byteSource67, pcxImagingParameters90);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo92 = pcxImageParser0.getImageInfo(byteSource33, pcxImagingParameters90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(byteArray17);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNull(formatCompliance24);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "pcx" + "'", str28, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Pcx-Custom" + "'", str30, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNull(byteArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Pcx-Custom" + "'", str38, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Pcx-Custom" + "'", str39, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNull(formatCompliance44);
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertNull(imageMetadata46);
        org.junit.Assert.assertNull(imageMetadata50);
        org.junit.Assert.assertNotNull(byteOrder53);
        org.junit.Assert.assertNull(formatCompliance55);
        org.junit.Assert.assertNull(imageMetadata57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters60);
        org.junit.Assert.assertNull(imageMetadata61);
        org.junit.Assert.assertNull(byteArray62);
        org.junit.Assert.assertNull(formatCompliance64);
        org.junit.Assert.assertNotNull(byteOrder65);
        org.junit.Assert.assertNotNull(byteOrder66);
        org.junit.Assert.assertNotNull(byteOrder69);
        org.junit.Assert.assertNull(formatCompliance71);
        org.junit.Assert.assertNotNull(pcxImagingParameters72);
        org.junit.Assert.assertNull(imageMetadata76);
        org.junit.Assert.assertNotNull(byteOrder79);
        org.junit.Assert.assertNull(formatCompliance81);
        org.junit.Assert.assertNull(imageMetadata83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters86);
        org.junit.Assert.assertNull(imageMetadata87);
        org.junit.Assert.assertNull(byteArray88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "Pcx-Custom" + "'", str89, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters90);
        org.junit.Assert.assertNull(byteArray91);
    }

    @Test
    public void test0416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0416");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        java.nio.ByteOrder byteOrder32 = pcxImageParser0.getByteOrder();
        java.lang.String str33 = pcxImageParser0.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser0.getDefaultParameters();
        java.io.File file35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser36 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = null;
        byte[] byteArray39 = pcxImageParser36.getIccProfileBytes(byteSource37, pcxImagingParameters38);
        java.lang.String str40 = pcxImageParser36.getName();
        java.lang.String str41 = pcxImageParser36.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser43 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder44 = pcxImageParser43.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance46 = pcxImageParser43.getFormatCompliance(byteSource45);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = pcxImageParser43.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser36.getMetadata(byteSource42, pcxImagingParameters47);
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser50 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = null;
        byte[] byteArray53 = pcxImageParser50.getIccProfileBytes(byteSource51, pcxImagingParameters52);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters54 = pcxImageParser50.getDefaultParameters();
        byte[] byteArray55 = pcxImageParser36.getIccProfileBytes(byteSource49, pcxImagingParameters54);
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser57 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder58 = pcxImageParser57.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance60 = pcxImageParser57.getFormatCompliance(byteSource59);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters61 = pcxImageParser57.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat62 = null;
        boolean boolean63 = pcxImageParser57.canAcceptType(imageFormat62);
        java.lang.String str64 = pcxImageParser57.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters65 = pcxImageParser57.getDefaultParameters();
        java.lang.String str66 = pcxImageParser57.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters67 = pcxImageParser57.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata68 = pcxImageParser36.getMetadata(byteSource56, pcxImagingParameters67);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata69 = pcxImageParser0.getMetadata(file35, pcxImagingParameters67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Pcx-Custom" + "'", str33, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
        org.junit.Assert.assertNull(byteArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Pcx-Custom" + "'", str40, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Pcx-Custom" + "'", str41, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder44);
        org.junit.Assert.assertNull(formatCompliance46);
        org.junit.Assert.assertNotNull(pcxImagingParameters47);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNull(byteArray53);
        org.junit.Assert.assertNotNull(pcxImagingParameters54);
        org.junit.Assert.assertNull(byteArray55);
        org.junit.Assert.assertNotNull(byteOrder58);
        org.junit.Assert.assertNull(formatCompliance60);
        org.junit.Assert.assertNotNull(pcxImagingParameters61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "pcx" + "'", str64, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Pcx-Custom" + "'", str66, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters67);
        org.junit.Assert.assertNull(imageMetadata68);
    }

    @Test
    public void test0417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0417");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        boolean boolean30 = pcxImageParser0.canAcceptExtension("pcx");
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        java.lang.String str32 = pcxImageParser0.getName();
        java.io.File file33 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str34 = pcxImageParser0.dumpImageFile(file33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Pcx-Custom" + "'", str32, "Pcx-Custom");
    }

    @Test
    public void test0418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0418");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser7.getMetadata(byteSource11);
        boolean boolean14 = pcxImageParser7.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = pcxImageParser7.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage16 = pcxImageParser0.getBufferedImage(byteSource6, pcxImagingParameters15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters15);
    }

    @Test
    public void test0419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0419");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.ImageFormat imageFormat8 = null;
        boolean boolean9 = pcxImageParser0.canAcceptType(imageFormat8);
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser0.getFormatCompliance(byteSource10);
        java.io.PrintWriter printWriter12 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = pcxImageParser0.dumpImageFile(printWriter12, byteSource13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(formatCompliance11);
    }

    @Test
    public void test0420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0420");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat10 = null;
        boolean boolean11 = pcxImageParser0.canAcceptType(imageFormat10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser0.getFormatCompliance(byteSource12);
        java.io.File file14 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = pcxImageParser0.canAcceptExtension(file14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(pcxImagingParameters9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(formatCompliance13);
    }

    @Test
    public void test0421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0421");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.io.File file13 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata14 = pcxImageParser0.getMetadata(file13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
    }

    @Test
    public void test0422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0422");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        java.io.File file2 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser3 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = null;
        byte[] byteArray6 = pcxImageParser3.getIccProfileBytes(byteSource4, pcxImagingParameters5);
        java.lang.String str7 = pcxImageParser3.getName();
        java.lang.String str8 = pcxImageParser3.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser3.getMetadata(byteSource9, pcxImagingParameters14);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo16 = pcxImageParser0.getImageInfo(file2, pcxImagingParameters14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(byteArray6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Pcx-Custom" + "'", str7, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Pcx-Custom" + "'", str8, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNull(imageMetadata15);
    }

    @Test
    public void test0423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0423");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        java.nio.ByteOrder byteOrder32 = pcxImageParser0.getByteOrder();
        java.lang.String str33 = pcxImageParser0.getName();
        java.io.File file34 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser0.getFormatCompliance(file34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Pcx-Custom" + "'", str33, "Pcx-Custom");
    }

    @Test
    public void test0424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0424");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.io.File file6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = pcxImageParser0.dumpImageFile(file6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
    }

    @Test
    public void test0425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0425");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser9.canAcceptType(imageFormat14);
        java.lang.String str16 = pcxImageParser9.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser9.getDefaultParameters();
        byte[] byteArray18 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters17);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata21 = pcxImageParser0.getMetadata(byteSource20);
        java.io.File file22 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str23 = pcxImageParser0.dumpImageFile(file22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "pcx" + "'", str16, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
        org.junit.Assert.assertNull(imageMetadata21);
    }

    @Test
    public void test0426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0426");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters6 = pcxImageParser0.getDefaultParameters();
        java.awt.image.BufferedImage bufferedImage7 = null;
        java.io.OutputStream outputStream8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser9.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage7, outputStream8, pcxImagingParameters14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNotNull(pcxImagingParameters6);
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
    }

    @Test
    public void test0427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0427");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.ImageFormat imageFormat8 = null;
        boolean boolean9 = pcxImageParser0.canAcceptType(imageFormat8);
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser0.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = null;
        byte[] byteArray16 = pcxImageParser13.getIccProfileBytes(byteSource14, pcxImagingParameters15);
        java.lang.String str17 = pcxImageParser13.getName();
        java.lang.String str18 = pcxImageParser13.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser20 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder21 = pcxImageParser20.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance23 = pcxImageParser20.getFormatCompliance(byteSource22);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = pcxImageParser20.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser13.getMetadata(byteSource19, pcxImagingParameters24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser27 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser27.getMetadata(byteSource28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder32 = pcxImageParser31.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance34 = pcxImageParser31.getFormatCompliance(byteSource33);
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser31.getMetadata(byteSource35);
        boolean boolean38 = pcxImageParser31.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = pcxImageParser31.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser27.getMetadata(byteSource30, pcxImagingParameters39);
        byte[] byteArray41 = pcxImageParser13.getIccProfileBytes(byteSource26, pcxImagingParameters39);
        org.apache.commons.imaging.ImageFormat imageFormat42 = null;
        boolean boolean43 = pcxImageParser13.canAcceptType(imageFormat42);
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser45 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder46 = pcxImageParser45.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance48 = pcxImageParser45.getFormatCompliance(byteSource47);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters49 = pcxImageParser45.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat50 = null;
        boolean boolean51 = pcxImageParser45.canAcceptType(imageFormat50);
        java.lang.String str52 = pcxImageParser45.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters53 = pcxImageParser45.getDefaultParameters();
        byte[] byteArray54 = pcxImageParser13.getIccProfileBytes(byteSource44, pcxImagingParameters53);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage55 = pcxImageParser0.getBufferedImage(byteSource12, pcxImagingParameters53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNull(byteArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Pcx-Custom" + "'", str17, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Pcx-Custom" + "'", str18, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder21);
        org.junit.Assert.assertNull(formatCompliance23);
        org.junit.Assert.assertNotNull(pcxImagingParameters24);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertNull(formatCompliance34);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters39);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertNull(byteArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(byteOrder46);
        org.junit.Assert.assertNull(formatCompliance48);
        org.junit.Assert.assertNotNull(pcxImagingParameters49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "pcx" + "'", str52, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters53);
        org.junit.Assert.assertNull(byteArray54);
    }

    @Test
    public void test0428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0428");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser0.canAcceptType(imageFormat14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = null;
        byte[] byteArray20 = pcxImageParser17.getIccProfileBytes(byteSource18, pcxImagingParameters19);
        java.lang.String str21 = pcxImageParser17.getName();
        java.lang.String str22 = pcxImageParser17.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser17.getMetadata(byteSource23, pcxImagingParameters28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser31.getMetadata(byteSource32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder36 = pcxImageParser35.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance38 = pcxImageParser35.getFormatCompliance(byteSource37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser35.getMetadata(byteSource39);
        boolean boolean42 = pcxImageParser35.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser35.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser31.getMetadata(byteSource34, pcxImagingParameters43);
        byte[] byteArray45 = pcxImageParser17.getIccProfileBytes(byteSource30, pcxImagingParameters43);
        org.apache.commons.imaging.ImageFormat imageFormat46 = null;
        boolean boolean47 = pcxImageParser17.canAcceptType(imageFormat46);
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser49 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder50 = pcxImageParser49.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance52 = pcxImageParser49.getFormatCompliance(byteSource51);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters53 = pcxImageParser49.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat54 = null;
        boolean boolean55 = pcxImageParser49.canAcceptType(imageFormat54);
        java.lang.String str56 = pcxImageParser49.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters57 = pcxImageParser49.getDefaultParameters();
        byte[] byteArray58 = pcxImageParser17.getIccProfileBytes(byteSource48, pcxImagingParameters57);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension59 = pcxImageParser0.getImageSize(byteSource16, pcxImagingParameters57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Pcx-Custom" + "'", str22, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertNull(imageMetadata33);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNull(formatCompliance38);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertNull(byteArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(byteOrder50);
        org.junit.Assert.assertNull(formatCompliance52);
        org.junit.Assert.assertNotNull(pcxImagingParameters53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "pcx" + "'", str56, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters57);
        org.junit.Assert.assertNull(byteArray58);
    }

    @Test
    public void test0429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0429");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        boolean boolean14 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser0.getFormatCompliance(byteSource15);
        java.lang.String str17 = pcxImageParser0.getName();
        java.io.File file18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = null;
        byte[] byteArray22 = pcxImageParser19.getIccProfileBytes(byteSource20, pcxImagingParameters21);
        java.lang.String str23 = pcxImageParser19.getName();
        java.lang.String str24 = pcxImageParser19.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder27 = pcxImageParser26.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance29 = pcxImageParser26.getFormatCompliance(byteSource28);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser26.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser19.getMetadata(byteSource25, pcxImagingParameters30);
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser33.getMetadata(byteSource34);
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser37 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder38 = pcxImageParser37.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance40 = pcxImageParser37.getFormatCompliance(byteSource39);
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser37.getMetadata(byteSource41);
        boolean boolean44 = pcxImageParser37.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser37.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser33.getMetadata(byteSource36, pcxImagingParameters45);
        byte[] byteArray47 = pcxImageParser19.getIccProfileBytes(byteSource32, pcxImagingParameters45);
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance49 = pcxImageParser19.getFormatCompliance(byteSource48);
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser51 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters53 = null;
        byte[] byteArray54 = pcxImageParser51.getIccProfileBytes(byteSource52, pcxImagingParameters53);
        java.nio.ByteOrder byteOrder55 = pcxImageParser51.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser57 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder58 = pcxImageParser57.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance60 = pcxImageParser57.getFormatCompliance(byteSource59);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters61 = pcxImageParser57.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat62 = null;
        boolean boolean63 = pcxImageParser57.canAcceptType(imageFormat62);
        java.lang.String str64 = pcxImageParser57.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters65 = pcxImageParser57.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata66 = pcxImageParser51.getMetadata(byteSource56, pcxImagingParameters65);
        byte[] byteArray67 = pcxImageParser19.getIccProfileBytes(byteSource50, pcxImagingParameters65);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage68 = pcxImageParser0.getBufferedImage(file18, pcxImagingParameters65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Pcx-Custom" + "'", str17, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Pcx-Custom" + "'", str23, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Pcx-Custom" + "'", str24, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNull(formatCompliance29);
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertNotNull(byteOrder38);
        org.junit.Assert.assertNull(formatCompliance40);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertNull(imageMetadata46);
        org.junit.Assert.assertNull(byteArray47);
        org.junit.Assert.assertNull(formatCompliance49);
        org.junit.Assert.assertNull(byteArray54);
        org.junit.Assert.assertNotNull(byteOrder55);
        org.junit.Assert.assertNotNull(byteOrder58);
        org.junit.Assert.assertNull(formatCompliance60);
        org.junit.Assert.assertNotNull(pcxImagingParameters61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "pcx" + "'", str64, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters65);
        org.junit.Assert.assertNull(imageMetadata66);
        org.junit.Assert.assertNull(byteArray67);
    }

    @Test
    public void test0430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0430");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = null;
        byte[] byteArray19 = pcxImageParser16.getIccProfileBytes(byteSource17, pcxImagingParameters18);
        java.lang.String str20 = pcxImageParser16.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser10.getMetadata(byteSource15, pcxImagingParameters21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser0.getMetadata(byteSource9, pcxImagingParameters23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = null;
        byte[] byteArray29 = pcxImageParser26.getIccProfileBytes(byteSource27, pcxImagingParameters28);
        java.lang.String str30 = pcxImageParser26.getName();
        java.lang.String str31 = pcxImageParser26.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder34 = pcxImageParser33.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance36 = pcxImageParser33.getFormatCompliance(byteSource35);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = pcxImageParser33.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser26.getMetadata(byteSource32, pcxImagingParameters37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = null;
        byte[] byteArray43 = pcxImageParser40.getIccProfileBytes(byteSource41, pcxImagingParameters42);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = pcxImageParser40.getDefaultParameters();
        byte[] byteArray45 = pcxImageParser26.getIccProfileBytes(byteSource39, pcxImagingParameters44);
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser47 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder48 = pcxImageParser47.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance50 = pcxImageParser47.getFormatCompliance(byteSource49);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters51 = pcxImageParser47.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat52 = null;
        boolean boolean53 = pcxImageParser47.canAcceptType(imageFormat52);
        java.lang.String str54 = pcxImageParser47.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters55 = pcxImageParser47.getDefaultParameters();
        java.lang.String str56 = pcxImageParser47.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters57 = pcxImageParser47.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata58 = pcxImageParser26.getMetadata(byteSource46, pcxImagingParameters57);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension59 = pcxImageParser0.getImageSize(byteSource25, pcxImagingParameters57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "pcx" + "'", str20, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertNull(byteArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Pcx-Custom" + "'", str30, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Pcx-Custom" + "'", str31, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder34);
        org.junit.Assert.assertNull(formatCompliance36);
        org.junit.Assert.assertNotNull(pcxImagingParameters37);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNull(byteArray43);
        org.junit.Assert.assertNotNull(pcxImagingParameters44);
        org.junit.Assert.assertNull(byteArray45);
        org.junit.Assert.assertNotNull(byteOrder48);
        org.junit.Assert.assertNull(formatCompliance50);
        org.junit.Assert.assertNotNull(pcxImagingParameters51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "pcx" + "'", str54, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Pcx-Custom" + "'", str56, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters57);
        org.junit.Assert.assertNull(imageMetadata58);
    }

    @Test
    public void test0431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0431");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata17 = pcxImageParser0.getMetadata(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList19 = pcxImageParser0.getAllBufferedImages(byteSource18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertNull(imageMetadata17);
    }

    @Test
    public void test0432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0432");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        boolean boolean14 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser0.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo19 = pcxImageParser0.getImageInfo(byteSource17, pcxImagingParameters18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(formatCompliance16);
    }

    @Test
    public void test0433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0433");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.lang.String str4 = pcxImageParser0.getName();
        boolean boolean6 = pcxImageParser0.canAcceptExtension("hi!");
        java.lang.String str7 = pcxImageParser0.getName();
        java.lang.String str8 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList10 = pcxImageParser0.getAllBufferedImages(byteSource9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Pcx-Custom" + "'", str7, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "pcx" + "'", str8, "pcx");
    }

    @Test
    public void test0434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0434");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        java.lang.Class<?> wildcardClass7 = byteOrder6.getClass();
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0435");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = null;
        byte[] byteArray19 = pcxImageParser16.getIccProfileBytes(byteSource17, pcxImagingParameters18);
        java.lang.String str20 = pcxImageParser16.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser10.getMetadata(byteSource15, pcxImagingParameters21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser0.getMetadata(byteSource9, pcxImagingParameters23);
        java.lang.String str25 = pcxImageParser0.getName();
        java.io.File file26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList27 = pcxImageParser0.getAllBufferedImages(file26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "pcx" + "'", str20, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
    }

    @Test
    public void test0436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0436");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = null;
        byte[] byteArray17 = pcxImageParser14.getIccProfileBytes(byteSource15, pcxImagingParameters16);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser14.getDefaultParameters();
        byte[] byteArray19 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters18);
        java.io.File file20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList21 = pcxImageParser0.getAllBufferedImages(file20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(byteArray17);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(byteArray19);
    }

    @Test
    public void test0437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0437");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.io.File file4 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean5 = pcxImageParser0.canAcceptExtension(file4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
    }

    @Test
    public void test0438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0438");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters6 = pcxImageParser0.getDefaultParameters();
        java.awt.image.BufferedImage bufferedImage7 = null;
        java.io.OutputStream outputStream8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = null;
        byte[] byteArray12 = pcxImageParser9.getIccProfileBytes(byteSource10, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser9.getName();
        java.lang.String str14 = pcxImageParser9.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder17 = pcxImageParser16.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance19 = pcxImageParser16.getFormatCompliance(byteSource18);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters20 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata21 = pcxImageParser9.getMetadata(byteSource15, pcxImagingParameters20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser23 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser23.getMetadata(byteSource24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser27 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder28 = pcxImageParser27.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser27.getFormatCompliance(byteSource29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser27.getMetadata(byteSource31);
        boolean boolean34 = pcxImageParser27.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser27.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser23.getMetadata(byteSource26, pcxImagingParameters35);
        byte[] byteArray37 = pcxImageParser9.getIccProfileBytes(byteSource22, pcxImagingParameters35);
        org.apache.commons.imaging.ImageFormat imageFormat38 = null;
        boolean boolean39 = pcxImageParser9.canAcceptType(imageFormat38);
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser41 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder42 = pcxImageParser41.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance44 = pcxImageParser41.getFormatCompliance(byteSource43);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser41.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat46 = null;
        boolean boolean47 = pcxImageParser41.canAcceptType(imageFormat46);
        java.lang.String str48 = pcxImageParser41.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters49 = pcxImageParser41.getDefaultParameters();
        byte[] byteArray50 = pcxImageParser9.getIccProfileBytes(byteSource40, pcxImagingParameters49);
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage7, outputStream8, pcxImagingParameters49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNotNull(pcxImagingParameters6);
        org.junit.Assert.assertNull(byteArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Pcx-Custom" + "'", str14, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder17);
        org.junit.Assert.assertNull(formatCompliance19);
        org.junit.Assert.assertNotNull(pcxImagingParameters20);
        org.junit.Assert.assertNull(imageMetadata21);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertNotNull(byteOrder28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertNull(byteArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNull(formatCompliance44);
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "pcx" + "'", str48, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters49);
        org.junit.Assert.assertNull(byteArray50);
    }

    @Test
    public void test0439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0439");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.lang.String str4 = pcxImageParser0.getName();
        boolean boolean6 = pcxImageParser0.canAcceptExtension("hi!");
        java.lang.String str7 = pcxImageParser0.getName();
        java.io.PrintWriter printWriter8 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean10 = pcxImageParser0.dumpImageFile(printWriter8, byteSource9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Pcx-Custom" + "'", str7, "Pcx-Custom");
    }

    @Test
    public void test0440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0440");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList9 = pcxImageParser0.getAllBufferedImages(byteSource8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNull(imageMetadata7);
    }

    @Test
    public void test0441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0441");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        boolean boolean30 = pcxImageParser0.canAcceptExtension("pcx");
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat32 = null;
        boolean boolean33 = pcxImageParser0.canAcceptType(imageFormat32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList35 = pcxImageParser0.getAllBufferedImages(byteSource34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test0442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0442");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.nio.ByteOrder byteOrder29 = pcxImageParser0.getByteOrder();
        java.lang.String str30 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser0.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = null;
        byte[] byteArray37 = pcxImageParser34.getIccProfileBytes(byteSource35, pcxImagingParameters36);
        java.lang.String str38 = pcxImageParser34.getName();
        java.lang.String str39 = pcxImageParser34.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser41 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder42 = pcxImageParser41.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance44 = pcxImageParser41.getFormatCompliance(byteSource43);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser41.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser34.getMetadata(byteSource40, pcxImagingParameters45);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser48 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata50 = pcxImageParser48.getMetadata(byteSource49);
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser52 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder53 = pcxImageParser52.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance55 = pcxImageParser52.getFormatCompliance(byteSource54);
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata57 = pcxImageParser52.getMetadata(byteSource56);
        boolean boolean59 = pcxImageParser52.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters60 = pcxImageParser52.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata61 = pcxImageParser48.getMetadata(byteSource51, pcxImagingParameters60);
        byte[] byteArray62 = pcxImageParser34.getIccProfileBytes(byteSource47, pcxImagingParameters60);
        org.apache.commons.imaging.ImageFormat imageFormat63 = null;
        boolean boolean64 = pcxImageParser34.canAcceptType(imageFormat63);
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser66 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder67 = pcxImageParser66.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource68 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance69 = pcxImageParser66.getFormatCompliance(byteSource68);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters70 = pcxImageParser66.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat71 = null;
        boolean boolean72 = pcxImageParser66.canAcceptType(imageFormat71);
        java.lang.String str73 = pcxImageParser66.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters74 = pcxImageParser66.getDefaultParameters();
        byte[] byteArray75 = pcxImageParser34.getIccProfileBytes(byteSource65, pcxImagingParameters74);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension76 = pcxImageParser0.getImageSize(byteSource33, pcxImagingParameters74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "pcx" + "'", str30, "pcx");
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNull(byteArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Pcx-Custom" + "'", str38, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Pcx-Custom" + "'", str39, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNull(formatCompliance44);
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertNull(imageMetadata46);
        org.junit.Assert.assertNull(imageMetadata50);
        org.junit.Assert.assertNotNull(byteOrder53);
        org.junit.Assert.assertNull(formatCompliance55);
        org.junit.Assert.assertNull(imageMetadata57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters60);
        org.junit.Assert.assertNull(imageMetadata61);
        org.junit.Assert.assertNull(byteArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertNull(formatCompliance69);
        org.junit.Assert.assertNotNull(pcxImagingParameters70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "pcx" + "'", str73, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters74);
        org.junit.Assert.assertNull(byteArray75);
    }

    @Test
    public void test0443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0443");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        boolean boolean30 = pcxImageParser0.canAcceptExtension("pcx");
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat32 = null;
        boolean boolean33 = pcxImageParser0.canAcceptType(imageFormat32);
        java.io.File file34 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser0.getMetadata(file34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test0444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0444");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = null;
        byte[] byteArray11 = pcxImageParser8.getIccProfileBytes(byteSource9, pcxImagingParameters10);
        java.nio.ByteOrder byteOrder12 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat19 = null;
        boolean boolean20 = pcxImageParser14.canAcceptType(imageFormat19);
        java.lang.String str21 = pcxImageParser14.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser8.getMetadata(byteSource13, pcxImagingParameters22);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo24 = pcxImageParser0.getImageInfo(byteSource7, pcxImagingParameters22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(byteArray11);
        org.junit.Assert.assertNotNull(byteOrder12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
    }

    @Test
    public void test0445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0445");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser0.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata10 = pcxImageParser0.getMetadata(byteSource9);
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList12 = pcxImageParser0.getAllBufferedImages(byteSource11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNull(imageMetadata10);
    }

    @Test
    public void test0446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0446");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser8.getMetadata(byteSource12);
        boolean boolean15 = pcxImageParser8.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = pcxImageParser8.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage17 = pcxImageParser0.getBufferedImage(byteSource7, pcxImagingParameters16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters16);
    }

    @Test
    public void test0447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0447");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters6 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser0.getMetadata(byteSource7);
        java.io.File file9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList10 = pcxImageParser0.getAllBufferedImages(file9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNotNull(pcxImagingParameters6);
        org.junit.Assert.assertNull(imageMetadata8);
    }

    @Test
    public void test0448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0448");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser0.getMetadata(byteSource32);
        java.io.File file34 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension35 = pcxImageParser0.getImageSize(file34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNull(imageMetadata33);
    }

    @Test
    public void test0449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0449");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        boolean boolean6 = pcxImageParser0.canAcceptExtension("hi!");
        java.lang.String str7 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = null;
        byte[] byteArray12 = pcxImageParser9.getIccProfileBytes(byteSource10, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser9.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser9.getMetadata(byteSource14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser9.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser9.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo19 = pcxImageParser0.getImageInfo(byteSource8, pcxImagingParameters18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Pcx-Custom" + "'", str7, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
    }

    @Test
    public void test0450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0450");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance14 = pcxImageParser0.getFormatCompliance(byteSource13);
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser0.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo18 = pcxImageParser0.getImageInfo(byteSource17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(formatCompliance14);
        org.junit.Assert.assertNull(formatCompliance16);
    }

    @Test
    public void test0451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0451");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.nio.ByteOrder byteOrder7 = pcxImageParser0.getByteOrder();
        java.awt.image.BufferedImage bufferedImage8 = null;
        java.io.OutputStream outputStream9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = null;
        byte[] byteArray13 = pcxImageParser10.getIccProfileBytes(byteSource11, pcxImagingParameters12);
        java.lang.String str14 = pcxImageParser10.getName();
        java.lang.String str15 = pcxImageParser10.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder18 = pcxImageParser17.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance20 = pcxImageParser17.getFormatCompliance(byteSource19);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser17.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser10.getMetadata(byteSource16, pcxImagingParameters21);
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata26 = pcxImageParser24.getMetadata(byteSource25);
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder29 = pcxImageParser28.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance31 = pcxImageParser28.getFormatCompliance(byteSource30);
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser28.getMetadata(byteSource32);
        boolean boolean35 = pcxImageParser28.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser28.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser24.getMetadata(byteSource27, pcxImagingParameters36);
        byte[] byteArray38 = pcxImageParser10.getIccProfileBytes(byteSource23, pcxImagingParameters36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance40 = pcxImageParser10.getFormatCompliance(byteSource39);
        java.nio.ByteOrder byteOrder41 = pcxImageParser10.getByteOrder();
        java.nio.ByteOrder byteOrder42 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder45 = pcxImageParser44.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance47 = pcxImageParser44.getFormatCompliance(byteSource46);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = pcxImageParser44.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser50 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata52 = pcxImageParser50.getMetadata(byteSource51);
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser54 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder55 = pcxImageParser54.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance57 = pcxImageParser54.getFormatCompliance(byteSource56);
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata59 = pcxImageParser54.getMetadata(byteSource58);
        boolean boolean61 = pcxImageParser54.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters62 = pcxImageParser54.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata63 = pcxImageParser50.getMetadata(byteSource53, pcxImagingParameters62);
        byte[] byteArray64 = pcxImageParser44.getIccProfileBytes(byteSource49, pcxImagingParameters62);
        java.lang.String str65 = pcxImageParser44.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters66 = pcxImageParser44.getDefaultParameters();
        byte[] byteArray67 = pcxImageParser10.getIccProfileBytes(byteSource43, pcxImagingParameters66);
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage8, outputStream9, pcxImagingParameters66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNull(byteArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Pcx-Custom" + "'", str14, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Pcx-Custom" + "'", str15, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNull(formatCompliance20);
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNull(imageMetadata26);
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertNull(formatCompliance31);
        org.junit.Assert.assertNull(imageMetadata33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertNull(byteArray38);
        org.junit.Assert.assertNull(formatCompliance40);
        org.junit.Assert.assertNotNull(byteOrder41);
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNotNull(byteOrder45);
        org.junit.Assert.assertNull(formatCompliance47);
        org.junit.Assert.assertNotNull(pcxImagingParameters48);
        org.junit.Assert.assertNull(imageMetadata52);
        org.junit.Assert.assertNotNull(byteOrder55);
        org.junit.Assert.assertNull(formatCompliance57);
        org.junit.Assert.assertNull(imageMetadata59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters62);
        org.junit.Assert.assertNull(imageMetadata63);
        org.junit.Assert.assertNull(byteArray64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Pcx-Custom" + "'", str65, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters66);
        org.junit.Assert.assertNull(byteArray67);
    }

    @Test
    public void test0452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0452");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        java.lang.String str9 = pcxImageParser0.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = pcxImageParser0.getDefaultParameters();
        java.io.File file11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser12 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = null;
        byte[] byteArray15 = pcxImageParser12.getIccProfileBytes(byteSource13, pcxImagingParameters14);
        java.lang.String str16 = pcxImageParser12.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser12.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder20 = pcxImageParser19.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance22 = pcxImageParser19.getFormatCompliance(byteSource21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser19.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = null;
        byte[] byteArray28 = pcxImageParser25.getIccProfileBytes(byteSource26, pcxImagingParameters27);
        java.lang.String str29 = pcxImageParser25.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser25.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser19.getMetadata(byteSource24, pcxImagingParameters30);
        byte[] byteArray32 = pcxImageParser12.getIccProfileBytes(byteSource18, pcxImagingParameters30);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo33 = pcxImageParser0.getImageInfo(file11, pcxImagingParameters30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Pcx-Custom" + "'", str9, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters10);
        org.junit.Assert.assertNull(byteArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "pcx" + "'", str16, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNull(formatCompliance22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "pcx" + "'", str29, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertNull(byteArray32);
    }

    @Test
    public void test0453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0453");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat10 = null;
        boolean boolean11 = pcxImageParser0.canAcceptType(imageFormat10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser0.getDefaultParameters();
        java.lang.String str13 = pcxImageParser0.getDefaultExtension();
        java.io.File file14 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray15 = pcxImageParser0.getIccProfileBytes(file14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(pcxImagingParameters9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
    }

    @Test
    public void test0454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0454");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = pcxImageParser0.dumpImageFile(byteSource8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNull(imageMetadata7);
    }

    @Test
    public void test0455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0455");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.io.File file4 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser5 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder6 = pcxImageParser5.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser5.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = pcxImageParser5.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser11.getMetadata(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder16 = pcxImageParser15.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser15.getFormatCompliance(byteSource17);
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata20 = pcxImageParser15.getMetadata(byteSource19);
        boolean boolean22 = pcxImageParser15.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser15.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser11.getMetadata(byteSource14, pcxImagingParameters23);
        byte[] byteArray25 = pcxImageParser5.getIccProfileBytes(byteSource10, pcxImagingParameters23);
        java.lang.String str26 = pcxImageParser5.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = pcxImageParser5.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat28 = null;
        boolean boolean29 = pcxImageParser5.canAcceptType(imageFormat28);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser5.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray31 = pcxImageParser0.getIccProfileBytes(file4, pcxImagingParameters30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(pcxImagingParameters9);
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNull(formatCompliance18);
        org.junit.Assert.assertNull(imageMetadata20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertNull(byteArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Pcx-Custom" + "'", str26, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
    }

    @Test
    public void test0456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0456");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = null;
        byte[] byteArray16 = pcxImageParser13.getIccProfileBytes(byteSource14, pcxImagingParameters15);
        java.lang.String str17 = pcxImageParser13.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser7.getMetadata(byteSource12, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource6, pcxImagingParameters18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser22 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = null;
        byte[] byteArray25 = pcxImageParser22.getIccProfileBytes(byteSource23, pcxImagingParameters24);
        java.lang.String str26 = pcxImageParser22.getName();
        java.lang.String str27 = pcxImageParser22.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder30 = pcxImageParser29.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser29.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser22.getMetadata(byteSource28, pcxImagingParameters33);
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser36 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser36.getMetadata(byteSource37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder41 = pcxImageParser40.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance43 = pcxImageParser40.getFormatCompliance(byteSource42);
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata45 = pcxImageParser40.getMetadata(byteSource44);
        boolean boolean47 = pcxImageParser40.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = pcxImageParser40.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser36.getMetadata(byteSource39, pcxImagingParameters48);
        byte[] byteArray50 = pcxImageParser22.getIccProfileBytes(byteSource35, pcxImagingParameters48);
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance52 = pcxImageParser22.getFormatCompliance(byteSource51);
        java.nio.ByteOrder byteOrder53 = pcxImageParser22.getByteOrder();
        java.nio.ByteOrder byteOrder54 = pcxImageParser22.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser56 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder57 = pcxImageParser56.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance59 = pcxImageParser56.getFormatCompliance(byteSource58);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters60 = pcxImageParser56.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser62 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata64 = pcxImageParser62.getMetadata(byteSource63);
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser66 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder67 = pcxImageParser66.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource68 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance69 = pcxImageParser66.getFormatCompliance(byteSource68);
        org.apache.commons.imaging.bytesource.ByteSource byteSource70 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata71 = pcxImageParser66.getMetadata(byteSource70);
        boolean boolean73 = pcxImageParser66.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters74 = pcxImageParser66.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata75 = pcxImageParser62.getMetadata(byteSource65, pcxImagingParameters74);
        byte[] byteArray76 = pcxImageParser56.getIccProfileBytes(byteSource61, pcxImagingParameters74);
        java.lang.String str77 = pcxImageParser56.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters78 = pcxImageParser56.getDefaultParameters();
        byte[] byteArray79 = pcxImageParser22.getIccProfileBytes(byteSource55, pcxImagingParameters78);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo80 = pcxImageParser0.getImageInfo(byteSource21, pcxImagingParameters78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(byteArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "pcx" + "'", str17, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertNull(byteArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Pcx-Custom" + "'", str26, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Pcx-Custom" + "'", str27, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder30);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNotNull(byteOrder41);
        org.junit.Assert.assertNull(formatCompliance43);
        org.junit.Assert.assertNull(imageMetadata45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters48);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertNull(byteArray50);
        org.junit.Assert.assertNull(formatCompliance52);
        org.junit.Assert.assertNotNull(byteOrder53);
        org.junit.Assert.assertNotNull(byteOrder54);
        org.junit.Assert.assertNotNull(byteOrder57);
        org.junit.Assert.assertNull(formatCompliance59);
        org.junit.Assert.assertNotNull(pcxImagingParameters60);
        org.junit.Assert.assertNull(imageMetadata64);
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertNull(formatCompliance69);
        org.junit.Assert.assertNull(imageMetadata71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters74);
        org.junit.Assert.assertNull(imageMetadata75);
        org.junit.Assert.assertNull(byteArray76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "Pcx-Custom" + "'", str77, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters78);
        org.junit.Assert.assertNull(byteArray79);
    }

    @Test
    public void test0457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0457");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        java.io.File file9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser0.getFormatCompliance(file9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
    }

    @Test
    public void test0458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0458");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        java.lang.Class<?> wildcardClass6 = pcxImageParser0.getClass();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0459");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser0.getMetadata(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser0.getMetadata(byteSource24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser0.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = null;
        byte[] byteArray32 = pcxImageParser29.getIccProfileBytes(byteSource30, pcxImagingParameters31);
        java.lang.String str33 = pcxImageParser29.getName();
        java.lang.String str34 = pcxImageParser29.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser36 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder37 = pcxImageParser36.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance39 = pcxImageParser36.getFormatCompliance(byteSource38);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser36.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser29.getMetadata(byteSource35, pcxImagingParameters40);
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser43 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata45 = pcxImageParser43.getMetadata(byteSource44);
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser47 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder48 = pcxImageParser47.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance50 = pcxImageParser47.getFormatCompliance(byteSource49);
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata52 = pcxImageParser47.getMetadata(byteSource51);
        boolean boolean54 = pcxImageParser47.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters55 = pcxImageParser47.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata56 = pcxImageParser43.getMetadata(byteSource46, pcxImagingParameters55);
        byte[] byteArray57 = pcxImageParser29.getIccProfileBytes(byteSource42, pcxImagingParameters55);
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance59 = pcxImageParser29.getFormatCompliance(byteSource58);
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser61 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters63 = null;
        byte[] byteArray64 = pcxImageParser61.getIccProfileBytes(byteSource62, pcxImagingParameters63);
        java.nio.ByteOrder byteOrder65 = pcxImageParser61.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource66 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser67 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder68 = pcxImageParser67.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance70 = pcxImageParser67.getFormatCompliance(byteSource69);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters71 = pcxImageParser67.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat72 = null;
        boolean boolean73 = pcxImageParser67.canAcceptType(imageFormat72);
        java.lang.String str74 = pcxImageParser67.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters75 = pcxImageParser67.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata76 = pcxImageParser61.getMetadata(byteSource66, pcxImagingParameters75);
        byte[] byteArray77 = pcxImageParser29.getIccProfileBytes(byteSource60, pcxImagingParameters75);
        byte[] byteArray78 = pcxImageParser0.getIccProfileBytes(byteSource28, pcxImagingParameters75);
        java.io.File file79 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str80 = pcxImageParser0.dumpImageFile(file79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNull(byteArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Pcx-Custom" + "'", str33, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Pcx-Custom" + "'", str34, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNull(formatCompliance39);
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(imageMetadata41);
        org.junit.Assert.assertNull(imageMetadata45);
        org.junit.Assert.assertNotNull(byteOrder48);
        org.junit.Assert.assertNull(formatCompliance50);
        org.junit.Assert.assertNull(imageMetadata52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters55);
        org.junit.Assert.assertNull(imageMetadata56);
        org.junit.Assert.assertNull(byteArray57);
        org.junit.Assert.assertNull(formatCompliance59);
        org.junit.Assert.assertNull(byteArray64);
        org.junit.Assert.assertNotNull(byteOrder65);
        org.junit.Assert.assertNotNull(byteOrder68);
        org.junit.Assert.assertNull(formatCompliance70);
        org.junit.Assert.assertNotNull(pcxImagingParameters71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "pcx" + "'", str74, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters75);
        org.junit.Assert.assertNull(imageMetadata76);
        org.junit.Assert.assertNull(byteArray77);
        org.junit.Assert.assertNull(byteArray78);
    }

    @Test
    public void test0460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0460");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.ImageFormat imageFormat8 = null;
        boolean boolean9 = pcxImageParser0.canAcceptType(imageFormat8);
        java.io.File file10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = pcxImageParser0.dumpImageFile(file10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0461");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser0.getFormatCompliance(byteSource5);
        java.io.File file7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList8 = pcxImageParser0.getAllBufferedImages(file7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance6);
    }

    @Test
    public void test0462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0462");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        java.nio.ByteOrder byteOrder32 = pcxImageParser0.getByteOrder();
        java.lang.String str33 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser0.getMetadata(byteSource34);
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser37 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = null;
        byte[] byteArray40 = pcxImageParser37.getIccProfileBytes(byteSource38, pcxImagingParameters39);
        java.lang.String str41 = pcxImageParser37.getName();
        java.lang.String str42 = pcxImageParser37.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder45 = pcxImageParser44.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance47 = pcxImageParser44.getFormatCompliance(byteSource46);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = pcxImageParser44.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser37.getMetadata(byteSource43, pcxImagingParameters48);
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser51 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser51.getMetadata(byteSource52);
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser55 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder56 = pcxImageParser55.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance58 = pcxImageParser55.getFormatCompliance(byteSource57);
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata60 = pcxImageParser55.getMetadata(byteSource59);
        boolean boolean62 = pcxImageParser55.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters63 = pcxImageParser55.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata64 = pcxImageParser51.getMetadata(byteSource54, pcxImagingParameters63);
        byte[] byteArray65 = pcxImageParser37.getIccProfileBytes(byteSource50, pcxImagingParameters63);
        org.apache.commons.imaging.ImageFormat imageFormat66 = null;
        boolean boolean67 = pcxImageParser37.canAcceptType(imageFormat66);
        org.apache.commons.imaging.bytesource.ByteSource byteSource68 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance69 = pcxImageParser37.getFormatCompliance(byteSource68);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters70 = pcxImageParser37.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo71 = pcxImageParser0.getImageInfo(byteSource36, pcxImagingParameters70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Pcx-Custom" + "'", str33, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertNull(byteArray40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Pcx-Custom" + "'", str41, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Pcx-Custom" + "'", str42, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder45);
        org.junit.Assert.assertNull(formatCompliance47);
        org.junit.Assert.assertNotNull(pcxImagingParameters48);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertNotNull(byteOrder56);
        org.junit.Assert.assertNull(formatCompliance58);
        org.junit.Assert.assertNull(imageMetadata60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters63);
        org.junit.Assert.assertNull(imageMetadata64);
        org.junit.Assert.assertNull(byteArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(formatCompliance69);
        org.junit.Assert.assertNotNull(pcxImagingParameters70);
    }

    @Test
    public void test0463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0463");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = null;
        byte[] byteArray9 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters8);
        java.io.File file10 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray11 = pcxImageParser0.getIccProfileBytes(file10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(byteArray9);
    }

    @Test
    public void test0464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0464");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.io.File file5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder7 = pcxImageParser6.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance9 = pcxImageParser6.getFormatCompliance(byteSource8);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser12 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata14 = pcxImageParser12.getMetadata(byteSource13);
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder17 = pcxImageParser16.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance19 = pcxImageParser16.getFormatCompliance(byteSource18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata21 = pcxImageParser16.getMetadata(byteSource20);
        boolean boolean23 = pcxImageParser16.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser12.getMetadata(byteSource15, pcxImagingParameters24);
        byte[] byteArray26 = pcxImageParser6.getIccProfileBytes(byteSource11, pcxImagingParameters24);
        java.lang.String str27 = pcxImageParser6.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser6.getMetadata(byteSource28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser6.getMetadata(byteSource30);
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance33 = pcxImageParser6.getFormatCompliance(byteSource32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = null;
        byte[] byteArray38 = pcxImageParser35.getIccProfileBytes(byteSource36, pcxImagingParameters37);
        java.lang.String str39 = pcxImageParser35.getName();
        java.lang.String str40 = pcxImageParser35.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser42 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder43 = pcxImageParser42.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance45 = pcxImageParser42.getFormatCompliance(byteSource44);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser42.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser35.getMetadata(byteSource41, pcxImagingParameters46);
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser49 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata51 = pcxImageParser49.getMetadata(byteSource50);
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser53 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder54 = pcxImageParser53.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance56 = pcxImageParser53.getFormatCompliance(byteSource55);
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata58 = pcxImageParser53.getMetadata(byteSource57);
        boolean boolean60 = pcxImageParser53.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters61 = pcxImageParser53.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata62 = pcxImageParser49.getMetadata(byteSource52, pcxImagingParameters61);
        byte[] byteArray63 = pcxImageParser35.getIccProfileBytes(byteSource48, pcxImagingParameters61);
        org.apache.commons.imaging.bytesource.ByteSource byteSource64 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance65 = pcxImageParser35.getFormatCompliance(byteSource64);
        org.apache.commons.imaging.bytesource.ByteSource byteSource66 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser67 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource68 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters69 = null;
        byte[] byteArray70 = pcxImageParser67.getIccProfileBytes(byteSource68, pcxImagingParameters69);
        java.nio.ByteOrder byteOrder71 = pcxImageParser67.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource72 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser73 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder74 = pcxImageParser73.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource75 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance76 = pcxImageParser73.getFormatCompliance(byteSource75);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters77 = pcxImageParser73.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat78 = null;
        boolean boolean79 = pcxImageParser73.canAcceptType(imageFormat78);
        java.lang.String str80 = pcxImageParser73.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters81 = pcxImageParser73.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata82 = pcxImageParser67.getMetadata(byteSource72, pcxImagingParameters81);
        byte[] byteArray83 = pcxImageParser35.getIccProfileBytes(byteSource66, pcxImagingParameters81);
        byte[] byteArray84 = pcxImageParser6.getIccProfileBytes(byteSource34, pcxImagingParameters81);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage85 = pcxImageParser0.getBufferedImage(file5, pcxImagingParameters81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNull(formatCompliance9);
        org.junit.Assert.assertNotNull(pcxImagingParameters10);
        org.junit.Assert.assertNull(imageMetadata14);
        org.junit.Assert.assertNotNull(byteOrder17);
        org.junit.Assert.assertNull(formatCompliance19);
        org.junit.Assert.assertNull(imageMetadata21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters24);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertNull(byteArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "pcx" + "'", str27, "pcx");
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertNull(formatCompliance33);
        org.junit.Assert.assertNull(byteArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Pcx-Custom" + "'", str39, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Pcx-Custom" + "'", str40, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNull(formatCompliance45);
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
        org.junit.Assert.assertNull(imageMetadata47);
        org.junit.Assert.assertNull(imageMetadata51);
        org.junit.Assert.assertNotNull(byteOrder54);
        org.junit.Assert.assertNull(formatCompliance56);
        org.junit.Assert.assertNull(imageMetadata58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters61);
        org.junit.Assert.assertNull(imageMetadata62);
        org.junit.Assert.assertNull(byteArray63);
        org.junit.Assert.assertNull(formatCompliance65);
        org.junit.Assert.assertNull(byteArray70);
        org.junit.Assert.assertNotNull(byteOrder71);
        org.junit.Assert.assertNotNull(byteOrder74);
        org.junit.Assert.assertNull(formatCompliance76);
        org.junit.Assert.assertNotNull(pcxImagingParameters77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "pcx" + "'", str80, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters81);
        org.junit.Assert.assertNull(imageMetadata82);
        org.junit.Assert.assertNull(byteArray83);
        org.junit.Assert.assertNull(byteArray84);
    }

    @Test
    public void test0465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0465");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        java.io.File file3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        java.lang.String str26 = pcxImageParser4.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder29 = pcxImageParser28.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance31 = pcxImageParser28.getFormatCompliance(byteSource30);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser28.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat33 = null;
        boolean boolean34 = pcxImageParser28.canAcceptType(imageFormat33);
        java.lang.String str35 = pcxImageParser28.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser28.getDefaultParameters();
        byte[] byteArray37 = pcxImageParser4.getIccProfileBytes(byteSource27, pcxImagingParameters36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder40 = pcxImageParser39.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser42 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder43 = pcxImageParser42.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance45 = pcxImageParser42.getFormatCompliance(byteSource44);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser42.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser48 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata50 = pcxImageParser48.getMetadata(byteSource49);
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser52 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder53 = pcxImageParser52.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance55 = pcxImageParser52.getFormatCompliance(byteSource54);
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata57 = pcxImageParser52.getMetadata(byteSource56);
        boolean boolean59 = pcxImageParser52.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters60 = pcxImageParser52.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata61 = pcxImageParser48.getMetadata(byteSource51, pcxImagingParameters60);
        byte[] byteArray62 = pcxImageParser42.getIccProfileBytes(byteSource47, pcxImagingParameters60);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata63 = pcxImageParser39.getMetadata(byteSource41, pcxImagingParameters60);
        byte[] byteArray64 = pcxImageParser4.getIccProfileBytes(byteSource38, pcxImagingParameters60);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo65 = pcxImageParser0.getImageInfo(file3, pcxImagingParameters60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "pcx" + "'", str26, "pcx");
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertNull(formatCompliance31);
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "pcx" + "'", str35, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertNull(byteArray37);
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNull(formatCompliance45);
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
        org.junit.Assert.assertNull(imageMetadata50);
        org.junit.Assert.assertNotNull(byteOrder53);
        org.junit.Assert.assertNull(formatCompliance55);
        org.junit.Assert.assertNull(imageMetadata57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters60);
        org.junit.Assert.assertNull(imageMetadata61);
        org.junit.Assert.assertNull(byteArray62);
        org.junit.Assert.assertNull(imageMetadata63);
        org.junit.Assert.assertNull(byteArray64);
    }

    @Test
    public void test0466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0466");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        java.nio.ByteOrder byteOrder32 = pcxImageParser0.getByteOrder();
        java.lang.String str33 = pcxImageParser0.getName();
        java.io.File file34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = null;
        byte[] byteArray38 = pcxImageParser35.getIccProfileBytes(byteSource36, pcxImagingParameters37);
        java.lang.String str39 = pcxImageParser35.getName();
        java.lang.String str40 = pcxImageParser35.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance42 = pcxImageParser35.getFormatCompliance(byteSource41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder45 = pcxImageParser44.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance47 = pcxImageParser44.getFormatCompliance(byteSource46);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = pcxImageParser44.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat49 = null;
        boolean boolean50 = pcxImageParser44.canAcceptType(imageFormat49);
        java.lang.String str51 = pcxImageParser44.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser44.getDefaultParameters();
        byte[] byteArray53 = pcxImageParser35.getIccProfileBytes(byteSource43, pcxImagingParameters52);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray54 = pcxImageParser0.getIccProfileBytes(file34, pcxImagingParameters52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Pcx-Custom" + "'", str33, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Pcx-Custom" + "'", str39, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Pcx-Custom" + "'", str40, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance42);
        org.junit.Assert.assertNotNull(byteOrder45);
        org.junit.Assert.assertNull(formatCompliance47);
        org.junit.Assert.assertNotNull(pcxImagingParameters48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "pcx" + "'", str51, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(byteArray53);
    }

    @Test
    public void test0467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0467");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        java.awt.image.BufferedImage bufferedImage23 = null;
        java.io.OutputStream outputStream24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = null;
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage23, outputStream24, pcxImagingParameters25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
    }

    @Test
    public void test0468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0468");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.io.File file5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str6 = pcxImageParser0.dumpImageFile(file5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
    }

    @Test
    public void test0469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0469");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser0.canAcceptType(imageFormat23);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str27 = pcxImageParser0.dumpImageFile(byteSource26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
    }

    @Test
    public void test0470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0470");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser24.canAcceptType(imageFormat29);
        java.lang.String str31 = pcxImageParser24.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser24.getDefaultParameters();
        byte[] byteArray33 = pcxImageParser0.getIccProfileBytes(byteSource23, pcxImagingParameters32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder36 = pcxImageParser35.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser38 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder39 = pcxImageParser38.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance41 = pcxImageParser38.getFormatCompliance(byteSource40);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser38.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser44.getMetadata(byteSource45);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser48 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder49 = pcxImageParser48.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance51 = pcxImageParser48.getFormatCompliance(byteSource50);
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser48.getMetadata(byteSource52);
        boolean boolean55 = pcxImageParser48.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters56 = pcxImageParser48.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata57 = pcxImageParser44.getMetadata(byteSource47, pcxImagingParameters56);
        byte[] byteArray58 = pcxImageParser38.getIccProfileBytes(byteSource43, pcxImagingParameters56);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata59 = pcxImageParser35.getMetadata(byteSource37, pcxImagingParameters56);
        byte[] byteArray60 = pcxImageParser0.getIccProfileBytes(byteSource34, pcxImagingParameters56);
        java.io.File file61 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension62 = pcxImageParser0.getImageSize(file61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "pcx" + "'", str31, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteOrder39);
        org.junit.Assert.assertNull(formatCompliance41);
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertNull(imageMetadata46);
        org.junit.Assert.assertNotNull(byteOrder49);
        org.junit.Assert.assertNull(formatCompliance51);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters56);
        org.junit.Assert.assertNull(imageMetadata57);
        org.junit.Assert.assertNull(byteArray58);
        org.junit.Assert.assertNull(imageMetadata59);
        org.junit.Assert.assertNull(byteArray60);
    }

    @Test
    public void test0471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0471");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser0.getDefaultParameters();
        java.lang.String str29 = pcxImageParser0.getName();
        java.awt.image.BufferedImage bufferedImage30 = null;
        java.io.OutputStream outputStream31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str33 = pcxImageParser32.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser32.getMetadata(byteSource36);
        java.nio.ByteOrder byteOrder38 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = null;
        byte[] byteArray41 = pcxImageParser32.getIccProfileBytes(byteSource39, pcxImagingParameters40);
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser43 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = null;
        byte[] byteArray46 = pcxImageParser43.getIccProfileBytes(byteSource44, pcxImagingParameters45);
        java.lang.String str47 = pcxImageParser43.getName();
        java.lang.String str48 = pcxImageParser43.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser50 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder51 = pcxImageParser50.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance53 = pcxImageParser50.getFormatCompliance(byteSource52);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters54 = pcxImageParser50.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata55 = pcxImageParser43.getMetadata(byteSource49, pcxImagingParameters54);
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser57 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters59 = null;
        byte[] byteArray60 = pcxImageParser57.getIccProfileBytes(byteSource58, pcxImagingParameters59);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters61 = pcxImageParser57.getDefaultParameters();
        byte[] byteArray62 = pcxImageParser43.getIccProfileBytes(byteSource56, pcxImagingParameters61);
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser64 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder65 = pcxImageParser64.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource66 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance67 = pcxImageParser64.getFormatCompliance(byteSource66);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters68 = pcxImageParser64.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat69 = null;
        boolean boolean70 = pcxImageParser64.canAcceptType(imageFormat69);
        java.lang.String str71 = pcxImageParser64.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters72 = pcxImageParser64.getDefaultParameters();
        java.lang.String str73 = pcxImageParser64.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters74 = pcxImageParser64.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata75 = pcxImageParser43.getMetadata(byteSource63, pcxImagingParameters74);
        byte[] byteArray76 = pcxImageParser32.getIccProfileBytes(byteSource42, pcxImagingParameters74);
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage30, outputStream31, pcxImagingParameters74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Pcx-Custom" + "'", str33, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertNotNull(byteOrder38);
        org.junit.Assert.assertNull(byteArray41);
        org.junit.Assert.assertNull(byteArray46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Pcx-Custom" + "'", str47, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Pcx-Custom" + "'", str48, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder51);
        org.junit.Assert.assertNull(formatCompliance53);
        org.junit.Assert.assertNotNull(pcxImagingParameters54);
        org.junit.Assert.assertNull(imageMetadata55);
        org.junit.Assert.assertNull(byteArray60);
        org.junit.Assert.assertNotNull(pcxImagingParameters61);
        org.junit.Assert.assertNull(byteArray62);
        org.junit.Assert.assertNotNull(byteOrder65);
        org.junit.Assert.assertNull(formatCompliance67);
        org.junit.Assert.assertNotNull(pcxImagingParameters68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "pcx" + "'", str71, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "Pcx-Custom" + "'", str73, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters74);
        org.junit.Assert.assertNull(imageMetadata75);
        org.junit.Assert.assertNull(byteArray76);
    }

    @Test
    public void test0472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0472");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat10 = null;
        boolean boolean11 = pcxImageParser0.canAcceptType(imageFormat10);
        java.io.File file12 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray13 = pcxImageParser0.getIccProfileBytes(file12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(pcxImagingParameters9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0473");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList9 = pcxImageParser0.getAllBufferedImages(byteSource8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Pcx-Custom" + "'", str7, "Pcx-Custom");
    }

    @Test
    public void test0474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0474");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = null;
        byte[] byteArray16 = pcxImageParser13.getIccProfileBytes(byteSource14, pcxImagingParameters15);
        java.lang.String str17 = pcxImageParser13.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser7.getMetadata(byteSource12, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource6, pcxImagingParameters18);
        java.lang.Class<?> wildcardClass21 = pcxImagingParameters18.getClass();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(byteArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "pcx" + "'", str17, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0475");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.Class<?> wildcardClass13 = pcxImagingParameters11.getClass();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0476");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        java.nio.ByteOrder byteOrder2 = pcxImageParser0.getByteOrder();
        java.lang.String str3 = pcxImageParser0.getName();
        java.io.File file4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension5 = pcxImageParser0.getImageSize(file4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Pcx-Custom" + "'", str3, "Pcx-Custom");
    }

    @Test
    public void test0477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0477");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = null;
        byte[] byteArray9 = pcxImageParser6.getIccProfileBytes(byteSource7, pcxImagingParameters8);
        java.lang.String str10 = pcxImageParser6.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource5, pcxImagingParameters11);
        java.io.File file13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser14.getDefaultParameters();
        java.lang.String str19 = pcxImageParser14.getDefaultExtension();
        java.nio.ByteOrder byteOrder20 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser14.getMetadata(byteSource21);
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = null;
        byte[] byteArray27 = pcxImageParser24.getIccProfileBytes(byteSource25, pcxImagingParameters26);
        java.lang.String str28 = pcxImageParser24.getName();
        java.lang.String str29 = pcxImageParser24.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder32 = pcxImageParser31.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance34 = pcxImageParser31.getFormatCompliance(byteSource33);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser31.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser24.getMetadata(byteSource30, pcxImagingParameters35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser38 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser38.getMetadata(byteSource39);
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser42 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder43 = pcxImageParser42.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance45 = pcxImageParser42.getFormatCompliance(byteSource44);
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser42.getMetadata(byteSource46);
        boolean boolean49 = pcxImageParser42.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters50 = pcxImageParser42.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata51 = pcxImageParser38.getMetadata(byteSource41, pcxImagingParameters50);
        byte[] byteArray52 = pcxImageParser24.getIccProfileBytes(byteSource37, pcxImagingParameters50);
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance54 = pcxImageParser24.getFormatCompliance(byteSource53);
        java.nio.ByteOrder byteOrder55 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser57 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters59 = null;
        byte[] byteArray60 = pcxImageParser57.getIccProfileBytes(byteSource58, pcxImagingParameters59);
        java.lang.String str61 = pcxImageParser57.getName();
        java.lang.String str62 = pcxImageParser57.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser64 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder65 = pcxImageParser64.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource66 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance67 = pcxImageParser64.getFormatCompliance(byteSource66);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters68 = pcxImageParser64.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata69 = pcxImageParser57.getMetadata(byteSource63, pcxImagingParameters68);
        org.apache.commons.imaging.bytesource.ByteSource byteSource70 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser71 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource72 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata73 = pcxImageParser71.getMetadata(byteSource72);
        org.apache.commons.imaging.bytesource.ByteSource byteSource74 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser75 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder76 = pcxImageParser75.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource77 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance78 = pcxImageParser75.getFormatCompliance(byteSource77);
        org.apache.commons.imaging.bytesource.ByteSource byteSource79 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata80 = pcxImageParser75.getMetadata(byteSource79);
        boolean boolean82 = pcxImageParser75.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters83 = pcxImageParser75.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata84 = pcxImageParser71.getMetadata(byteSource74, pcxImagingParameters83);
        byte[] byteArray85 = pcxImageParser57.getIccProfileBytes(byteSource70, pcxImagingParameters83);
        byte[] byteArray86 = pcxImageParser24.getIccProfileBytes(byteSource56, pcxImagingParameters83);
        byte[] byteArray87 = pcxImageParser14.getIccProfileBytes(byteSource23, pcxImagingParameters83);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo88 = pcxImageParser0.getImageInfo(file13, pcxImagingParameters83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(byteArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "pcx" + "'", str10, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "pcx" + "'", str19, "pcx");
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNull(byteArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Pcx-Custom" + "'", str28, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertNull(formatCompliance34);
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNull(formatCompliance45);
        org.junit.Assert.assertNull(imageMetadata47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters50);
        org.junit.Assert.assertNull(imageMetadata51);
        org.junit.Assert.assertNull(byteArray52);
        org.junit.Assert.assertNull(formatCompliance54);
        org.junit.Assert.assertNotNull(byteOrder55);
        org.junit.Assert.assertNull(byteArray60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Pcx-Custom" + "'", str61, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Pcx-Custom" + "'", str62, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder65);
        org.junit.Assert.assertNull(formatCompliance67);
        org.junit.Assert.assertNotNull(pcxImagingParameters68);
        org.junit.Assert.assertNull(imageMetadata69);
        org.junit.Assert.assertNull(imageMetadata73);
        org.junit.Assert.assertNotNull(byteOrder76);
        org.junit.Assert.assertNull(formatCompliance78);
        org.junit.Assert.assertNull(imageMetadata80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters83);
        org.junit.Assert.assertNull(imageMetadata84);
        org.junit.Assert.assertNull(byteArray85);
        org.junit.Assert.assertNull(byteArray86);
        org.junit.Assert.assertNull(byteArray87);
    }

    @Test
    public void test0478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0478");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.nio.ByteOrder byteOrder7 = pcxImageParser0.getByteOrder();
        java.io.File file8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = null;
        byte[] byteArray12 = pcxImageParser9.getIccProfileBytes(byteSource10, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser9.getName();
        java.lang.String str14 = pcxImageParser9.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder17 = pcxImageParser16.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance19 = pcxImageParser16.getFormatCompliance(byteSource18);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters20 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata21 = pcxImageParser9.getMetadata(byteSource15, pcxImagingParameters20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser23 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser23.getMetadata(byteSource24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser27 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder28 = pcxImageParser27.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser27.getFormatCompliance(byteSource29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser27.getMetadata(byteSource31);
        boolean boolean34 = pcxImageParser27.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser27.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser23.getMetadata(byteSource26, pcxImagingParameters35);
        byte[] byteArray37 = pcxImageParser9.getIccProfileBytes(byteSource22, pcxImagingParameters35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance39 = pcxImageParser9.getFormatCompliance(byteSource38);
        java.nio.ByteOrder byteOrder40 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser42 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = null;
        byte[] byteArray45 = pcxImageParser42.getIccProfileBytes(byteSource43, pcxImagingParameters44);
        java.lang.String str46 = pcxImageParser42.getName();
        java.lang.String str47 = pcxImageParser42.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser49 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder50 = pcxImageParser49.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance52 = pcxImageParser49.getFormatCompliance(byteSource51);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters53 = pcxImageParser49.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata54 = pcxImageParser42.getMetadata(byteSource48, pcxImagingParameters53);
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser56 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata58 = pcxImageParser56.getMetadata(byteSource57);
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser60 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder61 = pcxImageParser60.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance63 = pcxImageParser60.getFormatCompliance(byteSource62);
        org.apache.commons.imaging.bytesource.ByteSource byteSource64 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata65 = pcxImageParser60.getMetadata(byteSource64);
        boolean boolean67 = pcxImageParser60.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters68 = pcxImageParser60.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata69 = pcxImageParser56.getMetadata(byteSource59, pcxImagingParameters68);
        byte[] byteArray70 = pcxImageParser42.getIccProfileBytes(byteSource55, pcxImagingParameters68);
        byte[] byteArray71 = pcxImageParser9.getIccProfileBytes(byteSource41, pcxImagingParameters68);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension72 = pcxImageParser0.getImageSize(file8, pcxImagingParameters68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNull(byteArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Pcx-Custom" + "'", str14, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder17);
        org.junit.Assert.assertNull(formatCompliance19);
        org.junit.Assert.assertNotNull(pcxImagingParameters20);
        org.junit.Assert.assertNull(imageMetadata21);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertNotNull(byteOrder28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertNull(byteArray37);
        org.junit.Assert.assertNull(formatCompliance39);
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNull(byteArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Pcx-Custom" + "'", str46, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Pcx-Custom" + "'", str47, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder50);
        org.junit.Assert.assertNull(formatCompliance52);
        org.junit.Assert.assertNotNull(pcxImagingParameters53);
        org.junit.Assert.assertNull(imageMetadata54);
        org.junit.Assert.assertNull(imageMetadata58);
        org.junit.Assert.assertNotNull(byteOrder61);
        org.junit.Assert.assertNull(formatCompliance63);
        org.junit.Assert.assertNull(imageMetadata65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters68);
        org.junit.Assert.assertNull(imageMetadata69);
        org.junit.Assert.assertNull(byteArray70);
        org.junit.Assert.assertNull(byteArray71);
    }

    @Test
    public void test0479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0479");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        boolean boolean30 = pcxImageParser0.canAcceptExtension("pcx");
        java.io.PrintWriter printWriter31 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean33 = pcxImageParser0.dumpImageFile(printWriter31, byteSource32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test0480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0480");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata4 = pcxImageParser0.getMetadata(byteSource3);
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        java.lang.String str13 = pcxImageParser8.getDefaultExtension();
        java.nio.ByteOrder byteOrder14 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser8.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters20 = null;
        byte[] byteArray21 = pcxImageParser18.getIccProfileBytes(byteSource19, pcxImagingParameters20);
        java.lang.String str22 = pcxImageParser18.getName();
        java.lang.String str23 = pcxImageParser18.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder26 = pcxImageParser25.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance28 = pcxImageParser25.getFormatCompliance(byteSource27);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = pcxImageParser25.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata30 = pcxImageParser18.getMetadata(byteSource24, pcxImagingParameters29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser32.getMetadata(byteSource33);
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser36 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder37 = pcxImageParser36.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance39 = pcxImageParser36.getFormatCompliance(byteSource38);
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser36.getMetadata(byteSource40);
        boolean boolean43 = pcxImageParser36.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = pcxImageParser36.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata45 = pcxImageParser32.getMetadata(byteSource35, pcxImagingParameters44);
        byte[] byteArray46 = pcxImageParser18.getIccProfileBytes(byteSource31, pcxImagingParameters44);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance48 = pcxImageParser18.getFormatCompliance(byteSource47);
        java.nio.ByteOrder byteOrder49 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser51 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters53 = null;
        byte[] byteArray54 = pcxImageParser51.getIccProfileBytes(byteSource52, pcxImagingParameters53);
        java.lang.String str55 = pcxImageParser51.getName();
        java.lang.String str56 = pcxImageParser51.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser58 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder59 = pcxImageParser58.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance61 = pcxImageParser58.getFormatCompliance(byteSource60);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters62 = pcxImageParser58.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata63 = pcxImageParser51.getMetadata(byteSource57, pcxImagingParameters62);
        org.apache.commons.imaging.bytesource.ByteSource byteSource64 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser65 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource66 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata67 = pcxImageParser65.getMetadata(byteSource66);
        org.apache.commons.imaging.bytesource.ByteSource byteSource68 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser69 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder70 = pcxImageParser69.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource71 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance72 = pcxImageParser69.getFormatCompliance(byteSource71);
        org.apache.commons.imaging.bytesource.ByteSource byteSource73 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata74 = pcxImageParser69.getMetadata(byteSource73);
        boolean boolean76 = pcxImageParser69.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters77 = pcxImageParser69.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata78 = pcxImageParser65.getMetadata(byteSource68, pcxImagingParameters77);
        byte[] byteArray79 = pcxImageParser51.getIccProfileBytes(byteSource64, pcxImagingParameters77);
        byte[] byteArray80 = pcxImageParser18.getIccProfileBytes(byteSource50, pcxImagingParameters77);
        byte[] byteArray81 = pcxImageParser8.getIccProfileBytes(byteSource17, pcxImagingParameters77);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension82 = pcxImageParser0.getImageSize(byteSource7, pcxImagingParameters77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertNotNull(byteOrder14);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNull(byteArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Pcx-Custom" + "'", str22, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Pcx-Custom" + "'", str23, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder26);
        org.junit.Assert.assertNull(formatCompliance28);
        org.junit.Assert.assertNotNull(pcxImagingParameters29);
        org.junit.Assert.assertNull(imageMetadata30);
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNull(formatCompliance39);
        org.junit.Assert.assertNull(imageMetadata41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters44);
        org.junit.Assert.assertNull(imageMetadata45);
        org.junit.Assert.assertNull(byteArray46);
        org.junit.Assert.assertNull(formatCompliance48);
        org.junit.Assert.assertNotNull(byteOrder49);
        org.junit.Assert.assertNull(byteArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Pcx-Custom" + "'", str55, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Pcx-Custom" + "'", str56, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder59);
        org.junit.Assert.assertNull(formatCompliance61);
        org.junit.Assert.assertNotNull(pcxImagingParameters62);
        org.junit.Assert.assertNull(imageMetadata63);
        org.junit.Assert.assertNull(imageMetadata67);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNull(formatCompliance72);
        org.junit.Assert.assertNull(imageMetadata74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters77);
        org.junit.Assert.assertNull(imageMetadata78);
        org.junit.Assert.assertNull(byteArray79);
        org.junit.Assert.assertNull(byteArray80);
        org.junit.Assert.assertNull(byteArray81);
    }

    @Test
    public void test0481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0481");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters6 = pcxImageParser0.getDefaultParameters();
        boolean boolean8 = pcxImageParser0.canAcceptExtension("");
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str11 = pcxImageParser10.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        java.nio.ByteOrder byteOrder16 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = null;
        byte[] byteArray19 = pcxImageParser10.getIccProfileBytes(byteSource17, pcxImagingParameters18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = null;
        byte[] byteArray24 = pcxImageParser21.getIccProfileBytes(byteSource22, pcxImagingParameters23);
        java.lang.String str25 = pcxImageParser21.getName();
        java.lang.String str26 = pcxImageParser21.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder29 = pcxImageParser28.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance31 = pcxImageParser28.getFormatCompliance(byteSource30);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser28.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser21.getMetadata(byteSource27, pcxImagingParameters32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = null;
        byte[] byteArray38 = pcxImageParser35.getIccProfileBytes(byteSource36, pcxImagingParameters37);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = pcxImageParser35.getDefaultParameters();
        byte[] byteArray40 = pcxImageParser21.getIccProfileBytes(byteSource34, pcxImagingParameters39);
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser42 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder43 = pcxImageParser42.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance45 = pcxImageParser42.getFormatCompliance(byteSource44);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser42.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat47 = null;
        boolean boolean48 = pcxImageParser42.canAcceptType(imageFormat47);
        java.lang.String str49 = pcxImageParser42.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters50 = pcxImageParser42.getDefaultParameters();
        java.lang.String str51 = pcxImageParser42.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser42.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser21.getMetadata(byteSource41, pcxImagingParameters52);
        byte[] byteArray54 = pcxImageParser10.getIccProfileBytes(byteSource20, pcxImagingParameters52);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo55 = pcxImageParser0.getImageInfo(byteSource9, pcxImagingParameters52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNotNull(pcxImagingParameters6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Pcx-Custom" + "'", str11, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Pcx-Custom" + "'", str26, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertNull(formatCompliance31);
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
        org.junit.Assert.assertNull(imageMetadata33);
        org.junit.Assert.assertNull(byteArray38);
        org.junit.Assert.assertNotNull(pcxImagingParameters39);
        org.junit.Assert.assertNull(byteArray40);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNull(formatCompliance45);
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "pcx" + "'", str49, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Pcx-Custom" + "'", str51, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertNull(byteArray54);
    }

    @Test
    public void test0482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0482");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        java.nio.ByteOrder byteOrder2 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat3 = null;
        boolean boolean4 = pcxImageParser0.canAcceptType(imageFormat3);
        java.io.File file5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension6 = pcxImageParser0.getImageSize(file5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test0483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0483");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        boolean boolean30 = pcxImageParser0.canAcceptExtension("pcx");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser0.getDefaultParameters();
        java.io.File file32 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str33 = pcxImageParser0.dumpImageFile(file32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
    }

    @Test
    public void test0484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0484");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        java.nio.ByteOrder byteOrder28 = pcxImageParser0.getByteOrder();
        java.io.File file29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder31 = pcxImageParser30.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance33 = pcxImageParser30.getFormatCompliance(byteSource32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser30.getMetadata(byteSource34);
        boolean boolean37 = pcxImageParser30.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser30.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension39 = pcxImageParser0.getImageSize(file29, pcxImagingParameters38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(byteOrder28);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNull(formatCompliance33);
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
    }

    @Test
    public void test0485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0485");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.ImageFormat imageFormat8 = null;
        boolean boolean9 = pcxImageParser0.canAcceptType(imageFormat8);
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser11.getMetadata(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder16 = pcxImageParser15.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser15.getFormatCompliance(byteSource17);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser15.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser21.getMetadata(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder26 = pcxImageParser25.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance28 = pcxImageParser25.getFormatCompliance(byteSource27);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata30 = pcxImageParser25.getMetadata(byteSource29);
        boolean boolean32 = pcxImageParser25.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser25.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser21.getMetadata(byteSource24, pcxImagingParameters33);
        byte[] byteArray35 = pcxImageParser15.getIccProfileBytes(byteSource20, pcxImagingParameters33);
        java.lang.String str36 = pcxImageParser15.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = pcxImageParser15.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser11.getMetadata(byteSource14, pcxImagingParameters37);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata39 = pcxImageParser0.getMetadata(byteSource10, pcxImagingParameters37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str41 = pcxImageParser0.dumpImageFile(byteSource40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNull(formatCompliance18);
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNotNull(byteOrder26);
        org.junit.Assert.assertNull(formatCompliance28);
        org.junit.Assert.assertNull(imageMetadata30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertNull(byteArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Pcx-Custom" + "'", str36, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters37);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNull(imageMetadata39);
    }

    @Test
    public void test0486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0486");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = null;
        byte[] byteArray9 = pcxImageParser6.getIccProfileBytes(byteSource7, pcxImagingParameters8);
        java.lang.String str10 = pcxImageParser6.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource5, pcxImagingParameters11);
        java.nio.ByteOrder byteOrder13 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder16 = pcxImageParser15.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser15.getFormatCompliance(byteSource17);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser15.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat20 = null;
        boolean boolean21 = pcxImageParser15.canAcceptType(imageFormat20);
        java.lang.String str22 = pcxImageParser15.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser15.getDefaultParameters();
        java.lang.String str24 = pcxImageParser15.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser15.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage26 = pcxImageParser0.getBufferedImage(byteSource14, pcxImagingParameters25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(byteArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "pcx" + "'", str10, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNull(formatCompliance18);
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Pcx-Custom" + "'", str24, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
    }

    @Test
    public void test0487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0487");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        java.lang.String str9 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = pcxImageParser0.dumpImageFile(byteSource10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Pcx-Custom" + "'", str9, "Pcx-Custom");
    }

    @Test
    public void test0488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0488");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser9.canAcceptType(imageFormat14);
        java.lang.String str16 = pcxImageParser9.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser9.getDefaultParameters();
        byte[] byteArray18 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters17);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata21 = pcxImageParser0.getMetadata(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo23 = pcxImageParser0.getImageInfo(byteSource22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "pcx" + "'", str16, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
        org.junit.Assert.assertNull(imageMetadata21);
    }

    @Test
    public void test0489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0489");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser4.getMetadata(byteSource8);
        boolean boolean11 = pcxImageParser4.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters12);
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser0.canAcceptType(imageFormat14);
        java.io.File file16 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray17 = pcxImageParser0.getIccProfileBytes(file16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test0490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0490");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser0.canAcceptType(imageFormat23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = null;
        byte[] byteArray29 = pcxImageParser26.getIccProfileBytes(byteSource27, pcxImagingParameters28);
        java.lang.String str30 = pcxImageParser26.getName();
        java.lang.String str31 = pcxImageParser26.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder34 = pcxImageParser33.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance36 = pcxImageParser33.getFormatCompliance(byteSource35);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = pcxImageParser33.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser26.getMetadata(byteSource32, pcxImagingParameters37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = null;
        byte[] byteArray43 = pcxImageParser40.getIccProfileBytes(byteSource41, pcxImagingParameters42);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = pcxImageParser40.getDefaultParameters();
        byte[] byteArray45 = pcxImageParser26.getIccProfileBytes(byteSource39, pcxImagingParameters44);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension46 = pcxImageParser0.getImageSize(byteSource25, pcxImagingParameters44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(byteArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Pcx-Custom" + "'", str30, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Pcx-Custom" + "'", str31, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder34);
        org.junit.Assert.assertNull(formatCompliance36);
        org.junit.Assert.assertNotNull(pcxImagingParameters37);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNull(byteArray43);
        org.junit.Assert.assertNotNull(pcxImagingParameters44);
        org.junit.Assert.assertNull(byteArray45);
    }

    @Test
    public void test0491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0491");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.io.File file13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = null;
        byte[] byteArray17 = pcxImageParser14.getIccProfileBytes(byteSource15, pcxImagingParameters16);
        java.nio.ByteOrder byteOrder18 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser20 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder21 = pcxImageParser20.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance23 = pcxImageParser20.getFormatCompliance(byteSource22);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = pcxImageParser20.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat25 = null;
        boolean boolean26 = pcxImageParser20.canAcceptType(imageFormat25);
        java.lang.String str27 = pcxImageParser20.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser20.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser14.getMetadata(byteSource19, pcxImagingParameters28);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata30 = pcxImageParser0.getMetadata(file13, pcxImagingParameters28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(byteArray17);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNotNull(byteOrder21);
        org.junit.Assert.assertNull(formatCompliance23);
        org.junit.Assert.assertNotNull(pcxImagingParameters24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "pcx" + "'", str27, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(imageMetadata29);
    }

    @Test
    public void test0492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0492");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = null;
        byte[] byteArray11 = pcxImageParser8.getIccProfileBytes(byteSource9, pcxImagingParameters10);
        java.lang.String str12 = pcxImageParser8.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser8.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo15 = pcxImageParser0.getImageInfo(byteSource7, pcxImagingParameters14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(byteArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "pcx" + "'", str12, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
    }

    @Test
    public void test0493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0493");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        java.nio.ByteOrder byteOrder32 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder35 = pcxImageParser34.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance37 = pcxImageParser34.getFormatCompliance(byteSource36);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser34.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser40.getMetadata(byteSource41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder45 = pcxImageParser44.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance47 = pcxImageParser44.getFormatCompliance(byteSource46);
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser44.getMetadata(byteSource48);
        boolean boolean51 = pcxImageParser44.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser44.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser40.getMetadata(byteSource43, pcxImagingParameters52);
        byte[] byteArray54 = pcxImageParser34.getIccProfileBytes(byteSource39, pcxImagingParameters52);
        java.lang.String str55 = pcxImageParser34.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters56 = pcxImageParser34.getDefaultParameters();
        byte[] byteArray57 = pcxImageParser0.getIccProfileBytes(byteSource33, pcxImagingParameters56);
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance59 = pcxImageParser0.getFormatCompliance(byteSource58);
        java.io.File file60 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser61 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters63 = null;
        byte[] byteArray64 = pcxImageParser61.getIccProfileBytes(byteSource62, pcxImagingParameters63);
        java.lang.String str65 = pcxImageParser61.getName();
        java.lang.String str66 = pcxImageParser61.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource67 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser68 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder69 = pcxImageParser68.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource70 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance71 = pcxImageParser68.getFormatCompliance(byteSource70);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters72 = pcxImageParser68.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata73 = pcxImageParser61.getMetadata(byteSource67, pcxImagingParameters72);
        org.apache.commons.imaging.bytesource.ByteSource byteSource74 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser75 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource76 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters77 = null;
        byte[] byteArray78 = pcxImageParser75.getIccProfileBytes(byteSource76, pcxImagingParameters77);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters79 = pcxImageParser75.getDefaultParameters();
        byte[] byteArray80 = pcxImageParser61.getIccProfileBytes(byteSource74, pcxImagingParameters79);
        org.apache.commons.imaging.bytesource.ByteSource byteSource81 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser82 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder83 = pcxImageParser82.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource84 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance85 = pcxImageParser82.getFormatCompliance(byteSource84);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters86 = pcxImageParser82.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat87 = null;
        boolean boolean88 = pcxImageParser82.canAcceptType(imageFormat87);
        java.lang.String str89 = pcxImageParser82.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters90 = pcxImageParser82.getDefaultParameters();
        java.lang.String str91 = pcxImageParser82.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters92 = pcxImageParser82.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata93 = pcxImageParser61.getMetadata(byteSource81, pcxImagingParameters92);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo94 = pcxImageParser0.getImageInfo(file60, pcxImagingParameters92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNull(formatCompliance37);
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertNotNull(byteOrder45);
        org.junit.Assert.assertNull(formatCompliance47);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertNull(byteArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Pcx-Custom" + "'", str55, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters56);
        org.junit.Assert.assertNull(byteArray57);
        org.junit.Assert.assertNull(formatCompliance59);
        org.junit.Assert.assertNull(byteArray64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Pcx-Custom" + "'", str65, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Pcx-Custom" + "'", str66, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder69);
        org.junit.Assert.assertNull(formatCompliance71);
        org.junit.Assert.assertNotNull(pcxImagingParameters72);
        org.junit.Assert.assertNull(imageMetadata73);
        org.junit.Assert.assertNull(byteArray78);
        org.junit.Assert.assertNotNull(pcxImagingParameters79);
        org.junit.Assert.assertNull(byteArray80);
        org.junit.Assert.assertNotNull(byteOrder83);
        org.junit.Assert.assertNull(formatCompliance85);
        org.junit.Assert.assertNotNull(pcxImagingParameters86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "pcx" + "'", str89, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "Pcx-Custom" + "'", str91, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters92);
        org.junit.Assert.assertNull(imageMetadata93);
    }

    @Test
    public void test0494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0494");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        boolean boolean30 = pcxImageParser0.canAcceptExtension("pcx");
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = null;
        byte[] byteArray36 = pcxImageParser33.getIccProfileBytes(byteSource34, pcxImagingParameters35);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = pcxImageParser33.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension38 = pcxImageParser0.getImageSize(byteSource32, pcxImagingParameters37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertNotNull(pcxImagingParameters37);
    }

    @Test
    public void test0495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0495");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser9.canAcceptType(imageFormat14);
        java.lang.String str16 = pcxImageParser9.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser9.getDefaultParameters();
        byte[] byteArray18 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters17);
        org.apache.commons.imaging.ImageFormat imageFormat19 = null;
        boolean boolean20 = pcxImageParser0.canAcceptType(imageFormat19);
        java.lang.String str21 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str23 = pcxImageParser0.dumpImageFile(byteSource22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "pcx" + "'", str16, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
    }

    @Test
    public void test0496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0496");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser24.canAcceptType(imageFormat29);
        java.lang.String str31 = pcxImageParser24.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser24.getDefaultParameters();
        byte[] byteArray33 = pcxImageParser0.getIccProfileBytes(byteSource23, pcxImagingParameters32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder36 = pcxImageParser35.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser38 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder39 = pcxImageParser38.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance41 = pcxImageParser38.getFormatCompliance(byteSource40);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser38.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser44.getMetadata(byteSource45);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser48 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder49 = pcxImageParser48.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance51 = pcxImageParser48.getFormatCompliance(byteSource50);
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser48.getMetadata(byteSource52);
        boolean boolean55 = pcxImageParser48.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters56 = pcxImageParser48.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata57 = pcxImageParser44.getMetadata(byteSource47, pcxImagingParameters56);
        byte[] byteArray58 = pcxImageParser38.getIccProfileBytes(byteSource43, pcxImagingParameters56);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata59 = pcxImageParser35.getMetadata(byteSource37, pcxImagingParameters56);
        byte[] byteArray60 = pcxImageParser0.getIccProfileBytes(byteSource34, pcxImagingParameters56);
        java.io.File file61 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser62 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters64 = null;
        byte[] byteArray65 = pcxImageParser62.getIccProfileBytes(byteSource63, pcxImagingParameters64);
        java.nio.ByteOrder byteOrder66 = pcxImageParser62.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource67 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser68 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder69 = pcxImageParser68.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource70 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance71 = pcxImageParser68.getFormatCompliance(byteSource70);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters72 = pcxImageParser68.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat73 = null;
        boolean boolean74 = pcxImageParser68.canAcceptType(imageFormat73);
        java.lang.String str75 = pcxImageParser68.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters76 = pcxImageParser68.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata77 = pcxImageParser62.getMetadata(byteSource67, pcxImagingParameters76);
        org.apache.commons.imaging.bytesource.ByteSource byteSource78 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser79 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder80 = pcxImageParser79.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource81 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance82 = pcxImageParser79.getFormatCompliance(byteSource81);
        org.apache.commons.imaging.bytesource.ByteSource byteSource83 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata84 = pcxImageParser79.getMetadata(byteSource83);
        boolean boolean86 = pcxImageParser79.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters87 = pcxImageParser79.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata88 = pcxImageParser62.getMetadata(byteSource78, pcxImagingParameters87);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo89 = pcxImageParser0.getImageInfo(file61, pcxImagingParameters87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "pcx" + "'", str31, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteOrder39);
        org.junit.Assert.assertNull(formatCompliance41);
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertNull(imageMetadata46);
        org.junit.Assert.assertNotNull(byteOrder49);
        org.junit.Assert.assertNull(formatCompliance51);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters56);
        org.junit.Assert.assertNull(imageMetadata57);
        org.junit.Assert.assertNull(byteArray58);
        org.junit.Assert.assertNull(imageMetadata59);
        org.junit.Assert.assertNull(byteArray60);
        org.junit.Assert.assertNull(byteArray65);
        org.junit.Assert.assertNotNull(byteOrder66);
        org.junit.Assert.assertNotNull(byteOrder69);
        org.junit.Assert.assertNull(formatCompliance71);
        org.junit.Assert.assertNotNull(pcxImagingParameters72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "pcx" + "'", str75, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters76);
        org.junit.Assert.assertNull(imageMetadata77);
        org.junit.Assert.assertNotNull(byteOrder80);
        org.junit.Assert.assertNull(formatCompliance82);
        org.junit.Assert.assertNull(imageMetadata84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters87);
        org.junit.Assert.assertNull(imageMetadata88);
    }

    @Test
    public void test0497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0497");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser0.getFormatCompliance(byteSource31);
        java.io.PrintWriter printWriter33 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean35 = pcxImageParser0.dumpImageFile(printWriter33, byteSource34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(formatCompliance32);
    }

    @Test
    public void test0498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0498");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        boolean boolean9 = pcxImageParser0.canAcceptExtension("");
        java.io.File file10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = null;
        byte[] byteArray14 = pcxImageParser11.getIccProfileBytes(byteSource12, pcxImagingParameters13);
        java.lang.String str15 = pcxImageParser11.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata17 = pcxImageParser11.getMetadata(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance19 = pcxImageParser11.getFormatCompliance(byteSource18);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters20 = pcxImageParser11.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat21 = null;
        boolean boolean22 = pcxImageParser11.canAcceptType(imageFormat21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser11.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo24 = pcxImageParser0.getImageInfo(file10, pcxImagingParameters23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(byteArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Pcx-Custom" + "'", str15, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata17);
        org.junit.Assert.assertNull(formatCompliance19);
        org.junit.Assert.assertNotNull(pcxImagingParameters20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
    }

    @Test
    public void test0499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0499");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getName();
        java.io.File file6 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray7 = pcxImageParser0.getIccProfileBytes(file6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
    }

    @Test
    public void test0500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0500");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        java.nio.ByteOrder byteOrder9 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = pcxImageParser0.dumpImageFile(byteSource10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNotNull(byteOrder9);
    }
}

