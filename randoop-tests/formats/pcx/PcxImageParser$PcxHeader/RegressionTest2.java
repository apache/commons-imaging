/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest2 {

    public static boolean debug = false;

    @Test
    public void test1001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1001");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        boolean boolean9 = pcxImageParser0.canAcceptExtension("");
        org.apache.commons.imaging.ImageFormat imageFormat10 = null;
        boolean boolean11 = pcxImageParser0.canAcceptType(imageFormat10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser0.getDefaultParameters();
        java.lang.Class<?> wildcardClass13 = pcxImageParser0.getClass();
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1002");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = null;
        byte[] byteArray10 = pcxImageParser7.getIccProfileBytes(byteSource8, pcxImagingParameters9);
        java.nio.ByteOrder byteOrder11 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder14 = pcxImageParser13.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser13.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat18 = null;
        boolean boolean19 = pcxImageParser13.canAcceptType(imageFormat18);
        java.lang.String str20 = pcxImageParser13.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser7.getMetadata(byteSource12, pcxImagingParameters21);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension23 = pcxImageParser0.getImageSize(byteSource6, pcxImagingParameters21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray10);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNotNull(byteOrder14);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "pcx" + "'", str20, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
    }

    @Test
    public void test1003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1003");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList7 = pcxImageParser0.getAllBufferedImages(byteSource6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
    }

    @Test
    public void test1004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1004");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource14);
        org.apache.commons.imaging.ImageFormat imageFormat16 = null;
        boolean boolean17 = pcxImageParser0.canAcceptType(imageFormat16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = pcxImageParser0.dumpImageFile(byteSource18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test1005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1005");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.lang.String str4 = pcxImageParser0.getName();
        boolean boolean6 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        java.lang.String str13 = pcxImageParser8.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser8.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser8.canAcceptExtension("");
        boolean boolean19 = pcxImageParser8.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = null;
        byte[] byteArray24 = pcxImageParser21.getIccProfileBytes(byteSource22, pcxImagingParameters23);
        java.lang.String str25 = pcxImageParser21.getName();
        java.lang.String str26 = pcxImageParser21.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder29 = pcxImageParser28.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance31 = pcxImageParser28.getFormatCompliance(byteSource30);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser28.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser21.getMetadata(byteSource27, pcxImagingParameters32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser35.getMetadata(byteSource36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder40 = pcxImageParser39.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance42 = pcxImageParser39.getFormatCompliance(byteSource41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser39.getMetadata(byteSource43);
        boolean boolean46 = pcxImageParser39.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = pcxImageParser39.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser35.getMetadata(byteSource38, pcxImagingParameters47);
        byte[] byteArray49 = pcxImageParser21.getIccProfileBytes(byteSource34, pcxImagingParameters47);
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance51 = pcxImageParser21.getFormatCompliance(byteSource50);
        java.nio.ByteOrder byteOrder52 = pcxImageParser21.getByteOrder();
        java.nio.ByteOrder byteOrder53 = pcxImageParser21.getByteOrder();
        java.lang.String str54 = pcxImageParser21.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters55 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata56 = pcxImageParser8.getMetadata(byteSource20, pcxImagingParameters55);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata57 = pcxImageParser0.getMetadata(byteSource7, pcxImagingParameters55);
        java.lang.Class<?> wildcardClass58 = pcxImageParser0.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Pcx-Custom" + "'", str26, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertNull(formatCompliance31);
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
        org.junit.Assert.assertNull(imageMetadata33);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNull(formatCompliance42);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters47);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNull(byteArray49);
        org.junit.Assert.assertNull(formatCompliance51);
        org.junit.Assert.assertNotNull(byteOrder52);
        org.junit.Assert.assertNotNull(byteOrder53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Pcx-Custom" + "'", str54, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters55);
        org.junit.Assert.assertNull(imageMetadata56);
        org.junit.Assert.assertNull(imageMetadata57);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test1006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1006");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = null;
        byte[] byteArray19 = pcxImageParser16.getIccProfileBytes(byteSource17, pcxImagingParameters18);
        java.lang.String str20 = pcxImageParser16.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser10.getMetadata(byteSource15, pcxImagingParameters21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser0.getMetadata(byteSource9, pcxImagingParameters23);
        java.lang.String str25 = pcxImageParser0.getName();
        java.lang.String str26 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance28 = pcxImageParser0.getFormatCompliance(byteSource27);
        java.io.File file29 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean30 = pcxImageParser0.canAcceptExtension(file29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "pcx" + "'", str20, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Pcx-Custom" + "'", str26, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance28);
    }

    @Test
    public void test1007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1007");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        boolean boolean10 = pcxImageParser0.canAcceptExtension("");
        java.io.File file11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser12 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = null;
        byte[] byteArray15 = pcxImageParser12.getIccProfileBytes(byteSource13, pcxImagingParameters14);
        java.lang.String str16 = pcxImageParser12.getName();
        java.lang.String str17 = pcxImageParser12.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder20 = pcxImageParser19.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance22 = pcxImageParser19.getFormatCompliance(byteSource21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser19.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser12.getMetadata(byteSource18, pcxImagingParameters23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata28 = pcxImageParser26.getMetadata(byteSource27);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder31 = pcxImageParser30.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance33 = pcxImageParser30.getFormatCompliance(byteSource32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser30.getMetadata(byteSource34);
        boolean boolean37 = pcxImageParser30.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser30.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata39 = pcxImageParser26.getMetadata(byteSource29, pcxImagingParameters38);
        byte[] byteArray40 = pcxImageParser12.getIccProfileBytes(byteSource25, pcxImagingParameters38);
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance42 = pcxImageParser12.getFormatCompliance(byteSource41);
        java.nio.ByteOrder byteOrder43 = pcxImageParser12.getByteOrder();
        java.nio.ByteOrder byteOrder44 = pcxImageParser12.getByteOrder();
        java.lang.String str45 = pcxImageParser12.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser12.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension47 = pcxImageParser0.getImageSize(file11, pcxImagingParameters46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(byteArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Pcx-Custom" + "'", str16, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Pcx-Custom" + "'", str17, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNull(formatCompliance22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertNull(imageMetadata28);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNull(formatCompliance33);
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
        org.junit.Assert.assertNull(imageMetadata39);
        org.junit.Assert.assertNull(byteArray40);
        org.junit.Assert.assertNull(formatCompliance42);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteOrder44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Pcx-Custom" + "'", str45, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
    }

    @Test
    public void test1008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1008");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.nio.ByteOrder byteOrder4 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder7 = pcxImageParser6.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance9 = pcxImageParser6.getFormatCompliance(byteSource8);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat11 = null;
        boolean boolean12 = pcxImageParser6.canAcceptType(imageFormat11);
        java.lang.String str13 = pcxImageParser6.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource5, pcxImagingParameters14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser0.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder20 = pcxImageParser19.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance22 = pcxImageParser19.getFormatCompliance(byteSource21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser19.getDefaultParameters();
        java.lang.String str24 = pcxImageParser19.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser19.getMetadata(byteSource25, pcxImagingParameters26);
        java.lang.String str28 = pcxImageParser19.getDefaultExtension();
        boolean boolean30 = pcxImageParser19.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser19.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser0.getMetadata(byteSource18, pcxImagingParameters31);
        java.io.File file33 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser0.getMetadata(file33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNull(formatCompliance9);
        org.junit.Assert.assertNotNull(pcxImagingParameters10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNull(formatCompliance22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "pcx" + "'", str24, "pcx");
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "pcx" + "'", str28, "pcx");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
        org.junit.Assert.assertNull(imageMetadata32);
    }

    @Test
    public void test1009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1009");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.nio.ByteOrder byteOrder29 = pcxImageParser0.getByteOrder();
        java.lang.String str30 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser0.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser34.getMetadata(byteSource35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser38 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder39 = pcxImageParser38.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance41 = pcxImageParser38.getFormatCompliance(byteSource40);
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata43 = pcxImageParser38.getMetadata(byteSource42);
        boolean boolean45 = pcxImageParser38.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser38.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser34.getMetadata(byteSource37, pcxImagingParameters46);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser0.getMetadata(byteSource33, pcxImagingParameters46);
        java.io.File file49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser50 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = null;
        byte[] byteArray53 = pcxImageParser50.getIccProfileBytes(byteSource51, pcxImagingParameters52);
        java.lang.String str54 = pcxImageParser50.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat55 = null;
        boolean boolean56 = pcxImageParser50.canAcceptType(imageFormat55);
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser58 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata60 = pcxImageParser58.getMetadata(byteSource59);
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser62 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder63 = pcxImageParser62.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource64 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance65 = pcxImageParser62.getFormatCompliance(byteSource64);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters66 = pcxImageParser62.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource67 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser68 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata70 = pcxImageParser68.getMetadata(byteSource69);
        org.apache.commons.imaging.bytesource.ByteSource byteSource71 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser72 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder73 = pcxImageParser72.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource74 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance75 = pcxImageParser72.getFormatCompliance(byteSource74);
        org.apache.commons.imaging.bytesource.ByteSource byteSource76 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata77 = pcxImageParser72.getMetadata(byteSource76);
        boolean boolean79 = pcxImageParser72.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters80 = pcxImageParser72.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata81 = pcxImageParser68.getMetadata(byteSource71, pcxImagingParameters80);
        byte[] byteArray82 = pcxImageParser62.getIccProfileBytes(byteSource67, pcxImagingParameters80);
        java.lang.String str83 = pcxImageParser62.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters84 = pcxImageParser62.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata85 = pcxImageParser58.getMetadata(byteSource61, pcxImagingParameters84);
        byte[] byteArray86 = pcxImageParser50.getIccProfileBytes(byteSource57, pcxImagingParameters84);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension87 = pcxImageParser0.getImageSize(file49, pcxImagingParameters84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "pcx" + "'", str30, "pcx");
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertNotNull(byteOrder39);
        org.junit.Assert.assertNull(formatCompliance41);
        org.junit.Assert.assertNull(imageMetadata43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
        org.junit.Assert.assertNull(imageMetadata47);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNull(byteArray53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "pcx" + "'", str54, "pcx");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(imageMetadata60);
        org.junit.Assert.assertNotNull(byteOrder63);
        org.junit.Assert.assertNull(formatCompliance65);
        org.junit.Assert.assertNotNull(pcxImagingParameters66);
        org.junit.Assert.assertNull(imageMetadata70);
        org.junit.Assert.assertNotNull(byteOrder73);
        org.junit.Assert.assertNull(formatCompliance75);
        org.junit.Assert.assertNull(imageMetadata77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters80);
        org.junit.Assert.assertNull(imageMetadata81);
        org.junit.Assert.assertNull(byteArray82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "Pcx-Custom" + "'", str83, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters84);
        org.junit.Assert.assertNull(imageMetadata85);
        org.junit.Assert.assertNull(byteArray86);
    }

    @Test
    public void test1010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1010");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        java.nio.ByteOrder byteOrder2 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat3 = null;
        boolean boolean4 = pcxImageParser0.canAcceptType(imageFormat3);
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str9 = pcxImageParser8.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        java.lang.String str12 = pcxImageParser8.getName();
        java.lang.String str13 = pcxImageParser8.getName();
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser8.canAcceptType(imageFormat14);
        boolean boolean17 = pcxImageParser8.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = null;
        byte[] byteArray22 = pcxImageParser19.getIccProfileBytes(byteSource20, pcxImagingParameters21);
        java.lang.String str23 = pcxImageParser19.getName();
        java.lang.String str24 = pcxImageParser19.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder27 = pcxImageParser26.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance29 = pcxImageParser26.getFormatCompliance(byteSource28);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser26.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser19.getMetadata(byteSource25, pcxImagingParameters30);
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = null;
        byte[] byteArray36 = pcxImageParser33.getIccProfileBytes(byteSource34, pcxImagingParameters35);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = pcxImageParser33.getDefaultParameters();
        byte[] byteArray38 = pcxImageParser19.getIccProfileBytes(byteSource32, pcxImagingParameters37);
        byte[] byteArray39 = pcxImageParser8.getIccProfileBytes(byteSource18, pcxImagingParameters37);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser0.getMetadata(byteSource7, pcxImagingParameters37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser42 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder43 = pcxImageParser42.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance45 = pcxImageParser42.getFormatCompliance(byteSource44);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser42.getDefaultParameters();
        java.lang.String str47 = pcxImageParser42.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser49 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder50 = pcxImageParser49.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance52 = pcxImageParser49.getFormatCompliance(byteSource51);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters53 = pcxImageParser49.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters54 = pcxImageParser49.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters55 = pcxImageParser49.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser57 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters59 = null;
        byte[] byteArray60 = pcxImageParser57.getIccProfileBytes(byteSource58, pcxImagingParameters59);
        java.lang.String str61 = pcxImageParser57.getName();
        java.lang.String str62 = pcxImageParser57.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser64 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder65 = pcxImageParser64.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource66 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance67 = pcxImageParser64.getFormatCompliance(byteSource66);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters68 = pcxImageParser64.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata69 = pcxImageParser57.getMetadata(byteSource63, pcxImagingParameters68);
        java.lang.String str70 = pcxImageParser57.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource71 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata72 = pcxImageParser57.getMetadata(byteSource71);
        org.apache.commons.imaging.bytesource.ByteSource byteSource73 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser74 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource75 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters76 = null;
        byte[] byteArray77 = pcxImageParser74.getIccProfileBytes(byteSource75, pcxImagingParameters76);
        java.lang.String str78 = pcxImageParser74.getName();
        java.lang.String str79 = pcxImageParser74.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource80 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser81 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder82 = pcxImageParser81.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource83 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance84 = pcxImageParser81.getFormatCompliance(byteSource83);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters85 = pcxImageParser81.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata86 = pcxImageParser74.getMetadata(byteSource80, pcxImagingParameters85);
        org.apache.commons.imaging.bytesource.ByteSource byteSource87 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser88 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource89 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters90 = null;
        byte[] byteArray91 = pcxImageParser88.getIccProfileBytes(byteSource89, pcxImagingParameters90);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters92 = pcxImageParser88.getDefaultParameters();
        byte[] byteArray93 = pcxImageParser74.getIccProfileBytes(byteSource87, pcxImagingParameters92);
        byte[] byteArray94 = pcxImageParser57.getIccProfileBytes(byteSource73, pcxImagingParameters92);
        byte[] byteArray95 = pcxImageParser49.getIccProfileBytes(byteSource56, pcxImagingParameters92);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata96 = pcxImageParser42.getMetadata(byteSource48, pcxImagingParameters92);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension97 = pcxImageParser0.getImageSize(byteSource41, pcxImagingParameters92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Pcx-Custom" + "'", str9, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Pcx-Custom" + "'", str12, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(byteArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Pcx-Custom" + "'", str23, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Pcx-Custom" + "'", str24, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNull(formatCompliance29);
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertNotNull(pcxImagingParameters37);
        org.junit.Assert.assertNull(byteArray38);
        org.junit.Assert.assertNull(byteArray39);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNull(formatCompliance45);
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "pcx" + "'", str47, "pcx");
        org.junit.Assert.assertNotNull(byteOrder50);
        org.junit.Assert.assertNull(formatCompliance52);
        org.junit.Assert.assertNotNull(pcxImagingParameters53);
        org.junit.Assert.assertNotNull(pcxImagingParameters54);
        org.junit.Assert.assertNotNull(pcxImagingParameters55);
        org.junit.Assert.assertNull(byteArray60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Pcx-Custom" + "'", str61, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Pcx-Custom" + "'", str62, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder65);
        org.junit.Assert.assertNull(formatCompliance67);
        org.junit.Assert.assertNotNull(pcxImagingParameters68);
        org.junit.Assert.assertNull(imageMetadata69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Pcx-Custom" + "'", str70, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata72);
        org.junit.Assert.assertNull(byteArray77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "Pcx-Custom" + "'", str78, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "Pcx-Custom" + "'", str79, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder82);
        org.junit.Assert.assertNull(formatCompliance84);
        org.junit.Assert.assertNotNull(pcxImagingParameters85);
        org.junit.Assert.assertNull(imageMetadata86);
        org.junit.Assert.assertNull(byteArray91);
        org.junit.Assert.assertNotNull(pcxImagingParameters92);
        org.junit.Assert.assertNull(byteArray93);
        org.junit.Assert.assertNull(byteArray94);
        org.junit.Assert.assertNull(byteArray95);
        org.junit.Assert.assertNull(imageMetadata96);
    }

    @Test
    public void test1011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1011");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        boolean boolean6 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser8.getDefaultParameters();
        byte[] byteArray14 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters13);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = pcxImageParser0.getDefaultParameters();
        java.lang.Class<?> wildcardClass16 = pcxImageParser0.getClass();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertNull(byteArray14);
        org.junit.Assert.assertNotNull(pcxImagingParameters15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1012");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        boolean boolean14 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser0.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser0.getFormatCompliance(byteSource17);
        java.io.File file19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser20 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = null;
        byte[] byteArray23 = pcxImageParser20.getIccProfileBytes(byteSource21, pcxImagingParameters22);
        java.lang.String str24 = pcxImageParser20.getName();
        java.lang.String str25 = pcxImageParser20.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser27 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder28 = pcxImageParser27.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser27.getFormatCompliance(byteSource29);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser27.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser20.getMetadata(byteSource26, pcxImagingParameters31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser34.getMetadata(byteSource35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser38 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder39 = pcxImageParser38.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance41 = pcxImageParser38.getFormatCompliance(byteSource40);
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata43 = pcxImageParser38.getMetadata(byteSource42);
        boolean boolean45 = pcxImageParser38.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser38.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser34.getMetadata(byteSource37, pcxImagingParameters46);
        byte[] byteArray48 = pcxImageParser20.getIccProfileBytes(byteSource33, pcxImagingParameters46);
        boolean boolean50 = pcxImageParser20.canAcceptExtension("pcx");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters51 = pcxImageParser20.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray52 = pcxImageParser0.getIccProfileBytes(file19, pcxImagingParameters51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNull(formatCompliance18);
        org.junit.Assert.assertNull(byteArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Pcx-Custom" + "'", str24, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertNotNull(byteOrder39);
        org.junit.Assert.assertNull(formatCompliance41);
        org.junit.Assert.assertNull(imageMetadata43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
        org.junit.Assert.assertNull(imageMetadata47);
        org.junit.Assert.assertNull(byteArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters51);
    }

    @Test
    public void test1013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1013");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        java.nio.ByteOrder byteOrder32 = pcxImageParser0.getByteOrder();
        java.io.File file33 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance34 = pcxImageParser0.getFormatCompliance(file33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(byteOrder32);
    }

    @Test
    public void test1014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1014");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser4.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser8.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.lang.String str29 = pcxImageParser8.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser4.getMetadata(byteSource7, pcxImagingParameters30);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters30);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = null;
        byte[] byteArray35 = pcxImageParser0.getIccProfileBytes(byteSource33, pcxImagingParameters34);
        java.nio.ByteOrder byteOrder36 = pcxImageParser0.getByteOrder();
        java.io.File file37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser38 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = null;
        byte[] byteArray41 = pcxImageParser38.getIccProfileBytes(byteSource39, pcxImagingParameters40);
        java.lang.String str42 = pcxImageParser38.getName();
        java.lang.String str43 = pcxImageParser38.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser45 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder46 = pcxImageParser45.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance48 = pcxImageParser45.getFormatCompliance(byteSource47);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters49 = pcxImageParser45.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata50 = pcxImageParser38.getMetadata(byteSource44, pcxImagingParameters49);
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance52 = pcxImageParser38.getFormatCompliance(byteSource51);
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser54 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters56 = null;
        byte[] byteArray57 = pcxImageParser54.getIccProfileBytes(byteSource55, pcxImagingParameters56);
        java.nio.ByteOrder byteOrder58 = pcxImageParser54.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser60 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder61 = pcxImageParser60.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance63 = pcxImageParser60.getFormatCompliance(byteSource62);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters64 = pcxImageParser60.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat65 = null;
        boolean boolean66 = pcxImageParser60.canAcceptType(imageFormat65);
        java.lang.String str67 = pcxImageParser60.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters68 = pcxImageParser60.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata69 = pcxImageParser54.getMetadata(byteSource59, pcxImagingParameters68);
        org.apache.commons.imaging.bytesource.ByteSource byteSource70 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser71 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder72 = pcxImageParser71.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource73 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance74 = pcxImageParser71.getFormatCompliance(byteSource73);
        org.apache.commons.imaging.bytesource.ByteSource byteSource75 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata76 = pcxImageParser71.getMetadata(byteSource75);
        boolean boolean78 = pcxImageParser71.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters79 = pcxImageParser71.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata80 = pcxImageParser54.getMetadata(byteSource70, pcxImagingParameters79);
        byte[] byteArray81 = pcxImageParser38.getIccProfileBytes(byteSource53, pcxImagingParameters79);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo82 = pcxImageParser0.getImageInfo(file37, pcxImagingParameters79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNull(byteArray35);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNull(byteArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Pcx-Custom" + "'", str42, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Pcx-Custom" + "'", str43, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder46);
        org.junit.Assert.assertNull(formatCompliance48);
        org.junit.Assert.assertNotNull(pcxImagingParameters49);
        org.junit.Assert.assertNull(imageMetadata50);
        org.junit.Assert.assertNull(formatCompliance52);
        org.junit.Assert.assertNull(byteArray57);
        org.junit.Assert.assertNotNull(byteOrder58);
        org.junit.Assert.assertNotNull(byteOrder61);
        org.junit.Assert.assertNull(formatCompliance63);
        org.junit.Assert.assertNotNull(pcxImagingParameters64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "pcx" + "'", str67, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters68);
        org.junit.Assert.assertNull(imageMetadata69);
        org.junit.Assert.assertNotNull(byteOrder72);
        org.junit.Assert.assertNull(formatCompliance74);
        org.junit.Assert.assertNull(imageMetadata76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters79);
        org.junit.Assert.assertNull(imageMetadata80);
        org.junit.Assert.assertNull(byteArray81);
    }

    @Test
    public void test1015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1015");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = pcxImageParser0.getDefaultParameters();
        java.io.File file10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str12 = pcxImageParser11.getName();
        java.nio.ByteOrder byteOrder13 = pcxImageParser11.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser11.canAcceptType(imageFormat14);
        org.apache.commons.imaging.ImageFormat imageFormat16 = null;
        boolean boolean17 = pcxImageParser11.canAcceptType(imageFormat16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str20 = pcxImageParser19.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance22 = pcxImageParser19.getFormatCompliance(byteSource21);
        java.lang.String str23 = pcxImageParser19.getName();
        java.lang.String str24 = pcxImageParser19.getName();
        org.apache.commons.imaging.ImageFormat imageFormat25 = null;
        boolean boolean26 = pcxImageParser19.canAcceptType(imageFormat25);
        boolean boolean28 = pcxImageParser19.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = null;
        byte[] byteArray33 = pcxImageParser30.getIccProfileBytes(byteSource31, pcxImagingParameters32);
        java.lang.String str34 = pcxImageParser30.getName();
        java.lang.String str35 = pcxImageParser30.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser37 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder38 = pcxImageParser37.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance40 = pcxImageParser37.getFormatCompliance(byteSource39);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = pcxImageParser37.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser30.getMetadata(byteSource36, pcxImagingParameters41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = null;
        byte[] byteArray47 = pcxImageParser44.getIccProfileBytes(byteSource45, pcxImagingParameters46);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = pcxImageParser44.getDefaultParameters();
        byte[] byteArray49 = pcxImageParser30.getIccProfileBytes(byteSource43, pcxImagingParameters48);
        byte[] byteArray50 = pcxImageParser19.getIccProfileBytes(byteSource29, pcxImagingParameters48);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata51 = pcxImageParser11.getMetadata(byteSource18, pcxImagingParameters48);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata52 = pcxImageParser0.getMetadata(file10, pcxImagingParameters48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(pcxImagingParameters9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Pcx-Custom" + "'", str12, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Pcx-Custom" + "'", str20, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Pcx-Custom" + "'", str23, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Pcx-Custom" + "'", str24, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Pcx-Custom" + "'", str34, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Pcx-Custom" + "'", str35, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder38);
        org.junit.Assert.assertNull(formatCompliance40);
        org.junit.Assert.assertNotNull(pcxImagingParameters41);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertNull(byteArray47);
        org.junit.Assert.assertNotNull(pcxImagingParameters48);
        org.junit.Assert.assertNull(byteArray49);
        org.junit.Assert.assertNull(byteArray50);
        org.junit.Assert.assertNull(imageMetadata51);
    }

    @Test
    public void test1016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1016");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        java.io.File file22 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray23 = pcxImageParser0.getIccProfileBytes(file22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
    }

    @Test
    public void test1017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1017");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        boolean boolean22 = pcxImageParser0.canAcceptExtension("pcx");
        java.io.File file23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        java.lang.String str29 = pcxImageParser24.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser24.getMetadata(byteSource30, pcxImagingParameters31);
        java.lang.String str33 = pcxImageParser24.getDefaultExtension();
        boolean boolean35 = pcxImageParser24.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser24.getDefaultParameters();
        java.lang.String str37 = pcxImageParser24.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = null;
        byte[] byteArray42 = pcxImageParser39.getIccProfileBytes(byteSource40, pcxImagingParameters41);
        java.lang.String str43 = pcxImageParser39.getDefaultExtension();
        java.lang.String str44 = pcxImageParser39.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser46 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = null;
        byte[] byteArray49 = pcxImageParser46.getIccProfileBytes(byteSource47, pcxImagingParameters48);
        java.lang.String str50 = pcxImageParser46.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata52 = pcxImageParser46.getMetadata(byteSource51);
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance54 = pcxImageParser46.getFormatCompliance(byteSource53);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters55 = pcxImageParser46.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat56 = null;
        boolean boolean57 = pcxImageParser46.canAcceptType(imageFormat56);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters58 = pcxImageParser46.getDefaultParameters();
        byte[] byteArray59 = pcxImageParser39.getIccProfileBytes(byteSource45, pcxImagingParameters58);
        byte[] byteArray60 = pcxImageParser24.getIccProfileBytes(byteSource38, pcxImagingParameters58);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage61 = pcxImageParser0.getBufferedImage(file23, pcxImagingParameters58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "pcx" + "'", str29, "pcx");
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "pcx" + "'", str33, "pcx");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "pcx" + "'", str37, "pcx");
        org.junit.Assert.assertNull(byteArray42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "pcx" + "'", str43, "pcx");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Pcx-Custom" + "'", str44, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Pcx-Custom" + "'", str50, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata52);
        org.junit.Assert.assertNull(formatCompliance54);
        org.junit.Assert.assertNotNull(pcxImagingParameters55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters58);
        org.junit.Assert.assertNull(byteArray59);
        org.junit.Assert.assertNull(byteArray60);
    }

    @Test
    public void test1018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1018");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser9.canAcceptType(imageFormat14);
        java.lang.String str16 = pcxImageParser9.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser9.getDefaultParameters();
        byte[] byteArray18 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters17);
        org.apache.commons.imaging.ImageFormat imageFormat19 = null;
        boolean boolean20 = pcxImageParser0.canAcceptType(imageFormat19);
        java.lang.String str21 = pcxImageParser0.getName();
        java.io.File file22 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension23 = pcxImageParser0.getImageSize(file22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "pcx" + "'", str16, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
    }

    @Test
    public void test1019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1019");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.lang.String str6 = pcxImageParser0.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = pcxImageParser0.getDefaultParameters();
        java.io.File file8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = pcxImageParser9.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray16 = pcxImageParser0.getIccProfileBytes(file8, pcxImagingParameters15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Pcx-Custom" + "'", str6, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters7);
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNotNull(pcxImagingParameters15);
    }

    @Test
    public void test1020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1020");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat37 = null;
        boolean boolean38 = pcxImageParser32.canAcceptType(imageFormat37);
        java.lang.String str39 = pcxImageParser32.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser32.getDefaultParameters();
        byte[] byteArray41 = pcxImageParser0.getIccProfileBytes(byteSource31, pcxImagingParameters40);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser0.getDefaultParameters();
        java.lang.String str43 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList45 = pcxImageParser0.getAllBufferedImages(byteSource44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "pcx" + "'", str39, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(byteArray41);
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Pcx-Custom" + "'", str43, "Pcx-Custom");
    }

    @Test
    public void test1021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1021");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.nio.ByteOrder byteOrder4 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser0.getFormatCompliance(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser0.getMetadata(byteSource7);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass9 = imageMetadata8.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNull(formatCompliance6);
        org.junit.Assert.assertNull(imageMetadata8);
    }

    @Test
    public void test1022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1022");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser3 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder4 = pcxImageParser3.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser3.getFormatCompliance(byteSource5);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = pcxImageParser3.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata11 = pcxImageParser9.getMetadata(byteSource10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder14 = pcxImageParser13.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser13.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata18 = pcxImageParser13.getMetadata(byteSource17);
        boolean boolean20 = pcxImageParser13.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser9.getMetadata(byteSource12, pcxImagingParameters21);
        byte[] byteArray23 = pcxImageParser3.getIccProfileBytes(byteSource8, pcxImagingParameters21);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser0.getMetadata(byteSource2, pcxImagingParameters21);
        java.lang.String str25 = pcxImageParser0.getName();
        java.io.File file26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser27 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder28 = pcxImageParser27.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser27.getFormatCompliance(byteSource29);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser27.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser33.getMetadata(byteSource34);
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser37 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder38 = pcxImageParser37.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance40 = pcxImageParser37.getFormatCompliance(byteSource39);
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser37.getMetadata(byteSource41);
        boolean boolean44 = pcxImageParser37.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser37.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser33.getMetadata(byteSource36, pcxImagingParameters45);
        byte[] byteArray47 = pcxImageParser27.getIccProfileBytes(byteSource32, pcxImagingParameters45);
        java.lang.String str48 = pcxImageParser27.getName();
        java.lang.String str49 = pcxImageParser27.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser51 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder52 = pcxImageParser51.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance54 = pcxImageParser51.getFormatCompliance(byteSource53);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters55 = pcxImageParser51.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat56 = null;
        boolean boolean57 = pcxImageParser51.canAcceptType(imageFormat56);
        java.lang.String str58 = pcxImageParser51.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters59 = pcxImageParser51.getDefaultParameters();
        byte[] byteArray60 = pcxImageParser27.getIccProfileBytes(byteSource50, pcxImagingParameters59);
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser62 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder63 = pcxImageParser62.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource64 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser65 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder66 = pcxImageParser65.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource67 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance68 = pcxImageParser65.getFormatCompliance(byteSource67);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters69 = pcxImageParser65.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource70 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser71 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource72 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata73 = pcxImageParser71.getMetadata(byteSource72);
        org.apache.commons.imaging.bytesource.ByteSource byteSource74 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser75 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder76 = pcxImageParser75.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource77 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance78 = pcxImageParser75.getFormatCompliance(byteSource77);
        org.apache.commons.imaging.bytesource.ByteSource byteSource79 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata80 = pcxImageParser75.getMetadata(byteSource79);
        boolean boolean82 = pcxImageParser75.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters83 = pcxImageParser75.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata84 = pcxImageParser71.getMetadata(byteSource74, pcxImagingParameters83);
        byte[] byteArray85 = pcxImageParser65.getIccProfileBytes(byteSource70, pcxImagingParameters83);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata86 = pcxImageParser62.getMetadata(byteSource64, pcxImagingParameters83);
        byte[] byteArray87 = pcxImageParser27.getIccProfileBytes(byteSource61, pcxImagingParameters83);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata88 = pcxImageParser0.getMetadata(file26, pcxImagingParameters83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNull(formatCompliance6);
        org.junit.Assert.assertNotNull(pcxImagingParameters7);
        org.junit.Assert.assertNull(imageMetadata11);
        org.junit.Assert.assertNotNull(byteOrder14);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNull(imageMetadata18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNull(byteArray23);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertNotNull(byteOrder38);
        org.junit.Assert.assertNull(formatCompliance40);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertNull(imageMetadata46);
        org.junit.Assert.assertNull(byteArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Pcx-Custom" + "'", str48, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "pcx" + "'", str49, "pcx");
        org.junit.Assert.assertNotNull(byteOrder52);
        org.junit.Assert.assertNull(formatCompliance54);
        org.junit.Assert.assertNotNull(pcxImagingParameters55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "pcx" + "'", str58, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters59);
        org.junit.Assert.assertNull(byteArray60);
        org.junit.Assert.assertNotNull(byteOrder63);
        org.junit.Assert.assertNotNull(byteOrder66);
        org.junit.Assert.assertNull(formatCompliance68);
        org.junit.Assert.assertNotNull(pcxImagingParameters69);
        org.junit.Assert.assertNull(imageMetadata73);
        org.junit.Assert.assertNotNull(byteOrder76);
        org.junit.Assert.assertNull(formatCompliance78);
        org.junit.Assert.assertNull(imageMetadata80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters83);
        org.junit.Assert.assertNull(imageMetadata84);
        org.junit.Assert.assertNull(byteArray85);
        org.junit.Assert.assertNull(imageMetadata86);
        org.junit.Assert.assertNull(byteArray87);
    }

    @Test
    public void test1023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1023");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        boolean boolean6 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser8.getDefaultParameters();
        byte[] byteArray14 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters13);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = pcxImageParser0.getDefaultParameters();
        java.io.File file16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser0.getFormatCompliance(file16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertNull(byteArray14);
        org.junit.Assert.assertNotNull(pcxImagingParameters15);
    }

    @Test
    public void test1024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1024");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata4 = pcxImageParser0.getMetadata(byteSource3);
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser0.getFormatCompliance(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo8 = pcxImageParser0.getImageInfo(byteSource7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata4);
        org.junit.Assert.assertNull(formatCompliance6);
    }

    @Test
    public void test1025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1025");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat10 = null;
        boolean boolean11 = pcxImageParser0.canAcceptType(imageFormat10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = pcxImageParser0.dumpImageFile(byteSource13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(pcxImagingParameters9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
    }

    @Test
    public void test1026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1026");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = null;
        byte[] byteArray33 = pcxImageParser30.getIccProfileBytes(byteSource31, pcxImagingParameters32);
        java.lang.String str34 = pcxImageParser30.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser30.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser0.getMetadata(byteSource29, pcxImagingParameters35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser0.getMetadata(byteSource37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser0.getMetadata(byteSource39);
        java.io.File file41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser42 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str43 = pcxImageParser42.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance45 = pcxImageParser42.getFormatCompliance(byteSource44);
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser42.getMetadata(byteSource46);
        java.lang.String str48 = pcxImageParser42.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters49 = pcxImageParser42.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata50 = pcxImageParser0.getMetadata(file41, pcxImagingParameters49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "pcx" + "'", str34, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Pcx-Custom" + "'", str43, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance45);
        org.junit.Assert.assertNull(imageMetadata47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Pcx-Custom" + "'", str48, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters49);
    }

    @Test
    public void test1027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1027");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser0.getMetadata(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser0.getMetadata(byteSource24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser0.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.ImageFormat imageFormat28 = null;
        boolean boolean29 = pcxImageParser0.canAcceptType(imageFormat28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList31 = pcxImageParser0.getAllBufferedImages(byteSource30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test1028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1028");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        java.lang.String str5 = pcxImageParser0.getName();
        java.io.File file6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser7.getMetadata(byteSource11);
        boolean boolean14 = pcxImageParser7.canAcceptExtension("hi!");
        org.apache.commons.imaging.ImageFormat imageFormat15 = null;
        boolean boolean16 = pcxImageParser7.canAcceptType(imageFormat15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata20 = pcxImageParser18.getMetadata(byteSource19);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser22 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder23 = pcxImageParser22.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance25 = pcxImageParser22.getFormatCompliance(byteSource24);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser22.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata30 = pcxImageParser28.getMetadata(byteSource29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser32.getMetadata(byteSource36);
        boolean boolean39 = pcxImageParser32.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser28.getMetadata(byteSource31, pcxImagingParameters40);
        byte[] byteArray42 = pcxImageParser22.getIccProfileBytes(byteSource27, pcxImagingParameters40);
        java.lang.String str43 = pcxImageParser22.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = pcxImageParser22.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata45 = pcxImageParser18.getMetadata(byteSource21, pcxImagingParameters44);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser7.getMetadata(byteSource17, pcxImagingParameters44);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo47 = pcxImageParser0.getImageInfo(file6, pcxImagingParameters44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(imageMetadata20);
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertNull(formatCompliance25);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata30);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(imageMetadata41);
        org.junit.Assert.assertNull(byteArray42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Pcx-Custom" + "'", str43, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters44);
        org.junit.Assert.assertNull(imageMetadata45);
        org.junit.Assert.assertNull(imageMetadata46);
    }

    @Test
    public void test1029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1029");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata4 = pcxImageParser0.getMetadata(byteSource3);
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        java.io.File file8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata11 = pcxImageParser9.getMetadata(byteSource10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder14 = pcxImageParser13.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser13.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata18 = pcxImageParser13.getMetadata(byteSource17);
        boolean boolean20 = pcxImageParser13.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser9.getMetadata(byteSource12, pcxImagingParameters21);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray23 = pcxImageParser0.getIccProfileBytes(file8, pcxImagingParameters21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
        org.junit.Assert.assertNull(imageMetadata11);
        org.junit.Assert.assertNotNull(byteOrder14);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNull(imageMetadata18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
    }

    @Test
    public void test1030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1030");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat10 = null;
        boolean boolean11 = pcxImageParser0.canAcceptType(imageFormat10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser0.getDefaultParameters();
        java.lang.String str13 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource14);
        java.io.File file16 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = pcxImageParser0.canAcceptExtension(file16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(pcxImagingParameters9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertNull(imageMetadata15);
    }

    @Test
    public void test1031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1031");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters7);
        java.awt.image.BufferedImage bufferedImage9 = null;
        java.io.OutputStream outputStream10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder12 = pcxImageParser11.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance14 = pcxImageParser11.getFormatCompliance(byteSource13);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = pcxImageParser11.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat16 = null;
        boolean boolean17 = pcxImageParser11.canAcceptType(imageFormat16);
        java.nio.ByteOrder byteOrder18 = pcxImageParser11.getByteOrder();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser11.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage9, outputStream10, pcxImagingParameters19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder12);
        org.junit.Assert.assertNull(formatCompliance14);
        org.junit.Assert.assertNotNull(pcxImagingParameters15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
    }

    @Test
    public void test1032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1032");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser0.getMetadata(byteSource7);
        java.nio.ByteOrder byteOrder9 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser0.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = pcxImageParser0.dumpImageFile(byteSource12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
    }

    @Test
    public void test1033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1033");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.io.File file5 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean6 = pcxImageParser0.canAcceptExtension(file5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
    }

    @Test
    public void test1034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1034");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat6 = null;
        boolean boolean7 = pcxImageParser0.canAcceptType(imageFormat6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser0.getMetadata(byteSource8);
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = null;
        byte[] byteArray14 = pcxImageParser11.getIccProfileBytes(byteSource12, pcxImagingParameters13);
        java.lang.String str15 = pcxImageParser11.getDefaultExtension();
        java.lang.String str16 = pcxImageParser11.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters20 = null;
        byte[] byteArray21 = pcxImageParser18.getIccProfileBytes(byteSource19, pcxImagingParameters20);
        java.lang.String str22 = pcxImageParser18.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser18.getMetadata(byteSource23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance26 = pcxImageParser18.getFormatCompliance(byteSource25);
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder29 = pcxImageParser28.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance31 = pcxImageParser28.getFormatCompliance(byteSource30);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser28.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = null;
        byte[] byteArray37 = pcxImageParser34.getIccProfileBytes(byteSource35, pcxImagingParameters36);
        java.lang.String str38 = pcxImageParser34.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = pcxImageParser34.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser28.getMetadata(byteSource33, pcxImagingParameters39);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = pcxImageParser28.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser18.getMetadata(byteSource27, pcxImagingParameters41);
        java.lang.String str43 = pcxImageParser18.getName();
        java.lang.String str44 = pcxImageParser18.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser46 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = null;
        byte[] byteArray49 = pcxImageParser46.getIccProfileBytes(byteSource47, pcxImagingParameters48);
        java.lang.String str50 = pcxImageParser46.getName();
        java.lang.String str51 = pcxImageParser46.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser53 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder54 = pcxImageParser53.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance56 = pcxImageParser53.getFormatCompliance(byteSource55);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters57 = pcxImageParser53.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata58 = pcxImageParser46.getMetadata(byteSource52, pcxImagingParameters57);
        java.lang.String str59 = pcxImageParser46.getName();
        org.apache.commons.imaging.ImageFormat imageFormat60 = null;
        boolean boolean61 = pcxImageParser46.canAcceptType(imageFormat60);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters62 = pcxImageParser46.getDefaultParameters();
        byte[] byteArray63 = pcxImageParser18.getIccProfileBytes(byteSource45, pcxImagingParameters62);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata64 = pcxImageParser11.getMetadata(byteSource17, pcxImagingParameters62);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata65 = pcxImageParser0.getMetadata(byteSource10, pcxImagingParameters62);
        java.lang.Class<?> wildcardClass66 = pcxImagingParameters62.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertNull(byteArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "pcx" + "'", str15, "pcx");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Pcx-Custom" + "'", str16, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Pcx-Custom" + "'", str22, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertNull(formatCompliance26);
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertNull(formatCompliance31);
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
        org.junit.Assert.assertNull(byteArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "pcx" + "'", str38, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters39);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertNotNull(pcxImagingParameters41);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Pcx-Custom" + "'", str43, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Pcx-Custom" + "'", str44, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Pcx-Custom" + "'", str50, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Pcx-Custom" + "'", str51, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder54);
        org.junit.Assert.assertNull(formatCompliance56);
        org.junit.Assert.assertNotNull(pcxImagingParameters57);
        org.junit.Assert.assertNull(imageMetadata58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Pcx-Custom" + "'", str59, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters62);
        org.junit.Assert.assertNull(byteArray63);
        org.junit.Assert.assertNull(imageMetadata64);
        org.junit.Assert.assertNull(imageMetadata65);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test1035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1035");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser4.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser8.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.lang.String str29 = pcxImageParser8.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser4.getMetadata(byteSource7, pcxImagingParameters30);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters30);
        java.nio.ByteOrder byteOrder33 = pcxImageParser0.getByteOrder();
        java.io.File file34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = null;
        byte[] byteArray38 = pcxImageParser35.getIccProfileBytes(byteSource36, pcxImagingParameters37);
        java.nio.ByteOrder byteOrder39 = pcxImageParser35.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance41 = pcxImageParser35.getFormatCompliance(byteSource40);
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser43 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = null;
        byte[] byteArray46 = pcxImageParser43.getIccProfileBytes(byteSource44, pcxImagingParameters45);
        java.lang.String str47 = pcxImageParser43.getName();
        java.lang.String str48 = pcxImageParser43.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser50 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder51 = pcxImageParser50.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance53 = pcxImageParser50.getFormatCompliance(byteSource52);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters54 = pcxImageParser50.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata55 = pcxImageParser43.getMetadata(byteSource49, pcxImagingParameters54);
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser57 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata59 = pcxImageParser57.getMetadata(byteSource58);
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser61 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder62 = pcxImageParser61.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance64 = pcxImageParser61.getFormatCompliance(byteSource63);
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata66 = pcxImageParser61.getMetadata(byteSource65);
        boolean boolean68 = pcxImageParser61.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters69 = pcxImageParser61.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata70 = pcxImageParser57.getMetadata(byteSource60, pcxImagingParameters69);
        byte[] byteArray71 = pcxImageParser43.getIccProfileBytes(byteSource56, pcxImagingParameters69);
        org.apache.commons.imaging.ImageFormat imageFormat72 = null;
        boolean boolean73 = pcxImageParser43.canAcceptType(imageFormat72);
        org.apache.commons.imaging.bytesource.ByteSource byteSource74 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser75 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder76 = pcxImageParser75.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource77 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance78 = pcxImageParser75.getFormatCompliance(byteSource77);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters79 = pcxImageParser75.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat80 = null;
        boolean boolean81 = pcxImageParser75.canAcceptType(imageFormat80);
        java.lang.String str82 = pcxImageParser75.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters83 = pcxImageParser75.getDefaultParameters();
        byte[] byteArray84 = pcxImageParser43.getIccProfileBytes(byteSource74, pcxImagingParameters83);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata85 = pcxImageParser35.getMetadata(byteSource42, pcxImagingParameters83);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension86 = pcxImageParser0.getImageSize(file34, pcxImagingParameters83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(byteArray38);
        org.junit.Assert.assertNotNull(byteOrder39);
        org.junit.Assert.assertNull(formatCompliance41);
        org.junit.Assert.assertNull(byteArray46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Pcx-Custom" + "'", str47, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Pcx-Custom" + "'", str48, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder51);
        org.junit.Assert.assertNull(formatCompliance53);
        org.junit.Assert.assertNotNull(pcxImagingParameters54);
        org.junit.Assert.assertNull(imageMetadata55);
        org.junit.Assert.assertNull(imageMetadata59);
        org.junit.Assert.assertNotNull(byteOrder62);
        org.junit.Assert.assertNull(formatCompliance64);
        org.junit.Assert.assertNull(imageMetadata66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters69);
        org.junit.Assert.assertNull(imageMetadata70);
        org.junit.Assert.assertNull(byteArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(byteOrder76);
        org.junit.Assert.assertNull(formatCompliance78);
        org.junit.Assert.assertNotNull(pcxImagingParameters79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "pcx" + "'", str82, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters83);
        org.junit.Assert.assertNull(byteArray84);
        org.junit.Assert.assertNull(imageMetadata85);
    }

    @Test
    public void test1036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1036");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = null;
        byte[] byteArray6 = pcxImageParser0.getIccProfileBytes(byteSource4, pcxImagingParameters5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = pcxImageParser0.dumpImageFile(byteSource7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNull(byteArray6);
    }

    @Test
    public void test1037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1037");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        java.nio.ByteOrder byteOrder32 = pcxImageParser0.getByteOrder();
        java.lang.String str33 = pcxImageParser0.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser0.getDefaultParameters();
        java.io.File file35 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList36 = pcxImageParser0.getAllBufferedImages(file35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Pcx-Custom" + "'", str33, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
    }

    @Test
    public void test1038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1038");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat37 = null;
        boolean boolean38 = pcxImageParser32.canAcceptType(imageFormat37);
        java.lang.String str39 = pcxImageParser32.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser32.getDefaultParameters();
        byte[] byteArray41 = pcxImageParser0.getIccProfileBytes(byteSource31, pcxImagingParameters40);
        java.lang.String str42 = pcxImageParser0.getName();
        java.io.PrintWriter printWriter43 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean45 = pcxImageParser0.dumpImageFile(printWriter43, byteSource44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "pcx" + "'", str39, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(byteArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Pcx-Custom" + "'", str42, "Pcx-Custom");
    }

    @Test
    public void test1039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1039");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        java.lang.String str13 = pcxImageParser8.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser8.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser8.canAcceptExtension("");
        boolean boolean19 = pcxImageParser8.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = null;
        byte[] byteArray24 = pcxImageParser21.getIccProfileBytes(byteSource22, pcxImagingParameters23);
        java.lang.String str25 = pcxImageParser21.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser21.getMetadata(byteSource26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance29 = pcxImageParser21.getFormatCompliance(byteSource28);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = null;
        byte[] byteArray35 = pcxImageParser32.getIccProfileBytes(byteSource33, pcxImagingParameters34);
        java.lang.String str36 = pcxImageParser32.getName();
        java.lang.String str37 = pcxImageParser32.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder40 = pcxImageParser39.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance42 = pcxImageParser39.getFormatCompliance(byteSource41);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser39.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser32.getMetadata(byteSource38, pcxImagingParameters43);
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser46 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser46.getMetadata(byteSource47);
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser50 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder51 = pcxImageParser50.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance53 = pcxImageParser50.getFormatCompliance(byteSource52);
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata55 = pcxImageParser50.getMetadata(byteSource54);
        boolean boolean57 = pcxImageParser50.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters58 = pcxImageParser50.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata59 = pcxImageParser46.getMetadata(byteSource49, pcxImagingParameters58);
        byte[] byteArray60 = pcxImageParser32.getIccProfileBytes(byteSource45, pcxImagingParameters58);
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance62 = pcxImageParser32.getFormatCompliance(byteSource61);
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser64 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters66 = null;
        byte[] byteArray67 = pcxImageParser64.getIccProfileBytes(byteSource65, pcxImagingParameters66);
        java.nio.ByteOrder byteOrder68 = pcxImageParser64.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser70 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder71 = pcxImageParser70.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource72 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance73 = pcxImageParser70.getFormatCompliance(byteSource72);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters74 = pcxImageParser70.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat75 = null;
        boolean boolean76 = pcxImageParser70.canAcceptType(imageFormat75);
        java.lang.String str77 = pcxImageParser70.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters78 = pcxImageParser70.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata79 = pcxImageParser64.getMetadata(byteSource69, pcxImagingParameters78);
        byte[] byteArray80 = pcxImageParser32.getIccProfileBytes(byteSource63, pcxImagingParameters78);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata81 = pcxImageParser21.getMetadata(byteSource31, pcxImagingParameters78);
        byte[] byteArray82 = pcxImageParser8.getIccProfileBytes(byteSource20, pcxImagingParameters78);
        byte[] byteArray83 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters78);
        org.apache.commons.imaging.bytesource.ByteSource byteSource84 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance85 = pcxImageParser0.getFormatCompliance(byteSource84);
        org.apache.commons.imaging.ImageFormat imageFormat86 = null;
        boolean boolean87 = pcxImageParser0.canAcceptType(imageFormat86);
        org.apache.commons.imaging.bytesource.ByteSource byteSource88 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo89 = pcxImageParser0.getImageInfo(byteSource88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(formatCompliance29);
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(byteArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Pcx-Custom" + "'", str36, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Pcx-Custom" + "'", str37, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNull(formatCompliance42);
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNotNull(byteOrder51);
        org.junit.Assert.assertNull(formatCompliance53);
        org.junit.Assert.assertNull(imageMetadata55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters58);
        org.junit.Assert.assertNull(imageMetadata59);
        org.junit.Assert.assertNull(byteArray60);
        org.junit.Assert.assertNull(formatCompliance62);
        org.junit.Assert.assertNull(byteArray67);
        org.junit.Assert.assertNotNull(byteOrder68);
        org.junit.Assert.assertNotNull(byteOrder71);
        org.junit.Assert.assertNull(formatCompliance73);
        org.junit.Assert.assertNotNull(pcxImagingParameters74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "pcx" + "'", str77, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters78);
        org.junit.Assert.assertNull(imageMetadata79);
        org.junit.Assert.assertNull(byteArray80);
        org.junit.Assert.assertNull(imageMetadata81);
        org.junit.Assert.assertNull(byteArray82);
        org.junit.Assert.assertNull(byteArray83);
        org.junit.Assert.assertNull(formatCompliance85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test1040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1040");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat10 = null;
        boolean boolean11 = pcxImageParser0.canAcceptType(imageFormat10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser0.getFormatCompliance(byteSource12);
        java.awt.image.BufferedImage bufferedImage14 = null;
        java.io.OutputStream outputStream15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder17 = pcxImageParser16.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance19 = pcxImageParser16.getFormatCompliance(byteSource18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata21 = pcxImageParser16.getMetadata(byteSource20);
        boolean boolean23 = pcxImageParser16.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = pcxImageParser16.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage14, outputStream15, pcxImagingParameters24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(pcxImagingParameters9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNotNull(byteOrder17);
        org.junit.Assert.assertNull(formatCompliance19);
        org.junit.Assert.assertNull(imageMetadata21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters24);
    }

    @Test
    public void test1041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1041");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        java.nio.ByteOrder byteOrder9 = pcxImageParser0.getByteOrder();
        java.awt.image.BufferedImage bufferedImage10 = null;
        java.io.OutputStream outputStream11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser12 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = null;
        byte[] byteArray15 = pcxImageParser12.getIccProfileBytes(byteSource13, pcxImagingParameters14);
        java.lang.String str16 = pcxImageParser12.getName();
        java.lang.String str17 = pcxImageParser12.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder20 = pcxImageParser19.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance22 = pcxImageParser19.getFormatCompliance(byteSource21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser19.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser12.getMetadata(byteSource18, pcxImagingParameters23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata28 = pcxImageParser26.getMetadata(byteSource27);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder31 = pcxImageParser30.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance33 = pcxImageParser30.getFormatCompliance(byteSource32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser30.getMetadata(byteSource34);
        boolean boolean37 = pcxImageParser30.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser30.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata39 = pcxImageParser26.getMetadata(byteSource29, pcxImagingParameters38);
        byte[] byteArray40 = pcxImageParser12.getIccProfileBytes(byteSource25, pcxImagingParameters38);
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance42 = pcxImageParser12.getFormatCompliance(byteSource41);
        java.nio.ByteOrder byteOrder43 = pcxImageParser12.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser45 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = null;
        byte[] byteArray48 = pcxImageParser45.getIccProfileBytes(byteSource46, pcxImagingParameters47);
        java.lang.String str49 = pcxImageParser45.getName();
        java.lang.String str50 = pcxImageParser45.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser52 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder53 = pcxImageParser52.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance55 = pcxImageParser52.getFormatCompliance(byteSource54);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters56 = pcxImageParser52.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata57 = pcxImageParser45.getMetadata(byteSource51, pcxImagingParameters56);
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser59 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata61 = pcxImageParser59.getMetadata(byteSource60);
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser63 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder64 = pcxImageParser63.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance66 = pcxImageParser63.getFormatCompliance(byteSource65);
        org.apache.commons.imaging.bytesource.ByteSource byteSource67 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata68 = pcxImageParser63.getMetadata(byteSource67);
        boolean boolean70 = pcxImageParser63.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters71 = pcxImageParser63.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata72 = pcxImageParser59.getMetadata(byteSource62, pcxImagingParameters71);
        byte[] byteArray73 = pcxImageParser45.getIccProfileBytes(byteSource58, pcxImagingParameters71);
        byte[] byteArray74 = pcxImageParser12.getIccProfileBytes(byteSource44, pcxImagingParameters71);
        java.lang.String str75 = pcxImageParser12.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource76 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser77 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource78 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters79 = null;
        byte[] byteArray80 = pcxImageParser77.getIccProfileBytes(byteSource78, pcxImagingParameters79);
        java.nio.ByteOrder byteOrder81 = pcxImageParser77.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource82 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser83 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder84 = pcxImageParser83.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource85 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance86 = pcxImageParser83.getFormatCompliance(byteSource85);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters87 = pcxImageParser83.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat88 = null;
        boolean boolean89 = pcxImageParser83.canAcceptType(imageFormat88);
        java.lang.String str90 = pcxImageParser83.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters91 = pcxImageParser83.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata92 = pcxImageParser77.getMetadata(byteSource82, pcxImagingParameters91);
        byte[] byteArray93 = pcxImageParser12.getIccProfileBytes(byteSource76, pcxImagingParameters91);
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage10, outputStream11, pcxImagingParameters91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(byteArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Pcx-Custom" + "'", str16, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Pcx-Custom" + "'", str17, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNull(formatCompliance22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertNull(imageMetadata28);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNull(formatCompliance33);
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
        org.junit.Assert.assertNull(imageMetadata39);
        org.junit.Assert.assertNull(byteArray40);
        org.junit.Assert.assertNull(formatCompliance42);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNull(byteArray48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Pcx-Custom" + "'", str49, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Pcx-Custom" + "'", str50, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder53);
        org.junit.Assert.assertNull(formatCompliance55);
        org.junit.Assert.assertNotNull(pcxImagingParameters56);
        org.junit.Assert.assertNull(imageMetadata57);
        org.junit.Assert.assertNull(imageMetadata61);
        org.junit.Assert.assertNotNull(byteOrder64);
        org.junit.Assert.assertNull(formatCompliance66);
        org.junit.Assert.assertNull(imageMetadata68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters71);
        org.junit.Assert.assertNull(imageMetadata72);
        org.junit.Assert.assertNull(byteArray73);
        org.junit.Assert.assertNull(byteArray74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "pcx" + "'", str75, "pcx");
        org.junit.Assert.assertNull(byteArray80);
        org.junit.Assert.assertNotNull(byteOrder81);
        org.junit.Assert.assertNotNull(byteOrder84);
        org.junit.Assert.assertNull(formatCompliance86);
        org.junit.Assert.assertNotNull(pcxImagingParameters87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "pcx" + "'", str90, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters91);
        org.junit.Assert.assertNull(imageMetadata92);
        org.junit.Assert.assertNull(byteArray93);
    }

    @Test
    public void test1042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1042");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat6 = null;
        boolean boolean7 = pcxImageParser0.canAcceptType(imageFormat6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance9 = pcxImageParser0.getFormatCompliance(byteSource8);
        java.io.File file10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList11 = pcxImageParser0.getAllBufferedImages(file10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(formatCompliance9);
    }

    @Test
    public void test1043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1043");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        java.lang.Class<?> wildcardClass6 = pcxImageParser0.getClass();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test1044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1044");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser24.canAcceptType(imageFormat29);
        java.lang.String str31 = pcxImageParser24.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser24.getDefaultParameters();
        byte[] byteArray33 = pcxImageParser0.getIccProfileBytes(byteSource23, pcxImagingParameters32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo35 = pcxImageParser0.getImageInfo(byteSource34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "pcx" + "'", str31, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
        org.junit.Assert.assertNull(byteArray33);
    }

    @Test
    public void test1045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1045");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        java.nio.ByteOrder byteOrder2 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance4 = pcxImageParser0.getFormatCompliance(byteSource3);
        java.lang.String str5 = pcxImageParser0.getName();
        boolean boolean7 = pcxImageParser0.canAcceptExtension("");
        java.io.File file8 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = pcxImageParser0.canAcceptExtension(file8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertNull(formatCompliance4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1046");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        boolean boolean30 = pcxImageParser0.canAcceptExtension("pcx");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser0.getDefaultParameters();
        java.io.File file32 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray33 = pcxImageParser0.getIccProfileBytes(file32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
    }

    @Test
    public void test1047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1047");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser3 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder4 = pcxImageParser3.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser3.getFormatCompliance(byteSource5);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = pcxImageParser3.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata11 = pcxImageParser9.getMetadata(byteSource10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder14 = pcxImageParser13.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser13.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata18 = pcxImageParser13.getMetadata(byteSource17);
        boolean boolean20 = pcxImageParser13.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser9.getMetadata(byteSource12, pcxImagingParameters21);
        byte[] byteArray23 = pcxImageParser3.getIccProfileBytes(byteSource8, pcxImagingParameters21);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser0.getMetadata(byteSource2, pcxImagingParameters21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser0.getDefaultParameters();
        java.io.File file26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser27 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = null;
        byte[] byteArray30 = pcxImageParser27.getIccProfileBytes(byteSource28, pcxImagingParameters29);
        java.lang.String str31 = pcxImageParser27.getName();
        java.lang.String str32 = pcxImageParser27.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder35 = pcxImageParser34.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance37 = pcxImageParser34.getFormatCompliance(byteSource36);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser34.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata39 = pcxImageParser27.getMetadata(byteSource33, pcxImagingParameters38);
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser41 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata43 = pcxImageParser41.getMetadata(byteSource42);
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser45 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder46 = pcxImageParser45.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance48 = pcxImageParser45.getFormatCompliance(byteSource47);
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata50 = pcxImageParser45.getMetadata(byteSource49);
        boolean boolean52 = pcxImageParser45.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters53 = pcxImageParser45.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata54 = pcxImageParser41.getMetadata(byteSource44, pcxImagingParameters53);
        byte[] byteArray55 = pcxImageParser27.getIccProfileBytes(byteSource40, pcxImagingParameters53);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo56 = pcxImageParser0.getImageInfo(file26, pcxImagingParameters53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNull(formatCompliance6);
        org.junit.Assert.assertNotNull(pcxImagingParameters7);
        org.junit.Assert.assertNull(imageMetadata11);
        org.junit.Assert.assertNotNull(byteOrder14);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNull(imageMetadata18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNull(byteArray23);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
        org.junit.Assert.assertNull(byteArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Pcx-Custom" + "'", str31, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Pcx-Custom" + "'", str32, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNull(formatCompliance37);
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
        org.junit.Assert.assertNull(imageMetadata39);
        org.junit.Assert.assertNull(imageMetadata43);
        org.junit.Assert.assertNotNull(byteOrder46);
        org.junit.Assert.assertNull(formatCompliance48);
        org.junit.Assert.assertNull(imageMetadata50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters53);
        org.junit.Assert.assertNull(imageMetadata54);
        org.junit.Assert.assertNull(byteArray55);
    }

    @Test
    public void test1048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1048");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        java.io.File file9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList10 = pcxImageParser0.getAllBufferedImages(file9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(formatCompliance8);
    }

    @Test
    public void test1049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1049");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser0.canAcceptType(imageFormat23);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser0.getFormatCompliance(byteSource26);
        java.io.File file28 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension29 = pcxImageParser0.getImageSize(file28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
        org.junit.Assert.assertNull(formatCompliance27);
    }

    @Test
    public void test1050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1050");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        java.nio.ByteOrder byteOrder32 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder35 = pcxImageParser34.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance37 = pcxImageParser34.getFormatCompliance(byteSource36);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser34.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser40.getMetadata(byteSource41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder45 = pcxImageParser44.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance47 = pcxImageParser44.getFormatCompliance(byteSource46);
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser44.getMetadata(byteSource48);
        boolean boolean51 = pcxImageParser44.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser44.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser40.getMetadata(byteSource43, pcxImagingParameters52);
        byte[] byteArray54 = pcxImageParser34.getIccProfileBytes(byteSource39, pcxImagingParameters52);
        java.lang.String str55 = pcxImageParser34.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters56 = pcxImageParser34.getDefaultParameters();
        byte[] byteArray57 = pcxImageParser0.getIccProfileBytes(byteSource33, pcxImagingParameters56);
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance59 = pcxImageParser0.getFormatCompliance(byteSource58);
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser61 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters63 = null;
        byte[] byteArray64 = pcxImageParser61.getIccProfileBytes(byteSource62, pcxImagingParameters63);
        java.lang.String str65 = pcxImageParser61.getName();
        java.lang.String str66 = pcxImageParser61.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource67 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance68 = pcxImageParser61.getFormatCompliance(byteSource67);
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser70 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder71 = pcxImageParser70.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource72 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance73 = pcxImageParser70.getFormatCompliance(byteSource72);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters74 = pcxImageParser70.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat75 = null;
        boolean boolean76 = pcxImageParser70.canAcceptType(imageFormat75);
        java.lang.String str77 = pcxImageParser70.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters78 = pcxImageParser70.getDefaultParameters();
        byte[] byteArray79 = pcxImageParser61.getIccProfileBytes(byteSource69, pcxImagingParameters78);
        org.apache.commons.imaging.ImageFormat imageFormat80 = null;
        boolean boolean81 = pcxImageParser61.canAcceptType(imageFormat80);
        org.apache.commons.imaging.ImageFormat imageFormat82 = null;
        boolean boolean83 = pcxImageParser61.canAcceptType(imageFormat82);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters84 = pcxImageParser61.getDefaultParameters();
        byte[] byteArray85 = pcxImageParser0.getIccProfileBytes(byteSource60, pcxImagingParameters84);
        java.io.File file86 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean87 = pcxImageParser0.canAcceptExtension(file86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNull(formatCompliance37);
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertNotNull(byteOrder45);
        org.junit.Assert.assertNull(formatCompliance47);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertNull(byteArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Pcx-Custom" + "'", str55, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters56);
        org.junit.Assert.assertNull(byteArray57);
        org.junit.Assert.assertNull(formatCompliance59);
        org.junit.Assert.assertNull(byteArray64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Pcx-Custom" + "'", str65, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Pcx-Custom" + "'", str66, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance68);
        org.junit.Assert.assertNotNull(byteOrder71);
        org.junit.Assert.assertNull(formatCompliance73);
        org.junit.Assert.assertNotNull(pcxImagingParameters74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "pcx" + "'", str77, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters78);
        org.junit.Assert.assertNull(byteArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters84);
        org.junit.Assert.assertNull(byteArray85);
    }

    @Test
    public void test1051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1051");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        boolean boolean30 = pcxImageParser0.canAcceptExtension("pcx");
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList32 = pcxImageParser0.getAllBufferedImages(byteSource31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test1052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1052");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource14);
        java.lang.String str16 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser0.getDefaultParameters();
        java.io.File file18 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray19 = pcxImageParser0.getIccProfileBytes(file18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "pcx" + "'", str16, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
    }

    @Test
    public void test1053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1053");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        boolean boolean23 = pcxImageParser0.canAcceptExtension("Pcx-Custom");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = pcxImageParser0.getDefaultParameters();
        java.io.PrintWriter printWriter25 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean27 = pcxImageParser0.dumpImageFile(printWriter25, byteSource26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters24);
    }

    @Test
    public void test1054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1054");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.ImageFormat imageFormat3 = null;
        boolean boolean4 = pcxImageParser0.canAcceptType(imageFormat3);
        java.io.File file5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder7 = pcxImageParser6.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance9 = pcxImageParser6.getFormatCompliance(byteSource8);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser12 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata14 = pcxImageParser12.getMetadata(byteSource13);
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder17 = pcxImageParser16.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance19 = pcxImageParser16.getFormatCompliance(byteSource18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata21 = pcxImageParser16.getMetadata(byteSource20);
        boolean boolean23 = pcxImageParser16.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser12.getMetadata(byteSource15, pcxImagingParameters24);
        byte[] byteArray26 = pcxImageParser6.getIccProfileBytes(byteSource11, pcxImagingParameters24);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage27 = pcxImageParser0.getBufferedImage(file5, pcxImagingParameters24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNull(formatCompliance9);
        org.junit.Assert.assertNotNull(pcxImagingParameters10);
        org.junit.Assert.assertNull(imageMetadata14);
        org.junit.Assert.assertNotNull(byteOrder17);
        org.junit.Assert.assertNull(formatCompliance19);
        org.junit.Assert.assertNull(imageMetadata21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters24);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertNull(byteArray26);
    }

    @Test
    public void test1055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1055");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        java.nio.ByteOrder byteOrder2 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance4 = pcxImageParser0.getFormatCompliance(byteSource3);
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata18 = pcxImageParser16.getMetadata(byteSource17);
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser20 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder21 = pcxImageParser20.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance23 = pcxImageParser20.getFormatCompliance(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser20.getMetadata(byteSource24);
        boolean boolean27 = pcxImageParser20.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser20.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser16.getMetadata(byteSource19, pcxImagingParameters28);
        byte[] byteArray30 = pcxImageParser10.getIccProfileBytes(byteSource15, pcxImagingParameters28);
        java.lang.String str31 = pcxImageParser10.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters32);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser36 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = null;
        byte[] byteArray39 = pcxImageParser36.getIccProfileBytes(byteSource37, pcxImagingParameters38);
        java.lang.String str40 = pcxImageParser36.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = pcxImageParser36.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser6.getMetadata(byteSource35, pcxImagingParameters41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser6.getMetadata(byteSource43);
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser46 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser46.getMetadata(byteSource47);
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata50 = pcxImageParser46.getMetadata(byteSource49);
        java.lang.String str51 = pcxImageParser46.getDefaultExtension();
        java.lang.String str52 = pcxImageParser46.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters53 = pcxImageParser46.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata54 = pcxImageParser6.getMetadata(byteSource45, pcxImagingParameters53);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage55 = pcxImageParser0.getBufferedImage(byteSource5, pcxImagingParameters53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertNull(formatCompliance4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNull(imageMetadata18);
        org.junit.Assert.assertNotNull(byteOrder21);
        org.junit.Assert.assertNull(formatCompliance23);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertNull(byteArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Pcx-Custom" + "'", str31, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
        org.junit.Assert.assertNull(imageMetadata33);
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
        org.junit.Assert.assertNull(byteArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "pcx" + "'", str40, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters41);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNull(imageMetadata50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "pcx" + "'", str51, "pcx");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "pcx" + "'", str52, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters53);
        org.junit.Assert.assertNull(imageMetadata54);
    }

    @Test
    public void test1056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1056");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.nio.ByteOrder byteOrder4 = pcxImageParser0.getByteOrder();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters6 = pcxImageParser0.getDefaultParameters();
        java.io.File file7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = null;
        byte[] byteArray11 = pcxImageParser8.getIccProfileBytes(byteSource9, pcxImagingParameters10);
        java.lang.String str12 = pcxImageParser8.getName();
        java.lang.String str13 = pcxImageParser8.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder16 = pcxImageParser15.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser15.getFormatCompliance(byteSource17);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser15.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata20 = pcxImageParser8.getMetadata(byteSource14, pcxImagingParameters19);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser22 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser22.getMetadata(byteSource23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder27 = pcxImageParser26.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance29 = pcxImageParser26.getFormatCompliance(byteSource28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser26.getMetadata(byteSource30);
        boolean boolean33 = pcxImageParser26.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser26.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser22.getMetadata(byteSource25, pcxImagingParameters34);
        byte[] byteArray36 = pcxImageParser8.getIccProfileBytes(byteSource21, pcxImagingParameters34);
        org.apache.commons.imaging.ImageFormat imageFormat37 = null;
        boolean boolean38 = pcxImageParser8.canAcceptType(imageFormat37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder41 = pcxImageParser40.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance43 = pcxImageParser40.getFormatCompliance(byteSource42);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = pcxImageParser40.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat45 = null;
        boolean boolean46 = pcxImageParser40.canAcceptType(imageFormat45);
        java.lang.String str47 = pcxImageParser40.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = pcxImageParser40.getDefaultParameters();
        byte[] byteArray49 = pcxImageParser8.getIccProfileBytes(byteSource39, pcxImagingParameters48);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters50 = pcxImageParser8.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage51 = pcxImageParser0.getBufferedImage(file7, pcxImagingParameters50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters6);
        org.junit.Assert.assertNull(byteArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Pcx-Custom" + "'", str12, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNull(formatCompliance18);
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
        org.junit.Assert.assertNull(imageMetadata20);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNull(formatCompliance29);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(byteOrder41);
        org.junit.Assert.assertNull(formatCompliance43);
        org.junit.Assert.assertNotNull(pcxImagingParameters44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "pcx" + "'", str47, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters48);
        org.junit.Assert.assertNull(byteArray49);
        org.junit.Assert.assertNotNull(pcxImagingParameters50);
    }

    @Test
    public void test1057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1057");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata10 = pcxImageParser8.getMetadata(byteSource9);
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser12 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder13 = pcxImageParser12.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance15 = pcxImageParser12.getFormatCompliance(byteSource14);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = pcxImageParser12.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata20 = pcxImageParser18.getMetadata(byteSource19);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser22 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder23 = pcxImageParser22.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance25 = pcxImageParser22.getFormatCompliance(byteSource24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser22.getMetadata(byteSource26);
        boolean boolean29 = pcxImageParser22.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser22.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser18.getMetadata(byteSource21, pcxImagingParameters30);
        byte[] byteArray32 = pcxImageParser12.getIccProfileBytes(byteSource17, pcxImagingParameters30);
        java.lang.String str33 = pcxImageParser12.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser12.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser8.getMetadata(byteSource11, pcxImagingParameters34);
        byte[] byteArray36 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters34);
        java.awt.image.BufferedImage bufferedImage37 = null;
        java.io.OutputStream outputStream38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = null;
        byte[] byteArray42 = pcxImageParser39.getIccProfileBytes(byteSource40, pcxImagingParameters41);
        java.lang.String str43 = pcxImageParser39.getDefaultExtension();
        java.lang.String str44 = pcxImageParser39.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser46 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = null;
        byte[] byteArray49 = pcxImageParser46.getIccProfileBytes(byteSource47, pcxImagingParameters48);
        java.lang.String str50 = pcxImageParser46.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata52 = pcxImageParser46.getMetadata(byteSource51);
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance54 = pcxImageParser46.getFormatCompliance(byteSource53);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters55 = pcxImageParser46.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat56 = null;
        boolean boolean57 = pcxImageParser46.canAcceptType(imageFormat56);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters58 = pcxImageParser46.getDefaultParameters();
        byte[] byteArray59 = pcxImageParser39.getIccProfileBytes(byteSource45, pcxImagingParameters58);
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage37, outputStream38, pcxImagingParameters58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(imageMetadata10);
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNull(formatCompliance15);
        org.junit.Assert.assertNotNull(pcxImagingParameters16);
        org.junit.Assert.assertNull(imageMetadata20);
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertNull(formatCompliance25);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertNull(byteArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Pcx-Custom" + "'", str33, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertNull(byteArray42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "pcx" + "'", str43, "pcx");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Pcx-Custom" + "'", str44, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Pcx-Custom" + "'", str50, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata52);
        org.junit.Assert.assertNull(formatCompliance54);
        org.junit.Assert.assertNotNull(pcxImagingParameters55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters58);
        org.junit.Assert.assertNull(byteArray59);
    }

    @Test
    public void test1058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1058");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat2 = null;
        boolean boolean3 = pcxImageParser0.canAcceptType(imageFormat2);
        org.apache.commons.imaging.ImageFormat imageFormat4 = null;
        boolean boolean5 = pcxImageParser0.canAcceptType(imageFormat4);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters6 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = null;
        byte[] byteArray11 = pcxImageParser8.getIccProfileBytes(byteSource9, pcxImagingParameters10);
        java.lang.String str12 = pcxImageParser8.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata14 = pcxImageParser8.getMetadata(byteSource13);
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser8.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = null;
        byte[] byteArray27 = pcxImageParser24.getIccProfileBytes(byteSource25, pcxImagingParameters26);
        java.lang.String str28 = pcxImageParser24.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata30 = pcxImageParser18.getMetadata(byteSource23, pcxImagingParameters29);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser8.getMetadata(byteSource17, pcxImagingParameters31);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo33 = pcxImageParser0.getImageInfo(byteSource7, pcxImagingParameters31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters6);
        org.junit.Assert.assertNull(byteArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Pcx-Custom" + "'", str12, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata14);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(byteArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "pcx" + "'", str28, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters29);
        org.junit.Assert.assertNull(imageMetadata30);
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
        org.junit.Assert.assertNull(imageMetadata32);
    }

    @Test
    public void test1059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1059");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        boolean boolean30 = pcxImageParser0.canAcceptExtension("pcx");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser0.getDefaultParameters();
        java.lang.String str32 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance34 = pcxImageParser0.getFormatCompliance(byteSource33);
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Pcx-Custom" + "'", str32, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance34);
    }

    @Test
    public void test1060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1060");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat6 = null;
        boolean boolean7 = pcxImageParser0.canAcceptType(imageFormat6);
        boolean boolean9 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = null;
        byte[] byteArray14 = pcxImageParser11.getIccProfileBytes(byteSource12, pcxImagingParameters13);
        java.lang.String str15 = pcxImageParser11.getName();
        java.lang.String str16 = pcxImageParser11.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser11.getMetadata(byteSource17, pcxImagingParameters22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = null;
        byte[] byteArray28 = pcxImageParser25.getIccProfileBytes(byteSource26, pcxImagingParameters27);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = pcxImageParser25.getDefaultParameters();
        byte[] byteArray30 = pcxImageParser11.getIccProfileBytes(byteSource24, pcxImagingParameters29);
        byte[] byteArray31 = pcxImageParser0.getIccProfileBytes(byteSource10, pcxImagingParameters29);
        java.io.File file32 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str33 = pcxImageParser0.dumpImageFile(file32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(byteArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Pcx-Custom" + "'", str15, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Pcx-Custom" + "'", str16, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNotNull(pcxImagingParameters29);
        org.junit.Assert.assertNull(byteArray30);
        org.junit.Assert.assertNull(byteArray31);
    }

    @Test
    public void test1061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1061");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        boolean boolean6 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser8.getDefaultParameters();
        byte[] byteArray14 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters13);
        java.io.File file15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList16 = pcxImageParser0.getAllBufferedImages(file15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertNull(byteArray14);
    }

    @Test
    public void test1062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1062");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        org.apache.commons.imaging.ImageFormat imageFormat21 = null;
        boolean boolean22 = pcxImageParser0.canAcceptType(imageFormat21);
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = null;
        byte[] byteArray27 = pcxImageParser24.getIccProfileBytes(byteSource25, pcxImagingParameters26);
        java.lang.String str28 = pcxImageParser24.getName();
        java.lang.String str29 = pcxImageParser24.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder32 = pcxImageParser31.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance34 = pcxImageParser31.getFormatCompliance(byteSource33);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser31.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser24.getMetadata(byteSource30, pcxImagingParameters35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance38 = pcxImageParser24.getFormatCompliance(byteSource37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance40 = pcxImageParser24.getFormatCompliance(byteSource39);
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser42 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str43 = pcxImageParser42.getName();
        java.nio.ByteOrder byteOrder44 = pcxImageParser42.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat45 = null;
        boolean boolean46 = pcxImageParser42.canAcceptType(imageFormat45);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = pcxImageParser42.getDefaultParameters();
        byte[] byteArray48 = pcxImageParser24.getIccProfileBytes(byteSource41, pcxImagingParameters47);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo49 = pcxImageParser0.getImageInfo(byteSource23, pcxImagingParameters47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(byteArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Pcx-Custom" + "'", str28, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertNull(formatCompliance34);
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertNull(formatCompliance38);
        org.junit.Assert.assertNull(formatCompliance40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Pcx-Custom" + "'", str43, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters47);
        org.junit.Assert.assertNull(byteArray48);
    }

    @Test
    public void test1063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1063");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser3 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder4 = pcxImageParser3.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser3.getFormatCompliance(byteSource5);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = pcxImageParser3.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata11 = pcxImageParser9.getMetadata(byteSource10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder14 = pcxImageParser13.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser13.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata18 = pcxImageParser13.getMetadata(byteSource17);
        boolean boolean20 = pcxImageParser13.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser9.getMetadata(byteSource12, pcxImagingParameters21);
        byte[] byteArray23 = pcxImageParser3.getIccProfileBytes(byteSource8, pcxImagingParameters21);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser0.getMetadata(byteSource2, pcxImagingParameters21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser0.getDefaultParameters();
        java.lang.Class<?> wildcardClass26 = pcxImagingParameters25.getClass();
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNull(formatCompliance6);
        org.junit.Assert.assertNotNull(pcxImagingParameters7);
        org.junit.Assert.assertNull(imageMetadata11);
        org.junit.Assert.assertNotNull(byteOrder14);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNull(imageMetadata18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNull(byteArray23);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test1064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1064");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        java.nio.ByteOrder byteOrder9 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder12 = pcxImageParser11.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance14 = pcxImageParser11.getFormatCompliance(byteSource13);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = pcxImageParser11.getDefaultParameters();
        java.lang.String str16 = pcxImageParser11.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata18 = pcxImageParser11.getMetadata(byteSource17);
        boolean boolean20 = pcxImageParser11.canAcceptExtension("");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser11.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage22 = pcxImageParser0.getBufferedImage(byteSource10, pcxImagingParameters21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNotNull(byteOrder12);
        org.junit.Assert.assertNull(formatCompliance14);
        org.junit.Assert.assertNotNull(pcxImagingParameters15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "pcx" + "'", str16, "pcx");
        org.junit.Assert.assertNull(imageMetadata18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
    }

    @Test
    public void test1065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1065");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str33 = pcxImageParser0.dumpImageFile(byteSource32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrder31);
    }

    @Test
    public void test1066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1066");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        java.io.File file28 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean29 = pcxImageParser0.canAcceptExtension(file28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
    }

    @Test
    public void test1067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1067");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.lang.String str31 = pcxImageParser0.getDefaultExtension();
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "pcx" + "'", str31, "pcx");
    }

    @Test
    public void test1068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1068");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        java.nio.ByteOrder byteOrder32 = pcxImageParser0.getByteOrder();
        java.lang.String str33 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser0.getMetadata(byteSource34);
        java.io.File file36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser37 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = null;
        byte[] byteArray40 = pcxImageParser37.getIccProfileBytes(byteSource38, pcxImagingParameters39);
        java.lang.String str41 = pcxImageParser37.getName();
        java.lang.String str42 = pcxImageParser37.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder45 = pcxImageParser44.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance47 = pcxImageParser44.getFormatCompliance(byteSource46);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = pcxImageParser44.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser37.getMetadata(byteSource43, pcxImagingParameters48);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension50 = pcxImageParser0.getImageSize(file36, pcxImagingParameters48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Pcx-Custom" + "'", str33, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertNull(byteArray40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Pcx-Custom" + "'", str41, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Pcx-Custom" + "'", str42, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder45);
        org.junit.Assert.assertNull(formatCompliance47);
        org.junit.Assert.assertNotNull(pcxImagingParameters48);
        org.junit.Assert.assertNull(imageMetadata49);
    }

    @Test
    public void test1069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1069");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        java.lang.String str8 = pcxImageParser0.getDefaultExtension();
        java.io.PrintWriter printWriter9 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = pcxImageParser0.dumpImageFile(printWriter9, byteSource10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "pcx" + "'", str8, "pcx");
    }

    @Test
    public void test1070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1070");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser0.canAcceptType(imageFormat23);
        java.lang.Class<?> wildcardClass25 = pcxImageParser0.getClass();
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1071");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser0.getDefaultParameters();
        java.io.File file23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        java.lang.String str29 = pcxImageParser24.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser24.getMetadata(byteSource30, pcxImagingParameters31);
        java.lang.String str33 = pcxImageParser24.getDefaultExtension();
        boolean boolean35 = pcxImageParser24.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser24.getDefaultParameters();
        java.lang.String str37 = pcxImageParser24.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = null;
        byte[] byteArray42 = pcxImageParser39.getIccProfileBytes(byteSource40, pcxImagingParameters41);
        java.lang.String str43 = pcxImageParser39.getDefaultExtension();
        java.lang.String str44 = pcxImageParser39.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser46 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = null;
        byte[] byteArray49 = pcxImageParser46.getIccProfileBytes(byteSource47, pcxImagingParameters48);
        java.lang.String str50 = pcxImageParser46.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata52 = pcxImageParser46.getMetadata(byteSource51);
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance54 = pcxImageParser46.getFormatCompliance(byteSource53);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters55 = pcxImageParser46.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat56 = null;
        boolean boolean57 = pcxImageParser46.canAcceptType(imageFormat56);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters58 = pcxImageParser46.getDefaultParameters();
        byte[] byteArray59 = pcxImageParser39.getIccProfileBytes(byteSource45, pcxImagingParameters58);
        byte[] byteArray60 = pcxImageParser24.getIccProfileBytes(byteSource38, pcxImagingParameters58);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters61 = pcxImageParser24.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension62 = pcxImageParser0.getImageSize(file23, pcxImagingParameters61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "pcx" + "'", str29, "pcx");
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "pcx" + "'", str33, "pcx");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "pcx" + "'", str37, "pcx");
        org.junit.Assert.assertNull(byteArray42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "pcx" + "'", str43, "pcx");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Pcx-Custom" + "'", str44, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Pcx-Custom" + "'", str50, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata52);
        org.junit.Assert.assertNull(formatCompliance54);
        org.junit.Assert.assertNotNull(pcxImagingParameters55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters58);
        org.junit.Assert.assertNull(byteArray59);
        org.junit.Assert.assertNull(byteArray60);
        org.junit.Assert.assertNotNull(pcxImagingParameters61);
    }

    @Test
    public void test1072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1072");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata4 = pcxImageParser0.getMetadata(byteSource3);
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        java.io.File file8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList9 = pcxImageParser0.getAllBufferedImages(file8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
    }

    @Test
    public void test1073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1073");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser0.getFormatCompliance(byteSource5);
        java.nio.ByteOrder byteOrder7 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo9 = pcxImageParser0.getImageInfo(byteSource8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance6);
        org.junit.Assert.assertNotNull(byteOrder7);
    }

    @Test
    public void test1074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1074");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat6 = null;
        boolean boolean7 = pcxImageParser0.canAcceptType(imageFormat6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser0.getMetadata(byteSource8);
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = null;
        byte[] byteArray14 = pcxImageParser11.getIccProfileBytes(byteSource12, pcxImagingParameters13);
        java.lang.String str15 = pcxImageParser11.getName();
        java.lang.String str16 = pcxImageParser11.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser11.getMetadata(byteSource17, pcxImagingParameters22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser25.getMetadata(byteSource26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder30 = pcxImageParser29.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser29.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser29.getMetadata(byteSource33);
        boolean boolean36 = pcxImageParser29.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser25.getMetadata(byteSource28, pcxImagingParameters37);
        byte[] byteArray39 = pcxImageParser11.getIccProfileBytes(byteSource24, pcxImagingParameters37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance41 = pcxImageParser11.getFormatCompliance(byteSource40);
        java.nio.ByteOrder byteOrder42 = pcxImageParser11.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = null;
        byte[] byteArray47 = pcxImageParser44.getIccProfileBytes(byteSource45, pcxImagingParameters46);
        java.lang.String str48 = pcxImageParser44.getName();
        java.lang.String str49 = pcxImageParser44.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser51 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder52 = pcxImageParser51.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance54 = pcxImageParser51.getFormatCompliance(byteSource53);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters55 = pcxImageParser51.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata56 = pcxImageParser44.getMetadata(byteSource50, pcxImagingParameters55);
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser58 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata60 = pcxImageParser58.getMetadata(byteSource59);
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser62 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder63 = pcxImageParser62.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource64 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance65 = pcxImageParser62.getFormatCompliance(byteSource64);
        org.apache.commons.imaging.bytesource.ByteSource byteSource66 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata67 = pcxImageParser62.getMetadata(byteSource66);
        boolean boolean69 = pcxImageParser62.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters70 = pcxImageParser62.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata71 = pcxImageParser58.getMetadata(byteSource61, pcxImagingParameters70);
        byte[] byteArray72 = pcxImageParser44.getIccProfileBytes(byteSource57, pcxImagingParameters70);
        byte[] byteArray73 = pcxImageParser11.getIccProfileBytes(byteSource43, pcxImagingParameters70);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata74 = pcxImageParser0.getMetadata(byteSource10, pcxImagingParameters70);
        java.lang.Class<?> wildcardClass75 = pcxImageParser0.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertNull(byteArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Pcx-Custom" + "'", str15, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Pcx-Custom" + "'", str16, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(byteOrder30);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters37);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNull(byteArray39);
        org.junit.Assert.assertNull(formatCompliance41);
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNull(byteArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Pcx-Custom" + "'", str48, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Pcx-Custom" + "'", str49, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder52);
        org.junit.Assert.assertNull(formatCompliance54);
        org.junit.Assert.assertNotNull(pcxImagingParameters55);
        org.junit.Assert.assertNull(imageMetadata56);
        org.junit.Assert.assertNull(imageMetadata60);
        org.junit.Assert.assertNotNull(byteOrder63);
        org.junit.Assert.assertNull(formatCompliance65);
        org.junit.Assert.assertNull(imageMetadata67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters70);
        org.junit.Assert.assertNull(imageMetadata71);
        org.junit.Assert.assertNull(byteArray72);
        org.junit.Assert.assertNull(byteArray73);
        org.junit.Assert.assertNull(imageMetadata74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test1075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1075");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.nio.ByteOrder byteOrder4 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder7 = pcxImageParser6.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance9 = pcxImageParser6.getFormatCompliance(byteSource8);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat11 = null;
        boolean boolean12 = pcxImageParser6.canAcceptType(imageFormat11);
        java.lang.String str13 = pcxImageParser6.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource5, pcxImagingParameters14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser17.getMetadata(byteSource18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder22 = pcxImageParser21.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance24 = pcxImageParser21.getFormatCompliance(byteSource23);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser27 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser27.getMetadata(byteSource28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder32 = pcxImageParser31.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance34 = pcxImageParser31.getFormatCompliance(byteSource33);
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser31.getMetadata(byteSource35);
        boolean boolean38 = pcxImageParser31.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = pcxImageParser31.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser27.getMetadata(byteSource30, pcxImagingParameters39);
        byte[] byteArray41 = pcxImageParser21.getIccProfileBytes(byteSource26, pcxImagingParameters39);
        java.lang.String str42 = pcxImageParser21.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser17.getMetadata(byteSource20, pcxImagingParameters43);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser17.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser47 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters49 = null;
        byte[] byteArray50 = pcxImageParser47.getIccProfileBytes(byteSource48, pcxImagingParameters49);
        java.lang.String str51 = pcxImageParser47.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser47.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser17.getMetadata(byteSource46, pcxImagingParameters52);
        byte[] byteArray54 = pcxImageParser0.getIccProfileBytes(byteSource16, pcxImagingParameters52);
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser56 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters58 = null;
        byte[] byteArray59 = pcxImageParser56.getIccProfileBytes(byteSource57, pcxImagingParameters58);
        java.lang.String str60 = pcxImageParser56.getName();
        java.lang.String str61 = pcxImageParser56.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance63 = pcxImageParser56.getFormatCompliance(byteSource62);
        org.apache.commons.imaging.bytesource.ByteSource byteSource64 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser65 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder66 = pcxImageParser65.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource67 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance68 = pcxImageParser65.getFormatCompliance(byteSource67);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters69 = pcxImageParser65.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat70 = null;
        boolean boolean71 = pcxImageParser65.canAcceptType(imageFormat70);
        java.lang.String str72 = pcxImageParser65.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters73 = pcxImageParser65.getDefaultParameters();
        byte[] byteArray74 = pcxImageParser56.getIccProfileBytes(byteSource64, pcxImagingParameters73);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters75 = pcxImageParser56.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage76 = pcxImageParser0.getBufferedImage(byteSource55, pcxImagingParameters75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNull(formatCompliance9);
        org.junit.Assert.assertNotNull(pcxImagingParameters10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNull(formatCompliance24);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertNull(formatCompliance34);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters39);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertNull(byteArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Pcx-Custom" + "'", str42, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertNull(byteArray50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "pcx" + "'", str51, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertNull(byteArray54);
        org.junit.Assert.assertNull(byteArray59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Pcx-Custom" + "'", str60, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Pcx-Custom" + "'", str61, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance63);
        org.junit.Assert.assertNotNull(byteOrder66);
        org.junit.Assert.assertNull(formatCompliance68);
        org.junit.Assert.assertNotNull(pcxImagingParameters69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "pcx" + "'", str72, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters73);
        org.junit.Assert.assertNull(byteArray74);
        org.junit.Assert.assertNotNull(pcxImagingParameters75);
    }

    @Test
    public void test1076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1076");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        java.nio.ByteOrder byteOrder2 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance4 = pcxImageParser0.getFormatCompliance(byteSource3);
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.io.File file7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser8.getMetadata(byteSource12);
        boolean boolean15 = pcxImageParser8.canAcceptExtension("hi!");
        org.apache.commons.imaging.ImageFormat imageFormat16 = null;
        boolean boolean17 = pcxImageParser8.canAcceptType(imageFormat16);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser8.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray19 = pcxImageParser0.getIccProfileBytes(file7, pcxImagingParameters18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertNull(formatCompliance4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
    }

    @Test
    public void test1077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1077");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = null;
        byte[] byteArray19 = pcxImageParser16.getIccProfileBytes(byteSource17, pcxImagingParameters18);
        java.lang.String str20 = pcxImageParser16.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser10.getMetadata(byteSource15, pcxImagingParameters21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser0.getMetadata(byteSource9, pcxImagingParameters23);
        java.lang.String str25 = pcxImageParser0.getName();
        java.lang.String str26 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = null;
        byte[] byteArray31 = pcxImageParser28.getIccProfileBytes(byteSource29, pcxImagingParameters30);
        java.lang.String str32 = pcxImageParser28.getName();
        java.lang.String str33 = pcxImageParser28.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder36 = pcxImageParser35.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance38 = pcxImageParser35.getFormatCompliance(byteSource37);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = pcxImageParser35.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser28.getMetadata(byteSource34, pcxImagingParameters39);
        java.lang.String str41 = pcxImageParser28.getName();
        org.apache.commons.imaging.ImageFormat imageFormat42 = null;
        boolean boolean43 = pcxImageParser28.canAcceptType(imageFormat42);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = pcxImageParser28.getDefaultParameters();
        byte[] byteArray45 = pcxImageParser0.getIccProfileBytes(byteSource27, pcxImagingParameters44);
        java.io.PrintWriter printWriter46 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean48 = pcxImageParser0.dumpImageFile(printWriter46, byteSource47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "pcx" + "'", str20, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Pcx-Custom" + "'", str26, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Pcx-Custom" + "'", str32, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Pcx-Custom" + "'", str33, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNull(formatCompliance38);
        org.junit.Assert.assertNotNull(pcxImagingParameters39);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Pcx-Custom" + "'", str41, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters44);
        org.junit.Assert.assertNull(byteArray45);
    }

    @Test
    public void test1078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1078");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser0.canAcceptType(imageFormat14);
        java.lang.String str16 = pcxImageParser0.getDefaultExtension();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "pcx" + "'", str16, "pcx");
    }

    @Test
    public void test1079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1079");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        boolean boolean5 = pcxImageParser0.canAcceptExtension("");
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata11 = pcxImageParser9.getMetadata(byteSource10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder14 = pcxImageParser13.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser13.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata18 = pcxImageParser13.getMetadata(byteSource17);
        boolean boolean20 = pcxImageParser13.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser9.getMetadata(byteSource12, pcxImagingParameters21);
        byte[] byteArray23 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = pcxImageParser0.getDefaultParameters();
        java.io.File file25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = null;
        byte[] byteArray29 = pcxImageParser26.getIccProfileBytes(byteSource27, pcxImagingParameters28);
        java.lang.String str30 = pcxImageParser26.getDefaultExtension();
        java.lang.String str31 = pcxImageParser26.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = null;
        byte[] byteArray36 = pcxImageParser33.getIccProfileBytes(byteSource34, pcxImagingParameters35);
        java.lang.String str37 = pcxImageParser33.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata39 = pcxImageParser33.getMetadata(byteSource38);
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance41 = pcxImageParser33.getFormatCompliance(byteSource40);
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser43 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder44 = pcxImageParser43.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance46 = pcxImageParser43.getFormatCompliance(byteSource45);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = pcxImageParser43.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser49 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters51 = null;
        byte[] byteArray52 = pcxImageParser49.getIccProfileBytes(byteSource50, pcxImagingParameters51);
        java.lang.String str53 = pcxImageParser49.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters54 = pcxImageParser49.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata55 = pcxImageParser43.getMetadata(byteSource48, pcxImagingParameters54);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters56 = pcxImageParser43.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata57 = pcxImageParser33.getMetadata(byteSource42, pcxImagingParameters56);
        java.lang.String str58 = pcxImageParser33.getName();
        java.lang.String str59 = pcxImageParser33.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser61 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters63 = null;
        byte[] byteArray64 = pcxImageParser61.getIccProfileBytes(byteSource62, pcxImagingParameters63);
        java.lang.String str65 = pcxImageParser61.getName();
        java.lang.String str66 = pcxImageParser61.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource67 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser68 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder69 = pcxImageParser68.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource70 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance71 = pcxImageParser68.getFormatCompliance(byteSource70);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters72 = pcxImageParser68.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata73 = pcxImageParser61.getMetadata(byteSource67, pcxImagingParameters72);
        java.lang.String str74 = pcxImageParser61.getName();
        org.apache.commons.imaging.ImageFormat imageFormat75 = null;
        boolean boolean76 = pcxImageParser61.canAcceptType(imageFormat75);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters77 = pcxImageParser61.getDefaultParameters();
        byte[] byteArray78 = pcxImageParser33.getIccProfileBytes(byteSource60, pcxImagingParameters77);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata79 = pcxImageParser26.getMetadata(byteSource32, pcxImagingParameters77);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo80 = pcxImageParser0.getImageInfo(file25, pcxImagingParameters77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNull(imageMetadata11);
        org.junit.Assert.assertNotNull(byteOrder14);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNull(imageMetadata18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNull(byteArray23);
        org.junit.Assert.assertNotNull(pcxImagingParameters24);
        org.junit.Assert.assertNull(byteArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "pcx" + "'", str30, "pcx");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Pcx-Custom" + "'", str31, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Pcx-Custom" + "'", str37, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata39);
        org.junit.Assert.assertNull(formatCompliance41);
        org.junit.Assert.assertNotNull(byteOrder44);
        org.junit.Assert.assertNull(formatCompliance46);
        org.junit.Assert.assertNotNull(pcxImagingParameters47);
        org.junit.Assert.assertNull(byteArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "pcx" + "'", str53, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters54);
        org.junit.Assert.assertNull(imageMetadata55);
        org.junit.Assert.assertNotNull(pcxImagingParameters56);
        org.junit.Assert.assertNull(imageMetadata57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Pcx-Custom" + "'", str58, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Pcx-Custom" + "'", str59, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Pcx-Custom" + "'", str65, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Pcx-Custom" + "'", str66, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder69);
        org.junit.Assert.assertNull(formatCompliance71);
        org.junit.Assert.assertNotNull(pcxImagingParameters72);
        org.junit.Assert.assertNull(imageMetadata73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Pcx-Custom" + "'", str74, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters77);
        org.junit.Assert.assertNull(byteArray78);
        org.junit.Assert.assertNull(imageMetadata79);
    }

    @Test
    public void test1080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1080");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        java.nio.ByteOrder byteOrder32 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder35 = pcxImageParser34.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance37 = pcxImageParser34.getFormatCompliance(byteSource36);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser34.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser40.getMetadata(byteSource41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder45 = pcxImageParser44.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance47 = pcxImageParser44.getFormatCompliance(byteSource46);
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser44.getMetadata(byteSource48);
        boolean boolean51 = pcxImageParser44.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser44.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser40.getMetadata(byteSource43, pcxImagingParameters52);
        byte[] byteArray54 = pcxImageParser34.getIccProfileBytes(byteSource39, pcxImagingParameters52);
        java.lang.String str55 = pcxImageParser34.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters56 = pcxImageParser34.getDefaultParameters();
        byte[] byteArray57 = pcxImageParser0.getIccProfileBytes(byteSource33, pcxImagingParameters56);
        org.apache.commons.imaging.ImageFormat imageFormat58 = null;
        boolean boolean59 = pcxImageParser0.canAcceptType(imageFormat58);
        org.apache.commons.imaging.ImageFormat imageFormat60 = null;
        boolean boolean61 = pcxImageParser0.canAcceptType(imageFormat60);
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser63 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource64 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters65 = null;
        byte[] byteArray66 = pcxImageParser63.getIccProfileBytes(byteSource64, pcxImagingParameters65);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters67 = pcxImageParser63.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension68 = pcxImageParser0.getImageSize(byteSource62, pcxImagingParameters67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNull(formatCompliance37);
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertNotNull(byteOrder45);
        org.junit.Assert.assertNull(formatCompliance47);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertNull(byteArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Pcx-Custom" + "'", str55, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters56);
        org.junit.Assert.assertNull(byteArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(byteArray66);
        org.junit.Assert.assertNotNull(pcxImagingParameters67);
    }

    @Test
    public void test1081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1081");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        java.lang.String str9 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList11 = pcxImageParser0.getAllBufferedImages(byteSource10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Pcx-Custom" + "'", str9, "Pcx-Custom");
    }

    @Test
    public void test1082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1082");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        boolean boolean30 = pcxImageParser0.canAcceptExtension("pcx");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser0.getDefaultParameters();
        java.lang.String str32 = pcxImageParser0.getName();
        java.awt.image.BufferedImage bufferedImage33 = null;
        java.io.OutputStream outputStream34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder36 = pcxImageParser35.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance38 = pcxImageParser35.getFormatCompliance(byteSource37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser35.getMetadata(byteSource39);
        boolean boolean42 = pcxImageParser35.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser35.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser45 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = null;
        byte[] byteArray48 = pcxImageParser45.getIccProfileBytes(byteSource46, pcxImagingParameters47);
        java.lang.String str49 = pcxImageParser45.getName();
        java.lang.String str50 = pcxImageParser45.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance52 = pcxImageParser45.getFormatCompliance(byteSource51);
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser54 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder55 = pcxImageParser54.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance57 = pcxImageParser54.getFormatCompliance(byteSource56);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters58 = pcxImageParser54.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat59 = null;
        boolean boolean60 = pcxImageParser54.canAcceptType(imageFormat59);
        java.lang.String str61 = pcxImageParser54.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters62 = pcxImageParser54.getDefaultParameters();
        byte[] byteArray63 = pcxImageParser45.getIccProfileBytes(byteSource53, pcxImagingParameters62);
        byte[] byteArray64 = pcxImageParser35.getIccProfileBytes(byteSource44, pcxImagingParameters62);
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage33, outputStream34, pcxImagingParameters62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Pcx-Custom" + "'", str32, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNull(formatCompliance38);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertNull(byteArray48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Pcx-Custom" + "'", str49, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Pcx-Custom" + "'", str50, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance52);
        org.junit.Assert.assertNotNull(byteOrder55);
        org.junit.Assert.assertNull(formatCompliance57);
        org.junit.Assert.assertNotNull(pcxImagingParameters58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "pcx" + "'", str61, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters62);
        org.junit.Assert.assertNull(byteArray63);
        org.junit.Assert.assertNull(byteArray64);
    }

    @Test
    public void test1083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1083");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.io.File file29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = null;
        byte[] byteArray33 = pcxImageParser30.getIccProfileBytes(byteSource31, pcxImagingParameters32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = null;
        byte[] byteArray36 = pcxImageParser30.getIccProfileBytes(byteSource34, pcxImagingParameters35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser38 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = null;
        byte[] byteArray41 = pcxImageParser38.getIccProfileBytes(byteSource39, pcxImagingParameters40);
        java.lang.String str42 = pcxImageParser38.getName();
        java.lang.String str43 = pcxImageParser38.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser45 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder46 = pcxImageParser45.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance48 = pcxImageParser45.getFormatCompliance(byteSource47);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters49 = pcxImageParser45.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata50 = pcxImageParser38.getMetadata(byteSource44, pcxImagingParameters49);
        byte[] byteArray51 = pcxImageParser30.getIccProfileBytes(byteSource37, pcxImagingParameters49);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage52 = pcxImageParser0.getBufferedImage(file29, pcxImagingParameters49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertNull(byteArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Pcx-Custom" + "'", str42, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Pcx-Custom" + "'", str43, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder46);
        org.junit.Assert.assertNull(formatCompliance48);
        org.junit.Assert.assertNotNull(pcxImagingParameters49);
        org.junit.Assert.assertNull(imageMetadata50);
        org.junit.Assert.assertNull(byteArray51);
    }

    @Test
    public void test1084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1084");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = null;
        byte[] byteArray9 = pcxImageParser6.getIccProfileBytes(byteSource7, pcxImagingParameters8);
        java.lang.String str10 = pcxImageParser6.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource5, pcxImagingParameters11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource14);
        java.io.File file16 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray17 = pcxImageParser0.getIccProfileBytes(file16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(byteArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "pcx" + "'", str10, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertNull(imageMetadata15);
    }

    @Test
    public void test1085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1085");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser0.canAcceptType(imageFormat14);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = pcxImageParser0.getDefaultParameters();
        java.io.File file17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = pcxImageParser0.dumpImageFile(file17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters16);
    }

    @Test
    public void test1086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1086");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        org.apache.commons.imaging.ImageFormat imageFormat31 = null;
        boolean boolean32 = pcxImageParser0.canAcceptType(imageFormat31);
        java.lang.Class<?> wildcardClass33 = pcxImageParser0.getClass();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test1087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1087");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        boolean boolean9 = pcxImageParser0.canAcceptExtension("");
        org.apache.commons.imaging.ImageFormat imageFormat10 = null;
        boolean boolean11 = pcxImageParser0.canAcceptType(imageFormat10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser0.getDefaultParameters();
        java.nio.ByteOrder byteOrder13 = pcxImageParser0.getByteOrder();
        java.io.File file14 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance15 = pcxImageParser0.getFormatCompliance(file14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNotNull(byteOrder13);
    }

    @Test
    public void test1088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1088");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.ImageFormat imageFormat8 = null;
        boolean boolean9 = pcxImageParser0.canAcceptType(imageFormat8);
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser0.getFormatCompliance(byteSource10);
        java.lang.String str12 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo14 = pcxImageParser0.getImageInfo(byteSource13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "pcx" + "'", str12, "pcx");
    }

    @Test
    public void test1089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1089");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.ImageFormat imageFormat8 = null;
        boolean boolean9 = pcxImageParser0.canAcceptType(imageFormat8);
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser0.getFormatCompliance(byteSource10);
        java.io.File file12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder14 = pcxImageParser13.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser13.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata18 = pcxImageParser13.getMetadata(byteSource17);
        boolean boolean20 = pcxImageParser13.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser23 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = null;
        byte[] byteArray26 = pcxImageParser23.getIccProfileBytes(byteSource24, pcxImagingParameters25);
        java.lang.String str27 = pcxImageParser23.getName();
        java.lang.String str28 = pcxImageParser23.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser23.getFormatCompliance(byteSource29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat37 = null;
        boolean boolean38 = pcxImageParser32.canAcceptType(imageFormat37);
        java.lang.String str39 = pcxImageParser32.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser32.getDefaultParameters();
        byte[] byteArray41 = pcxImageParser23.getIccProfileBytes(byteSource31, pcxImagingParameters40);
        byte[] byteArray42 = pcxImageParser13.getIccProfileBytes(byteSource22, pcxImagingParameters40);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension43 = pcxImageParser0.getImageSize(file12, pcxImagingParameters40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(byteOrder14);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNull(imageMetadata18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(byteArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Pcx-Custom" + "'", str27, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Pcx-Custom" + "'", str28, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "pcx" + "'", str39, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(byteArray41);
        org.junit.Assert.assertNull(byteArray42);
    }

    @Test
    public void test1090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1090");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        boolean boolean5 = pcxImageParser0.canAcceptExtension("Pcx-Custom");
        java.lang.String str6 = pcxImageParser0.getName();
        java.nio.ByteOrder byteOrder7 = pcxImageParser0.getByteOrder();
        java.io.File file8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = null;
        byte[] byteArray18 = pcxImageParser15.getIccProfileBytes(byteSource16, pcxImagingParameters17);
        java.lang.String str19 = pcxImageParser15.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters20 = pcxImageParser15.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata21 = pcxImageParser9.getMetadata(byteSource14, pcxImagingParameters20);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray22 = pcxImageParser0.getIccProfileBytes(file8, pcxImagingParameters20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Pcx-Custom" + "'", str6, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "pcx" + "'", str19, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters20);
        org.junit.Assert.assertNull(imageMetadata21);
    }

    @Test
    public void test1091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1091");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        boolean boolean30 = pcxImageParser0.canAcceptExtension("pcx");
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser33.getMetadata(byteSource34);
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser37 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder38 = pcxImageParser37.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance40 = pcxImageParser37.getFormatCompliance(byteSource39);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = pcxImageParser37.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser43 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata45 = pcxImageParser43.getMetadata(byteSource44);
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser47 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder48 = pcxImageParser47.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance50 = pcxImageParser47.getFormatCompliance(byteSource49);
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata52 = pcxImageParser47.getMetadata(byteSource51);
        boolean boolean54 = pcxImageParser47.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters55 = pcxImageParser47.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata56 = pcxImageParser43.getMetadata(byteSource46, pcxImagingParameters55);
        byte[] byteArray57 = pcxImageParser37.getIccProfileBytes(byteSource42, pcxImagingParameters55);
        java.lang.String str58 = pcxImageParser37.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters59 = pcxImageParser37.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata60 = pcxImageParser33.getMetadata(byteSource36, pcxImagingParameters59);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters61 = pcxImageParser33.getDefaultParameters();
        byte[] byteArray62 = pcxImageParser0.getIccProfileBytes(byteSource32, pcxImagingParameters61);
        java.io.File file63 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance64 = pcxImageParser0.getFormatCompliance(file63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertNotNull(byteOrder38);
        org.junit.Assert.assertNull(formatCompliance40);
        org.junit.Assert.assertNotNull(pcxImagingParameters41);
        org.junit.Assert.assertNull(imageMetadata45);
        org.junit.Assert.assertNotNull(byteOrder48);
        org.junit.Assert.assertNull(formatCompliance50);
        org.junit.Assert.assertNull(imageMetadata52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters55);
        org.junit.Assert.assertNull(imageMetadata56);
        org.junit.Assert.assertNull(byteArray57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Pcx-Custom" + "'", str58, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters59);
        org.junit.Assert.assertNull(imageMetadata60);
        org.junit.Assert.assertNotNull(pcxImagingParameters61);
        org.junit.Assert.assertNull(byteArray62);
    }

    @Test
    public void test1092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1092");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = null;
        byte[] byteArray19 = pcxImageParser16.getIccProfileBytes(byteSource17, pcxImagingParameters18);
        java.lang.String str20 = pcxImageParser16.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser10.getMetadata(byteSource15, pcxImagingParameters21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser0.getMetadata(byteSource9, pcxImagingParameters23);
        java.lang.String str25 = pcxImageParser0.getName();
        java.lang.String str26 = pcxImageParser0.getName();
        java.io.File file27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = null;
        byte[] byteArray31 = pcxImageParser28.getIccProfileBytes(byteSource29, pcxImagingParameters30);
        java.lang.String str32 = pcxImageParser28.getName();
        java.lang.String str33 = pcxImageParser28.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder36 = pcxImageParser35.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance38 = pcxImageParser35.getFormatCompliance(byteSource37);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = pcxImageParser35.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser28.getMetadata(byteSource34, pcxImagingParameters39);
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser42 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser42.getMetadata(byteSource43);
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser46 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder47 = pcxImageParser46.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance49 = pcxImageParser46.getFormatCompliance(byteSource48);
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata51 = pcxImageParser46.getMetadata(byteSource50);
        boolean boolean53 = pcxImageParser46.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters54 = pcxImageParser46.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata55 = pcxImageParser42.getMetadata(byteSource45, pcxImagingParameters54);
        byte[] byteArray56 = pcxImageParser28.getIccProfileBytes(byteSource41, pcxImagingParameters54);
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance58 = pcxImageParser28.getFormatCompliance(byteSource57);
        java.nio.ByteOrder byteOrder59 = pcxImageParser28.getByteOrder();
        java.nio.ByteOrder byteOrder60 = pcxImageParser28.getByteOrder();
        java.lang.String str61 = pcxImageParser28.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters62 = pcxImageParser28.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo63 = pcxImageParser0.getImageInfo(file27, pcxImagingParameters62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "pcx" + "'", str20, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Pcx-Custom" + "'", str26, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Pcx-Custom" + "'", str32, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Pcx-Custom" + "'", str33, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNull(formatCompliance38);
        org.junit.Assert.assertNotNull(pcxImagingParameters39);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNull(formatCompliance49);
        org.junit.Assert.assertNull(imageMetadata51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters54);
        org.junit.Assert.assertNull(imageMetadata55);
        org.junit.Assert.assertNull(byteArray56);
        org.junit.Assert.assertNull(formatCompliance58);
        org.junit.Assert.assertNotNull(byteOrder59);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Pcx-Custom" + "'", str61, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters62);
    }

    @Test
    public void test1093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1093");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat2 = null;
        boolean boolean3 = pcxImageParser0.canAcceptType(imageFormat2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance5 = pcxImageParser0.getFormatCompliance(byteSource4);
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = pcxImageParser0.dumpImageFile(byteSource6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(formatCompliance5);
    }

    @Test
    public void test1094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1094");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser0.getMetadata(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser0.getMetadata(byteSource24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser0.getFormatCompliance(byteSource26);
        java.io.File file28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder30 = pcxImageParser29.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser29.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser35.getMetadata(byteSource36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder40 = pcxImageParser39.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance42 = pcxImageParser39.getFormatCompliance(byteSource41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser39.getMetadata(byteSource43);
        boolean boolean46 = pcxImageParser39.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = pcxImageParser39.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser35.getMetadata(byteSource38, pcxImagingParameters47);
        byte[] byteArray49 = pcxImageParser29.getIccProfileBytes(byteSource34, pcxImagingParameters47);
        java.lang.String str50 = pcxImageParser29.getName();
        java.lang.String str51 = pcxImageParser29.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser53 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder54 = pcxImageParser53.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance56 = pcxImageParser53.getFormatCompliance(byteSource55);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters57 = pcxImageParser53.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat58 = null;
        boolean boolean59 = pcxImageParser53.canAcceptType(imageFormat58);
        java.lang.String str60 = pcxImageParser53.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters61 = pcxImageParser53.getDefaultParameters();
        byte[] byteArray62 = pcxImageParser29.getIccProfileBytes(byteSource52, pcxImagingParameters61);
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser64 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder65 = pcxImageParser64.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource66 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser67 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder68 = pcxImageParser67.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance70 = pcxImageParser67.getFormatCompliance(byteSource69);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters71 = pcxImageParser67.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource72 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser73 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource74 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata75 = pcxImageParser73.getMetadata(byteSource74);
        org.apache.commons.imaging.bytesource.ByteSource byteSource76 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser77 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder78 = pcxImageParser77.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource79 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance80 = pcxImageParser77.getFormatCompliance(byteSource79);
        org.apache.commons.imaging.bytesource.ByteSource byteSource81 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata82 = pcxImageParser77.getMetadata(byteSource81);
        boolean boolean84 = pcxImageParser77.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters85 = pcxImageParser77.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata86 = pcxImageParser73.getMetadata(byteSource76, pcxImagingParameters85);
        byte[] byteArray87 = pcxImageParser67.getIccProfileBytes(byteSource72, pcxImagingParameters85);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata88 = pcxImageParser64.getMetadata(byteSource66, pcxImagingParameters85);
        byte[] byteArray89 = pcxImageParser29.getIccProfileBytes(byteSource63, pcxImagingParameters85);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray90 = pcxImageParser0.getIccProfileBytes(file28, pcxImagingParameters85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(byteOrder30);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNull(formatCompliance42);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters47);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNull(byteArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Pcx-Custom" + "'", str50, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "pcx" + "'", str51, "pcx");
        org.junit.Assert.assertNotNull(byteOrder54);
        org.junit.Assert.assertNull(formatCompliance56);
        org.junit.Assert.assertNotNull(pcxImagingParameters57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "pcx" + "'", str60, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters61);
        org.junit.Assert.assertNull(byteArray62);
        org.junit.Assert.assertNotNull(byteOrder65);
        org.junit.Assert.assertNotNull(byteOrder68);
        org.junit.Assert.assertNull(formatCompliance70);
        org.junit.Assert.assertNotNull(pcxImagingParameters71);
        org.junit.Assert.assertNull(imageMetadata75);
        org.junit.Assert.assertNotNull(byteOrder78);
        org.junit.Assert.assertNull(formatCompliance80);
        org.junit.Assert.assertNull(imageMetadata82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters85);
        org.junit.Assert.assertNull(imageMetadata86);
        org.junit.Assert.assertNull(byteArray87);
        org.junit.Assert.assertNull(imageMetadata88);
        org.junit.Assert.assertNull(byteArray89);
    }

    @Test
    public void test1095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1095");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser0.getFormatCompliance(byteSource5);
        org.apache.commons.imaging.ImageFormat imageFormat7 = null;
        boolean boolean8 = pcxImageParser0.canAcceptType(imageFormat7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.ImageFormat imageFormat18 = null;
        boolean boolean19 = pcxImageParser10.canAcceptType(imageFormat18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser21.getMetadata(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder26 = pcxImageParser25.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance28 = pcxImageParser25.getFormatCompliance(byteSource27);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = pcxImageParser25.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser31.getMetadata(byteSource32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder36 = pcxImageParser35.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance38 = pcxImageParser35.getFormatCompliance(byteSource37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser35.getMetadata(byteSource39);
        boolean boolean42 = pcxImageParser35.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser35.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser31.getMetadata(byteSource34, pcxImagingParameters43);
        byte[] byteArray45 = pcxImageParser25.getIccProfileBytes(byteSource30, pcxImagingParameters43);
        java.lang.String str46 = pcxImageParser25.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = pcxImageParser25.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser21.getMetadata(byteSource24, pcxImagingParameters47);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser10.getMetadata(byteSource20, pcxImagingParameters47);
        byte[] byteArray50 = pcxImageParser0.getIccProfileBytes(byteSource9, pcxImagingParameters47);
        java.io.File file51 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str52 = pcxImageParser0.dumpImageFile(file51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNotNull(byteOrder26);
        org.junit.Assert.assertNull(formatCompliance28);
        org.junit.Assert.assertNotNull(pcxImagingParameters29);
        org.junit.Assert.assertNull(imageMetadata33);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNull(formatCompliance38);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertNull(byteArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Pcx-Custom" + "'", str46, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters47);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertNull(byteArray50);
    }

    @Test
    public void test1096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1096");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters7);
        java.lang.String str9 = pcxImageParser0.getDefaultExtension();
        boolean boolean11 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser0.getDefaultParameters();
        java.lang.String str13 = pcxImageParser0.getDefaultExtension();
        java.io.File file14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = null;
        byte[] byteArray18 = pcxImageParser15.getIccProfileBytes(byteSource16, pcxImagingParameters17);
        java.nio.ByteOrder byteOrder19 = pcxImageParser15.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser15.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser23 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = null;
        byte[] byteArray26 = pcxImageParser23.getIccProfileBytes(byteSource24, pcxImagingParameters25);
        java.lang.String str27 = pcxImageParser23.getName();
        java.lang.String str28 = pcxImageParser23.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder31 = pcxImageParser30.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance33 = pcxImageParser30.getFormatCompliance(byteSource32);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser30.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser23.getMetadata(byteSource29, pcxImagingParameters34);
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser37 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata39 = pcxImageParser37.getMetadata(byteSource38);
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser41 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder42 = pcxImageParser41.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance44 = pcxImageParser41.getFormatCompliance(byteSource43);
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser41.getMetadata(byteSource45);
        boolean boolean48 = pcxImageParser41.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters49 = pcxImageParser41.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata50 = pcxImageParser37.getMetadata(byteSource40, pcxImagingParameters49);
        byte[] byteArray51 = pcxImageParser23.getIccProfileBytes(byteSource36, pcxImagingParameters49);
        org.apache.commons.imaging.ImageFormat imageFormat52 = null;
        boolean boolean53 = pcxImageParser23.canAcceptType(imageFormat52);
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance55 = pcxImageParser23.getFormatCompliance(byteSource54);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters56 = pcxImageParser23.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata57 = pcxImageParser15.getMetadata(byteSource22, pcxImagingParameters56);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata58 = pcxImageParser0.getMetadata(file14, pcxImagingParameters56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "pcx" + "'", str9, "pcx");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(byteArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Pcx-Custom" + "'", str27, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Pcx-Custom" + "'", str28, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNull(formatCompliance33);
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertNull(imageMetadata39);
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNull(formatCompliance44);
        org.junit.Assert.assertNull(imageMetadata46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters49);
        org.junit.Assert.assertNull(imageMetadata50);
        org.junit.Assert.assertNull(byteArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(formatCompliance55);
        org.junit.Assert.assertNotNull(pcxImagingParameters56);
        org.junit.Assert.assertNull(imageMetadata57);
    }

    @Test
    public void test1097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1097");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser9.canAcceptType(imageFormat14);
        java.lang.String str16 = pcxImageParser9.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser9.getDefaultParameters();
        byte[] byteArray18 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters17);
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance20 = pcxImageParser0.getFormatCompliance(byteSource19);
        java.io.File file21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser22 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = null;
        byte[] byteArray25 = pcxImageParser22.getIccProfileBytes(byteSource23, pcxImagingParameters24);
        java.lang.String str26 = pcxImageParser22.getName();
        java.lang.String str27 = pcxImageParser22.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder30 = pcxImageParser29.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser29.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser22.getMetadata(byteSource28, pcxImagingParameters33);
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser36 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser36.getMetadata(byteSource37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder41 = pcxImageParser40.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance43 = pcxImageParser40.getFormatCompliance(byteSource42);
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata45 = pcxImageParser40.getMetadata(byteSource44);
        boolean boolean47 = pcxImageParser40.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = pcxImageParser40.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser36.getMetadata(byteSource39, pcxImagingParameters48);
        byte[] byteArray50 = pcxImageParser22.getIccProfileBytes(byteSource35, pcxImagingParameters48);
        boolean boolean52 = pcxImageParser22.canAcceptExtension("pcx");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters53 = pcxImageParser22.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo54 = pcxImageParser0.getImageInfo(file21, pcxImagingParameters53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "pcx" + "'", str16, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertNull(formatCompliance20);
        org.junit.Assert.assertNull(byteArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Pcx-Custom" + "'", str26, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Pcx-Custom" + "'", str27, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder30);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNotNull(byteOrder41);
        org.junit.Assert.assertNull(formatCompliance43);
        org.junit.Assert.assertNull(imageMetadata45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters48);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertNull(byteArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters53);
    }

    @Test
    public void test1098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1098");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        java.io.File file31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser32.getMetadata(byteSource36);
        boolean boolean39 = pcxImageParser32.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser32.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo41 = pcxImageParser0.getImageInfo(file31, pcxImagingParameters40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
    }

    @Test
    public void test1099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1099");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.ImageFormat imageFormat3 = null;
        boolean boolean4 = pcxImageParser0.canAcceptType(imageFormat3);
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = pcxImageParser0.getDefaultParameters();
        java.io.PrintWriter printWriter8 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean10 = pcxImageParser0.dumpImageFile(printWriter8, byteSource9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters7);
    }

    @Test
    public void test1100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1100");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser0.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser0.getDefaultParameters();
        java.io.File file34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = null;
        byte[] byteArray38 = pcxImageParser35.getIccProfileBytes(byteSource36, pcxImagingParameters37);
        java.lang.String str39 = pcxImageParser35.getName();
        boolean boolean41 = pcxImageParser35.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser43 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder44 = pcxImageParser43.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance46 = pcxImageParser43.getFormatCompliance(byteSource45);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = pcxImageParser43.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = pcxImageParser43.getDefaultParameters();
        byte[] byteArray49 = pcxImageParser35.getIccProfileBytes(byteSource42, pcxImagingParameters48);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters50 = pcxImageParser35.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray51 = pcxImageParser0.getIccProfileBytes(file34, pcxImagingParameters50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
        org.junit.Assert.assertNull(byteArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Pcx-Custom" + "'", str39, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(byteOrder44);
        org.junit.Assert.assertNull(formatCompliance46);
        org.junit.Assert.assertNotNull(pcxImagingParameters47);
        org.junit.Assert.assertNotNull(pcxImagingParameters48);
        org.junit.Assert.assertNull(byteArray49);
        org.junit.Assert.assertNotNull(pcxImagingParameters50);
    }

    @Test
    public void test1101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1101");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser0.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = null;
        byte[] byteArray38 = pcxImageParser35.getIccProfileBytes(byteSource36, pcxImagingParameters37);
        java.lang.String str39 = pcxImageParser35.getName();
        java.lang.String str40 = pcxImageParser35.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance42 = pcxImageParser35.getFormatCompliance(byteSource41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder45 = pcxImageParser44.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance47 = pcxImageParser44.getFormatCompliance(byteSource46);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = pcxImageParser44.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat49 = null;
        boolean boolean50 = pcxImageParser44.canAcceptType(imageFormat49);
        java.lang.String str51 = pcxImageParser44.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser44.getDefaultParameters();
        byte[] byteArray53 = pcxImageParser35.getIccProfileBytes(byteSource43, pcxImagingParameters52);
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser55 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder56 = pcxImageParser55.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance58 = pcxImageParser55.getFormatCompliance(byteSource57);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters59 = pcxImageParser55.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat60 = null;
        boolean boolean61 = pcxImageParser55.canAcceptType(imageFormat60);
        java.lang.String str62 = pcxImageParser55.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters63 = pcxImageParser55.getDefaultParameters();
        byte[] byteArray64 = pcxImageParser35.getIccProfileBytes(byteSource54, pcxImagingParameters63);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo65 = pcxImageParser0.getImageInfo(byteSource34, pcxImagingParameters63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
        org.junit.Assert.assertNull(byteArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Pcx-Custom" + "'", str39, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Pcx-Custom" + "'", str40, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance42);
        org.junit.Assert.assertNotNull(byteOrder45);
        org.junit.Assert.assertNull(formatCompliance47);
        org.junit.Assert.assertNotNull(pcxImagingParameters48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "pcx" + "'", str51, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(byteArray53);
        org.junit.Assert.assertNotNull(byteOrder56);
        org.junit.Assert.assertNull(formatCompliance58);
        org.junit.Assert.assertNotNull(pcxImagingParameters59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "pcx" + "'", str62, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters63);
        org.junit.Assert.assertNull(byteArray64);
    }

    @Test
    public void test1102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1102");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        java.lang.String str8 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata10 = pcxImageParser0.getMetadata(byteSource9);
        java.io.File file11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList12 = pcxImageParser0.getAllBufferedImages(file11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "pcx" + "'", str8, "pcx");
        org.junit.Assert.assertNull(imageMetadata10);
    }

    @Test
    public void test1103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1103");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser9.canAcceptType(imageFormat14);
        java.lang.String str16 = pcxImageParser9.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser9.getDefaultParameters();
        byte[] byteArray18 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters17);
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser20 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder21 = pcxImageParser20.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance23 = pcxImageParser20.getFormatCompliance(byteSource22);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = pcxImageParser20.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat25 = null;
        boolean boolean26 = pcxImageParser20.canAcceptType(imageFormat25);
        java.lang.String str27 = pcxImageParser20.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser20.getDefaultParameters();
        byte[] byteArray29 = pcxImageParser0.getIccProfileBytes(byteSource19, pcxImagingParameters28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = null;
        byte[] byteArray34 = pcxImageParser31.getIccProfileBytes(byteSource32, pcxImagingParameters33);
        java.lang.String str35 = pcxImageParser31.getName();
        java.lang.String str36 = pcxImageParser31.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance38 = pcxImageParser31.getFormatCompliance(byteSource37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder41 = pcxImageParser40.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance43 = pcxImageParser40.getFormatCompliance(byteSource42);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = pcxImageParser40.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat45 = null;
        boolean boolean46 = pcxImageParser40.canAcceptType(imageFormat45);
        java.lang.String str47 = pcxImageParser40.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = pcxImageParser40.getDefaultParameters();
        byte[] byteArray49 = pcxImageParser31.getIccProfileBytes(byteSource39, pcxImagingParameters48);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage50 = pcxImageParser0.getBufferedImage(byteSource30, pcxImagingParameters48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "pcx" + "'", str16, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertNotNull(byteOrder21);
        org.junit.Assert.assertNull(formatCompliance23);
        org.junit.Assert.assertNotNull(pcxImagingParameters24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "pcx" + "'", str27, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(byteArray29);
        org.junit.Assert.assertNull(byteArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Pcx-Custom" + "'", str35, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Pcx-Custom" + "'", str36, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance38);
        org.junit.Assert.assertNotNull(byteOrder41);
        org.junit.Assert.assertNull(formatCompliance43);
        org.junit.Assert.assertNotNull(pcxImagingParameters44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "pcx" + "'", str47, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters48);
        org.junit.Assert.assertNull(byteArray49);
    }

    @Test
    public void test1104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1104");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.lang.String str4 = pcxImageParser0.getName();
        boolean boolean6 = pcxImageParser0.canAcceptExtension("hi!");
        java.lang.String str7 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = null;
        byte[] byteArray12 = pcxImageParser9.getIccProfileBytes(byteSource10, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser9.getName();
        java.lang.String str14 = pcxImageParser9.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder17 = pcxImageParser16.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance19 = pcxImageParser16.getFormatCompliance(byteSource18);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters20 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata21 = pcxImageParser9.getMetadata(byteSource15, pcxImagingParameters20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser23 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser23.getMetadata(byteSource24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser27 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder28 = pcxImageParser27.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser27.getFormatCompliance(byteSource29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser27.getMetadata(byteSource31);
        boolean boolean34 = pcxImageParser27.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser27.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser23.getMetadata(byteSource26, pcxImagingParameters35);
        byte[] byteArray37 = pcxImageParser9.getIccProfileBytes(byteSource22, pcxImagingParameters35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance39 = pcxImageParser9.getFormatCompliance(byteSource38);
        java.nio.ByteOrder byteOrder40 = pcxImageParser9.getByteOrder();
        java.nio.ByteOrder byteOrder41 = pcxImageParser9.getByteOrder();
        java.lang.String str42 = pcxImageParser9.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser9.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension44 = pcxImageParser0.getImageSize(byteSource8, pcxImagingParameters43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Pcx-Custom" + "'", str7, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Pcx-Custom" + "'", str14, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder17);
        org.junit.Assert.assertNull(formatCompliance19);
        org.junit.Assert.assertNotNull(pcxImagingParameters20);
        org.junit.Assert.assertNull(imageMetadata21);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertNotNull(byteOrder28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertNull(byteArray37);
        org.junit.Assert.assertNull(formatCompliance39);
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNotNull(byteOrder41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Pcx-Custom" + "'", str42, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
    }

    @Test
    public void test1105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1105");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata4 = pcxImageParser0.getMetadata(byteSource3);
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        java.lang.String str6 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        java.lang.Class<?> wildcardClass9 = pcxImageParser0.getClass();
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "pcx" + "'", str6, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1106");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser24.canAcceptType(imageFormat29);
        java.lang.String str31 = pcxImageParser24.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser24.getDefaultParameters();
        byte[] byteArray33 = pcxImageParser0.getIccProfileBytes(byteSource23, pcxImagingParameters32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser0.getFormatCompliance(byteSource34);
        java.nio.ByteOrder byteOrder36 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance38 = pcxImageParser0.getFormatCompliance(byteSource37);
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "pcx" + "'", str31, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNull(formatCompliance38);
    }

    @Test
    public void test1107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1107");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        java.nio.ByteOrder byteOrder32 = pcxImageParser0.getByteOrder();
        java.lang.String str33 = pcxImageParser0.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser0.getDefaultParameters();
        java.io.File file35 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser0.getMetadata(file35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Pcx-Custom" + "'", str33, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
    }

    @Test
    public void test1108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1108");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser0.canAcceptType(imageFormat23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance26 = pcxImageParser0.getFormatCompliance(byteSource25);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder30 = pcxImageParser29.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser29.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser0.getMetadata(byteSource28, pcxImagingParameters33);
        java.io.File file35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser36 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = null;
        byte[] byteArray39 = pcxImageParser36.getIccProfileBytes(byteSource37, pcxImagingParameters38);
        java.lang.String str40 = pcxImageParser36.getName();
        java.lang.String str41 = pcxImageParser36.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser43 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder44 = pcxImageParser43.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance46 = pcxImageParser43.getFormatCompliance(byteSource45);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = pcxImageParser43.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser36.getMetadata(byteSource42, pcxImagingParameters47);
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser50 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = null;
        byte[] byteArray53 = pcxImageParser50.getIccProfileBytes(byteSource51, pcxImagingParameters52);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters54 = pcxImageParser50.getDefaultParameters();
        byte[] byteArray55 = pcxImageParser36.getIccProfileBytes(byteSource49, pcxImagingParameters54);
        boolean boolean57 = pcxImageParser36.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser59 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder60 = pcxImageParser59.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance62 = pcxImageParser59.getFormatCompliance(byteSource61);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters63 = pcxImageParser59.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource64 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser65 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource66 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata67 = pcxImageParser65.getMetadata(byteSource66);
        org.apache.commons.imaging.bytesource.ByteSource byteSource68 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser69 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder70 = pcxImageParser69.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource71 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance72 = pcxImageParser69.getFormatCompliance(byteSource71);
        org.apache.commons.imaging.bytesource.ByteSource byteSource73 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata74 = pcxImageParser69.getMetadata(byteSource73);
        boolean boolean76 = pcxImageParser69.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters77 = pcxImageParser69.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata78 = pcxImageParser65.getMetadata(byteSource68, pcxImagingParameters77);
        byte[] byteArray79 = pcxImageParser59.getIccProfileBytes(byteSource64, pcxImagingParameters77);
        java.lang.String str80 = pcxImageParser59.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters81 = pcxImageParser59.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat82 = null;
        boolean boolean83 = pcxImageParser59.canAcceptType(imageFormat82);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters84 = pcxImageParser59.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata85 = pcxImageParser36.getMetadata(byteSource58, pcxImagingParameters84);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray86 = pcxImageParser0.getIccProfileBytes(file35, pcxImagingParameters84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(formatCompliance26);
        org.junit.Assert.assertNotNull(pcxImagingParameters27);
        org.junit.Assert.assertNotNull(byteOrder30);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertNull(byteArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Pcx-Custom" + "'", str40, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Pcx-Custom" + "'", str41, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder44);
        org.junit.Assert.assertNull(formatCompliance46);
        org.junit.Assert.assertNotNull(pcxImagingParameters47);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNull(byteArray53);
        org.junit.Assert.assertNotNull(pcxImagingParameters54);
        org.junit.Assert.assertNull(byteArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNull(formatCompliance62);
        org.junit.Assert.assertNotNull(pcxImagingParameters63);
        org.junit.Assert.assertNull(imageMetadata67);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNull(formatCompliance72);
        org.junit.Assert.assertNull(imageMetadata74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters77);
        org.junit.Assert.assertNull(imageMetadata78);
        org.junit.Assert.assertNull(byteArray79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "Pcx-Custom" + "'", str80, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters84);
        org.junit.Assert.assertNull(imageMetadata85);
    }

    @Test
    public void test1109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1109");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        java.nio.ByteOrder byteOrder32 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder35 = pcxImageParser34.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance37 = pcxImageParser34.getFormatCompliance(byteSource36);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser34.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser40.getMetadata(byteSource41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder45 = pcxImageParser44.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance47 = pcxImageParser44.getFormatCompliance(byteSource46);
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser44.getMetadata(byteSource48);
        boolean boolean51 = pcxImageParser44.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser44.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser40.getMetadata(byteSource43, pcxImagingParameters52);
        byte[] byteArray54 = pcxImageParser34.getIccProfileBytes(byteSource39, pcxImagingParameters52);
        java.lang.String str55 = pcxImageParser34.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters56 = pcxImageParser34.getDefaultParameters();
        byte[] byteArray57 = pcxImageParser0.getIccProfileBytes(byteSource33, pcxImagingParameters56);
        org.apache.commons.imaging.ImageFormat imageFormat58 = null;
        boolean boolean59 = pcxImageParser0.canAcceptType(imageFormat58);
        org.apache.commons.imaging.ImageFormat imageFormat60 = null;
        boolean boolean61 = pcxImageParser0.canAcceptType(imageFormat60);
        java.io.File file62 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters63 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage64 = pcxImageParser0.getBufferedImage(file62, pcxImagingParameters63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNull(formatCompliance37);
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertNotNull(byteOrder45);
        org.junit.Assert.assertNull(formatCompliance47);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertNull(byteArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Pcx-Custom" + "'", str55, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters56);
        org.junit.Assert.assertNull(byteArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test1110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1110");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.nio.ByteOrder byteOrder4 = pcxImageParser0.getByteOrder();
        java.lang.String str5 = pcxImageParser0.getName();
        java.io.File file6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = null;
        byte[] byteArray10 = pcxImageParser7.getIccProfileBytes(byteSource8, pcxImagingParameters9);
        java.lang.String str11 = pcxImageParser7.getName();
        java.lang.String str12 = pcxImageParser7.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser7.getMetadata(byteSource13, pcxImagingParameters18);
        java.lang.String str20 = pcxImageParser7.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser7.getMetadata(byteSource21);
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser7.canAcceptType(imageFormat23);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser7.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray26 = pcxImageParser0.getIccProfileBytes(file6, pcxImagingParameters25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Pcx-Custom" + "'", str11, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Pcx-Custom" + "'", str12, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Pcx-Custom" + "'", str20, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
    }

    @Test
    public void test1111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1111");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = null;
        byte[] byteArray9 = pcxImageParser6.getIccProfileBytes(byteSource7, pcxImagingParameters8);
        java.lang.String str10 = pcxImageParser6.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource5, pcxImagingParameters11);
        java.nio.ByteOrder byteOrder13 = pcxImageParser0.getByteOrder();
        java.lang.String str14 = pcxImageParser0.getDefaultExtension();
        java.io.File file15 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray16 = pcxImageParser0.getIccProfileBytes(file15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(byteArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "pcx" + "'", str10, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "pcx" + "'", str14, "pcx");
    }

    @Test
    public void test1112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1112");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters6 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = null;
        byte[] byteArray11 = pcxImageParser8.getIccProfileBytes(byteSource9, pcxImagingParameters10);
        java.lang.String str12 = pcxImageParser8.getName();
        java.lang.String str13 = pcxImageParser8.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder16 = pcxImageParser15.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser15.getFormatCompliance(byteSource17);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser15.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata20 = pcxImageParser8.getMetadata(byteSource14, pcxImagingParameters19);
        java.lang.String str21 = pcxImageParser8.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser8.getMetadata(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = null;
        byte[] byteArray28 = pcxImageParser25.getIccProfileBytes(byteSource26, pcxImagingParameters27);
        java.lang.String str29 = pcxImageParser25.getName();
        java.lang.String str30 = pcxImageParser25.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser25.getMetadata(byteSource31, pcxImagingParameters36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = null;
        byte[] byteArray42 = pcxImageParser39.getIccProfileBytes(byteSource40, pcxImagingParameters41);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser39.getDefaultParameters();
        byte[] byteArray44 = pcxImageParser25.getIccProfileBytes(byteSource38, pcxImagingParameters43);
        byte[] byteArray45 = pcxImageParser8.getIccProfileBytes(byteSource24, pcxImagingParameters43);
        byte[] byteArray46 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters43);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser0.getMetadata(byteSource47);
        java.lang.String str49 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser51 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters53 = null;
        byte[] byteArray54 = pcxImageParser51.getIccProfileBytes(byteSource52, pcxImagingParameters53);
        java.lang.String str55 = pcxImageParser51.getName();
        java.lang.String str56 = pcxImageParser51.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance58 = pcxImageParser51.getFormatCompliance(byteSource57);
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser60 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder61 = pcxImageParser60.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance63 = pcxImageParser60.getFormatCompliance(byteSource62);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters64 = pcxImageParser60.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat65 = null;
        boolean boolean66 = pcxImageParser60.canAcceptType(imageFormat65);
        java.lang.String str67 = pcxImageParser60.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters68 = pcxImageParser60.getDefaultParameters();
        byte[] byteArray69 = pcxImageParser51.getIccProfileBytes(byteSource59, pcxImagingParameters68);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension70 = pcxImageParser0.getImageSize(byteSource50, pcxImagingParameters68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNotNull(pcxImagingParameters6);
        org.junit.Assert.assertNull(byteArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Pcx-Custom" + "'", str12, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNull(formatCompliance18);
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
        org.junit.Assert.assertNull(imageMetadata20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Pcx-Custom" + "'", str30, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertNull(byteArray42);
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertNull(byteArray44);
        org.junit.Assert.assertNull(byteArray45);
        org.junit.Assert.assertNull(byteArray46);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Pcx-Custom" + "'", str49, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Pcx-Custom" + "'", str55, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Pcx-Custom" + "'", str56, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance58);
        org.junit.Assert.assertNotNull(byteOrder61);
        org.junit.Assert.assertNull(formatCompliance63);
        org.junit.Assert.assertNotNull(pcxImagingParameters64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "pcx" + "'", str67, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters68);
        org.junit.Assert.assertNull(byteArray69);
    }

    @Test
    public void test1113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1113");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser0.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser0.getDefaultParameters();
        java.io.File file34 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension35 = pcxImageParser0.getImageSize(file34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
    }

    @Test
    public void test1114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1114");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList8 = pcxImageParser0.getAllBufferedImages(byteSource7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1115");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser0.canAcceptType(imageFormat14);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = pcxImageParser0.getDefaultParameters();
        java.lang.String str17 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = pcxImageParser0.dumpImageFile(byteSource18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "pcx" + "'", str17, "pcx");
    }

    @Test
    public void test1116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1116");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = null;
        byte[] byteArray33 = pcxImageParser30.getIccProfileBytes(byteSource31, pcxImagingParameters32);
        java.lang.String str34 = pcxImageParser30.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser30.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser0.getMetadata(byteSource29, pcxImagingParameters35);
        java.io.File file37 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray38 = pcxImageParser0.getIccProfileBytes(file37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "pcx" + "'", str34, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(imageMetadata36);
    }

    @Test
    public void test1117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1117");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser4.getMetadata(byteSource8);
        boolean boolean11 = pcxImageParser4.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters12);
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser0.canAcceptType(imageFormat14);
        java.awt.image.BufferedImage bufferedImage16 = null;
        java.io.OutputStream outputStream17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters20 = null;
        byte[] byteArray21 = pcxImageParser18.getIccProfileBytes(byteSource19, pcxImagingParameters20);
        java.lang.String str22 = pcxImageParser18.getName();
        java.lang.String str23 = pcxImageParser18.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder26 = pcxImageParser25.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance28 = pcxImageParser25.getFormatCompliance(byteSource27);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = pcxImageParser25.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata30 = pcxImageParser18.getMetadata(byteSource24, pcxImagingParameters29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser32.getMetadata(byteSource33);
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser36 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder37 = pcxImageParser36.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance39 = pcxImageParser36.getFormatCompliance(byteSource38);
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser36.getMetadata(byteSource40);
        boolean boolean43 = pcxImageParser36.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = pcxImageParser36.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata45 = pcxImageParser32.getMetadata(byteSource35, pcxImagingParameters44);
        byte[] byteArray46 = pcxImageParser18.getIccProfileBytes(byteSource31, pcxImagingParameters44);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance48 = pcxImageParser18.getFormatCompliance(byteSource47);
        java.nio.ByteOrder byteOrder49 = pcxImageParser18.getByteOrder();
        java.nio.ByteOrder byteOrder50 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser52 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder53 = pcxImageParser52.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance55 = pcxImageParser52.getFormatCompliance(byteSource54);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters56 = pcxImageParser52.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser58 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata60 = pcxImageParser58.getMetadata(byteSource59);
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser62 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder63 = pcxImageParser62.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource64 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance65 = pcxImageParser62.getFormatCompliance(byteSource64);
        org.apache.commons.imaging.bytesource.ByteSource byteSource66 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata67 = pcxImageParser62.getMetadata(byteSource66);
        boolean boolean69 = pcxImageParser62.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters70 = pcxImageParser62.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata71 = pcxImageParser58.getMetadata(byteSource61, pcxImagingParameters70);
        byte[] byteArray72 = pcxImageParser52.getIccProfileBytes(byteSource57, pcxImagingParameters70);
        java.lang.String str73 = pcxImageParser52.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters74 = pcxImageParser52.getDefaultParameters();
        byte[] byteArray75 = pcxImageParser18.getIccProfileBytes(byteSource51, pcxImagingParameters74);
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage16, outputStream17, pcxImagingParameters74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(byteArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Pcx-Custom" + "'", str22, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Pcx-Custom" + "'", str23, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder26);
        org.junit.Assert.assertNull(formatCompliance28);
        org.junit.Assert.assertNotNull(pcxImagingParameters29);
        org.junit.Assert.assertNull(imageMetadata30);
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNull(formatCompliance39);
        org.junit.Assert.assertNull(imageMetadata41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters44);
        org.junit.Assert.assertNull(imageMetadata45);
        org.junit.Assert.assertNull(byteArray46);
        org.junit.Assert.assertNull(formatCompliance48);
        org.junit.Assert.assertNotNull(byteOrder49);
        org.junit.Assert.assertNotNull(byteOrder50);
        org.junit.Assert.assertNotNull(byteOrder53);
        org.junit.Assert.assertNull(formatCompliance55);
        org.junit.Assert.assertNotNull(pcxImagingParameters56);
        org.junit.Assert.assertNull(imageMetadata60);
        org.junit.Assert.assertNotNull(byteOrder63);
        org.junit.Assert.assertNull(formatCompliance65);
        org.junit.Assert.assertNull(imageMetadata67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters70);
        org.junit.Assert.assertNull(imageMetadata71);
        org.junit.Assert.assertNull(byteArray72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "Pcx-Custom" + "'", str73, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters74);
        org.junit.Assert.assertNull(byteArray75);
    }

    @Test
    public void test1118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1118");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser0.getDefaultParameters();
        java.lang.String str29 = pcxImageParser0.getName();
        boolean boolean31 = pcxImageParser0.canAcceptExtension("");
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test1119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1119");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser0.getDefaultParameters();
        java.lang.String str29 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat30 = null;
        boolean boolean31 = pcxImageParser0.canAcceptType(imageFormat30);
        java.io.File file32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser33.getMetadata(byteSource34);
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser33.getMetadata(byteSource36);
        java.lang.String str38 = pcxImageParser33.getDefaultExtension();
        java.lang.String str39 = pcxImageParser33.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser33.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = pcxImageParser33.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo42 = pcxImageParser0.getImageInfo(file32, pcxImagingParameters41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "pcx" + "'", str38, "pcx");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "pcx" + "'", str39, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNotNull(pcxImagingParameters41);
    }

    @Test
    public void test1120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1120");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        java.nio.ByteOrder byteOrder32 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder35 = pcxImageParser34.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance37 = pcxImageParser34.getFormatCompliance(byteSource36);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser34.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser40.getMetadata(byteSource41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder45 = pcxImageParser44.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance47 = pcxImageParser44.getFormatCompliance(byteSource46);
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser44.getMetadata(byteSource48);
        boolean boolean51 = pcxImageParser44.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser44.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser40.getMetadata(byteSource43, pcxImagingParameters52);
        byte[] byteArray54 = pcxImageParser34.getIccProfileBytes(byteSource39, pcxImagingParameters52);
        java.lang.String str55 = pcxImageParser34.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters56 = pcxImageParser34.getDefaultParameters();
        byte[] byteArray57 = pcxImageParser0.getIccProfileBytes(byteSource33, pcxImagingParameters56);
        org.apache.commons.imaging.ImageFormat imageFormat58 = null;
        boolean boolean59 = pcxImageParser0.canAcceptType(imageFormat58);
        java.io.File file60 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser61 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str62 = pcxImageParser61.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance64 = pcxImageParser61.getFormatCompliance(byteSource63);
        java.lang.String str65 = pcxImageParser61.getName();
        java.lang.String str66 = pcxImageParser61.getName();
        org.apache.commons.imaging.ImageFormat imageFormat67 = null;
        boolean boolean68 = pcxImageParser61.canAcceptType(imageFormat67);
        boolean boolean70 = pcxImageParser61.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource71 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser72 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource73 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters74 = null;
        byte[] byteArray75 = pcxImageParser72.getIccProfileBytes(byteSource73, pcxImagingParameters74);
        java.lang.String str76 = pcxImageParser72.getName();
        java.lang.String str77 = pcxImageParser72.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource78 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser79 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder80 = pcxImageParser79.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource81 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance82 = pcxImageParser79.getFormatCompliance(byteSource81);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters83 = pcxImageParser79.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata84 = pcxImageParser72.getMetadata(byteSource78, pcxImagingParameters83);
        org.apache.commons.imaging.bytesource.ByteSource byteSource85 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser86 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource87 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters88 = null;
        byte[] byteArray89 = pcxImageParser86.getIccProfileBytes(byteSource87, pcxImagingParameters88);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters90 = pcxImageParser86.getDefaultParameters();
        byte[] byteArray91 = pcxImageParser72.getIccProfileBytes(byteSource85, pcxImagingParameters90);
        byte[] byteArray92 = pcxImageParser61.getIccProfileBytes(byteSource71, pcxImagingParameters90);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension93 = pcxImageParser0.getImageSize(file60, pcxImagingParameters90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNull(formatCompliance37);
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertNotNull(byteOrder45);
        org.junit.Assert.assertNull(formatCompliance47);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertNull(byteArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Pcx-Custom" + "'", str55, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters56);
        org.junit.Assert.assertNull(byteArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Pcx-Custom" + "'", str62, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Pcx-Custom" + "'", str65, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Pcx-Custom" + "'", str66, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(byteArray75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "Pcx-Custom" + "'", str76, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "Pcx-Custom" + "'", str77, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder80);
        org.junit.Assert.assertNull(formatCompliance82);
        org.junit.Assert.assertNotNull(pcxImagingParameters83);
        org.junit.Assert.assertNull(imageMetadata84);
        org.junit.Assert.assertNull(byteArray89);
        org.junit.Assert.assertNotNull(pcxImagingParameters90);
        org.junit.Assert.assertNull(byteArray91);
        org.junit.Assert.assertNull(byteArray92);
    }

    @Test
    public void test1121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1121");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance14 = pcxImageParser0.getFormatCompliance(byteSource13);
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = null;
        byte[] byteArray19 = pcxImageParser16.getIccProfileBytes(byteSource17, pcxImagingParameters18);
        java.nio.ByteOrder byteOrder20 = pcxImageParser16.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser22 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder23 = pcxImageParser22.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance25 = pcxImageParser22.getFormatCompliance(byteSource24);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser22.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat27 = null;
        boolean boolean28 = pcxImageParser22.canAcceptType(imageFormat27);
        java.lang.String str29 = pcxImageParser22.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser22.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser16.getMetadata(byteSource21, pcxImagingParameters30);
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder34 = pcxImageParser33.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance36 = pcxImageParser33.getFormatCompliance(byteSource35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser33.getMetadata(byteSource37);
        boolean boolean40 = pcxImageParser33.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = pcxImageParser33.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser16.getMetadata(byteSource32, pcxImagingParameters41);
        byte[] byteArray43 = pcxImageParser0.getIccProfileBytes(byteSource15, pcxImagingParameters41);
        java.lang.String str44 = pcxImageParser0.getDefaultExtension();
        java.io.File file45 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray46 = pcxImageParser0.getIccProfileBytes(file45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(formatCompliance14);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertNull(formatCompliance25);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "pcx" + "'", str29, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertNotNull(byteOrder34);
        org.junit.Assert.assertNull(formatCompliance36);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters41);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertNull(byteArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "pcx" + "'", str44, "pcx");
    }

    @Test
    public void test1122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1122");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.nio.ByteOrder byteOrder29 = pcxImageParser0.getByteOrder();
        java.lang.String str30 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser0.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser34.getMetadata(byteSource35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser38 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder39 = pcxImageParser38.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance41 = pcxImageParser38.getFormatCompliance(byteSource40);
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata43 = pcxImageParser38.getMetadata(byteSource42);
        boolean boolean45 = pcxImageParser38.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser38.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser34.getMetadata(byteSource37, pcxImagingParameters46);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser0.getMetadata(byteSource33, pcxImagingParameters46);
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str50 = pcxImageParser0.dumpImageFile(byteSource49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "pcx" + "'", str30, "pcx");
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertNotNull(byteOrder39);
        org.junit.Assert.assertNull(formatCompliance41);
        org.junit.Assert.assertNull(imageMetadata43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
        org.junit.Assert.assertNull(imageMetadata47);
        org.junit.Assert.assertNull(imageMetadata48);
    }

    @Test
    public void test1123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1123");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.ImageFormat imageFormat1 = null;
        boolean boolean2 = pcxImageParser0.canAcceptType(imageFormat1);
        java.io.File file3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str5 = pcxImageParser4.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        boolean boolean9 = pcxImageParser4.canAcceptExtension("");
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser4.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser13.getMetadata(byteSource14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder18 = pcxImageParser17.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance20 = pcxImageParser17.getFormatCompliance(byteSource19);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser17.getMetadata(byteSource21);
        boolean boolean24 = pcxImageParser17.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser17.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata26 = pcxImageParser13.getMetadata(byteSource16, pcxImagingParameters25);
        byte[] byteArray27 = pcxImageParser4.getIccProfileBytes(byteSource12, pcxImagingParameters25);
        java.nio.ByteOrder byteOrder28 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = null;
        byte[] byteArray33 = pcxImageParser30.getIccProfileBytes(byteSource31, pcxImagingParameters32);
        java.lang.String str34 = pcxImageParser30.getName();
        java.lang.String str35 = pcxImageParser30.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser37 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder38 = pcxImageParser37.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance40 = pcxImageParser37.getFormatCompliance(byteSource39);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = pcxImageParser37.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser30.getMetadata(byteSource36, pcxImagingParameters41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser44.getMetadata(byteSource45);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser48 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder49 = pcxImageParser48.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance51 = pcxImageParser48.getFormatCompliance(byteSource50);
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser48.getMetadata(byteSource52);
        boolean boolean55 = pcxImageParser48.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters56 = pcxImageParser48.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata57 = pcxImageParser44.getMetadata(byteSource47, pcxImagingParameters56);
        byte[] byteArray58 = pcxImageParser30.getIccProfileBytes(byteSource43, pcxImagingParameters56);
        org.apache.commons.imaging.ImageFormat imageFormat59 = null;
        boolean boolean60 = pcxImageParser30.canAcceptType(imageFormat59);
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser62 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder63 = pcxImageParser62.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource64 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance65 = pcxImageParser62.getFormatCompliance(byteSource64);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters66 = pcxImageParser62.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat67 = null;
        boolean boolean68 = pcxImageParser62.canAcceptType(imageFormat67);
        java.lang.String str69 = pcxImageParser62.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters70 = pcxImageParser62.getDefaultParameters();
        byte[] byteArray71 = pcxImageParser30.getIccProfileBytes(byteSource61, pcxImagingParameters70);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata72 = pcxImageParser4.getMetadata(byteSource29, pcxImagingParameters70);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo73 = pcxImageParser0.getImageInfo(file3, pcxImagingParameters70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNull(formatCompliance20);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
        org.junit.Assert.assertNull(imageMetadata26);
        org.junit.Assert.assertNull(byteArray27);
        org.junit.Assert.assertNotNull(byteOrder28);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Pcx-Custom" + "'", str34, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Pcx-Custom" + "'", str35, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder38);
        org.junit.Assert.assertNull(formatCompliance40);
        org.junit.Assert.assertNotNull(pcxImagingParameters41);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertNull(imageMetadata46);
        org.junit.Assert.assertNotNull(byteOrder49);
        org.junit.Assert.assertNull(formatCompliance51);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters56);
        org.junit.Assert.assertNull(imageMetadata57);
        org.junit.Assert.assertNull(byteArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(byteOrder63);
        org.junit.Assert.assertNull(formatCompliance65);
        org.junit.Assert.assertNotNull(pcxImagingParameters66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "pcx" + "'", str69, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters70);
        org.junit.Assert.assertNull(byteArray71);
        org.junit.Assert.assertNull(imageMetadata72);
    }

    @Test
    public void test1124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1124");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance15 = pcxImageParser0.getFormatCompliance(byteSource14);
        java.awt.image.BufferedImage bufferedImage16 = null;
        java.io.OutputStream outputStream17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser18.getDefaultParameters();
        java.lang.String str23 = pcxImageParser18.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser18.getMetadata(byteSource24);
        boolean boolean27 = pcxImageParser18.canAcceptExtension("");
        org.apache.commons.imaging.ImageFormat imageFormat28 = null;
        boolean boolean29 = pcxImageParser18.canAcceptType(imageFormat28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = null;
        byte[] byteArray34 = pcxImageParser31.getIccProfileBytes(byteSource32, pcxImagingParameters33);
        java.lang.String str35 = pcxImageParser31.getName();
        java.lang.String str36 = pcxImageParser31.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser38 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder39 = pcxImageParser38.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance41 = pcxImageParser38.getFormatCompliance(byteSource40);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser38.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata43 = pcxImageParser31.getMetadata(byteSource37, pcxImagingParameters42);
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser45 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser45.getMetadata(byteSource46);
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser49 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder50 = pcxImageParser49.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance52 = pcxImageParser49.getFormatCompliance(byteSource51);
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata54 = pcxImageParser49.getMetadata(byteSource53);
        boolean boolean56 = pcxImageParser49.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters57 = pcxImageParser49.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata58 = pcxImageParser45.getMetadata(byteSource48, pcxImagingParameters57);
        byte[] byteArray59 = pcxImageParser31.getIccProfileBytes(byteSource44, pcxImagingParameters57);
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance61 = pcxImageParser31.getFormatCompliance(byteSource60);
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser63 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource64 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters65 = null;
        byte[] byteArray66 = pcxImageParser63.getIccProfileBytes(byteSource64, pcxImagingParameters65);
        java.nio.ByteOrder byteOrder67 = pcxImageParser63.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource68 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser69 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder70 = pcxImageParser69.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource71 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance72 = pcxImageParser69.getFormatCompliance(byteSource71);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters73 = pcxImageParser69.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat74 = null;
        boolean boolean75 = pcxImageParser69.canAcceptType(imageFormat74);
        java.lang.String str76 = pcxImageParser69.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters77 = pcxImageParser69.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata78 = pcxImageParser63.getMetadata(byteSource68, pcxImagingParameters77);
        byte[] byteArray79 = pcxImageParser31.getIccProfileBytes(byteSource62, pcxImagingParameters77);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata80 = pcxImageParser18.getMetadata(byteSource30, pcxImagingParameters77);
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage16, outputStream17, pcxImagingParameters77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertNull(formatCompliance15);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "pcx" + "'", str23, "pcx");
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(byteArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Pcx-Custom" + "'", str35, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Pcx-Custom" + "'", str36, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder39);
        org.junit.Assert.assertNull(formatCompliance41);
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertNull(imageMetadata43);
        org.junit.Assert.assertNull(imageMetadata47);
        org.junit.Assert.assertNotNull(byteOrder50);
        org.junit.Assert.assertNull(formatCompliance52);
        org.junit.Assert.assertNull(imageMetadata54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters57);
        org.junit.Assert.assertNull(imageMetadata58);
        org.junit.Assert.assertNull(byteArray59);
        org.junit.Assert.assertNull(formatCompliance61);
        org.junit.Assert.assertNull(byteArray66);
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNull(formatCompliance72);
        org.junit.Assert.assertNotNull(pcxImagingParameters73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "pcx" + "'", str76, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters77);
        org.junit.Assert.assertNull(imageMetadata78);
        org.junit.Assert.assertNull(byteArray79);
        org.junit.Assert.assertNull(imageMetadata80);
    }

    @Test
    public void test1125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1125");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.io.File file5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder7 = pcxImageParser6.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance9 = pcxImageParser6.getFormatCompliance(byteSource8);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser6.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension12 = pcxImageParser0.getImageSize(file5, pcxImagingParameters11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNull(formatCompliance9);
        org.junit.Assert.assertNotNull(pcxImagingParameters10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
    }

    @Test
    public void test1126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1126");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = null;
        byte[] byteArray19 = pcxImageParser16.getIccProfileBytes(byteSource17, pcxImagingParameters18);
        java.lang.String str20 = pcxImageParser16.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser10.getMetadata(byteSource15, pcxImagingParameters21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser0.getMetadata(byteSource9, pcxImagingParameters23);
        java.lang.String str25 = pcxImageParser0.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList28 = pcxImageParser0.getAllBufferedImages(byteSource27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "pcx" + "'", str20, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
    }

    @Test
    public void test1127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1127");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = null;
        byte[] byteArray6 = pcxImageParser0.getIccProfileBytes(byteSource4, pcxImagingParameters5);
        java.io.File file7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser8.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.lang.String str29 = pcxImageParser8.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser8.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension31 = pcxImageParser0.getImageSize(file7, pcxImagingParameters30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNull(byteArray6);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
    }

    @Test
    public void test1128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1128");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters6 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = null;
        byte[] byteArray11 = pcxImageParser8.getIccProfileBytes(byteSource9, pcxImagingParameters10);
        java.lang.String str12 = pcxImageParser8.getName();
        java.lang.String str13 = pcxImageParser8.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder16 = pcxImageParser15.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser15.getFormatCompliance(byteSource17);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser15.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata20 = pcxImageParser8.getMetadata(byteSource14, pcxImagingParameters19);
        java.lang.String str21 = pcxImageParser8.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser8.getMetadata(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = null;
        byte[] byteArray28 = pcxImageParser25.getIccProfileBytes(byteSource26, pcxImagingParameters27);
        java.lang.String str29 = pcxImageParser25.getName();
        java.lang.String str30 = pcxImageParser25.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser25.getMetadata(byteSource31, pcxImagingParameters36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = null;
        byte[] byteArray42 = pcxImageParser39.getIccProfileBytes(byteSource40, pcxImagingParameters41);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser39.getDefaultParameters();
        byte[] byteArray44 = pcxImageParser25.getIccProfileBytes(byteSource38, pcxImagingParameters43);
        byte[] byteArray45 = pcxImageParser8.getIccProfileBytes(byteSource24, pcxImagingParameters43);
        byte[] byteArray46 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters43);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser0.getMetadata(byteSource47);
        java.io.File file49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser50 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str51 = pcxImageParser50.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance53 = pcxImageParser50.getFormatCompliance(byteSource52);
        java.lang.String str54 = pcxImageParser50.getName();
        java.lang.String str55 = pcxImageParser50.getName();
        org.apache.commons.imaging.ImageFormat imageFormat56 = null;
        boolean boolean57 = pcxImageParser50.canAcceptType(imageFormat56);
        boolean boolean59 = pcxImageParser50.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser61 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters63 = null;
        byte[] byteArray64 = pcxImageParser61.getIccProfileBytes(byteSource62, pcxImagingParameters63);
        java.lang.String str65 = pcxImageParser61.getName();
        java.lang.String str66 = pcxImageParser61.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource67 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser68 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder69 = pcxImageParser68.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource70 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance71 = pcxImageParser68.getFormatCompliance(byteSource70);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters72 = pcxImageParser68.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata73 = pcxImageParser61.getMetadata(byteSource67, pcxImagingParameters72);
        org.apache.commons.imaging.bytesource.ByteSource byteSource74 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser75 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource76 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters77 = null;
        byte[] byteArray78 = pcxImageParser75.getIccProfileBytes(byteSource76, pcxImagingParameters77);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters79 = pcxImageParser75.getDefaultParameters();
        byte[] byteArray80 = pcxImageParser61.getIccProfileBytes(byteSource74, pcxImagingParameters79);
        byte[] byteArray81 = pcxImageParser50.getIccProfileBytes(byteSource60, pcxImagingParameters79);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo82 = pcxImageParser0.getImageInfo(file49, pcxImagingParameters79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNotNull(pcxImagingParameters6);
        org.junit.Assert.assertNull(byteArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Pcx-Custom" + "'", str12, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNull(formatCompliance18);
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
        org.junit.Assert.assertNull(imageMetadata20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Pcx-Custom" + "'", str30, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertNull(byteArray42);
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertNull(byteArray44);
        org.junit.Assert.assertNull(byteArray45);
        org.junit.Assert.assertNull(byteArray46);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Pcx-Custom" + "'", str51, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Pcx-Custom" + "'", str54, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Pcx-Custom" + "'", str55, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(byteArray64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Pcx-Custom" + "'", str65, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Pcx-Custom" + "'", str66, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder69);
        org.junit.Assert.assertNull(formatCompliance71);
        org.junit.Assert.assertNotNull(pcxImagingParameters72);
        org.junit.Assert.assertNull(imageMetadata73);
        org.junit.Assert.assertNull(byteArray78);
        org.junit.Assert.assertNotNull(pcxImagingParameters79);
        org.junit.Assert.assertNull(byteArray80);
        org.junit.Assert.assertNull(byteArray81);
    }

    @Test
    public void test1129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1129");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser0.canAcceptType(imageFormat23);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser0.getMetadata(byteSource28);
        java.io.File file30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder32 = pcxImageParser31.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance34 = pcxImageParser31.getFormatCompliance(byteSource33);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser31.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser37 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata39 = pcxImageParser37.getMetadata(byteSource38);
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser41 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder42 = pcxImageParser41.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance44 = pcxImageParser41.getFormatCompliance(byteSource43);
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser41.getMetadata(byteSource45);
        boolean boolean48 = pcxImageParser41.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters49 = pcxImageParser41.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata50 = pcxImageParser37.getMetadata(byteSource40, pcxImagingParameters49);
        byte[] byteArray51 = pcxImageParser31.getIccProfileBytes(byteSource36, pcxImagingParameters49);
        java.lang.String str52 = pcxImageParser31.getName();
        java.lang.String str53 = pcxImageParser31.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser55 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder56 = pcxImageParser55.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance58 = pcxImageParser55.getFormatCompliance(byteSource57);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters59 = pcxImageParser55.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat60 = null;
        boolean boolean61 = pcxImageParser55.canAcceptType(imageFormat60);
        java.lang.String str62 = pcxImageParser55.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters63 = pcxImageParser55.getDefaultParameters();
        byte[] byteArray64 = pcxImageParser31.getIccProfileBytes(byteSource54, pcxImagingParameters63);
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance66 = pcxImageParser31.getFormatCompliance(byteSource65);
        org.apache.commons.imaging.bytesource.ByteSource byteSource67 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata68 = pcxImageParser31.getMetadata(byteSource67);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters69 = pcxImageParser31.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension70 = pcxImageParser0.getImageSize(file30, pcxImagingParameters69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertNull(formatCompliance34);
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(imageMetadata39);
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNull(formatCompliance44);
        org.junit.Assert.assertNull(imageMetadata46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters49);
        org.junit.Assert.assertNull(imageMetadata50);
        org.junit.Assert.assertNull(byteArray51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Pcx-Custom" + "'", str52, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "pcx" + "'", str53, "pcx");
        org.junit.Assert.assertNotNull(byteOrder56);
        org.junit.Assert.assertNull(formatCompliance58);
        org.junit.Assert.assertNotNull(pcxImagingParameters59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "pcx" + "'", str62, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters63);
        org.junit.Assert.assertNull(byteArray64);
        org.junit.Assert.assertNull(formatCompliance66);
        org.junit.Assert.assertNull(imageMetadata68);
        org.junit.Assert.assertNotNull(pcxImagingParameters69);
    }

    @Test
    public void test1130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1130");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList32 = pcxImageParser0.getAllBufferedImages(byteSource31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test1131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1131");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = null;
        byte[] byteArray33 = pcxImageParser30.getIccProfileBytes(byteSource31, pcxImagingParameters32);
        java.lang.String str34 = pcxImageParser30.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser30.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser0.getMetadata(byteSource29, pcxImagingParameters35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser0.getMetadata(byteSource37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser40.getMetadata(byteSource41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser40.getMetadata(byteSource43);
        java.lang.String str45 = pcxImageParser40.getDefaultExtension();
        java.lang.String str46 = pcxImageParser40.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = pcxImageParser40.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser0.getMetadata(byteSource39, pcxImagingParameters47);
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance50 = pcxImageParser0.getFormatCompliance(byteSource49);
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo52 = pcxImageParser0.getImageInfo(byteSource51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "pcx" + "'", str34, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "pcx" + "'", str45, "pcx");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "pcx" + "'", str46, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters47);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNull(formatCompliance50);
    }

    @Test
    public void test1132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1132");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata4 = pcxImageParser0.getMetadata(byteSource3);
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        java.lang.String str6 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = pcxImageParser0.getDefaultParameters();
        java.io.File file8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser0.getMetadata(file8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "pcx" + "'", str6, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters7);
    }

    @Test
    public void test1133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1133");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser0.canAcceptType(imageFormat23);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser0.getDefaultParameters();
        java.io.File file26 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(file26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
    }

    @Test
    public void test1134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1134");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = null;
        byte[] byteArray17 = pcxImageParser14.getIccProfileBytes(byteSource15, pcxImagingParameters16);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser14.getDefaultParameters();
        byte[] byteArray19 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters18);
        java.io.File file20 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata21 = pcxImageParser0.getMetadata(file20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(byteArray17);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(byteArray19);
    }

    @Test
    public void test1135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1135");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        boolean boolean30 = pcxImageParser0.canAcceptExtension("pcx");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser0.getDefaultParameters();
        java.io.PrintWriter printWriter32 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean34 = pcxImageParser0.dumpImageFile(printWriter32, byteSource33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
    }

    @Test
    public void test1136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1136");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.lang.String str4 = pcxImageParser0.getName();
        boolean boolean6 = pcxImageParser0.canAcceptExtension("hi!");
        java.lang.String str7 = pcxImageParser0.getName();
        java.lang.String str8 = pcxImageParser0.getDefaultExtension();
        java.io.File file9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension10 = pcxImageParser0.getImageSize(file9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Pcx-Custom" + "'", str7, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "pcx" + "'", str8, "pcx");
    }

    @Test
    public void test1137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1137");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        java.nio.ByteOrder byteOrder2 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat3 = null;
        boolean boolean4 = pcxImageParser0.canAcceptType(imageFormat3);
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str9 = pcxImageParser8.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        java.lang.String str12 = pcxImageParser8.getName();
        java.lang.String str13 = pcxImageParser8.getName();
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser8.canAcceptType(imageFormat14);
        boolean boolean17 = pcxImageParser8.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = null;
        byte[] byteArray22 = pcxImageParser19.getIccProfileBytes(byteSource20, pcxImagingParameters21);
        java.lang.String str23 = pcxImageParser19.getName();
        java.lang.String str24 = pcxImageParser19.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder27 = pcxImageParser26.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance29 = pcxImageParser26.getFormatCompliance(byteSource28);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser26.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser19.getMetadata(byteSource25, pcxImagingParameters30);
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = null;
        byte[] byteArray36 = pcxImageParser33.getIccProfileBytes(byteSource34, pcxImagingParameters35);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = pcxImageParser33.getDefaultParameters();
        byte[] byteArray38 = pcxImageParser19.getIccProfileBytes(byteSource32, pcxImagingParameters37);
        byte[] byteArray39 = pcxImageParser8.getIccProfileBytes(byteSource18, pcxImagingParameters37);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser0.getMetadata(byteSource7, pcxImagingParameters37);
        java.io.PrintWriter printWriter41 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean43 = pcxImageParser0.dumpImageFile(printWriter41, byteSource42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Pcx-Custom" + "'", str9, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Pcx-Custom" + "'", str12, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(byteArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Pcx-Custom" + "'", str23, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Pcx-Custom" + "'", str24, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNull(formatCompliance29);
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertNotNull(pcxImagingParameters37);
        org.junit.Assert.assertNull(byteArray38);
        org.junit.Assert.assertNull(byteArray39);
        org.junit.Assert.assertNull(imageMetadata40);
    }

    @Test
    public void test1138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1138");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        java.lang.String str8 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata10 = pcxImageParser0.getMetadata(byteSource9);
        java.io.File file11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser12 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder13 = pcxImageParser12.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance15 = pcxImageParser12.getFormatCompliance(byteSource14);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = pcxImageParser12.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata20 = pcxImageParser18.getMetadata(byteSource19);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser22 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder23 = pcxImageParser22.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance25 = pcxImageParser22.getFormatCompliance(byteSource24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser22.getMetadata(byteSource26);
        boolean boolean29 = pcxImageParser22.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser22.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser18.getMetadata(byteSource21, pcxImagingParameters30);
        byte[] byteArray32 = pcxImageParser12.getIccProfileBytes(byteSource17, pcxImagingParameters30);
        java.lang.String str33 = pcxImageParser12.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser12.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray35 = pcxImageParser0.getIccProfileBytes(file11, pcxImagingParameters34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "pcx" + "'", str8, "pcx");
        org.junit.Assert.assertNull(imageMetadata10);
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNull(formatCompliance15);
        org.junit.Assert.assertNotNull(pcxImagingParameters16);
        org.junit.Assert.assertNull(imageMetadata20);
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertNull(formatCompliance25);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertNull(byteArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Pcx-Custom" + "'", str33, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
    }

    @Test
    public void test1139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1139");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        boolean boolean30 = pcxImageParser0.canAcceptExtension("pcx");
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance34 = pcxImageParser0.getFormatCompliance(byteSource33);
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
        org.junit.Assert.assertNull(formatCompliance34);
    }

    @Test
    public void test1140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1140");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = null;
        byte[] byteArray17 = pcxImageParser14.getIccProfileBytes(byteSource15, pcxImagingParameters16);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser14.getDefaultParameters();
        byte[] byteArray19 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters18);
        boolean boolean21 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser23 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder24 = pcxImageParser23.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance26 = pcxImageParser23.getFormatCompliance(byteSource25);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = pcxImageParser23.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser29.getMetadata(byteSource30);
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder34 = pcxImageParser33.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance36 = pcxImageParser33.getFormatCompliance(byteSource35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser33.getMetadata(byteSource37);
        boolean boolean40 = pcxImageParser33.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = pcxImageParser33.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser29.getMetadata(byteSource32, pcxImagingParameters41);
        byte[] byteArray43 = pcxImageParser23.getIccProfileBytes(byteSource28, pcxImagingParameters41);
        java.lang.String str44 = pcxImageParser23.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser23.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat46 = null;
        boolean boolean47 = pcxImageParser23.canAcceptType(imageFormat46);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = pcxImageParser23.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser0.getMetadata(byteSource22, pcxImagingParameters48);
        boolean boolean51 = pcxImageParser0.canAcceptExtension("pcx");
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(byteArray17);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(byteOrder24);
        org.junit.Assert.assertNull(formatCompliance26);
        org.junit.Assert.assertNotNull(pcxImagingParameters27);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertNotNull(byteOrder34);
        org.junit.Assert.assertNull(formatCompliance36);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters41);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertNull(byteArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Pcx-Custom" + "'", str44, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters48);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test1141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1141");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = null;
        byte[] byteArray20 = pcxImageParser17.getIccProfileBytes(byteSource18, pcxImagingParameters19);
        java.lang.String str21 = pcxImageParser17.getName();
        java.lang.String str22 = pcxImageParser17.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser17.getMetadata(byteSource23, pcxImagingParameters28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = null;
        byte[] byteArray34 = pcxImageParser31.getIccProfileBytes(byteSource32, pcxImagingParameters33);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser31.getDefaultParameters();
        byte[] byteArray36 = pcxImageParser17.getIccProfileBytes(byteSource30, pcxImagingParameters35);
        byte[] byteArray37 = pcxImageParser0.getIccProfileBytes(byteSource16, pcxImagingParameters35);
        java.io.File file38 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray39 = pcxImageParser0.getIccProfileBytes(file38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Pcx-Custom" + "'", str22, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertNull(byteArray34);
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertNull(byteArray37);
    }

    @Test
    public void test1142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1142");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata4 = pcxImageParser0.getMetadata(byteSource3);
        java.nio.ByteOrder byteOrder5 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser13.getMetadata(byteSource14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder18 = pcxImageParser17.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance20 = pcxImageParser17.getFormatCompliance(byteSource19);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser17.getMetadata(byteSource21);
        boolean boolean24 = pcxImageParser17.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser17.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata26 = pcxImageParser13.getMetadata(byteSource16, pcxImagingParameters25);
        byte[] byteArray27 = pcxImageParser7.getIccProfileBytes(byteSource12, pcxImagingParameters25);
        java.lang.String str28 = pcxImageParser7.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = null;
        byte[] byteArray33 = pcxImageParser30.getIccProfileBytes(byteSource31, pcxImagingParameters32);
        java.lang.String str34 = pcxImageParser30.getName();
        java.lang.String str35 = pcxImageParser30.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser37 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder38 = pcxImageParser37.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance40 = pcxImageParser37.getFormatCompliance(byteSource39);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = pcxImageParser37.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser30.getMetadata(byteSource36, pcxImagingParameters41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser44.getMetadata(byteSource45);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser48 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder49 = pcxImageParser48.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance51 = pcxImageParser48.getFormatCompliance(byteSource50);
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser48.getMetadata(byteSource52);
        boolean boolean55 = pcxImageParser48.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters56 = pcxImageParser48.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata57 = pcxImageParser44.getMetadata(byteSource47, pcxImagingParameters56);
        byte[] byteArray58 = pcxImageParser30.getIccProfileBytes(byteSource43, pcxImagingParameters56);
        boolean boolean60 = pcxImageParser30.canAcceptExtension("pcx");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters61 = pcxImageParser30.getDefaultParameters();
        byte[] byteArray62 = pcxImageParser7.getIccProfileBytes(byteSource29, pcxImagingParameters61);
        byte[] byteArray63 = pcxImageParser0.getIccProfileBytes(byteSource6, pcxImagingParameters61);
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata4);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNull(formatCompliance20);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
        org.junit.Assert.assertNull(imageMetadata26);
        org.junit.Assert.assertNull(byteArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Pcx-Custom" + "'", str28, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Pcx-Custom" + "'", str34, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Pcx-Custom" + "'", str35, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder38);
        org.junit.Assert.assertNull(formatCompliance40);
        org.junit.Assert.assertNotNull(pcxImagingParameters41);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertNull(imageMetadata46);
        org.junit.Assert.assertNotNull(byteOrder49);
        org.junit.Assert.assertNull(formatCompliance51);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters56);
        org.junit.Assert.assertNull(imageMetadata57);
        org.junit.Assert.assertNull(byteArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters61);
        org.junit.Assert.assertNull(byteArray62);
        org.junit.Assert.assertNull(byteArray63);
    }

    @Test
    public void test1143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1143");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = null;
        byte[] byteArray33 = pcxImageParser30.getIccProfileBytes(byteSource31, pcxImagingParameters32);
        java.lang.String str34 = pcxImageParser30.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser30.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser0.getMetadata(byteSource29, pcxImagingParameters35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser0.getMetadata(byteSource37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser40.getMetadata(byteSource41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser40.getMetadata(byteSource43);
        java.lang.String str45 = pcxImageParser40.getDefaultExtension();
        java.lang.String str46 = pcxImageParser40.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = pcxImageParser40.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser0.getMetadata(byteSource39, pcxImagingParameters47);
        java.io.File file49 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList50 = pcxImageParser0.getAllBufferedImages(file49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "pcx" + "'", str34, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "pcx" + "'", str45, "pcx");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "pcx" + "'", str46, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters47);
        org.junit.Assert.assertNull(imageMetadata48);
    }

    @Test
    public void test1144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1144");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat22 = null;
        boolean boolean23 = pcxImageParser0.canAcceptType(imageFormat22);
        java.io.File file24 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance25 = pcxImageParser0.getFormatCompliance(file24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test1145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1145");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.nio.ByteOrder byteOrder4 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser0.getFormatCompliance(byteSource5);
        java.io.File file7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = pcxImageParser0.dumpImageFile(file7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNull(formatCompliance6);
    }

    @Test
    public void test1146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1146");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        java.nio.ByteOrder byteOrder2 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance4 = pcxImageParser0.getFormatCompliance(byteSource3);
        java.lang.String str5 = pcxImageParser0.getName();
        boolean boolean7 = pcxImageParser0.canAcceptExtension("");
        java.lang.String str8 = pcxImageParser0.getDefaultExtension();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertNull(formatCompliance4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "pcx" + "'", str8, "pcx");
    }

    @Test
    public void test1147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1147");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser0.canAcceptType(imageFormat23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance26 = pcxImageParser0.getFormatCompliance(byteSource25);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = pcxImageParser0.getDefaultParameters();
        java.lang.String str28 = pcxImageParser0.getDefaultExtension();
        java.io.File file29 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(file29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(formatCompliance26);
        org.junit.Assert.assertNotNull(pcxImagingParameters27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "pcx" + "'", str28, "pcx");
    }

    @Test
    public void test1148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1148");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        java.io.File file9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = pcxImageParser0.dumpImageFile(file9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(formatCompliance8);
    }

    @Test
    public void test1149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1149");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource14);
        java.lang.String str16 = pcxImageParser0.getDefaultExtension();
        java.lang.String str17 = pcxImageParser0.getName();
        java.io.File file18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = null;
        byte[] byteArray22 = pcxImageParser19.getIccProfileBytes(byteSource20, pcxImagingParameters21);
        java.lang.String str23 = pcxImageParser19.getName();
        java.lang.String str24 = pcxImageParser19.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder27 = pcxImageParser26.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance29 = pcxImageParser26.getFormatCompliance(byteSource28);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser26.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser19.getMetadata(byteSource25, pcxImagingParameters30);
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser33.getMetadata(byteSource34);
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser37 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder38 = pcxImageParser37.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance40 = pcxImageParser37.getFormatCompliance(byteSource39);
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser37.getMetadata(byteSource41);
        boolean boolean44 = pcxImageParser37.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser37.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser33.getMetadata(byteSource36, pcxImagingParameters45);
        byte[] byteArray47 = pcxImageParser19.getIccProfileBytes(byteSource32, pcxImagingParameters45);
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance49 = pcxImageParser19.getFormatCompliance(byteSource48);
        java.nio.ByteOrder byteOrder50 = pcxImageParser19.getByteOrder();
        java.nio.ByteOrder byteOrder51 = pcxImageParser19.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser53 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder54 = pcxImageParser53.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance56 = pcxImageParser53.getFormatCompliance(byteSource55);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters57 = pcxImageParser53.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser59 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata61 = pcxImageParser59.getMetadata(byteSource60);
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser63 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder64 = pcxImageParser63.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance66 = pcxImageParser63.getFormatCompliance(byteSource65);
        org.apache.commons.imaging.bytesource.ByteSource byteSource67 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata68 = pcxImageParser63.getMetadata(byteSource67);
        boolean boolean70 = pcxImageParser63.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters71 = pcxImageParser63.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata72 = pcxImageParser59.getMetadata(byteSource62, pcxImagingParameters71);
        byte[] byteArray73 = pcxImageParser53.getIccProfileBytes(byteSource58, pcxImagingParameters71);
        java.lang.String str74 = pcxImageParser53.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters75 = pcxImageParser53.getDefaultParameters();
        byte[] byteArray76 = pcxImageParser19.getIccProfileBytes(byteSource52, pcxImagingParameters75);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata77 = pcxImageParser0.getMetadata(file18, pcxImagingParameters75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "pcx" + "'", str16, "pcx");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Pcx-Custom" + "'", str17, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Pcx-Custom" + "'", str23, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Pcx-Custom" + "'", str24, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNull(formatCompliance29);
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertNotNull(byteOrder38);
        org.junit.Assert.assertNull(formatCompliance40);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertNull(imageMetadata46);
        org.junit.Assert.assertNull(byteArray47);
        org.junit.Assert.assertNull(formatCompliance49);
        org.junit.Assert.assertNotNull(byteOrder50);
        org.junit.Assert.assertNotNull(byteOrder51);
        org.junit.Assert.assertNotNull(byteOrder54);
        org.junit.Assert.assertNull(formatCompliance56);
        org.junit.Assert.assertNotNull(pcxImagingParameters57);
        org.junit.Assert.assertNull(imageMetadata61);
        org.junit.Assert.assertNotNull(byteOrder64);
        org.junit.Assert.assertNull(formatCompliance66);
        org.junit.Assert.assertNull(imageMetadata68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters71);
        org.junit.Assert.assertNull(imageMetadata72);
        org.junit.Assert.assertNull(byteArray73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Pcx-Custom" + "'", str74, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters75);
        org.junit.Assert.assertNull(byteArray76);
    }

    @Test
    public void test1150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1150");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.io.File file4 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser5 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = null;
        byte[] byteArray8 = pcxImageParser5.getIccProfileBytes(byteSource6, pcxImagingParameters7);
        java.lang.String str9 = pcxImageParser5.getName();
        java.lang.String str10 = pcxImageParser5.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser12 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder13 = pcxImageParser12.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance15 = pcxImageParser12.getFormatCompliance(byteSource14);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = pcxImageParser12.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata17 = pcxImageParser5.getMetadata(byteSource11, pcxImagingParameters16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata21 = pcxImageParser19.getMetadata(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser23 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder24 = pcxImageParser23.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance26 = pcxImageParser23.getFormatCompliance(byteSource25);
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata28 = pcxImageParser23.getMetadata(byteSource27);
        boolean boolean30 = pcxImageParser23.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser23.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser19.getMetadata(byteSource22, pcxImagingParameters31);
        byte[] byteArray33 = pcxImageParser5.getIccProfileBytes(byteSource18, pcxImagingParameters31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser5.getFormatCompliance(byteSource34);
        java.nio.ByteOrder byteOrder36 = pcxImageParser5.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser38 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = null;
        byte[] byteArray41 = pcxImageParser38.getIccProfileBytes(byteSource39, pcxImagingParameters40);
        java.lang.String str42 = pcxImageParser38.getName();
        java.lang.String str43 = pcxImageParser38.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser45 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder46 = pcxImageParser45.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance48 = pcxImageParser45.getFormatCompliance(byteSource47);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters49 = pcxImageParser45.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata50 = pcxImageParser38.getMetadata(byteSource44, pcxImagingParameters49);
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser52 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata54 = pcxImageParser52.getMetadata(byteSource53);
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser56 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder57 = pcxImageParser56.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance59 = pcxImageParser56.getFormatCompliance(byteSource58);
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata61 = pcxImageParser56.getMetadata(byteSource60);
        boolean boolean63 = pcxImageParser56.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters64 = pcxImageParser56.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata65 = pcxImageParser52.getMetadata(byteSource55, pcxImagingParameters64);
        byte[] byteArray66 = pcxImageParser38.getIccProfileBytes(byteSource51, pcxImagingParameters64);
        byte[] byteArray67 = pcxImageParser5.getIccProfileBytes(byteSource37, pcxImagingParameters64);
        java.lang.String str68 = pcxImageParser5.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser70 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource71 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters72 = null;
        byte[] byteArray73 = pcxImageParser70.getIccProfileBytes(byteSource71, pcxImagingParameters72);
        java.nio.ByteOrder byteOrder74 = pcxImageParser70.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource75 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser76 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder77 = pcxImageParser76.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource78 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance79 = pcxImageParser76.getFormatCompliance(byteSource78);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters80 = pcxImageParser76.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat81 = null;
        boolean boolean82 = pcxImageParser76.canAcceptType(imageFormat81);
        java.lang.String str83 = pcxImageParser76.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters84 = pcxImageParser76.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata85 = pcxImageParser70.getMetadata(byteSource75, pcxImagingParameters84);
        byte[] byteArray86 = pcxImageParser5.getIccProfileBytes(byteSource69, pcxImagingParameters84);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray87 = pcxImageParser0.getIccProfileBytes(file4, pcxImagingParameters84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNull(byteArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Pcx-Custom" + "'", str9, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Pcx-Custom" + "'", str10, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNull(formatCompliance15);
        org.junit.Assert.assertNotNull(pcxImagingParameters16);
        org.junit.Assert.assertNull(imageMetadata17);
        org.junit.Assert.assertNull(imageMetadata21);
        org.junit.Assert.assertNotNull(byteOrder24);
        org.junit.Assert.assertNull(formatCompliance26);
        org.junit.Assert.assertNull(imageMetadata28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNull(byteArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Pcx-Custom" + "'", str42, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Pcx-Custom" + "'", str43, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder46);
        org.junit.Assert.assertNull(formatCompliance48);
        org.junit.Assert.assertNotNull(pcxImagingParameters49);
        org.junit.Assert.assertNull(imageMetadata50);
        org.junit.Assert.assertNull(imageMetadata54);
        org.junit.Assert.assertNotNull(byteOrder57);
        org.junit.Assert.assertNull(formatCompliance59);
        org.junit.Assert.assertNull(imageMetadata61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters64);
        org.junit.Assert.assertNull(imageMetadata65);
        org.junit.Assert.assertNull(byteArray66);
        org.junit.Assert.assertNull(byteArray67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "pcx" + "'", str68, "pcx");
        org.junit.Assert.assertNull(byteArray73);
        org.junit.Assert.assertNotNull(byteOrder74);
        org.junit.Assert.assertNotNull(byteOrder77);
        org.junit.Assert.assertNull(formatCompliance79);
        org.junit.Assert.assertNotNull(pcxImagingParameters80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "pcx" + "'", str83, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters84);
        org.junit.Assert.assertNull(imageMetadata85);
        org.junit.Assert.assertNull(byteArray86);
    }

    @Test
    public void test1151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1151");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser0.canAcceptType(imageFormat23);
        java.lang.Class<?> wildcardClass25 = pcxImageParser0.getClass();
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1152");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.io.File file6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser7.getMetadata(byteSource11);
        java.nio.ByteOrder byteOrder13 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder16 = pcxImageParser15.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser15.getFormatCompliance(byteSource17);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser15.getDefaultParameters();
        java.lang.String str20 = pcxImageParser15.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser15.getMetadata(byteSource21);
        boolean boolean24 = pcxImageParser15.canAcceptExtension("");
        boolean boolean26 = pcxImageParser15.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = null;
        byte[] byteArray31 = pcxImageParser28.getIccProfileBytes(byteSource29, pcxImagingParameters30);
        java.lang.String str32 = pcxImageParser28.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser28.getMetadata(byteSource33);
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance36 = pcxImageParser28.getFormatCompliance(byteSource35);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = pcxImageParser28.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = null;
        byte[] byteArray42 = pcxImageParser39.getIccProfileBytes(byteSource40, pcxImagingParameters41);
        java.lang.String str43 = pcxImageParser39.getName();
        java.lang.String str44 = pcxImageParser39.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser46 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder47 = pcxImageParser46.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance49 = pcxImageParser46.getFormatCompliance(byteSource48);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters50 = pcxImageParser46.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata51 = pcxImageParser39.getMetadata(byteSource45, pcxImagingParameters50);
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser53 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata55 = pcxImageParser53.getMetadata(byteSource54);
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser57 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder58 = pcxImageParser57.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance60 = pcxImageParser57.getFormatCompliance(byteSource59);
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata62 = pcxImageParser57.getMetadata(byteSource61);
        boolean boolean64 = pcxImageParser57.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters65 = pcxImageParser57.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata66 = pcxImageParser53.getMetadata(byteSource56, pcxImagingParameters65);
        byte[] byteArray67 = pcxImageParser39.getIccProfileBytes(byteSource52, pcxImagingParameters65);
        org.apache.commons.imaging.bytesource.ByteSource byteSource68 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance69 = pcxImageParser39.getFormatCompliance(byteSource68);
        org.apache.commons.imaging.bytesource.ByteSource byteSource70 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser71 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource72 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters73 = null;
        byte[] byteArray74 = pcxImageParser71.getIccProfileBytes(byteSource72, pcxImagingParameters73);
        java.nio.ByteOrder byteOrder75 = pcxImageParser71.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource76 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser77 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder78 = pcxImageParser77.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource79 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance80 = pcxImageParser77.getFormatCompliance(byteSource79);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters81 = pcxImageParser77.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat82 = null;
        boolean boolean83 = pcxImageParser77.canAcceptType(imageFormat82);
        java.lang.String str84 = pcxImageParser77.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters85 = pcxImageParser77.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata86 = pcxImageParser71.getMetadata(byteSource76, pcxImagingParameters85);
        byte[] byteArray87 = pcxImageParser39.getIccProfileBytes(byteSource70, pcxImagingParameters85);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata88 = pcxImageParser28.getMetadata(byteSource38, pcxImagingParameters85);
        byte[] byteArray89 = pcxImageParser15.getIccProfileBytes(byteSource27, pcxImagingParameters85);
        byte[] byteArray90 = pcxImageParser7.getIccProfileBytes(byteSource14, pcxImagingParameters85);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray91 = pcxImageParser0.getIccProfileBytes(file6, pcxImagingParameters85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNull(formatCompliance18);
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "pcx" + "'", str20, "pcx");
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(byteArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Pcx-Custom" + "'", str32, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertNull(formatCompliance36);
        org.junit.Assert.assertNotNull(pcxImagingParameters37);
        org.junit.Assert.assertNull(byteArray42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Pcx-Custom" + "'", str43, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Pcx-Custom" + "'", str44, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNull(formatCompliance49);
        org.junit.Assert.assertNotNull(pcxImagingParameters50);
        org.junit.Assert.assertNull(imageMetadata51);
        org.junit.Assert.assertNull(imageMetadata55);
        org.junit.Assert.assertNotNull(byteOrder58);
        org.junit.Assert.assertNull(formatCompliance60);
        org.junit.Assert.assertNull(imageMetadata62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters65);
        org.junit.Assert.assertNull(imageMetadata66);
        org.junit.Assert.assertNull(byteArray67);
        org.junit.Assert.assertNull(formatCompliance69);
        org.junit.Assert.assertNull(byteArray74);
        org.junit.Assert.assertNotNull(byteOrder75);
        org.junit.Assert.assertNotNull(byteOrder78);
        org.junit.Assert.assertNull(formatCompliance80);
        org.junit.Assert.assertNotNull(pcxImagingParameters81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "pcx" + "'", str84, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters85);
        org.junit.Assert.assertNull(imageMetadata86);
        org.junit.Assert.assertNull(byteArray87);
        org.junit.Assert.assertNull(imageMetadata88);
        org.junit.Assert.assertNull(byteArray89);
        org.junit.Assert.assertNull(byteArray90);
    }

    @Test
    public void test1153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1153");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        boolean boolean9 = pcxImageParser0.canAcceptExtension("");
        boolean boolean11 = pcxImageParser0.canAcceptExtension("hi!");
        java.awt.image.BufferedImage bufferedImage12 = null;
        java.io.OutputStream outputStream13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata26 = pcxImageParser24.getMetadata(byteSource25);
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder29 = pcxImageParser28.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance31 = pcxImageParser28.getFormatCompliance(byteSource30);
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser28.getMetadata(byteSource32);
        boolean boolean35 = pcxImageParser28.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser28.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser24.getMetadata(byteSource27, pcxImagingParameters36);
        byte[] byteArray38 = pcxImageParser18.getIccProfileBytes(byteSource23, pcxImagingParameters36);
        java.lang.String str39 = pcxImageParser18.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters40);
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage12, outputStream13, pcxImagingParameters40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata26);
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertNull(formatCompliance31);
        org.junit.Assert.assertNull(imageMetadata33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertNull(byteArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Pcx-Custom" + "'", str39, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(imageMetadata41);
    }

    @Test
    public void test1154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1154");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        java.lang.String str8 = pcxImageParser0.getName();
        java.io.File file9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata10 = pcxImageParser0.getMetadata(file9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Pcx-Custom" + "'", str8, "Pcx-Custom");
    }

    @Test
    public void test1155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1155");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = null;
        byte[] byteArray9 = pcxImageParser6.getIccProfileBytes(byteSource7, pcxImagingParameters8);
        java.lang.String str10 = pcxImageParser6.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource5, pcxImagingParameters11);
        java.nio.ByteOrder byteOrder13 = pcxImageParser0.getByteOrder();
        java.lang.String str14 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo16 = pcxImageParser0.getImageInfo(byteSource15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(byteArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "pcx" + "'", str10, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "pcx" + "'", str14, "pcx");
    }

    @Test
    public void test1156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1156");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser0.canAcceptType(imageFormat23);
        java.lang.String str25 = pcxImageParser0.getDefaultExtension();
        java.io.File file26 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(file26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "pcx" + "'", str25, "pcx");
    }

    @Test
    public void test1157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1157");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser0.getMetadata(byteSource22);
        java.io.File file24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = null;
        byte[] byteArray28 = pcxImageParser25.getIccProfileBytes(byteSource26, pcxImagingParameters27);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = null;
        byte[] byteArray31 = pcxImageParser25.getIccProfileBytes(byteSource29, pcxImagingParameters30);
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = null;
        byte[] byteArray36 = pcxImageParser33.getIccProfileBytes(byteSource34, pcxImagingParameters35);
        java.lang.String str37 = pcxImageParser33.getName();
        java.lang.String str38 = pcxImageParser33.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder41 = pcxImageParser40.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance43 = pcxImageParser40.getFormatCompliance(byteSource42);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = pcxImageParser40.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata45 = pcxImageParser33.getMetadata(byteSource39, pcxImagingParameters44);
        byte[] byteArray46 = pcxImageParser25.getIccProfileBytes(byteSource32, pcxImagingParameters44);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo47 = pcxImageParser0.getImageInfo(file24, pcxImagingParameters44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(byteArray31);
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Pcx-Custom" + "'", str37, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Pcx-Custom" + "'", str38, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder41);
        org.junit.Assert.assertNull(formatCompliance43);
        org.junit.Assert.assertNotNull(pcxImagingParameters44);
        org.junit.Assert.assertNull(imageMetadata45);
        org.junit.Assert.assertNull(byteArray46);
    }

    @Test
    public void test1158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1158");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser0.getMetadata(byteSource32);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str36 = pcxImageParser0.dumpImageFile(byteSource35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNull(imageMetadata33);
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
    }

    @Test
    public void test1159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1159");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser0.getMetadata(byteSource7);
        java.nio.ByteOrder byteOrder9 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser0.getFormatCompliance(byteSource10);
        java.awt.image.BufferedImage bufferedImage12 = null;
        java.io.OutputStream outputStream13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.ImageFormat imageFormat17 = null;
        boolean boolean18 = pcxImageParser14.canAcceptType(imageFormat17);
        org.apache.commons.imaging.ImageFormat imageFormat19 = null;
        boolean boolean20 = pcxImageParser14.canAcceptType(imageFormat19);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser14.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage12, outputStream13, pcxImagingParameters21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
    }

    @Test
    public void test1160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1160");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser0.canAcceptType(imageFormat23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata26 = pcxImageParser0.getMetadata(byteSource25);
        java.io.File file27 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean28 = pcxImageParser0.canAcceptExtension(file27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(imageMetadata26);
    }

    @Test
    public void test1161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1161");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        java.nio.ByteOrder byteOrder2 = pcxImageParser0.getByteOrder();
        java.lang.String str3 = pcxImageParser0.getName();
        java.io.File file4 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray5 = pcxImageParser0.getIccProfileBytes(file4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Pcx-Custom" + "'", str3, "Pcx-Custom");
    }

    @Test
    public void test1162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1162");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.nio.ByteOrder byteOrder4 = pcxImageParser0.getByteOrder();
        java.io.File file5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension6 = pcxImageParser0.getImageSize(file5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(byteOrder4);
    }

    @Test
    public void test1163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1163");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        boolean boolean30 = pcxImageParser0.canAcceptExtension("pcx");
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat32 = null;
        boolean boolean33 = pcxImageParser0.canAcceptType(imageFormat32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser0.getMetadata(byteSource34);
        java.io.File file36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser37 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = null;
        byte[] byteArray40 = pcxImageParser37.getIccProfileBytes(byteSource38, pcxImagingParameters39);
        java.lang.String str41 = pcxImageParser37.getName();
        java.lang.String str42 = pcxImageParser37.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder45 = pcxImageParser44.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance47 = pcxImageParser44.getFormatCompliance(byteSource46);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = pcxImageParser44.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser37.getMetadata(byteSource43, pcxImagingParameters48);
        boolean boolean51 = pcxImageParser37.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance53 = pcxImageParser37.getFormatCompliance(byteSource52);
        java.lang.String str54 = pcxImageParser37.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters55 = pcxImageParser37.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray56 = pcxImageParser0.getIccProfileBytes(file36, pcxImagingParameters55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertNull(byteArray40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Pcx-Custom" + "'", str41, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Pcx-Custom" + "'", str42, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder45);
        org.junit.Assert.assertNull(formatCompliance47);
        org.junit.Assert.assertNotNull(pcxImagingParameters48);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(formatCompliance53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Pcx-Custom" + "'", str54, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters55);
    }

    @Test
    public void test1164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1164");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser0.getMetadata(byteSource21, pcxImagingParameters22);
        java.lang.String str24 = pcxImageParser0.getDefaultExtension();
        boolean boolean26 = pcxImageParser0.canAcceptExtension("");
        java.lang.String str27 = pcxImageParser0.getName();
        java.io.File file28 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean29 = pcxImageParser0.canAcceptExtension(file28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "pcx" + "'", str24, "pcx");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Pcx-Custom" + "'", str27, "Pcx-Custom");
    }

    @Test
    public void test1165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1165");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser0.getFormatCompliance(byteSource5);
        org.apache.commons.imaging.ImageFormat imageFormat7 = null;
        boolean boolean8 = pcxImageParser0.canAcceptType(imageFormat7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.ImageFormat imageFormat18 = null;
        boolean boolean19 = pcxImageParser10.canAcceptType(imageFormat18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser21.getMetadata(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder26 = pcxImageParser25.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance28 = pcxImageParser25.getFormatCompliance(byteSource27);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = pcxImageParser25.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser31.getMetadata(byteSource32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder36 = pcxImageParser35.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance38 = pcxImageParser35.getFormatCompliance(byteSource37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser35.getMetadata(byteSource39);
        boolean boolean42 = pcxImageParser35.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser35.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser31.getMetadata(byteSource34, pcxImagingParameters43);
        byte[] byteArray45 = pcxImageParser25.getIccProfileBytes(byteSource30, pcxImagingParameters43);
        java.lang.String str46 = pcxImageParser25.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = pcxImageParser25.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser21.getMetadata(byteSource24, pcxImagingParameters47);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser10.getMetadata(byteSource20, pcxImagingParameters47);
        byte[] byteArray50 = pcxImageParser0.getIccProfileBytes(byteSource9, pcxImagingParameters47);
        java.io.File file51 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser52 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str53 = pcxImageParser52.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance55 = pcxImageParser52.getFormatCompliance(byteSource54);
        boolean boolean57 = pcxImageParser52.canAcceptExtension("");
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser59 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder60 = pcxImageParser59.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser62 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder63 = pcxImageParser62.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource64 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance65 = pcxImageParser62.getFormatCompliance(byteSource64);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters66 = pcxImageParser62.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource67 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser68 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata70 = pcxImageParser68.getMetadata(byteSource69);
        org.apache.commons.imaging.bytesource.ByteSource byteSource71 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser72 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder73 = pcxImageParser72.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource74 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance75 = pcxImageParser72.getFormatCompliance(byteSource74);
        org.apache.commons.imaging.bytesource.ByteSource byteSource76 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata77 = pcxImageParser72.getMetadata(byteSource76);
        boolean boolean79 = pcxImageParser72.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters80 = pcxImageParser72.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata81 = pcxImageParser68.getMetadata(byteSource71, pcxImagingParameters80);
        byte[] byteArray82 = pcxImageParser62.getIccProfileBytes(byteSource67, pcxImagingParameters80);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata83 = pcxImageParser59.getMetadata(byteSource61, pcxImagingParameters80);
        byte[] byteArray84 = pcxImageParser52.getIccProfileBytes(byteSource58, pcxImagingParameters80);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage85 = pcxImageParser0.getBufferedImage(file51, pcxImagingParameters80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNotNull(byteOrder26);
        org.junit.Assert.assertNull(formatCompliance28);
        org.junit.Assert.assertNotNull(pcxImagingParameters29);
        org.junit.Assert.assertNull(imageMetadata33);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNull(formatCompliance38);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertNull(byteArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Pcx-Custom" + "'", str46, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters47);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertNull(byteArray50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Pcx-Custom" + "'", str53, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteOrder63);
        org.junit.Assert.assertNull(formatCompliance65);
        org.junit.Assert.assertNotNull(pcxImagingParameters66);
        org.junit.Assert.assertNull(imageMetadata70);
        org.junit.Assert.assertNotNull(byteOrder73);
        org.junit.Assert.assertNull(formatCompliance75);
        org.junit.Assert.assertNull(imageMetadata77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters80);
        org.junit.Assert.assertNull(imageMetadata81);
        org.junit.Assert.assertNull(byteArray82);
        org.junit.Assert.assertNull(imageMetadata83);
        org.junit.Assert.assertNull(byteArray84);
    }

    @Test
    public void test1166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1166");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        boolean boolean9 = pcxImageParser0.canAcceptExtension("");
        org.apache.commons.imaging.ImageFormat imageFormat10 = null;
        boolean boolean11 = pcxImageParser0.canAcceptType(imageFormat10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo13 = pcxImageParser0.getImageInfo(byteSource12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1167");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        boolean boolean5 = pcxImageParser0.canAcceptExtension("");
        java.io.File file6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension7 = pcxImageParser0.getImageSize(file6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test1168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1168");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.nio.ByteOrder byteOrder4 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser0.getFormatCompliance(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str9 = pcxImageParser8.getName();
        java.nio.ByteOrder byteOrder10 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat11 = null;
        boolean boolean12 = pcxImageParser8.canAcceptType(imageFormat11);
        org.apache.commons.imaging.ImageFormat imageFormat13 = null;
        boolean boolean14 = pcxImageParser8.canAcceptType(imageFormat13);
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str17 = pcxImageParser16.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance19 = pcxImageParser16.getFormatCompliance(byteSource18);
        java.lang.String str20 = pcxImageParser16.getName();
        java.lang.String str21 = pcxImageParser16.getName();
        org.apache.commons.imaging.ImageFormat imageFormat22 = null;
        boolean boolean23 = pcxImageParser16.canAcceptType(imageFormat22);
        boolean boolean25 = pcxImageParser16.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser27 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = null;
        byte[] byteArray30 = pcxImageParser27.getIccProfileBytes(byteSource28, pcxImagingParameters29);
        java.lang.String str31 = pcxImageParser27.getName();
        java.lang.String str32 = pcxImageParser27.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder35 = pcxImageParser34.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance37 = pcxImageParser34.getFormatCompliance(byteSource36);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser34.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata39 = pcxImageParser27.getMetadata(byteSource33, pcxImagingParameters38);
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser41 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = null;
        byte[] byteArray44 = pcxImageParser41.getIccProfileBytes(byteSource42, pcxImagingParameters43);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser41.getDefaultParameters();
        byte[] byteArray46 = pcxImageParser27.getIccProfileBytes(byteSource40, pcxImagingParameters45);
        byte[] byteArray47 = pcxImageParser16.getIccProfileBytes(byteSource26, pcxImagingParameters45);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser8.getMetadata(byteSource15, pcxImagingParameters45);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension49 = pcxImageParser0.getImageSize(byteSource7, pcxImagingParameters45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNull(formatCompliance6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Pcx-Custom" + "'", str9, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Pcx-Custom" + "'", str17, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Pcx-Custom" + "'", str20, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(byteArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Pcx-Custom" + "'", str31, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Pcx-Custom" + "'", str32, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNull(formatCompliance37);
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
        org.junit.Assert.assertNull(imageMetadata39);
        org.junit.Assert.assertNull(byteArray44);
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertNull(byteArray46);
        org.junit.Assert.assertNull(byteArray47);
        org.junit.Assert.assertNull(imageMetadata48);
    }

    @Test
    public void test1169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1169");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = null;
        byte[] byteArray33 = pcxImageParser30.getIccProfileBytes(byteSource31, pcxImagingParameters32);
        java.lang.String str34 = pcxImageParser30.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser30.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser0.getMetadata(byteSource29, pcxImagingParameters35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser0.getMetadata(byteSource37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser40.getMetadata(byteSource41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser40.getMetadata(byteSource43);
        java.lang.String str45 = pcxImageParser40.getDefaultExtension();
        java.lang.String str46 = pcxImageParser40.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = pcxImageParser40.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser0.getMetadata(byteSource39, pcxImagingParameters47);
        java.nio.ByteOrder byteOrder49 = pcxImageParser0.getByteOrder();
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "pcx" + "'", str34, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "pcx" + "'", str45, "pcx");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "pcx" + "'", str46, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters47);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNotNull(byteOrder49);
    }

    @Test
    public void test1170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1170");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = null;
        byte[] byteArray9 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters8);
        java.nio.ByteOrder byteOrder10 = pcxImageParser0.getByteOrder();
        java.io.File file11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension12 = pcxImageParser0.getImageSize(file11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(byteArray9);
        org.junit.Assert.assertNotNull(byteOrder10);
    }

    @Test
    public void test1171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1171");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser0.getFormatCompliance(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        java.io.File file9 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray10 = pcxImageParser0.getIccProfileBytes(file9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance6);
        org.junit.Assert.assertNull(formatCompliance8);
    }

    @Test
    public void test1172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1172");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        java.lang.String str8 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata10 = pcxImageParser0.getMetadata(byteSource9);
        java.lang.String str11 = pcxImageParser0.getDefaultExtension();
        java.io.File file12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser0.getMetadata(file12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "pcx" + "'", str8, "pcx");
        org.junit.Assert.assertNull(imageMetadata10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "pcx" + "'", str11, "pcx");
    }

    @Test
    public void test1173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1173");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        boolean boolean6 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser8.getDefaultParameters();
        byte[] byteArray14 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters13);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = pcxImageParser0.getDefaultParameters();
        java.io.File file16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = null;
        byte[] byteArray20 = pcxImageParser17.getIccProfileBytes(byteSource18, pcxImagingParameters19);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = null;
        byte[] byteArray23 = pcxImageParser17.getIccProfileBytes(byteSource21, pcxImagingParameters22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = null;
        byte[] byteArray28 = pcxImageParser25.getIccProfileBytes(byteSource26, pcxImagingParameters27);
        java.lang.String str29 = pcxImageParser25.getName();
        java.lang.String str30 = pcxImageParser25.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser25.getMetadata(byteSource31, pcxImagingParameters36);
        byte[] byteArray38 = pcxImageParser17.getIccProfileBytes(byteSource24, pcxImagingParameters36);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata39 = pcxImageParser0.getMetadata(file16, pcxImagingParameters36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertNull(byteArray14);
        org.junit.Assert.assertNotNull(pcxImagingParameters15);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertNull(byteArray23);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Pcx-Custom" + "'", str30, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertNull(byteArray38);
    }

    @Test
    public void test1174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1174");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = null;
        byte[] byteArray6 = pcxImageParser0.getIccProfileBytes(byteSource4, pcxImagingParameters5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = null;
        byte[] byteArray11 = pcxImageParser8.getIccProfileBytes(byteSource9, pcxImagingParameters10);
        java.lang.String str12 = pcxImageParser8.getName();
        java.lang.String str13 = pcxImageParser8.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder16 = pcxImageParser15.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser15.getFormatCompliance(byteSource17);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser15.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata20 = pcxImageParser8.getMetadata(byteSource14, pcxImagingParameters19);
        byte[] byteArray21 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters19);
        java.io.File file22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser23 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = null;
        byte[] byteArray26 = pcxImageParser23.getIccProfileBytes(byteSource24, pcxImagingParameters25);
        java.lang.String str27 = pcxImageParser23.getName();
        java.lang.String str28 = pcxImageParser23.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder31 = pcxImageParser30.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance33 = pcxImageParser30.getFormatCompliance(byteSource32);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser30.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser23.getMetadata(byteSource29, pcxImagingParameters34);
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser37 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = null;
        byte[] byteArray40 = pcxImageParser37.getIccProfileBytes(byteSource38, pcxImagingParameters39);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = pcxImageParser37.getDefaultParameters();
        byte[] byteArray42 = pcxImageParser23.getIccProfileBytes(byteSource36, pcxImagingParameters41);
        boolean boolean44 = pcxImageParser23.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser46 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder47 = pcxImageParser46.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance49 = pcxImageParser46.getFormatCompliance(byteSource48);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters50 = pcxImageParser46.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser52 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata54 = pcxImageParser52.getMetadata(byteSource53);
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser56 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder57 = pcxImageParser56.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance59 = pcxImageParser56.getFormatCompliance(byteSource58);
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata61 = pcxImageParser56.getMetadata(byteSource60);
        boolean boolean63 = pcxImageParser56.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters64 = pcxImageParser56.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata65 = pcxImageParser52.getMetadata(byteSource55, pcxImagingParameters64);
        byte[] byteArray66 = pcxImageParser46.getIccProfileBytes(byteSource51, pcxImagingParameters64);
        java.lang.String str67 = pcxImageParser46.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters68 = pcxImageParser46.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat69 = null;
        boolean boolean70 = pcxImageParser46.canAcceptType(imageFormat69);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters71 = pcxImageParser46.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata72 = pcxImageParser23.getMetadata(byteSource45, pcxImagingParameters71);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage73 = pcxImageParser0.getBufferedImage(file22, pcxImagingParameters71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNull(byteArray6);
        org.junit.Assert.assertNull(byteArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Pcx-Custom" + "'", str12, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNull(formatCompliance18);
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
        org.junit.Assert.assertNull(imageMetadata20);
        org.junit.Assert.assertNull(byteArray21);
        org.junit.Assert.assertNull(byteArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Pcx-Custom" + "'", str27, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Pcx-Custom" + "'", str28, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNull(formatCompliance33);
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertNull(byteArray40);
        org.junit.Assert.assertNotNull(pcxImagingParameters41);
        org.junit.Assert.assertNull(byteArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNull(formatCompliance49);
        org.junit.Assert.assertNotNull(pcxImagingParameters50);
        org.junit.Assert.assertNull(imageMetadata54);
        org.junit.Assert.assertNotNull(byteOrder57);
        org.junit.Assert.assertNull(formatCompliance59);
        org.junit.Assert.assertNull(imageMetadata61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters64);
        org.junit.Assert.assertNull(imageMetadata65);
        org.junit.Assert.assertNull(byteArray66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Pcx-Custom" + "'", str67, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters71);
        org.junit.Assert.assertNull(imageMetadata72);
    }

    @Test
    public void test1175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1175");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = null;
        byte[] byteArray9 = pcxImageParser6.getIccProfileBytes(byteSource7, pcxImagingParameters8);
        java.lang.String str10 = pcxImageParser6.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource5, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo14 = pcxImageParser0.getImageInfo(byteSource13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(byteArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "pcx" + "'", str10, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
    }

    @Test
    public void test1176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1176");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = null;
        byte[] byteArray19 = pcxImageParser16.getIccProfileBytes(byteSource17, pcxImagingParameters18);
        java.lang.String str20 = pcxImageParser16.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser10.getMetadata(byteSource15, pcxImagingParameters21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser0.getMetadata(byteSource9, pcxImagingParameters23);
        java.io.File file25 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance26 = pcxImageParser0.getFormatCompliance(file25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "pcx" + "'", str20, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(imageMetadata24);
    }

    @Test
    public void test1177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1177");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.lang.String str4 = pcxImageParser0.getName();
        boolean boolean6 = pcxImageParser0.canAcceptExtension("hi!");
        java.io.File file7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = pcxImageParser0.dumpImageFile(file7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1178");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        java.io.File file14 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = pcxImageParser0.canAcceptExtension(file14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
    }

    @Test
    public void test1179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1179");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters6 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser0.getMetadata(byteSource7);
        org.apache.commons.imaging.ImageFormat imageFormat9 = null;
        boolean boolean10 = pcxImageParser0.canAcceptType(imageFormat9);
        java.io.File file11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser12 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder13 = pcxImageParser12.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance15 = pcxImageParser12.getFormatCompliance(byteSource14);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = pcxImageParser12.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat17 = null;
        boolean boolean18 = pcxImageParser12.canAcceptType(imageFormat17);
        java.lang.String str19 = pcxImageParser12.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder22 = pcxImageParser21.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance24 = pcxImageParser21.getFormatCompliance(byteSource23);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = null;
        byte[] byteArray32 = pcxImageParser29.getIccProfileBytes(byteSource30, pcxImagingParameters31);
        java.lang.String str33 = pcxImageParser29.getName();
        java.lang.String str34 = pcxImageParser29.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser36 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder37 = pcxImageParser36.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance39 = pcxImageParser36.getFormatCompliance(byteSource38);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser36.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser29.getMetadata(byteSource35, pcxImagingParameters40);
        java.lang.String str42 = pcxImageParser29.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser29.getMetadata(byteSource43);
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser46 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = null;
        byte[] byteArray49 = pcxImageParser46.getIccProfileBytes(byteSource47, pcxImagingParameters48);
        java.lang.String str50 = pcxImageParser46.getName();
        java.lang.String str51 = pcxImageParser46.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser53 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder54 = pcxImageParser53.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance56 = pcxImageParser53.getFormatCompliance(byteSource55);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters57 = pcxImageParser53.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata58 = pcxImageParser46.getMetadata(byteSource52, pcxImagingParameters57);
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser60 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters62 = null;
        byte[] byteArray63 = pcxImageParser60.getIccProfileBytes(byteSource61, pcxImagingParameters62);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters64 = pcxImageParser60.getDefaultParameters();
        byte[] byteArray65 = pcxImageParser46.getIccProfileBytes(byteSource59, pcxImagingParameters64);
        byte[] byteArray66 = pcxImageParser29.getIccProfileBytes(byteSource45, pcxImagingParameters64);
        byte[] byteArray67 = pcxImageParser21.getIccProfileBytes(byteSource28, pcxImagingParameters64);
        byte[] byteArray68 = pcxImageParser12.getIccProfileBytes(byteSource20, pcxImagingParameters64);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension69 = pcxImageParser0.getImageSize(file11, pcxImagingParameters64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNotNull(pcxImagingParameters6);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNull(formatCompliance15);
        org.junit.Assert.assertNotNull(pcxImagingParameters16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "pcx" + "'", str19, "pcx");
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNull(formatCompliance24);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNotNull(pcxImagingParameters27);
        org.junit.Assert.assertNull(byteArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Pcx-Custom" + "'", str33, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Pcx-Custom" + "'", str34, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNull(formatCompliance39);
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(imageMetadata41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Pcx-Custom" + "'", str42, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertNull(byteArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Pcx-Custom" + "'", str50, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Pcx-Custom" + "'", str51, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder54);
        org.junit.Assert.assertNull(formatCompliance56);
        org.junit.Assert.assertNotNull(pcxImagingParameters57);
        org.junit.Assert.assertNull(imageMetadata58);
        org.junit.Assert.assertNull(byteArray63);
        org.junit.Assert.assertNotNull(pcxImagingParameters64);
        org.junit.Assert.assertNull(byteArray65);
        org.junit.Assert.assertNull(byteArray66);
        org.junit.Assert.assertNull(byteArray67);
        org.junit.Assert.assertNull(byteArray68);
    }

    @Test
    public void test1180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1180");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        boolean boolean9 = pcxImageParser0.canAcceptExtension("");
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo11 = pcxImageParser0.getImageInfo(byteSource10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1181");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.nio.ByteOrder byteOrder4 = pcxImageParser0.getByteOrder();
        java.nio.ByteOrder byteOrder5 = pcxImageParser0.getByteOrder();
        java.io.File file6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(file6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNotNull(byteOrder5);
    }

    @Test
    public void test1182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1182");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        boolean boolean10 = pcxImageParser0.canAcceptExtension("");
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = pcxImageParser0.dumpImageFile(byteSource13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(imageMetadata12);
    }

    @Test
    public void test1183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1183");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        java.lang.String str2 = pcxImageParser0.getName();
        java.io.File file3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str5 = pcxImageParser4.getName();
        java.nio.ByteOrder byteOrder6 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat7 = null;
        boolean boolean8 = pcxImageParser4.canAcceptType(imageFormat7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder14 = pcxImageParser13.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser13.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata21 = pcxImageParser19.getMetadata(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser23 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder24 = pcxImageParser23.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance26 = pcxImageParser23.getFormatCompliance(byteSource25);
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata28 = pcxImageParser23.getMetadata(byteSource27);
        boolean boolean30 = pcxImageParser23.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser23.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser19.getMetadata(byteSource22, pcxImagingParameters31);
        byte[] byteArray33 = pcxImageParser13.getIccProfileBytes(byteSource18, pcxImagingParameters31);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser10.getMetadata(byteSource12, pcxImagingParameters31);
        byte[] byteArray35 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters31);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension36 = pcxImageParser0.getImageSize(file3, pcxImagingParameters31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Pcx-Custom" + "'", str2, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNotNull(byteOrder14);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
        org.junit.Assert.assertNull(imageMetadata21);
        org.junit.Assert.assertNotNull(byteOrder24);
        org.junit.Assert.assertNull(formatCompliance26);
        org.junit.Assert.assertNull(imageMetadata28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertNull(byteArray35);
    }

    @Test
    public void test1184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1184");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = null;
        byte[] byteArray9 = pcxImageParser6.getIccProfileBytes(byteSource7, pcxImagingParameters8);
        java.lang.String str10 = pcxImageParser6.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource5, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        java.lang.Class<?> wildcardClass14 = pcxImageParser0.getClass();
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(byteArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "pcx" + "'", str10, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1185");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser0.canAcceptType(imageFormat23);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser0.getDefaultParameters();
        java.io.File file26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension27 = pcxImageParser0.getImageSize(file26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
    }

    @Test
    public void test1186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1186");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.nio.ByteOrder byteOrder4 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder7 = pcxImageParser6.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance9 = pcxImageParser6.getFormatCompliance(byteSource8);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat11 = null;
        boolean boolean12 = pcxImageParser6.canAcceptType(imageFormat11);
        java.lang.String str13 = pcxImageParser6.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource5, pcxImagingParameters14);
        java.io.File file16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata17 = pcxImageParser0.getMetadata(file16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNull(formatCompliance9);
        org.junit.Assert.assertNotNull(pcxImagingParameters10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNull(imageMetadata15);
    }

    @Test
    public void test1187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1187");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters7);
        java.lang.String str9 = pcxImageParser0.getDefaultExtension();
        java.lang.String str10 = pcxImageParser0.getDefaultExtension();
        java.io.File file11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser12 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata14 = pcxImageParser12.getMetadata(byteSource13);
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder17 = pcxImageParser16.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance19 = pcxImageParser16.getFormatCompliance(byteSource18);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters20 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser22 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser22.getMetadata(byteSource23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder27 = pcxImageParser26.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance29 = pcxImageParser26.getFormatCompliance(byteSource28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser26.getMetadata(byteSource30);
        boolean boolean33 = pcxImageParser26.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser26.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser22.getMetadata(byteSource25, pcxImagingParameters34);
        byte[] byteArray36 = pcxImageParser16.getIccProfileBytes(byteSource21, pcxImagingParameters34);
        java.lang.String str37 = pcxImageParser16.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata39 = pcxImageParser12.getMetadata(byteSource15, pcxImagingParameters38);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser12.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray41 = pcxImageParser0.getIccProfileBytes(file11, pcxImagingParameters40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "pcx" + "'", str9, "pcx");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "pcx" + "'", str10, "pcx");
        org.junit.Assert.assertNull(imageMetadata14);
        org.junit.Assert.assertNotNull(byteOrder17);
        org.junit.Assert.assertNull(formatCompliance19);
        org.junit.Assert.assertNotNull(pcxImagingParameters20);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNull(formatCompliance29);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Pcx-Custom" + "'", str37, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
        org.junit.Assert.assertNull(imageMetadata39);
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
    }

    @Test
    public void test1188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1188");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder8 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = null;
        byte[] byteArray13 = pcxImageParser10.getIccProfileBytes(byteSource11, pcxImagingParameters12);
        java.lang.String str14 = pcxImageParser10.getName();
        java.lang.String str15 = pcxImageParser10.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder18 = pcxImageParser17.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance20 = pcxImageParser17.getFormatCompliance(byteSource19);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser17.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser10.getMetadata(byteSource16, pcxImagingParameters21);
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata26 = pcxImageParser24.getMetadata(byteSource25);
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder29 = pcxImageParser28.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance31 = pcxImageParser28.getFormatCompliance(byteSource30);
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser28.getMetadata(byteSource32);
        boolean boolean35 = pcxImageParser28.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser28.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser24.getMetadata(byteSource27, pcxImagingParameters36);
        byte[] byteArray38 = pcxImageParser10.getIccProfileBytes(byteSource23, pcxImagingParameters36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance40 = pcxImageParser10.getFormatCompliance(byteSource39);
        java.nio.ByteOrder byteOrder41 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser43 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = null;
        byte[] byteArray46 = pcxImageParser43.getIccProfileBytes(byteSource44, pcxImagingParameters45);
        java.lang.String str47 = pcxImageParser43.getName();
        java.lang.String str48 = pcxImageParser43.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser50 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder51 = pcxImageParser50.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance53 = pcxImageParser50.getFormatCompliance(byteSource52);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters54 = pcxImageParser50.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata55 = pcxImageParser43.getMetadata(byteSource49, pcxImagingParameters54);
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser57 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata59 = pcxImageParser57.getMetadata(byteSource58);
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser61 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder62 = pcxImageParser61.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance64 = pcxImageParser61.getFormatCompliance(byteSource63);
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata66 = pcxImageParser61.getMetadata(byteSource65);
        boolean boolean68 = pcxImageParser61.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters69 = pcxImageParser61.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata70 = pcxImageParser57.getMetadata(byteSource60, pcxImagingParameters69);
        byte[] byteArray71 = pcxImageParser43.getIccProfileBytes(byteSource56, pcxImagingParameters69);
        byte[] byteArray72 = pcxImageParser10.getIccProfileBytes(byteSource42, pcxImagingParameters69);
        byte[] byteArray73 = pcxImageParser0.getIccProfileBytes(byteSource9, pcxImagingParameters69);
        java.io.PrintWriter printWriter74 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource75 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean76 = pcxImageParser0.dumpImageFile(printWriter74, byteSource75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(byteArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Pcx-Custom" + "'", str14, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Pcx-Custom" + "'", str15, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNull(formatCompliance20);
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNull(imageMetadata26);
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertNull(formatCompliance31);
        org.junit.Assert.assertNull(imageMetadata33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertNull(byteArray38);
        org.junit.Assert.assertNull(formatCompliance40);
        org.junit.Assert.assertNotNull(byteOrder41);
        org.junit.Assert.assertNull(byteArray46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Pcx-Custom" + "'", str47, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Pcx-Custom" + "'", str48, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder51);
        org.junit.Assert.assertNull(formatCompliance53);
        org.junit.Assert.assertNotNull(pcxImagingParameters54);
        org.junit.Assert.assertNull(imageMetadata55);
        org.junit.Assert.assertNull(imageMetadata59);
        org.junit.Assert.assertNotNull(byteOrder62);
        org.junit.Assert.assertNull(formatCompliance64);
        org.junit.Assert.assertNull(imageMetadata66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters69);
        org.junit.Assert.assertNull(imageMetadata70);
        org.junit.Assert.assertNull(byteArray71);
        org.junit.Assert.assertNull(byteArray72);
        org.junit.Assert.assertNull(byteArray73);
    }

    @Test
    public void test1189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1189");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = null;
        byte[] byteArray11 = pcxImageParser8.getIccProfileBytes(byteSource9, pcxImagingParameters10);
        java.lang.String str12 = pcxImageParser8.getName();
        java.lang.String str13 = pcxImageParser8.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder16 = pcxImageParser15.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser15.getFormatCompliance(byteSource17);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser15.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata20 = pcxImageParser8.getMetadata(byteSource14, pcxImagingParameters19);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser22 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser22.getMetadata(byteSource23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder27 = pcxImageParser26.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance29 = pcxImageParser26.getFormatCompliance(byteSource28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser26.getMetadata(byteSource30);
        boolean boolean33 = pcxImageParser26.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser26.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser22.getMetadata(byteSource25, pcxImagingParameters34);
        byte[] byteArray36 = pcxImageParser8.getIccProfileBytes(byteSource21, pcxImagingParameters34);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance38 = pcxImageParser8.getFormatCompliance(byteSource37);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = pcxImageParser8.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension40 = pcxImageParser0.getImageSize(byteSource7, pcxImagingParameters39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(byteArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Pcx-Custom" + "'", str12, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNull(formatCompliance18);
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
        org.junit.Assert.assertNull(imageMetadata20);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNull(formatCompliance29);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertNull(formatCompliance38);
        org.junit.Assert.assertNotNull(pcxImagingParameters39);
    }

    @Test
    public void test1190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1190");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.ImageFormat imageFormat1 = null;
        boolean boolean2 = pcxImageParser0.canAcceptType(imageFormat1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance4 = pcxImageParser0.getFormatCompliance(byteSource3);
        java.nio.ByteOrder byteOrder5 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser7.getMetadata(byteSource8);
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder12 = pcxImageParser11.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance14 = pcxImageParser11.getFormatCompliance(byteSource13);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = pcxImageParser11.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser17.getMetadata(byteSource18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder22 = pcxImageParser21.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance24 = pcxImageParser21.getFormatCompliance(byteSource23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata26 = pcxImageParser21.getMetadata(byteSource25);
        boolean boolean28 = pcxImageParser21.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata30 = pcxImageParser17.getMetadata(byteSource20, pcxImagingParameters29);
        byte[] byteArray31 = pcxImageParser11.getIccProfileBytes(byteSource16, pcxImagingParameters29);
        java.lang.String str32 = pcxImageParser11.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser11.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser7.getMetadata(byteSource10, pcxImagingParameters33);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser7.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage36 = pcxImageParser0.getBufferedImage(byteSource6, pcxImagingParameters35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(formatCompliance4);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertNotNull(byteOrder12);
        org.junit.Assert.assertNull(formatCompliance14);
        org.junit.Assert.assertNotNull(pcxImagingParameters15);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNull(formatCompliance24);
        org.junit.Assert.assertNull(imageMetadata26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters29);
        org.junit.Assert.assertNull(imageMetadata30);
        org.junit.Assert.assertNull(byteArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Pcx-Custom" + "'", str32, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
    }

    @Test
    public void test1191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1191");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat10 = null;
        boolean boolean11 = pcxImageParser0.canAcceptType(imageFormat10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser0.getFormatCompliance(byteSource12);
        java.io.PrintWriter printWriter14 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean16 = pcxImageParser0.dumpImageFile(printWriter14, byteSource15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(pcxImagingParameters9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(formatCompliance13);
    }

    @Test
    public void test1192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1192");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = null;
        byte[] byteArray19 = pcxImageParser16.getIccProfileBytes(byteSource17, pcxImagingParameters18);
        java.lang.String str20 = pcxImageParser16.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser10.getMetadata(byteSource15, pcxImagingParameters21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser0.getMetadata(byteSource9, pcxImagingParameters23);
        java.io.File file25 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray26 = pcxImageParser0.getIccProfileBytes(file25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "pcx" + "'", str20, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(imageMetadata24);
    }

    @Test
    public void test1193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1193");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat10 = null;
        boolean boolean11 = pcxImageParser0.canAcceptType(imageFormat10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser0.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource14);
        java.io.File file16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension17 = pcxImageParser0.getImageSize(file16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(pcxImagingParameters9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
    }

    @Test
    public void test1194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1194");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.nio.ByteOrder byteOrder4 = pcxImageParser0.getByteOrder();
        java.lang.Class<?> wildcardClass5 = pcxImageParser0.getClass();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test1195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1195");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource14);
        java.lang.String str16 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser0.getDefaultParameters();
        java.io.File file18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = pcxImageParser0.dumpImageFile(file18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "pcx" + "'", str16, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
    }

    @Test
    public void test1196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1196");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat2 = null;
        boolean boolean3 = pcxImageParser0.canAcceptType(imageFormat2);
        org.apache.commons.imaging.ImageFormat imageFormat4 = null;
        boolean boolean5 = pcxImageParser0.canAcceptType(imageFormat4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("Pcx-Custom");
        java.lang.String str8 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = pcxImageParser0.dumpImageFile(byteSource9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "pcx" + "'", str8, "pcx");
    }

    @Test
    public void test1197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1197");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.nio.ByteOrder byteOrder7 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        java.io.File file9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser0.getFormatCompliance(file9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
    }

    @Test
    public void test1198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1198");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = null;
        byte[] byteArray36 = pcxImageParser33.getIccProfileBytes(byteSource34, pcxImagingParameters35);
        java.lang.String str37 = pcxImageParser33.getName();
        java.lang.String str38 = pcxImageParser33.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder41 = pcxImageParser40.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance43 = pcxImageParser40.getFormatCompliance(byteSource42);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = pcxImageParser40.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata45 = pcxImageParser33.getMetadata(byteSource39, pcxImagingParameters44);
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser47 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser47.getMetadata(byteSource48);
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser51 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder52 = pcxImageParser51.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance54 = pcxImageParser51.getFormatCompliance(byteSource53);
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata56 = pcxImageParser51.getMetadata(byteSource55);
        boolean boolean58 = pcxImageParser51.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters59 = pcxImageParser51.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata60 = pcxImageParser47.getMetadata(byteSource50, pcxImagingParameters59);
        byte[] byteArray61 = pcxImageParser33.getIccProfileBytes(byteSource46, pcxImagingParameters59);
        byte[] byteArray62 = pcxImageParser0.getIccProfileBytes(byteSource32, pcxImagingParameters59);
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser64 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters66 = null;
        byte[] byteArray67 = pcxImageParser64.getIccProfileBytes(byteSource65, pcxImagingParameters66);
        java.lang.String str68 = pcxImageParser64.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata70 = pcxImageParser64.getMetadata(byteSource69);
        org.apache.commons.imaging.bytesource.ByteSource byteSource71 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance72 = pcxImageParser64.getFormatCompliance(byteSource71);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters73 = pcxImageParser64.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat74 = null;
        boolean boolean75 = pcxImageParser64.canAcceptType(imageFormat74);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters76 = pcxImageParser64.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage77 = pcxImageParser0.getBufferedImage(byteSource63, pcxImagingParameters76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Pcx-Custom" + "'", str37, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Pcx-Custom" + "'", str38, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder41);
        org.junit.Assert.assertNull(formatCompliance43);
        org.junit.Assert.assertNotNull(pcxImagingParameters44);
        org.junit.Assert.assertNull(imageMetadata45);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertNotNull(byteOrder52);
        org.junit.Assert.assertNull(formatCompliance54);
        org.junit.Assert.assertNull(imageMetadata56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters59);
        org.junit.Assert.assertNull(imageMetadata60);
        org.junit.Assert.assertNull(byteArray61);
        org.junit.Assert.assertNull(byteArray62);
        org.junit.Assert.assertNull(byteArray67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Pcx-Custom" + "'", str68, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata70);
        org.junit.Assert.assertNull(formatCompliance72);
        org.junit.Assert.assertNotNull(pcxImagingParameters73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters76);
    }

    @Test
    public void test1199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1199");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = null;
        byte[] byteArray35 = pcxImageParser32.getIccProfileBytes(byteSource33, pcxImagingParameters34);
        java.nio.ByteOrder byteOrder36 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser38 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder39 = pcxImageParser38.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance41 = pcxImageParser38.getFormatCompliance(byteSource40);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser38.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat43 = null;
        boolean boolean44 = pcxImageParser38.canAcceptType(imageFormat43);
        java.lang.String str45 = pcxImageParser38.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser38.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser32.getMetadata(byteSource37, pcxImagingParameters46);
        byte[] byteArray48 = pcxImageParser0.getIccProfileBytes(byteSource31, pcxImagingParameters46);
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList50 = pcxImageParser0.getAllBufferedImages(byteSource49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNull(byteArray35);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteOrder39);
        org.junit.Assert.assertNull(formatCompliance41);
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "pcx" + "'", str45, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
        org.junit.Assert.assertNull(imageMetadata47);
        org.junit.Assert.assertNull(byteArray48);
    }

    @Test
    public void test1200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1200");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = null;
        byte[] byteArray19 = pcxImageParser16.getIccProfileBytes(byteSource17, pcxImagingParameters18);
        java.lang.String str20 = pcxImageParser16.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser10.getMetadata(byteSource15, pcxImagingParameters21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser0.getMetadata(byteSource9, pcxImagingParameters23);
        java.io.File file25 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata26 = pcxImageParser0.getMetadata(file25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "pcx" + "'", str20, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(imageMetadata24);
    }

    @Test
    public void test1201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1201");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.ImageFormat imageFormat8 = null;
        boolean boolean9 = pcxImageParser0.canAcceptType(imageFormat8);
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser0.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser0.getMetadata(byteSource12);
        java.io.File file14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension15 = pcxImageParser0.getImageSize(file14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNull(imageMetadata13);
    }

    @Test
    public void test1202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1202");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser24.canAcceptType(imageFormat29);
        java.lang.String str31 = pcxImageParser24.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser24.getDefaultParameters();
        byte[] byteArray33 = pcxImageParser0.getIccProfileBytes(byteSource23, pcxImagingParameters32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser0.getFormatCompliance(byteSource34);
        java.nio.ByteOrder byteOrder36 = pcxImageParser0.getByteOrder();
        java.io.File file37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser38 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = null;
        byte[] byteArray41 = pcxImageParser38.getIccProfileBytes(byteSource39, pcxImagingParameters40);
        java.lang.String str42 = pcxImageParser38.getName();
        java.lang.String str43 = pcxImageParser38.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser45 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder46 = pcxImageParser45.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance48 = pcxImageParser45.getFormatCompliance(byteSource47);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters49 = pcxImageParser45.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata50 = pcxImageParser38.getMetadata(byteSource44, pcxImagingParameters49);
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser52 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata54 = pcxImageParser52.getMetadata(byteSource53);
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser56 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder57 = pcxImageParser56.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance59 = pcxImageParser56.getFormatCompliance(byteSource58);
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata61 = pcxImageParser56.getMetadata(byteSource60);
        boolean boolean63 = pcxImageParser56.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters64 = pcxImageParser56.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata65 = pcxImageParser52.getMetadata(byteSource55, pcxImagingParameters64);
        byte[] byteArray66 = pcxImageParser38.getIccProfileBytes(byteSource51, pcxImagingParameters64);
        org.apache.commons.imaging.bytesource.ByteSource byteSource67 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance68 = pcxImageParser38.getFormatCompliance(byteSource67);
        java.nio.ByteOrder byteOrder69 = pcxImageParser38.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource70 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata71 = pcxImageParser38.getMetadata(byteSource70);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters72 = pcxImageParser38.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage73 = pcxImageParser0.getBufferedImage(file37, pcxImagingParameters72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "pcx" + "'", str31, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNull(byteArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Pcx-Custom" + "'", str42, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Pcx-Custom" + "'", str43, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder46);
        org.junit.Assert.assertNull(formatCompliance48);
        org.junit.Assert.assertNotNull(pcxImagingParameters49);
        org.junit.Assert.assertNull(imageMetadata50);
        org.junit.Assert.assertNull(imageMetadata54);
        org.junit.Assert.assertNotNull(byteOrder57);
        org.junit.Assert.assertNull(formatCompliance59);
        org.junit.Assert.assertNull(imageMetadata61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters64);
        org.junit.Assert.assertNull(imageMetadata65);
        org.junit.Assert.assertNull(byteArray66);
        org.junit.Assert.assertNull(formatCompliance68);
        org.junit.Assert.assertNotNull(byteOrder69);
        org.junit.Assert.assertNull(imageMetadata71);
        org.junit.Assert.assertNotNull(pcxImagingParameters72);
    }

    @Test
    public void test1203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1203");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        boolean boolean9 = pcxImageParser0.canAcceptExtension("pcx");
        java.io.File file10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder12 = pcxImageParser11.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance14 = pcxImageParser11.getFormatCompliance(byteSource13);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = pcxImageParser11.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser17.getMetadata(byteSource18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder22 = pcxImageParser21.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance24 = pcxImageParser21.getFormatCompliance(byteSource23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata26 = pcxImageParser21.getMetadata(byteSource25);
        boolean boolean28 = pcxImageParser21.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata30 = pcxImageParser17.getMetadata(byteSource20, pcxImagingParameters29);
        byte[] byteArray31 = pcxImageParser11.getIccProfileBytes(byteSource16, pcxImagingParameters29);
        java.lang.String str32 = pcxImageParser11.getName();
        java.lang.String str33 = pcxImageParser11.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder36 = pcxImageParser35.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance38 = pcxImageParser35.getFormatCompliance(byteSource37);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = pcxImageParser35.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat40 = null;
        boolean boolean41 = pcxImageParser35.canAcceptType(imageFormat40);
        java.lang.String str42 = pcxImageParser35.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser35.getDefaultParameters();
        byte[] byteArray44 = pcxImageParser11.getIccProfileBytes(byteSource34, pcxImagingParameters43);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo45 = pcxImageParser0.getImageInfo(file10, pcxImagingParameters43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(byteOrder12);
        org.junit.Assert.assertNull(formatCompliance14);
        org.junit.Assert.assertNotNull(pcxImagingParameters15);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNull(formatCompliance24);
        org.junit.Assert.assertNull(imageMetadata26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters29);
        org.junit.Assert.assertNull(imageMetadata30);
        org.junit.Assert.assertNull(byteArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Pcx-Custom" + "'", str32, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "pcx" + "'", str33, "pcx");
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNull(formatCompliance38);
        org.junit.Assert.assertNotNull(pcxImagingParameters39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "pcx" + "'", str42, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertNull(byteArray44);
    }

    @Test
    public void test1204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1204");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.nio.ByteOrder byteOrder7 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        java.io.File file9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata10 = pcxImageParser0.getMetadata(file9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
    }

    @Test
    public void test1205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1205");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        java.io.File file7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(file7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
    }

    @Test
    public void test1206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1206");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        java.nio.ByteOrder byteOrder2 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance4 = pcxImageParser0.getFormatCompliance(byteSource3);
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = pcxImageParser0.dumpImageFile(byteSource6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertNull(formatCompliance4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
    }

    @Test
    public void test1207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1207");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        java.lang.String str9 = pcxImageParser0.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = pcxImageParser0.getDefaultParameters();
        boolean boolean12 = pcxImageParser0.canAcceptExtension("");
        java.io.File file13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata26 = pcxImageParser24.getMetadata(byteSource25);
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder29 = pcxImageParser28.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance31 = pcxImageParser28.getFormatCompliance(byteSource30);
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser28.getMetadata(byteSource32);
        boolean boolean35 = pcxImageParser28.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser28.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser24.getMetadata(byteSource27, pcxImagingParameters36);
        byte[] byteArray38 = pcxImageParser18.getIccProfileBytes(byteSource23, pcxImagingParameters36);
        java.lang.String str39 = pcxImageParser18.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters40);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = null;
        byte[] byteArray47 = pcxImageParser44.getIccProfileBytes(byteSource45, pcxImagingParameters46);
        java.lang.String str48 = pcxImageParser44.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters49 = pcxImageParser44.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata50 = pcxImageParser14.getMetadata(byteSource43, pcxImagingParameters49);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension51 = pcxImageParser0.getImageSize(file13, pcxImagingParameters49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Pcx-Custom" + "'", str9, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata26);
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertNull(formatCompliance31);
        org.junit.Assert.assertNull(imageMetadata33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertNull(byteArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Pcx-Custom" + "'", str39, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(imageMetadata41);
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertNull(byteArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "pcx" + "'", str48, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters49);
        org.junit.Assert.assertNull(imageMetadata50);
    }

    @Test
    public void test1208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1208");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        boolean boolean9 = pcxImageParser0.canAcceptExtension("");
        java.io.File file10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray12 = pcxImageParser0.getIccProfileBytes(file10, pcxImagingParameters11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1209");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        java.nio.ByteOrder byteOrder32 = pcxImageParser0.getByteOrder();
        java.io.File file33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = null;
        byte[] byteArray37 = pcxImageParser34.getIccProfileBytes(byteSource35, pcxImagingParameters36);
        java.lang.String str38 = pcxImageParser34.getName();
        java.lang.String str39 = pcxImageParser34.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser41 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder42 = pcxImageParser41.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance44 = pcxImageParser41.getFormatCompliance(byteSource43);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser41.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser34.getMetadata(byteSource40, pcxImagingParameters45);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser48 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata50 = pcxImageParser48.getMetadata(byteSource49);
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser52 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder53 = pcxImageParser52.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance55 = pcxImageParser52.getFormatCompliance(byteSource54);
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata57 = pcxImageParser52.getMetadata(byteSource56);
        boolean boolean59 = pcxImageParser52.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters60 = pcxImageParser52.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata61 = pcxImageParser48.getMetadata(byteSource51, pcxImagingParameters60);
        byte[] byteArray62 = pcxImageParser34.getIccProfileBytes(byteSource47, pcxImagingParameters60);
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance64 = pcxImageParser34.getFormatCompliance(byteSource63);
        java.nio.ByteOrder byteOrder65 = pcxImageParser34.getByteOrder();
        java.nio.ByteOrder byteOrder66 = pcxImageParser34.getByteOrder();
        java.lang.String str67 = pcxImageParser34.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters68 = pcxImageParser34.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo69 = pcxImageParser0.getImageInfo(file33, pcxImagingParameters68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertNull(byteArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Pcx-Custom" + "'", str38, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Pcx-Custom" + "'", str39, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNull(formatCompliance44);
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertNull(imageMetadata46);
        org.junit.Assert.assertNull(imageMetadata50);
        org.junit.Assert.assertNotNull(byteOrder53);
        org.junit.Assert.assertNull(formatCompliance55);
        org.junit.Assert.assertNull(imageMetadata57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters60);
        org.junit.Assert.assertNull(imageMetadata61);
        org.junit.Assert.assertNull(byteArray62);
        org.junit.Assert.assertNull(formatCompliance64);
        org.junit.Assert.assertNotNull(byteOrder65);
        org.junit.Assert.assertNotNull(byteOrder66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Pcx-Custom" + "'", str67, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters68);
    }

    @Test
    public void test1210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1210");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = null;
        byte[] byteArray19 = pcxImageParser16.getIccProfileBytes(byteSource17, pcxImagingParameters18);
        java.lang.String str20 = pcxImageParser16.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser10.getMetadata(byteSource15, pcxImagingParameters21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser0.getMetadata(byteSource9, pcxImagingParameters23);
        java.lang.String str25 = pcxImageParser0.getName();
        java.lang.String str26 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = null;
        byte[] byteArray31 = pcxImageParser28.getIccProfileBytes(byteSource29, pcxImagingParameters30);
        java.lang.String str32 = pcxImageParser28.getName();
        java.lang.String str33 = pcxImageParser28.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder36 = pcxImageParser35.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance38 = pcxImageParser35.getFormatCompliance(byteSource37);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = pcxImageParser35.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser28.getMetadata(byteSource34, pcxImagingParameters39);
        java.lang.String str41 = pcxImageParser28.getName();
        org.apache.commons.imaging.ImageFormat imageFormat42 = null;
        boolean boolean43 = pcxImageParser28.canAcceptType(imageFormat42);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = pcxImageParser28.getDefaultParameters();
        byte[] byteArray45 = pcxImageParser0.getIccProfileBytes(byteSource27, pcxImagingParameters44);
        java.io.File file46 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str47 = pcxImageParser0.dumpImageFile(file46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "pcx" + "'", str20, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Pcx-Custom" + "'", str26, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Pcx-Custom" + "'", str32, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Pcx-Custom" + "'", str33, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNull(formatCompliance38);
        org.junit.Assert.assertNotNull(pcxImagingParameters39);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Pcx-Custom" + "'", str41, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters44);
        org.junit.Assert.assertNull(byteArray45);
    }

    @Test
    public void test1211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1211");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getName();
        java.lang.String str6 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat7 = null;
        boolean boolean8 = pcxImageParser0.canAcceptType(imageFormat7);
        boolean boolean10 = pcxImageParser0.canAcceptExtension("");
        java.awt.image.BufferedImage bufferedImage11 = null;
        java.io.OutputStream outputStream12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder14 = pcxImageParser13.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser13.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser13.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage11, outputStream12, pcxImagingParameters18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "pcx" + "'", str6, "pcx");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(byteOrder14);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
    }

    @Test
    public void test1212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1212");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser24.canAcceptType(imageFormat29);
        java.lang.String str31 = pcxImageParser24.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser24.getDefaultParameters();
        byte[] byteArray33 = pcxImageParser0.getIccProfileBytes(byteSource23, pcxImagingParameters32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser0.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser0.getMetadata(byteSource36);
        java.lang.String str38 = pcxImageParser0.getName();
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "pcx" + "'", str31, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Pcx-Custom" + "'", str38, "Pcx-Custom");
    }

    @Test
    public void test1213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1213");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser30.getMetadata(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder35 = pcxImageParser34.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance37 = pcxImageParser34.getFormatCompliance(byteSource36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata39 = pcxImageParser34.getMetadata(byteSource38);
        boolean boolean41 = pcxImageParser34.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser34.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata43 = pcxImageParser30.getMetadata(byteSource33, pcxImagingParameters42);
        byte[] byteArray44 = pcxImageParser24.getIccProfileBytes(byteSource29, pcxImagingParameters42);
        java.lang.String str45 = pcxImageParser24.getName();
        boolean boolean47 = pcxImageParser24.canAcceptExtension("Pcx-Custom");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = pcxImageParser24.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension49 = pcxImageParser0.getImageSize(byteSource23, pcxImagingParameters48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNull(formatCompliance37);
        org.junit.Assert.assertNull(imageMetadata39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertNull(imageMetadata43);
        org.junit.Assert.assertNull(byteArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Pcx-Custom" + "'", str45, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters48);
    }

    @Test
    public void test1214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1214");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        boolean boolean6 = pcxImageParser0.canAcceptExtension("hi!");
        java.lang.String str7 = pcxImageParser0.getName();
        java.io.File file8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension9 = pcxImageParser0.getImageSize(file8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Pcx-Custom" + "'", str7, "Pcx-Custom");
    }

    @Test
    public void test1215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1215");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser24.canAcceptType(imageFormat29);
        java.lang.String str31 = pcxImageParser24.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser24.getDefaultParameters();
        byte[] byteArray33 = pcxImageParser0.getIccProfileBytes(byteSource23, pcxImagingParameters32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser0.getFormatCompliance(byteSource34);
        java.nio.ByteOrder byteOrder36 = pcxImageParser0.getByteOrder();
        java.io.File file37 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance38 = pcxImageParser0.getFormatCompliance(file37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "pcx" + "'", str31, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNotNull(byteOrder36);
    }

    @Test
    public void test1216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1216");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        boolean boolean9 = pcxImageParser0.canAcceptExtension("");
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage12 = pcxImageParser0.getBufferedImage(byteSource10, pcxImagingParameters11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1217");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser0.getMetadata(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser0.getMetadata(byteSource24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser0.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = null;
        byte[] byteArray32 = pcxImageParser29.getIccProfileBytes(byteSource30, pcxImagingParameters31);
        java.lang.String str33 = pcxImageParser29.getDefaultExtension();
        java.lang.String str34 = pcxImageParser29.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser36 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = null;
        byte[] byteArray39 = pcxImageParser36.getIccProfileBytes(byteSource37, pcxImagingParameters38);
        java.lang.String str40 = pcxImageParser36.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser36.getMetadata(byteSource41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance44 = pcxImageParser36.getFormatCompliance(byteSource43);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser36.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat46 = null;
        boolean boolean47 = pcxImageParser36.canAcceptType(imageFormat46);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = pcxImageParser36.getDefaultParameters();
        byte[] byteArray49 = pcxImageParser29.getIccProfileBytes(byteSource35, pcxImagingParameters48);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata50 = pcxImageParser0.getMetadata(byteSource28, pcxImagingParameters48);
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata52 = pcxImageParser0.getMetadata(byteSource51);
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNull(byteArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "pcx" + "'", str33, "pcx");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Pcx-Custom" + "'", str34, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Pcx-Custom" + "'", str40, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertNull(formatCompliance44);
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters48);
        org.junit.Assert.assertNull(byteArray49);
        org.junit.Assert.assertNull(imageMetadata50);
        org.junit.Assert.assertNull(imageMetadata52);
    }

    @Test
    public void test1218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1218");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = null;
        byte[] byteArray17 = pcxImageParser14.getIccProfileBytes(byteSource15, pcxImagingParameters16);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser14.getDefaultParameters();
        byte[] byteArray19 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder22 = pcxImageParser21.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance24 = pcxImageParser21.getFormatCompliance(byteSource23);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat26 = null;
        boolean boolean27 = pcxImageParser21.canAcceptType(imageFormat26);
        java.lang.String str28 = pcxImageParser21.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = pcxImageParser21.getDefaultParameters();
        java.lang.String str30 = pcxImageParser21.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser0.getMetadata(byteSource20, pcxImagingParameters31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder35 = pcxImageParser34.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance37 = pcxImageParser34.getFormatCompliance(byteSource36);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser34.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = pcxImageParser34.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser34.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo41 = pcxImageParser0.getImageInfo(byteSource33, pcxImagingParameters40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(byteArray17);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNull(formatCompliance24);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "pcx" + "'", str28, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Pcx-Custom" + "'", str30, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNull(formatCompliance37);
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
        org.junit.Assert.assertNotNull(pcxImagingParameters39);
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
    }

    @Test
    public void test1219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1219");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.nio.ByteOrder byteOrder29 = pcxImageParser0.getByteOrder();
        java.lang.String str30 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage33 = pcxImageParser0.getBufferedImage(byteSource31, pcxImagingParameters32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Pcx-Custom" + "'", str30, "Pcx-Custom");
    }

    @Test
    public void test1220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1220");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat2 = null;
        boolean boolean3 = pcxImageParser0.canAcceptType(imageFormat2);
        org.apache.commons.imaging.ImageFormat imageFormat4 = null;
        boolean boolean5 = pcxImageParser0.canAcceptType(imageFormat4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("Pcx-Custom");
        java.io.File file8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser0.getMetadata(file8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1221");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance14 = pcxImageParser0.getFormatCompliance(byteSource13);
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = pcxImageParser0.dumpImageFile(byteSource15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(formatCompliance14);
    }

    @Test
    public void test1222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1222");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        java.io.File file7 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray8 = pcxImageParser0.getIccProfileBytes(file7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
    }

    @Test
    public void test1223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1223");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        java.nio.ByteOrder byteOrder32 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder35 = pcxImageParser34.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance37 = pcxImageParser34.getFormatCompliance(byteSource36);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser34.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser40.getMetadata(byteSource41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder45 = pcxImageParser44.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance47 = pcxImageParser44.getFormatCompliance(byteSource46);
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser44.getMetadata(byteSource48);
        boolean boolean51 = pcxImageParser44.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser44.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser40.getMetadata(byteSource43, pcxImagingParameters52);
        byte[] byteArray54 = pcxImageParser34.getIccProfileBytes(byteSource39, pcxImagingParameters52);
        java.lang.String str55 = pcxImageParser34.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters56 = pcxImageParser34.getDefaultParameters();
        byte[] byteArray57 = pcxImageParser0.getIccProfileBytes(byteSource33, pcxImagingParameters56);
        org.apache.commons.imaging.ImageFormat imageFormat58 = null;
        boolean boolean59 = pcxImageParser0.canAcceptType(imageFormat58);
        org.apache.commons.imaging.ImageFormat imageFormat60 = null;
        boolean boolean61 = pcxImageParser0.canAcceptType(imageFormat60);
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str63 = pcxImageParser0.dumpImageFile(byteSource62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNull(formatCompliance37);
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertNotNull(byteOrder45);
        org.junit.Assert.assertNull(formatCompliance47);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertNull(byteArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Pcx-Custom" + "'", str55, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters56);
        org.junit.Assert.assertNull(byteArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test1224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1224");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        boolean boolean14 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser0.getFormatCompliance(byteSource15);
        java.lang.String str17 = pcxImageParser0.getName();
        boolean boolean19 = pcxImageParser0.canAcceptExtension("Pcx-Custom");
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata21 = pcxImageParser0.getMetadata(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser23 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str24 = pcxImageParser23.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance26 = pcxImageParser23.getFormatCompliance(byteSource25);
        java.lang.String str27 = pcxImageParser23.getName();
        boolean boolean29 = pcxImageParser23.canAcceptExtension("hi!");
        java.lang.String str30 = pcxImageParser23.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str33 = pcxImageParser32.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        java.lang.String str36 = pcxImageParser32.getName();
        java.lang.String str37 = pcxImageParser32.getName();
        org.apache.commons.imaging.ImageFormat imageFormat38 = null;
        boolean boolean39 = pcxImageParser32.canAcceptType(imageFormat38);
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser32.getMetadata(byteSource40);
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser43 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = null;
        byte[] byteArray46 = pcxImageParser43.getIccProfileBytes(byteSource44, pcxImagingParameters45);
        java.lang.String str47 = pcxImageParser43.getDefaultExtension();
        java.lang.String str48 = pcxImageParser43.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser50 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = null;
        byte[] byteArray53 = pcxImageParser50.getIccProfileBytes(byteSource51, pcxImagingParameters52);
        java.lang.String str54 = pcxImageParser50.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata56 = pcxImageParser50.getMetadata(byteSource55);
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance58 = pcxImageParser50.getFormatCompliance(byteSource57);
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser60 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder61 = pcxImageParser60.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance63 = pcxImageParser60.getFormatCompliance(byteSource62);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters64 = pcxImageParser60.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser66 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource67 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters68 = null;
        byte[] byteArray69 = pcxImageParser66.getIccProfileBytes(byteSource67, pcxImagingParameters68);
        java.lang.String str70 = pcxImageParser66.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters71 = pcxImageParser66.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata72 = pcxImageParser60.getMetadata(byteSource65, pcxImagingParameters71);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters73 = pcxImageParser60.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata74 = pcxImageParser50.getMetadata(byteSource59, pcxImagingParameters73);
        java.lang.String str75 = pcxImageParser50.getName();
        java.lang.String str76 = pcxImageParser50.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource77 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser78 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource79 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters80 = null;
        byte[] byteArray81 = pcxImageParser78.getIccProfileBytes(byteSource79, pcxImagingParameters80);
        java.lang.String str82 = pcxImageParser78.getName();
        java.lang.String str83 = pcxImageParser78.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource84 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser85 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder86 = pcxImageParser85.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource87 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance88 = pcxImageParser85.getFormatCompliance(byteSource87);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters89 = pcxImageParser85.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata90 = pcxImageParser78.getMetadata(byteSource84, pcxImagingParameters89);
        java.lang.String str91 = pcxImageParser78.getName();
        org.apache.commons.imaging.ImageFormat imageFormat92 = null;
        boolean boolean93 = pcxImageParser78.canAcceptType(imageFormat92);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters94 = pcxImageParser78.getDefaultParameters();
        byte[] byteArray95 = pcxImageParser50.getIccProfileBytes(byteSource77, pcxImagingParameters94);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata96 = pcxImageParser43.getMetadata(byteSource49, pcxImagingParameters94);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata97 = pcxImageParser32.getMetadata(byteSource42, pcxImagingParameters94);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata98 = pcxImageParser23.getMetadata(byteSource31, pcxImagingParameters94);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata99 = pcxImageParser0.getMetadata(byteSource22, pcxImagingParameters94);
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Pcx-Custom" + "'", str17, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(imageMetadata21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Pcx-Custom" + "'", str24, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Pcx-Custom" + "'", str27, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Pcx-Custom" + "'", str30, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Pcx-Custom" + "'", str33, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Pcx-Custom" + "'", str36, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Pcx-Custom" + "'", str37, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(imageMetadata41);
        org.junit.Assert.assertNull(byteArray46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "pcx" + "'", str47, "pcx");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Pcx-Custom" + "'", str48, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Pcx-Custom" + "'", str54, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata56);
        org.junit.Assert.assertNull(formatCompliance58);
        org.junit.Assert.assertNotNull(byteOrder61);
        org.junit.Assert.assertNull(formatCompliance63);
        org.junit.Assert.assertNotNull(pcxImagingParameters64);
        org.junit.Assert.assertNull(byteArray69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "pcx" + "'", str70, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters71);
        org.junit.Assert.assertNull(imageMetadata72);
        org.junit.Assert.assertNotNull(pcxImagingParameters73);
        org.junit.Assert.assertNull(imageMetadata74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "Pcx-Custom" + "'", str75, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "Pcx-Custom" + "'", str76, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "Pcx-Custom" + "'", str82, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "Pcx-Custom" + "'", str83, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder86);
        org.junit.Assert.assertNull(formatCompliance88);
        org.junit.Assert.assertNotNull(pcxImagingParameters89);
        org.junit.Assert.assertNull(imageMetadata90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "Pcx-Custom" + "'", str91, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters94);
        org.junit.Assert.assertNull(byteArray95);
        org.junit.Assert.assertNull(imageMetadata96);
        org.junit.Assert.assertNull(imageMetadata97);
        org.junit.Assert.assertNull(imageMetadata98);
        org.junit.Assert.assertNull(imageMetadata99);
    }

    @Test
    public void test1225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1225");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata3 = pcxImageParser0.getMetadata(byteSource2);
        java.io.File file4 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser5 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = null;
        byte[] byteArray8 = pcxImageParser5.getIccProfileBytes(byteSource6, pcxImagingParameters7);
        java.lang.String str9 = pcxImageParser5.getName();
        java.lang.String str10 = pcxImageParser5.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser12 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder13 = pcxImageParser12.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance15 = pcxImageParser12.getFormatCompliance(byteSource14);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = pcxImageParser12.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata17 = pcxImageParser5.getMetadata(byteSource11, pcxImagingParameters16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata21 = pcxImageParser19.getMetadata(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser23 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder24 = pcxImageParser23.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance26 = pcxImageParser23.getFormatCompliance(byteSource25);
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata28 = pcxImageParser23.getMetadata(byteSource27);
        boolean boolean30 = pcxImageParser23.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser23.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser19.getMetadata(byteSource22, pcxImagingParameters31);
        byte[] byteArray33 = pcxImageParser5.getIccProfileBytes(byteSource18, pcxImagingParameters31);
        org.apache.commons.imaging.ImageFormat imageFormat34 = null;
        boolean boolean35 = pcxImageParser5.canAcceptType(imageFormat34);
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser37 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder38 = pcxImageParser37.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance40 = pcxImageParser37.getFormatCompliance(byteSource39);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = pcxImageParser37.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat42 = null;
        boolean boolean43 = pcxImageParser37.canAcceptType(imageFormat42);
        java.lang.String str44 = pcxImageParser37.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser37.getDefaultParameters();
        byte[] byteArray46 = pcxImageParser5.getIccProfileBytes(byteSource36, pcxImagingParameters45);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser0.getMetadata(file4, pcxImagingParameters45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata3);
        org.junit.Assert.assertNull(byteArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Pcx-Custom" + "'", str9, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Pcx-Custom" + "'", str10, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNull(formatCompliance15);
        org.junit.Assert.assertNotNull(pcxImagingParameters16);
        org.junit.Assert.assertNull(imageMetadata17);
        org.junit.Assert.assertNull(imageMetadata21);
        org.junit.Assert.assertNotNull(byteOrder24);
        org.junit.Assert.assertNull(formatCompliance26);
        org.junit.Assert.assertNull(imageMetadata28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(byteOrder38);
        org.junit.Assert.assertNull(formatCompliance40);
        org.junit.Assert.assertNotNull(pcxImagingParameters41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "pcx" + "'", str44, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertNull(byteArray46);
    }

    @Test
    public void test1226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1226");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        java.nio.ByteOrder byteOrder2 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat3 = null;
        boolean boolean4 = pcxImageParser0.canAcceptType(imageFormat3);
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.Class<?> wildcardClass7 = pcxImageParser0.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1227");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters6 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = null;
        byte[] byteArray11 = pcxImageParser8.getIccProfileBytes(byteSource9, pcxImagingParameters10);
        java.lang.String str12 = pcxImageParser8.getName();
        java.lang.String str13 = pcxImageParser8.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder16 = pcxImageParser15.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser15.getFormatCompliance(byteSource17);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser15.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata20 = pcxImageParser8.getMetadata(byteSource14, pcxImagingParameters19);
        java.lang.String str21 = pcxImageParser8.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser8.getMetadata(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = null;
        byte[] byteArray28 = pcxImageParser25.getIccProfileBytes(byteSource26, pcxImagingParameters27);
        java.lang.String str29 = pcxImageParser25.getName();
        java.lang.String str30 = pcxImageParser25.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser25.getMetadata(byteSource31, pcxImagingParameters36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = null;
        byte[] byteArray42 = pcxImageParser39.getIccProfileBytes(byteSource40, pcxImagingParameters41);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser39.getDefaultParameters();
        byte[] byteArray44 = pcxImageParser25.getIccProfileBytes(byteSource38, pcxImagingParameters43);
        byte[] byteArray45 = pcxImageParser8.getIccProfileBytes(byteSource24, pcxImagingParameters43);
        byte[] byteArray46 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters43);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser0.getMetadata(byteSource47);
        java.lang.String str49 = pcxImageParser0.getName();
        java.io.File file50 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray51 = pcxImageParser0.getIccProfileBytes(file50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNotNull(pcxImagingParameters6);
        org.junit.Assert.assertNull(byteArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Pcx-Custom" + "'", str12, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNull(formatCompliance18);
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
        org.junit.Assert.assertNull(imageMetadata20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Pcx-Custom" + "'", str30, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertNull(byteArray42);
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertNull(byteArray44);
        org.junit.Assert.assertNull(byteArray45);
        org.junit.Assert.assertNull(byteArray46);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Pcx-Custom" + "'", str49, "Pcx-Custom");
    }

    @Test
    public void test1228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1228");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser9.canAcceptType(imageFormat14);
        java.lang.String str16 = pcxImageParser9.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser9.getDefaultParameters();
        byte[] byteArray18 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters17);
        org.apache.commons.imaging.ImageFormat imageFormat19 = null;
        boolean boolean20 = pcxImageParser0.canAcceptType(imageFormat19);
        org.apache.commons.imaging.ImageFormat imageFormat21 = null;
        boolean boolean22 = pcxImageParser0.canAcceptType(imageFormat21);
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str25 = pcxImageParser24.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        java.lang.String str28 = pcxImageParser24.getName();
        boolean boolean30 = pcxImageParser24.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser32.getDefaultParameters();
        java.lang.String str37 = pcxImageParser32.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata39 = pcxImageParser32.getMetadata(byteSource38);
        boolean boolean41 = pcxImageParser32.canAcceptExtension("");
        boolean boolean43 = pcxImageParser32.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser45 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = null;
        byte[] byteArray48 = pcxImageParser45.getIccProfileBytes(byteSource46, pcxImagingParameters47);
        java.lang.String str49 = pcxImageParser45.getName();
        java.lang.String str50 = pcxImageParser45.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser52 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder53 = pcxImageParser52.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance55 = pcxImageParser52.getFormatCompliance(byteSource54);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters56 = pcxImageParser52.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata57 = pcxImageParser45.getMetadata(byteSource51, pcxImagingParameters56);
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser59 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata61 = pcxImageParser59.getMetadata(byteSource60);
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser63 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder64 = pcxImageParser63.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance66 = pcxImageParser63.getFormatCompliance(byteSource65);
        org.apache.commons.imaging.bytesource.ByteSource byteSource67 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata68 = pcxImageParser63.getMetadata(byteSource67);
        boolean boolean70 = pcxImageParser63.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters71 = pcxImageParser63.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata72 = pcxImageParser59.getMetadata(byteSource62, pcxImagingParameters71);
        byte[] byteArray73 = pcxImageParser45.getIccProfileBytes(byteSource58, pcxImagingParameters71);
        org.apache.commons.imaging.bytesource.ByteSource byteSource74 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance75 = pcxImageParser45.getFormatCompliance(byteSource74);
        java.nio.ByteOrder byteOrder76 = pcxImageParser45.getByteOrder();
        java.nio.ByteOrder byteOrder77 = pcxImageParser45.getByteOrder();
        java.lang.String str78 = pcxImageParser45.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters79 = pcxImageParser45.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata80 = pcxImageParser32.getMetadata(byteSource44, pcxImagingParameters79);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata81 = pcxImageParser24.getMetadata(byteSource31, pcxImagingParameters79);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension82 = pcxImageParser0.getImageSize(byteSource23, pcxImagingParameters79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "pcx" + "'", str16, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Pcx-Custom" + "'", str28, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "pcx" + "'", str37, "pcx");
        org.junit.Assert.assertNull(imageMetadata39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(byteArray48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Pcx-Custom" + "'", str49, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Pcx-Custom" + "'", str50, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder53);
        org.junit.Assert.assertNull(formatCompliance55);
        org.junit.Assert.assertNotNull(pcxImagingParameters56);
        org.junit.Assert.assertNull(imageMetadata57);
        org.junit.Assert.assertNull(imageMetadata61);
        org.junit.Assert.assertNotNull(byteOrder64);
        org.junit.Assert.assertNull(formatCompliance66);
        org.junit.Assert.assertNull(imageMetadata68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters71);
        org.junit.Assert.assertNull(imageMetadata72);
        org.junit.Assert.assertNull(byteArray73);
        org.junit.Assert.assertNull(formatCompliance75);
        org.junit.Assert.assertNotNull(byteOrder76);
        org.junit.Assert.assertNotNull(byteOrder77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "Pcx-Custom" + "'", str78, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters79);
        org.junit.Assert.assertNull(imageMetadata80);
        org.junit.Assert.assertNull(imageMetadata81);
    }

    @Test
    public void test1229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1229");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        java.lang.String str13 = pcxImageParser8.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser8.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser8.canAcceptExtension("");
        boolean boolean19 = pcxImageParser8.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = null;
        byte[] byteArray24 = pcxImageParser21.getIccProfileBytes(byteSource22, pcxImagingParameters23);
        java.lang.String str25 = pcxImageParser21.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser21.getMetadata(byteSource26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance29 = pcxImageParser21.getFormatCompliance(byteSource28);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = null;
        byte[] byteArray35 = pcxImageParser32.getIccProfileBytes(byteSource33, pcxImagingParameters34);
        java.lang.String str36 = pcxImageParser32.getName();
        java.lang.String str37 = pcxImageParser32.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder40 = pcxImageParser39.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance42 = pcxImageParser39.getFormatCompliance(byteSource41);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser39.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser32.getMetadata(byteSource38, pcxImagingParameters43);
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser46 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser46.getMetadata(byteSource47);
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser50 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder51 = pcxImageParser50.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance53 = pcxImageParser50.getFormatCompliance(byteSource52);
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata55 = pcxImageParser50.getMetadata(byteSource54);
        boolean boolean57 = pcxImageParser50.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters58 = pcxImageParser50.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata59 = pcxImageParser46.getMetadata(byteSource49, pcxImagingParameters58);
        byte[] byteArray60 = pcxImageParser32.getIccProfileBytes(byteSource45, pcxImagingParameters58);
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance62 = pcxImageParser32.getFormatCompliance(byteSource61);
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser64 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters66 = null;
        byte[] byteArray67 = pcxImageParser64.getIccProfileBytes(byteSource65, pcxImagingParameters66);
        java.nio.ByteOrder byteOrder68 = pcxImageParser64.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser70 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder71 = pcxImageParser70.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource72 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance73 = pcxImageParser70.getFormatCompliance(byteSource72);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters74 = pcxImageParser70.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat75 = null;
        boolean boolean76 = pcxImageParser70.canAcceptType(imageFormat75);
        java.lang.String str77 = pcxImageParser70.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters78 = pcxImageParser70.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata79 = pcxImageParser64.getMetadata(byteSource69, pcxImagingParameters78);
        byte[] byteArray80 = pcxImageParser32.getIccProfileBytes(byteSource63, pcxImagingParameters78);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata81 = pcxImageParser21.getMetadata(byteSource31, pcxImagingParameters78);
        byte[] byteArray82 = pcxImageParser8.getIccProfileBytes(byteSource20, pcxImagingParameters78);
        byte[] byteArray83 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters78);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters84 = pcxImageParser0.getDefaultParameters();
        java.lang.String str85 = pcxImageParser0.getDefaultExtension();
        java.lang.Class<?> wildcardClass86 = pcxImageParser0.getClass();
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(formatCompliance29);
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(byteArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Pcx-Custom" + "'", str36, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Pcx-Custom" + "'", str37, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNull(formatCompliance42);
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNotNull(byteOrder51);
        org.junit.Assert.assertNull(formatCompliance53);
        org.junit.Assert.assertNull(imageMetadata55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters58);
        org.junit.Assert.assertNull(imageMetadata59);
        org.junit.Assert.assertNull(byteArray60);
        org.junit.Assert.assertNull(formatCompliance62);
        org.junit.Assert.assertNull(byteArray67);
        org.junit.Assert.assertNotNull(byteOrder68);
        org.junit.Assert.assertNotNull(byteOrder71);
        org.junit.Assert.assertNull(formatCompliance73);
        org.junit.Assert.assertNotNull(pcxImagingParameters74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "pcx" + "'", str77, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters78);
        org.junit.Assert.assertNull(imageMetadata79);
        org.junit.Assert.assertNull(byteArray80);
        org.junit.Assert.assertNull(imageMetadata81);
        org.junit.Assert.assertNull(byteArray82);
        org.junit.Assert.assertNull(byteArray83);
        org.junit.Assert.assertNotNull(pcxImagingParameters84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "pcx" + "'", str85, "pcx");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test1230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1230");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = null;
        byte[] byteArray20 = pcxImageParser17.getIccProfileBytes(byteSource18, pcxImagingParameters19);
        java.lang.String str21 = pcxImageParser17.getName();
        java.lang.String str22 = pcxImageParser17.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser17.getMetadata(byteSource23, pcxImagingParameters28);
        java.lang.String str30 = pcxImageParser17.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser17.getMetadata(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = null;
        byte[] byteArray37 = pcxImageParser34.getIccProfileBytes(byteSource35, pcxImagingParameters36);
        java.lang.String str38 = pcxImageParser34.getName();
        java.lang.String str39 = pcxImageParser34.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser41 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder42 = pcxImageParser41.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance44 = pcxImageParser41.getFormatCompliance(byteSource43);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser41.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser34.getMetadata(byteSource40, pcxImagingParameters45);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser48 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters50 = null;
        byte[] byteArray51 = pcxImageParser48.getIccProfileBytes(byteSource49, pcxImagingParameters50);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser48.getDefaultParameters();
        byte[] byteArray53 = pcxImageParser34.getIccProfileBytes(byteSource47, pcxImagingParameters52);
        byte[] byteArray54 = pcxImageParser17.getIccProfileBytes(byteSource33, pcxImagingParameters52);
        byte[] byteArray55 = pcxImageParser9.getIccProfileBytes(byteSource16, pcxImagingParameters52);
        byte[] byteArray56 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters52);
        java.lang.String str57 = pcxImageParser0.getName();
        java.io.File file58 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser59 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters61 = null;
        byte[] byteArray62 = pcxImageParser59.getIccProfileBytes(byteSource60, pcxImagingParameters61);
        java.lang.String str63 = pcxImageParser59.getName();
        java.lang.String str64 = pcxImageParser59.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance66 = pcxImageParser59.getFormatCompliance(byteSource65);
        org.apache.commons.imaging.bytesource.ByteSource byteSource67 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser68 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder69 = pcxImageParser68.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource70 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance71 = pcxImageParser68.getFormatCompliance(byteSource70);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters72 = pcxImageParser68.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat73 = null;
        boolean boolean74 = pcxImageParser68.canAcceptType(imageFormat73);
        java.lang.String str75 = pcxImageParser68.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters76 = pcxImageParser68.getDefaultParameters();
        byte[] byteArray77 = pcxImageParser59.getIccProfileBytes(byteSource67, pcxImagingParameters76);
        org.apache.commons.imaging.bytesource.ByteSource byteSource78 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser79 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder80 = pcxImageParser79.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource81 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance82 = pcxImageParser79.getFormatCompliance(byteSource81);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters83 = pcxImageParser79.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat84 = null;
        boolean boolean85 = pcxImageParser79.canAcceptType(imageFormat84);
        java.lang.String str86 = pcxImageParser79.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters87 = pcxImageParser79.getDefaultParameters();
        byte[] byteArray88 = pcxImageParser59.getIccProfileBytes(byteSource78, pcxImagingParameters87);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage89 = pcxImageParser0.getBufferedImage(file58, pcxImagingParameters87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNotNull(pcxImagingParameters15);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Pcx-Custom" + "'", str22, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Pcx-Custom" + "'", str30, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNull(byteArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Pcx-Custom" + "'", str38, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Pcx-Custom" + "'", str39, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNull(formatCompliance44);
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertNull(imageMetadata46);
        org.junit.Assert.assertNull(byteArray51);
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(byteArray53);
        org.junit.Assert.assertNull(byteArray54);
        org.junit.Assert.assertNull(byteArray55);
        org.junit.Assert.assertNull(byteArray56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Pcx-Custom" + "'", str57, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Pcx-Custom" + "'", str63, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Pcx-Custom" + "'", str64, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance66);
        org.junit.Assert.assertNotNull(byteOrder69);
        org.junit.Assert.assertNull(formatCompliance71);
        org.junit.Assert.assertNotNull(pcxImagingParameters72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "pcx" + "'", str75, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters76);
        org.junit.Assert.assertNull(byteArray77);
        org.junit.Assert.assertNotNull(byteOrder80);
        org.junit.Assert.assertNull(formatCompliance82);
        org.junit.Assert.assertNotNull(pcxImagingParameters83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "pcx" + "'", str86, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters87);
        org.junit.Assert.assertNull(byteArray88);
    }

    @Test
    public void test1231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1231");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.ImageFormat imageFormat1 = null;
        boolean boolean2 = pcxImageParser0.canAcceptType(imageFormat1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance4 = pcxImageParser0.getFormatCompliance(byteSource3);
        java.nio.ByteOrder byteOrder5 = pcxImageParser0.getByteOrder();
        java.io.File file6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        java.lang.String str12 = pcxImageParser7.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata14 = pcxImageParser7.getMetadata(byteSource13);
        boolean boolean16 = pcxImageParser7.canAcceptExtension("");
        org.apache.commons.imaging.ImageFormat imageFormat17 = null;
        boolean boolean18 = pcxImageParser7.canAcceptType(imageFormat17);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser7.getDefaultParameters();
        java.nio.ByteOrder byteOrder20 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser22 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser22.getMetadata(byteSource23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder27 = pcxImageParser26.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance29 = pcxImageParser26.getFormatCompliance(byteSource28);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser26.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser32.getMetadata(byteSource33);
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser36 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder37 = pcxImageParser36.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance39 = pcxImageParser36.getFormatCompliance(byteSource38);
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser36.getMetadata(byteSource40);
        boolean boolean43 = pcxImageParser36.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = pcxImageParser36.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata45 = pcxImageParser32.getMetadata(byteSource35, pcxImagingParameters44);
        byte[] byteArray46 = pcxImageParser26.getIccProfileBytes(byteSource31, pcxImagingParameters44);
        java.lang.String str47 = pcxImageParser26.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = pcxImageParser26.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser22.getMetadata(byteSource25, pcxImagingParameters48);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters50 = pcxImageParser22.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser52 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters54 = null;
        byte[] byteArray55 = pcxImageParser52.getIccProfileBytes(byteSource53, pcxImagingParameters54);
        java.lang.String str56 = pcxImageParser52.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters57 = pcxImageParser52.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata58 = pcxImageParser22.getMetadata(byteSource51, pcxImagingParameters57);
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata60 = pcxImageParser22.getMetadata(byteSource59);
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser62 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata64 = pcxImageParser62.getMetadata(byteSource63);
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata66 = pcxImageParser62.getMetadata(byteSource65);
        java.lang.String str67 = pcxImageParser62.getDefaultExtension();
        java.lang.String str68 = pcxImageParser62.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters69 = pcxImageParser62.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata70 = pcxImageParser22.getMetadata(byteSource61, pcxImagingParameters69);
        byte[] byteArray71 = pcxImageParser7.getIccProfileBytes(byteSource21, pcxImagingParameters69);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata72 = pcxImageParser0.getMetadata(file6, pcxImagingParameters69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(formatCompliance4);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "pcx" + "'", str12, "pcx");
        org.junit.Assert.assertNull(imageMetadata14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNull(formatCompliance29);
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNull(formatCompliance39);
        org.junit.Assert.assertNull(imageMetadata41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters44);
        org.junit.Assert.assertNull(imageMetadata45);
        org.junit.Assert.assertNull(byteArray46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Pcx-Custom" + "'", str47, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters48);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertNotNull(pcxImagingParameters50);
        org.junit.Assert.assertNull(byteArray55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "pcx" + "'", str56, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters57);
        org.junit.Assert.assertNull(imageMetadata58);
        org.junit.Assert.assertNull(imageMetadata60);
        org.junit.Assert.assertNull(imageMetadata64);
        org.junit.Assert.assertNull(imageMetadata66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "pcx" + "'", str67, "pcx");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "pcx" + "'", str68, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters69);
        org.junit.Assert.assertNull(imageMetadata70);
        org.junit.Assert.assertNull(byteArray71);
    }

    @Test
    public void test1232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1232");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder30 = pcxImageParser29.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser29.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser35.getMetadata(byteSource36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder40 = pcxImageParser39.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance42 = pcxImageParser39.getFormatCompliance(byteSource41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser39.getMetadata(byteSource43);
        boolean boolean46 = pcxImageParser39.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = pcxImageParser39.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser35.getMetadata(byteSource38, pcxImagingParameters47);
        byte[] byteArray49 = pcxImageParser29.getIccProfileBytes(byteSource34, pcxImagingParameters47);
        java.lang.String str50 = pcxImageParser29.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters51 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata52 = pcxImageParser0.getMetadata(byteSource28, pcxImagingParameters51);
        java.nio.ByteOrder byteOrder53 = pcxImageParser0.getByteOrder();
        java.io.File file54 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser55 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str56 = pcxImageParser55.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance58 = pcxImageParser55.getFormatCompliance(byteSource57);
        java.lang.String str59 = pcxImageParser55.getName();
        java.lang.String str60 = pcxImageParser55.getName();
        org.apache.commons.imaging.ImageFormat imageFormat61 = null;
        boolean boolean62 = pcxImageParser55.canAcceptType(imageFormat61);
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata64 = pcxImageParser55.getMetadata(byteSource63);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters65 = pcxImageParser55.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo66 = pcxImageParser0.getImageInfo(file54, pcxImagingParameters65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(byteOrder30);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNull(formatCompliance42);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters47);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNull(byteArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Pcx-Custom" + "'", str50, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters51);
        org.junit.Assert.assertNull(imageMetadata52);
        org.junit.Assert.assertNotNull(byteOrder53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Pcx-Custom" + "'", str56, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Pcx-Custom" + "'", str59, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Pcx-Custom" + "'", str60, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(imageMetadata64);
        org.junit.Assert.assertNotNull(pcxImagingParameters65);
    }

    @Test
    public void test1233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1233");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        boolean boolean30 = pcxImageParser0.canAcceptExtension("pcx");
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat32 = null;
        boolean boolean33 = pcxImageParser0.canAcceptType(imageFormat32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser0.getMetadata(byteSource34);
        java.io.File file36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser37 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder38 = pcxImageParser37.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance40 = pcxImageParser37.getFormatCompliance(byteSource39);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = pcxImageParser37.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat42 = null;
        boolean boolean43 = pcxImageParser37.canAcceptType(imageFormat42);
        java.lang.String str44 = pcxImageParser37.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser37.getDefaultParameters();
        java.lang.String str46 = pcxImageParser37.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = pcxImageParser37.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage48 = pcxImageParser0.getBufferedImage(file36, pcxImagingParameters47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertNotNull(byteOrder38);
        org.junit.Assert.assertNull(formatCompliance40);
        org.junit.Assert.assertNotNull(pcxImagingParameters41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "pcx" + "'", str44, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Pcx-Custom" + "'", str46, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters47);
    }

    @Test
    public void test1234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1234");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = null;
        byte[] byteArray8 = pcxImageParser0.getIccProfileBytes(byteSource6, pcxImagingParameters7);
        java.io.File file9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension10 = pcxImageParser0.getImageSize(file9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray8);
    }

    @Test
    public void test1235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1235");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        java.io.File file9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser10.getDefaultParameters();
        java.lang.String str15 = pcxImageParser10.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata17 = pcxImageParser10.getMetadata(byteSource16);
        boolean boolean19 = pcxImageParser10.canAcceptExtension("");
        org.apache.commons.imaging.ImageFormat imageFormat20 = null;
        boolean boolean21 = pcxImageParser10.canAcceptType(imageFormat20);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser10.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension23 = pcxImageParser0.getImageSize(file9, pcxImagingParameters22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "pcx" + "'", str15, "pcx");
        org.junit.Assert.assertNull(imageMetadata17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
    }

    @Test
    public void test1236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1236");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        boolean boolean9 = pcxImageParser0.canAcceptExtension("");
        org.apache.commons.imaging.ImageFormat imageFormat10 = null;
        boolean boolean11 = pcxImageParser0.canAcceptType(imageFormat10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = null;
        byte[] byteArray16 = pcxImageParser13.getIccProfileBytes(byteSource14, pcxImagingParameters15);
        java.lang.String str17 = pcxImageParser13.getName();
        java.lang.String str18 = pcxImageParser13.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser20 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder21 = pcxImageParser20.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance23 = pcxImageParser20.getFormatCompliance(byteSource22);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = pcxImageParser20.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser13.getMetadata(byteSource19, pcxImagingParameters24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser27 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser27.getMetadata(byteSource28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder32 = pcxImageParser31.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance34 = pcxImageParser31.getFormatCompliance(byteSource33);
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser31.getMetadata(byteSource35);
        boolean boolean38 = pcxImageParser31.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = pcxImageParser31.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser27.getMetadata(byteSource30, pcxImagingParameters39);
        byte[] byteArray41 = pcxImageParser13.getIccProfileBytes(byteSource26, pcxImagingParameters39);
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance43 = pcxImageParser13.getFormatCompliance(byteSource42);
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser45 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = null;
        byte[] byteArray48 = pcxImageParser45.getIccProfileBytes(byteSource46, pcxImagingParameters47);
        java.nio.ByteOrder byteOrder49 = pcxImageParser45.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser51 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder52 = pcxImageParser51.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance54 = pcxImageParser51.getFormatCompliance(byteSource53);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters55 = pcxImageParser51.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat56 = null;
        boolean boolean57 = pcxImageParser51.canAcceptType(imageFormat56);
        java.lang.String str58 = pcxImageParser51.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters59 = pcxImageParser51.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata60 = pcxImageParser45.getMetadata(byteSource50, pcxImagingParameters59);
        byte[] byteArray61 = pcxImageParser13.getIccProfileBytes(byteSource44, pcxImagingParameters59);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata62 = pcxImageParser0.getMetadata(byteSource12, pcxImagingParameters59);
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata64 = pcxImageParser0.getMetadata(byteSource63);
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo66 = pcxImageParser0.getImageInfo(byteSource65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(byteArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Pcx-Custom" + "'", str17, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Pcx-Custom" + "'", str18, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder21);
        org.junit.Assert.assertNull(formatCompliance23);
        org.junit.Assert.assertNotNull(pcxImagingParameters24);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertNull(formatCompliance34);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters39);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertNull(byteArray41);
        org.junit.Assert.assertNull(formatCompliance43);
        org.junit.Assert.assertNull(byteArray48);
        org.junit.Assert.assertNotNull(byteOrder49);
        org.junit.Assert.assertNotNull(byteOrder52);
        org.junit.Assert.assertNull(formatCompliance54);
        org.junit.Assert.assertNotNull(pcxImagingParameters55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "pcx" + "'", str58, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters59);
        org.junit.Assert.assertNull(imageMetadata60);
        org.junit.Assert.assertNull(byteArray61);
        org.junit.Assert.assertNull(imageMetadata62);
        org.junit.Assert.assertNull(imageMetadata64);
    }

    @Test
    public void test1237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1237");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        boolean boolean32 = pcxImageParser0.canAcceptExtension("Pcx-Custom");
        java.io.File file33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = null;
        byte[] byteArray37 = pcxImageParser34.getIccProfileBytes(byteSource35, pcxImagingParameters36);
        java.nio.ByteOrder byteOrder38 = pcxImageParser34.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance40 = pcxImageParser34.getFormatCompliance(byteSource39);
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser42 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = null;
        byte[] byteArray45 = pcxImageParser42.getIccProfileBytes(byteSource43, pcxImagingParameters44);
        java.lang.String str46 = pcxImageParser42.getName();
        java.lang.String str47 = pcxImageParser42.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser49 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder50 = pcxImageParser49.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance52 = pcxImageParser49.getFormatCompliance(byteSource51);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters53 = pcxImageParser49.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata54 = pcxImageParser42.getMetadata(byteSource48, pcxImagingParameters53);
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser56 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata58 = pcxImageParser56.getMetadata(byteSource57);
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser60 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder61 = pcxImageParser60.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance63 = pcxImageParser60.getFormatCompliance(byteSource62);
        org.apache.commons.imaging.bytesource.ByteSource byteSource64 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata65 = pcxImageParser60.getMetadata(byteSource64);
        boolean boolean67 = pcxImageParser60.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters68 = pcxImageParser60.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata69 = pcxImageParser56.getMetadata(byteSource59, pcxImagingParameters68);
        byte[] byteArray70 = pcxImageParser42.getIccProfileBytes(byteSource55, pcxImagingParameters68);
        org.apache.commons.imaging.ImageFormat imageFormat71 = null;
        boolean boolean72 = pcxImageParser42.canAcceptType(imageFormat71);
        org.apache.commons.imaging.bytesource.ByteSource byteSource73 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser74 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder75 = pcxImageParser74.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource76 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance77 = pcxImageParser74.getFormatCompliance(byteSource76);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters78 = pcxImageParser74.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat79 = null;
        boolean boolean80 = pcxImageParser74.canAcceptType(imageFormat79);
        java.lang.String str81 = pcxImageParser74.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters82 = pcxImageParser74.getDefaultParameters();
        byte[] byteArray83 = pcxImageParser42.getIccProfileBytes(byteSource73, pcxImagingParameters82);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata84 = pcxImageParser34.getMetadata(byteSource41, pcxImagingParameters82);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage85 = pcxImageParser0.getBufferedImage(file33, pcxImagingParameters82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(byteArray37);
        org.junit.Assert.assertNotNull(byteOrder38);
        org.junit.Assert.assertNull(formatCompliance40);
        org.junit.Assert.assertNull(byteArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Pcx-Custom" + "'", str46, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Pcx-Custom" + "'", str47, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder50);
        org.junit.Assert.assertNull(formatCompliance52);
        org.junit.Assert.assertNotNull(pcxImagingParameters53);
        org.junit.Assert.assertNull(imageMetadata54);
        org.junit.Assert.assertNull(imageMetadata58);
        org.junit.Assert.assertNotNull(byteOrder61);
        org.junit.Assert.assertNull(formatCompliance63);
        org.junit.Assert.assertNull(imageMetadata65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters68);
        org.junit.Assert.assertNull(imageMetadata69);
        org.junit.Assert.assertNull(byteArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(byteOrder75);
        org.junit.Assert.assertNull(formatCompliance77);
        org.junit.Assert.assertNotNull(pcxImagingParameters78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "pcx" + "'", str81, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters82);
        org.junit.Assert.assertNull(byteArray83);
        org.junit.Assert.assertNull(imageMetadata84);
    }

    @Test
    public void test1238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1238");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = null;
        byte[] byteArray33 = pcxImageParser30.getIccProfileBytes(byteSource31, pcxImagingParameters32);
        java.lang.String str34 = pcxImageParser30.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser30.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser0.getMetadata(byteSource29, pcxImagingParameters35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser0.getMetadata(byteSource37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser0.getMetadata(byteSource39);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass41 = imageMetadata40.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "pcx" + "'", str34, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNull(imageMetadata40);
    }

    @Test
    public void test1239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1239");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = null;
        byte[] byteArray9 = pcxImageParser6.getIccProfileBytes(byteSource7, pcxImagingParameters8);
        java.lang.String str10 = pcxImageParser6.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource5, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder16 = pcxImageParser15.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser15.getFormatCompliance(byteSource17);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser15.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser21.getMetadata(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder26 = pcxImageParser25.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance28 = pcxImageParser25.getFormatCompliance(byteSource27);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata30 = pcxImageParser25.getMetadata(byteSource29);
        boolean boolean32 = pcxImageParser25.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser25.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser21.getMetadata(byteSource24, pcxImagingParameters33);
        byte[] byteArray35 = pcxImageParser15.getIccProfileBytes(byteSource20, pcxImagingParameters33);
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser15.getMetadata(byteSource36, pcxImagingParameters37);
        java.nio.ByteOrder byteOrder39 = pcxImageParser15.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser41 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder42 = pcxImageParser41.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance44 = pcxImageParser41.getFormatCompliance(byteSource43);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser41.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser47 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser47.getMetadata(byteSource48);
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser51 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder52 = pcxImageParser51.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance54 = pcxImageParser51.getFormatCompliance(byteSource53);
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata56 = pcxImageParser51.getMetadata(byteSource55);
        boolean boolean58 = pcxImageParser51.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters59 = pcxImageParser51.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata60 = pcxImageParser47.getMetadata(byteSource50, pcxImagingParameters59);
        byte[] byteArray61 = pcxImageParser41.getIccProfileBytes(byteSource46, pcxImagingParameters59);
        java.lang.String str62 = pcxImageParser41.getDefaultExtension();
        java.lang.String str63 = pcxImageParser41.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat64 = null;
        boolean boolean65 = pcxImageParser41.canAcceptType(imageFormat64);
        org.apache.commons.imaging.bytesource.ByteSource byteSource66 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance67 = pcxImageParser41.getFormatCompliance(byteSource66);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters68 = pcxImageParser41.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata69 = pcxImageParser15.getMetadata(byteSource40, pcxImagingParameters68);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension70 = pcxImageParser0.getImageSize(byteSource14, pcxImagingParameters68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(byteArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "pcx" + "'", str10, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNull(formatCompliance18);
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNotNull(byteOrder26);
        org.junit.Assert.assertNull(formatCompliance28);
        org.junit.Assert.assertNull(imageMetadata30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertNull(byteArray35);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNotNull(byteOrder39);
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNull(formatCompliance44);
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertNotNull(byteOrder52);
        org.junit.Assert.assertNull(formatCompliance54);
        org.junit.Assert.assertNull(imageMetadata56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters59);
        org.junit.Assert.assertNull(imageMetadata60);
        org.junit.Assert.assertNull(byteArray61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "pcx" + "'", str62, "pcx");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "pcx" + "'", str63, "pcx");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(formatCompliance67);
        org.junit.Assert.assertNotNull(pcxImagingParameters68);
        org.junit.Assert.assertNull(imageMetadata69);
    }

    @Test
    public void test1240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1240");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser0.getDefaultParameters();
        java.lang.Class<?> wildcardClass29 = pcxImagingParameters28.getClass();
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test1241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1241");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.nio.ByteOrder byteOrder4 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder7 = pcxImageParser6.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance9 = pcxImageParser6.getFormatCompliance(byteSource8);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat11 = null;
        boolean boolean12 = pcxImageParser6.canAcceptType(imageFormat11);
        java.lang.String str13 = pcxImageParser6.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource5, pcxImagingParameters14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser0.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder20 = pcxImageParser19.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance22 = pcxImageParser19.getFormatCompliance(byteSource21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser19.getDefaultParameters();
        java.lang.String str24 = pcxImageParser19.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser19.getMetadata(byteSource25, pcxImagingParameters26);
        java.lang.String str28 = pcxImageParser19.getDefaultExtension();
        boolean boolean30 = pcxImageParser19.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser19.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser0.getMetadata(byteSource18, pcxImagingParameters31);
        java.io.File file33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder35 = pcxImageParser34.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance37 = pcxImageParser34.getFormatCompliance(byteSource36);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser34.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = pcxImageParser34.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser34.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser42 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = null;
        byte[] byteArray45 = pcxImageParser42.getIccProfileBytes(byteSource43, pcxImagingParameters44);
        java.lang.String str46 = pcxImageParser42.getName();
        java.lang.String str47 = pcxImageParser42.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser49 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder50 = pcxImageParser49.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance52 = pcxImageParser49.getFormatCompliance(byteSource51);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters53 = pcxImageParser49.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata54 = pcxImageParser42.getMetadata(byteSource48, pcxImagingParameters53);
        java.lang.String str55 = pcxImageParser42.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata57 = pcxImageParser42.getMetadata(byteSource56);
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser59 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters61 = null;
        byte[] byteArray62 = pcxImageParser59.getIccProfileBytes(byteSource60, pcxImagingParameters61);
        java.lang.String str63 = pcxImageParser59.getName();
        java.lang.String str64 = pcxImageParser59.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser66 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder67 = pcxImageParser66.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource68 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance69 = pcxImageParser66.getFormatCompliance(byteSource68);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters70 = pcxImageParser66.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata71 = pcxImageParser59.getMetadata(byteSource65, pcxImagingParameters70);
        org.apache.commons.imaging.bytesource.ByteSource byteSource72 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser73 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource74 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters75 = null;
        byte[] byteArray76 = pcxImageParser73.getIccProfileBytes(byteSource74, pcxImagingParameters75);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters77 = pcxImageParser73.getDefaultParameters();
        byte[] byteArray78 = pcxImageParser59.getIccProfileBytes(byteSource72, pcxImagingParameters77);
        byte[] byteArray79 = pcxImageParser42.getIccProfileBytes(byteSource58, pcxImagingParameters77);
        byte[] byteArray80 = pcxImageParser34.getIccProfileBytes(byteSource41, pcxImagingParameters77);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension81 = pcxImageParser0.getImageSize(file33, pcxImagingParameters77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNull(formatCompliance9);
        org.junit.Assert.assertNotNull(pcxImagingParameters10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNull(formatCompliance22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "pcx" + "'", str24, "pcx");
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "pcx" + "'", str28, "pcx");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNull(formatCompliance37);
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
        org.junit.Assert.assertNotNull(pcxImagingParameters39);
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(byteArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Pcx-Custom" + "'", str46, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Pcx-Custom" + "'", str47, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder50);
        org.junit.Assert.assertNull(formatCompliance52);
        org.junit.Assert.assertNotNull(pcxImagingParameters53);
        org.junit.Assert.assertNull(imageMetadata54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Pcx-Custom" + "'", str55, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata57);
        org.junit.Assert.assertNull(byteArray62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Pcx-Custom" + "'", str63, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Pcx-Custom" + "'", str64, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertNull(formatCompliance69);
        org.junit.Assert.assertNotNull(pcxImagingParameters70);
        org.junit.Assert.assertNull(imageMetadata71);
        org.junit.Assert.assertNull(byteArray76);
        org.junit.Assert.assertNotNull(pcxImagingParameters77);
        org.junit.Assert.assertNull(byteArray78);
        org.junit.Assert.assertNull(byteArray79);
        org.junit.Assert.assertNull(byteArray80);
    }

    @Test
    public void test1242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1242");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.nio.ByteOrder byteOrder4 = pcxImageParser0.getByteOrder();
        java.lang.String str5 = pcxImageParser0.getName();
        java.io.File file6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = null;
        byte[] byteArray10 = pcxImageParser7.getIccProfileBytes(byteSource8, pcxImagingParameters9);
        java.lang.String str11 = pcxImageParser7.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser7.getMetadata(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance15 = pcxImageParser7.getFormatCompliance(byteSource14);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = pcxImageParser7.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray17 = pcxImageParser0.getIccProfileBytes(file6, pcxImagingParameters16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Pcx-Custom" + "'", str11, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertNull(formatCompliance15);
        org.junit.Assert.assertNotNull(pcxImagingParameters16);
    }

    @Test
    public void test1243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1243");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = null;
        byte[] byteArray33 = pcxImageParser30.getIccProfileBytes(byteSource31, pcxImagingParameters32);
        java.lang.String str34 = pcxImageParser30.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser30.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser0.getMetadata(byteSource29, pcxImagingParameters35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser0.getMetadata(byteSource37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser0.getMetadata(byteSource39);
        org.apache.commons.imaging.ImageFormat imageFormat41 = null;
        boolean boolean42 = pcxImageParser0.canAcceptType(imageFormat41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser0.getMetadata(byteSource43);
        boolean boolean46 = pcxImageParser0.canAcceptExtension("Pcx-Custom");
        java.io.File file47 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension48 = pcxImageParser0.getImageSize(file47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "pcx" + "'", str34, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test1244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1244");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.lang.String str4 = pcxImageParser0.getName();
        boolean boolean6 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        java.lang.String str13 = pcxImageParser8.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser8.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser8.canAcceptExtension("");
        boolean boolean19 = pcxImageParser8.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = null;
        byte[] byteArray24 = pcxImageParser21.getIccProfileBytes(byteSource22, pcxImagingParameters23);
        java.lang.String str25 = pcxImageParser21.getName();
        java.lang.String str26 = pcxImageParser21.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder29 = pcxImageParser28.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance31 = pcxImageParser28.getFormatCompliance(byteSource30);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser28.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser21.getMetadata(byteSource27, pcxImagingParameters32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser35.getMetadata(byteSource36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder40 = pcxImageParser39.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance42 = pcxImageParser39.getFormatCompliance(byteSource41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser39.getMetadata(byteSource43);
        boolean boolean46 = pcxImageParser39.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = pcxImageParser39.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser35.getMetadata(byteSource38, pcxImagingParameters47);
        byte[] byteArray49 = pcxImageParser21.getIccProfileBytes(byteSource34, pcxImagingParameters47);
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance51 = pcxImageParser21.getFormatCompliance(byteSource50);
        java.nio.ByteOrder byteOrder52 = pcxImageParser21.getByteOrder();
        java.nio.ByteOrder byteOrder53 = pcxImageParser21.getByteOrder();
        java.lang.String str54 = pcxImageParser21.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters55 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata56 = pcxImageParser8.getMetadata(byteSource20, pcxImagingParameters55);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata57 = pcxImageParser0.getMetadata(byteSource7, pcxImagingParameters55);
        java.io.File file58 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray59 = pcxImageParser0.getIccProfileBytes(file58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Pcx-Custom" + "'", str26, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertNull(formatCompliance31);
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
        org.junit.Assert.assertNull(imageMetadata33);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNull(formatCompliance42);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters47);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNull(byteArray49);
        org.junit.Assert.assertNull(formatCompliance51);
        org.junit.Assert.assertNotNull(byteOrder52);
        org.junit.Assert.assertNotNull(byteOrder53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Pcx-Custom" + "'", str54, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters55);
        org.junit.Assert.assertNull(imageMetadata56);
        org.junit.Assert.assertNull(imageMetadata57);
    }

    @Test
    public void test1245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1245");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.ImageFormat imageFormat8 = null;
        boolean boolean9 = pcxImageParser0.canAcceptType(imageFormat8);
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata11 = pcxImageParser0.getMetadata(byteSource10);
        java.io.File file12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser0.getMetadata(file12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(imageMetadata11);
    }

    @Test
    public void test1246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1246");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.nio.ByteOrder byteOrder4 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser0.getFormatCompliance(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = null;
        byte[] byteArray11 = pcxImageParser8.getIccProfileBytes(byteSource9, pcxImagingParameters10);
        java.lang.String str12 = pcxImageParser8.getName();
        java.lang.String str13 = pcxImageParser8.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder16 = pcxImageParser15.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser15.getFormatCompliance(byteSource17);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser15.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata20 = pcxImageParser8.getMetadata(byteSource14, pcxImagingParameters19);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser22 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser22.getMetadata(byteSource23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder27 = pcxImageParser26.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance29 = pcxImageParser26.getFormatCompliance(byteSource28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser26.getMetadata(byteSource30);
        boolean boolean33 = pcxImageParser26.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser26.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser22.getMetadata(byteSource25, pcxImagingParameters34);
        byte[] byteArray36 = pcxImageParser8.getIccProfileBytes(byteSource21, pcxImagingParameters34);
        org.apache.commons.imaging.ImageFormat imageFormat37 = null;
        boolean boolean38 = pcxImageParser8.canAcceptType(imageFormat37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder41 = pcxImageParser40.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance43 = pcxImageParser40.getFormatCompliance(byteSource42);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = pcxImageParser40.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat45 = null;
        boolean boolean46 = pcxImageParser40.canAcceptType(imageFormat45);
        java.lang.String str47 = pcxImageParser40.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = pcxImageParser40.getDefaultParameters();
        byte[] byteArray49 = pcxImageParser8.getIccProfileBytes(byteSource39, pcxImagingParameters48);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata50 = pcxImageParser0.getMetadata(byteSource7, pcxImagingParameters48);
        java.io.PrintWriter printWriter51 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean53 = pcxImageParser0.dumpImageFile(printWriter51, byteSource52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNull(formatCompliance6);
        org.junit.Assert.assertNull(byteArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Pcx-Custom" + "'", str12, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNull(formatCompliance18);
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
        org.junit.Assert.assertNull(imageMetadata20);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNull(formatCompliance29);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(byteOrder41);
        org.junit.Assert.assertNull(formatCompliance43);
        org.junit.Assert.assertNotNull(pcxImagingParameters44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "pcx" + "'", str47, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters48);
        org.junit.Assert.assertNull(byteArray49);
        org.junit.Assert.assertNull(imageMetadata50);
    }

    @Test
    public void test1247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1247");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = null;
        byte[] byteArray11 = pcxImageParser8.getIccProfileBytes(byteSource9, pcxImagingParameters10);
        java.nio.ByteOrder byteOrder12 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance14 = pcxImageParser8.getFormatCompliance(byteSource13);
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = null;
        byte[] byteArray19 = pcxImageParser16.getIccProfileBytes(byteSource17, pcxImagingParameters18);
        java.lang.String str20 = pcxImageParser16.getName();
        java.lang.String str21 = pcxImageParser16.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser23 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder24 = pcxImageParser23.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance26 = pcxImageParser23.getFormatCompliance(byteSource25);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = pcxImageParser23.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata28 = pcxImageParser16.getMetadata(byteSource22, pcxImagingParameters27);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser30.getMetadata(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder35 = pcxImageParser34.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance37 = pcxImageParser34.getFormatCompliance(byteSource36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata39 = pcxImageParser34.getMetadata(byteSource38);
        boolean boolean41 = pcxImageParser34.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser34.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata43 = pcxImageParser30.getMetadata(byteSource33, pcxImagingParameters42);
        byte[] byteArray44 = pcxImageParser16.getIccProfileBytes(byteSource29, pcxImagingParameters42);
        org.apache.commons.imaging.ImageFormat imageFormat45 = null;
        boolean boolean46 = pcxImageParser16.canAcceptType(imageFormat45);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser48 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder49 = pcxImageParser48.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance51 = pcxImageParser48.getFormatCompliance(byteSource50);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser48.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat53 = null;
        boolean boolean54 = pcxImageParser48.canAcceptType(imageFormat53);
        java.lang.String str55 = pcxImageParser48.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters56 = pcxImageParser48.getDefaultParameters();
        byte[] byteArray57 = pcxImageParser16.getIccProfileBytes(byteSource47, pcxImagingParameters56);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata58 = pcxImageParser8.getMetadata(byteSource15, pcxImagingParameters56);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension59 = pcxImageParser0.getImageSize(byteSource7, pcxImagingParameters56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(byteArray11);
        org.junit.Assert.assertNotNull(byteOrder12);
        org.junit.Assert.assertNull(formatCompliance14);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Pcx-Custom" + "'", str20, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder24);
        org.junit.Assert.assertNull(formatCompliance26);
        org.junit.Assert.assertNotNull(pcxImagingParameters27);
        org.junit.Assert.assertNull(imageMetadata28);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNull(formatCompliance37);
        org.junit.Assert.assertNull(imageMetadata39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertNull(imageMetadata43);
        org.junit.Assert.assertNull(byteArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(byteOrder49);
        org.junit.Assert.assertNull(formatCompliance51);
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "pcx" + "'", str55, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters56);
        org.junit.Assert.assertNull(byteArray57);
        org.junit.Assert.assertNull(imageMetadata58);
    }

    @Test
    public void test1248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1248");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.ImageFormat imageFormat8 = null;
        boolean boolean9 = pcxImageParser0.canAcceptType(imageFormat8);
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser0.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser0.getMetadata(byteSource12);
        java.lang.String str14 = pcxImageParser0.getName();
        java.io.File file15 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean16 = pcxImageParser0.canAcceptExtension(file15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Pcx-Custom" + "'", str14, "Pcx-Custom");
    }

    @Test
    public void test1249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1249");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance14 = pcxImageParser0.getFormatCompliance(byteSource13);
        boolean boolean16 = pcxImageParser0.canAcceptExtension("Pcx-Custom");
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters20 = null;
        byte[] byteArray21 = pcxImageParser18.getIccProfileBytes(byteSource19, pcxImagingParameters20);
        java.lang.String str22 = pcxImageParser18.getName();
        java.lang.String str23 = pcxImageParser18.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder26 = pcxImageParser25.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance28 = pcxImageParser25.getFormatCompliance(byteSource27);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = pcxImageParser25.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata30 = pcxImageParser18.getMetadata(byteSource24, pcxImagingParameters29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser32.getMetadata(byteSource33);
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser36 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder37 = pcxImageParser36.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance39 = pcxImageParser36.getFormatCompliance(byteSource38);
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser36.getMetadata(byteSource40);
        boolean boolean43 = pcxImageParser36.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = pcxImageParser36.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata45 = pcxImageParser32.getMetadata(byteSource35, pcxImagingParameters44);
        byte[] byteArray46 = pcxImageParser18.getIccProfileBytes(byteSource31, pcxImagingParameters44);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance48 = pcxImageParser18.getFormatCompliance(byteSource47);
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser50 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = null;
        byte[] byteArray53 = pcxImageParser50.getIccProfileBytes(byteSource51, pcxImagingParameters52);
        java.nio.ByteOrder byteOrder54 = pcxImageParser50.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser56 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder57 = pcxImageParser56.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance59 = pcxImageParser56.getFormatCompliance(byteSource58);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters60 = pcxImageParser56.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat61 = null;
        boolean boolean62 = pcxImageParser56.canAcceptType(imageFormat61);
        java.lang.String str63 = pcxImageParser56.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters64 = pcxImageParser56.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata65 = pcxImageParser50.getMetadata(byteSource55, pcxImagingParameters64);
        byte[] byteArray66 = pcxImageParser18.getIccProfileBytes(byteSource49, pcxImagingParameters64);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo67 = pcxImageParser0.getImageInfo(byteSource17, pcxImagingParameters64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(formatCompliance14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(byteArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Pcx-Custom" + "'", str22, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Pcx-Custom" + "'", str23, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder26);
        org.junit.Assert.assertNull(formatCompliance28);
        org.junit.Assert.assertNotNull(pcxImagingParameters29);
        org.junit.Assert.assertNull(imageMetadata30);
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNull(formatCompliance39);
        org.junit.Assert.assertNull(imageMetadata41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters44);
        org.junit.Assert.assertNull(imageMetadata45);
        org.junit.Assert.assertNull(byteArray46);
        org.junit.Assert.assertNull(formatCompliance48);
        org.junit.Assert.assertNull(byteArray53);
        org.junit.Assert.assertNotNull(byteOrder54);
        org.junit.Assert.assertNotNull(byteOrder57);
        org.junit.Assert.assertNull(formatCompliance59);
        org.junit.Assert.assertNotNull(pcxImagingParameters60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "pcx" + "'", str63, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters64);
        org.junit.Assert.assertNull(imageMetadata65);
        org.junit.Assert.assertNull(byteArray66);
    }

    @Test
    public void test1250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1250");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        java.nio.ByteOrder byteOrder32 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder35 = pcxImageParser34.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance37 = pcxImageParser34.getFormatCompliance(byteSource36);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser34.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser40.getMetadata(byteSource41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder45 = pcxImageParser44.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance47 = pcxImageParser44.getFormatCompliance(byteSource46);
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser44.getMetadata(byteSource48);
        boolean boolean51 = pcxImageParser44.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser44.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser40.getMetadata(byteSource43, pcxImagingParameters52);
        byte[] byteArray54 = pcxImageParser34.getIccProfileBytes(byteSource39, pcxImagingParameters52);
        java.lang.String str55 = pcxImageParser34.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters56 = pcxImageParser34.getDefaultParameters();
        byte[] byteArray57 = pcxImageParser0.getIccProfileBytes(byteSource33, pcxImagingParameters56);
        org.apache.commons.imaging.ImageFormat imageFormat58 = null;
        boolean boolean59 = pcxImageParser0.canAcceptType(imageFormat58);
        java.io.File file60 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata61 = pcxImageParser0.getMetadata(file60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNull(formatCompliance37);
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertNotNull(byteOrder45);
        org.junit.Assert.assertNull(formatCompliance47);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertNull(byteArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Pcx-Custom" + "'", str55, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters56);
        org.junit.Assert.assertNull(byteArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test1251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1251");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata10 = pcxImageParser8.getMetadata(byteSource9);
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser12 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder13 = pcxImageParser12.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance15 = pcxImageParser12.getFormatCompliance(byteSource14);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = pcxImageParser12.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata20 = pcxImageParser18.getMetadata(byteSource19);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser22 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder23 = pcxImageParser22.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance25 = pcxImageParser22.getFormatCompliance(byteSource24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser22.getMetadata(byteSource26);
        boolean boolean29 = pcxImageParser22.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser22.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser18.getMetadata(byteSource21, pcxImagingParameters30);
        byte[] byteArray32 = pcxImageParser12.getIccProfileBytes(byteSource17, pcxImagingParameters30);
        java.lang.String str33 = pcxImageParser12.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser12.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser8.getMetadata(byteSource11, pcxImagingParameters34);
        byte[] byteArray36 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters34);
        java.lang.Class<?> wildcardClass37 = pcxImagingParameters34.getClass();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(imageMetadata10);
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNull(formatCompliance15);
        org.junit.Assert.assertNotNull(pcxImagingParameters16);
        org.junit.Assert.assertNull(imageMetadata20);
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertNull(formatCompliance25);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertNull(byteArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Pcx-Custom" + "'", str33, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test1252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1252");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = null;
        byte[] byteArray9 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters8);
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList11 = pcxImageParser0.getAllBufferedImages(byteSource10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(byteArray9);
    }

    @Test
    public void test1253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1253");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        boolean boolean30 = pcxImageParser0.canAcceptExtension("pcx");
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        java.io.File file32 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance33 = pcxImageParser0.getFormatCompliance(file32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrder31);
    }

    @Test
    public void test1254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1254");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser0.getMetadata(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser0.getMetadata(byteSource24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser0.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = null;
        byte[] byteArray32 = pcxImageParser29.getIccProfileBytes(byteSource30, pcxImagingParameters31);
        java.lang.String str33 = pcxImageParser29.getName();
        java.lang.String str34 = pcxImageParser29.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser36 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder37 = pcxImageParser36.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance39 = pcxImageParser36.getFormatCompliance(byteSource38);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser36.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser29.getMetadata(byteSource35, pcxImagingParameters40);
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser43 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata45 = pcxImageParser43.getMetadata(byteSource44);
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser47 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder48 = pcxImageParser47.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance50 = pcxImageParser47.getFormatCompliance(byteSource49);
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata52 = pcxImageParser47.getMetadata(byteSource51);
        boolean boolean54 = pcxImageParser47.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters55 = pcxImageParser47.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata56 = pcxImageParser43.getMetadata(byteSource46, pcxImagingParameters55);
        byte[] byteArray57 = pcxImageParser29.getIccProfileBytes(byteSource42, pcxImagingParameters55);
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance59 = pcxImageParser29.getFormatCompliance(byteSource58);
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser61 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters63 = null;
        byte[] byteArray64 = pcxImageParser61.getIccProfileBytes(byteSource62, pcxImagingParameters63);
        java.nio.ByteOrder byteOrder65 = pcxImageParser61.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource66 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser67 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder68 = pcxImageParser67.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance70 = pcxImageParser67.getFormatCompliance(byteSource69);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters71 = pcxImageParser67.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat72 = null;
        boolean boolean73 = pcxImageParser67.canAcceptType(imageFormat72);
        java.lang.String str74 = pcxImageParser67.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters75 = pcxImageParser67.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata76 = pcxImageParser61.getMetadata(byteSource66, pcxImagingParameters75);
        byte[] byteArray77 = pcxImageParser29.getIccProfileBytes(byteSource60, pcxImagingParameters75);
        byte[] byteArray78 = pcxImageParser0.getIccProfileBytes(byteSource28, pcxImagingParameters75);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters79 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource80 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo81 = pcxImageParser0.getImageInfo(byteSource80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNull(byteArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Pcx-Custom" + "'", str33, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Pcx-Custom" + "'", str34, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNull(formatCompliance39);
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(imageMetadata41);
        org.junit.Assert.assertNull(imageMetadata45);
        org.junit.Assert.assertNotNull(byteOrder48);
        org.junit.Assert.assertNull(formatCompliance50);
        org.junit.Assert.assertNull(imageMetadata52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters55);
        org.junit.Assert.assertNull(imageMetadata56);
        org.junit.Assert.assertNull(byteArray57);
        org.junit.Assert.assertNull(formatCompliance59);
        org.junit.Assert.assertNull(byteArray64);
        org.junit.Assert.assertNotNull(byteOrder65);
        org.junit.Assert.assertNotNull(byteOrder68);
        org.junit.Assert.assertNull(formatCompliance70);
        org.junit.Assert.assertNotNull(pcxImagingParameters71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "pcx" + "'", str74, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters75);
        org.junit.Assert.assertNull(imageMetadata76);
        org.junit.Assert.assertNull(byteArray77);
        org.junit.Assert.assertNull(byteArray78);
        org.junit.Assert.assertNotNull(pcxImagingParameters79);
    }

    @Test
    public void test1255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1255");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.lang.String str4 = pcxImageParser0.getName();
        boolean boolean6 = pcxImageParser0.canAcceptExtension("hi!");
        java.nio.ByteOrder byteOrder7 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = pcxImageParser0.dumpImageFile(byteSource8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteOrder7);
    }

    @Test
    public void test1256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1256");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser0.getMetadata(byteSource7);
        java.io.File file9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser0.getFormatCompliance(file9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(imageMetadata8);
    }

    @Test
    public void test1257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1257");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        java.io.File file8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList9 = pcxImageParser0.getAllBufferedImages(file8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance7);
    }

    @Test
    public void test1258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1258");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = null;
        byte[] byteArray33 = pcxImageParser30.getIccProfileBytes(byteSource31, pcxImagingParameters32);
        java.lang.String str34 = pcxImageParser30.getName();
        java.lang.String str35 = pcxImageParser30.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser37 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder38 = pcxImageParser37.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance40 = pcxImageParser37.getFormatCompliance(byteSource39);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = pcxImageParser37.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser30.getMetadata(byteSource36, pcxImagingParameters41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser44.getMetadata(byteSource45);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser48 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder49 = pcxImageParser48.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance51 = pcxImageParser48.getFormatCompliance(byteSource50);
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser48.getMetadata(byteSource52);
        boolean boolean55 = pcxImageParser48.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters56 = pcxImageParser48.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata57 = pcxImageParser44.getMetadata(byteSource47, pcxImagingParameters56);
        byte[] byteArray58 = pcxImageParser30.getIccProfileBytes(byteSource43, pcxImagingParameters56);
        boolean boolean60 = pcxImageParser30.canAcceptExtension("pcx");
        java.nio.ByteOrder byteOrder61 = pcxImageParser30.getByteOrder();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters62 = pcxImageParser30.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo63 = pcxImageParser0.getImageInfo(byteSource29, pcxImagingParameters62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Pcx-Custom" + "'", str34, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Pcx-Custom" + "'", str35, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder38);
        org.junit.Assert.assertNull(formatCompliance40);
        org.junit.Assert.assertNotNull(pcxImagingParameters41);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertNull(imageMetadata46);
        org.junit.Assert.assertNotNull(byteOrder49);
        org.junit.Assert.assertNull(formatCompliance51);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters56);
        org.junit.Assert.assertNull(imageMetadata57);
        org.junit.Assert.assertNull(byteArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(byteOrder61);
        org.junit.Assert.assertNotNull(pcxImagingParameters62);
    }

    @Test
    public void test1259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1259");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.ImageFormat imageFormat1 = null;
        boolean boolean2 = pcxImageParser0.canAcceptType(imageFormat1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance4 = pcxImageParser0.getFormatCompliance(byteSource3);
        java.nio.ByteOrder byteOrder5 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = pcxImageParser0.dumpImageFile(byteSource6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(formatCompliance4);
        org.junit.Assert.assertNotNull(byteOrder5);
    }

    @Test
    public void test1260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1260");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser9.canAcceptType(imageFormat14);
        java.lang.String str16 = pcxImageParser9.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser9.getDefaultParameters();
        byte[] byteArray18 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters17);
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser20 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder21 = pcxImageParser20.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance23 = pcxImageParser20.getFormatCompliance(byteSource22);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = pcxImageParser20.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat25 = null;
        boolean boolean26 = pcxImageParser20.canAcceptType(imageFormat25);
        java.lang.String str27 = pcxImageParser20.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser20.getDefaultParameters();
        byte[] byteArray29 = pcxImageParser0.getIccProfileBytes(byteSource19, pcxImagingParameters28);
        java.awt.image.BufferedImage bufferedImage30 = null;
        java.io.OutputStream outputStream31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = null;
        byte[] byteArray35 = pcxImageParser32.getIccProfileBytes(byteSource33, pcxImagingParameters34);
        java.lang.String str36 = pcxImageParser32.getName();
        java.lang.String str37 = pcxImageParser32.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder40 = pcxImageParser39.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance42 = pcxImageParser39.getFormatCompliance(byteSource41);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser39.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser32.getMetadata(byteSource38, pcxImagingParameters43);
        java.lang.String str45 = pcxImageParser32.getName();
        org.apache.commons.imaging.ImageFormat imageFormat46 = null;
        boolean boolean47 = pcxImageParser32.canAcceptType(imageFormat46);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = pcxImageParser32.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage30, outputStream31, pcxImagingParameters48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "pcx" + "'", str16, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertNotNull(byteOrder21);
        org.junit.Assert.assertNull(formatCompliance23);
        org.junit.Assert.assertNotNull(pcxImagingParameters24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "pcx" + "'", str27, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(byteArray29);
        org.junit.Assert.assertNull(byteArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Pcx-Custom" + "'", str36, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Pcx-Custom" + "'", str37, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNull(formatCompliance42);
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Pcx-Custom" + "'", str45, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters48);
    }

    @Test
    public void test1261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1261");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser4.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser8.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.lang.String str29 = pcxImageParser8.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser4.getMetadata(byteSource7, pcxImagingParameters30);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters30);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = null;
        byte[] byteArray35 = pcxImageParser0.getIccProfileBytes(byteSource33, pcxImagingParameters34);
        java.nio.ByteOrder byteOrder36 = pcxImageParser0.getByteOrder();
        java.io.File file37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser38 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser38.getMetadata(byteSource39);
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser42 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder43 = pcxImageParser42.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance45 = pcxImageParser42.getFormatCompliance(byteSource44);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser42.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser48 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata50 = pcxImageParser48.getMetadata(byteSource49);
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser52 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder53 = pcxImageParser52.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance55 = pcxImageParser52.getFormatCompliance(byteSource54);
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata57 = pcxImageParser52.getMetadata(byteSource56);
        boolean boolean59 = pcxImageParser52.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters60 = pcxImageParser52.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata61 = pcxImageParser48.getMetadata(byteSource51, pcxImagingParameters60);
        byte[] byteArray62 = pcxImageParser42.getIccProfileBytes(byteSource47, pcxImagingParameters60);
        java.lang.String str63 = pcxImageParser42.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters64 = pcxImageParser42.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata65 = pcxImageParser38.getMetadata(byteSource41, pcxImagingParameters64);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension66 = pcxImageParser0.getImageSize(file37, pcxImagingParameters64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNull(byteArray35);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNull(formatCompliance45);
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
        org.junit.Assert.assertNull(imageMetadata50);
        org.junit.Assert.assertNotNull(byteOrder53);
        org.junit.Assert.assertNull(formatCompliance55);
        org.junit.Assert.assertNull(imageMetadata57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters60);
        org.junit.Assert.assertNull(imageMetadata61);
        org.junit.Assert.assertNull(byteArray62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Pcx-Custom" + "'", str63, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters64);
        org.junit.Assert.assertNull(imageMetadata65);
    }

    @Test
    public void test1262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1262");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata4 = pcxImageParser0.getMetadata(byteSource3);
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser0.getMetadata(byteSource8);
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser0.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser0.getFormatCompliance(byteSource12);
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNull(formatCompliance13);
    }

    @Test
    public void test1263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1263");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat37 = null;
        boolean boolean38 = pcxImageParser32.canAcceptType(imageFormat37);
        java.lang.String str39 = pcxImageParser32.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser32.getDefaultParameters();
        byte[] byteArray41 = pcxImageParser0.getIccProfileBytes(byteSource31, pcxImagingParameters40);
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList43 = pcxImageParser0.getAllBufferedImages(byteSource42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "pcx" + "'", str39, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(byteArray41);
    }

    @Test
    public void test1264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1264");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        boolean boolean9 = pcxImageParser0.canAcceptExtension("");
        org.apache.commons.imaging.ImageFormat imageFormat10 = null;
        boolean boolean11 = pcxImageParser0.canAcceptType(imageFormat10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser0.getDefaultParameters();
        java.nio.ByteOrder byteOrder13 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata17 = pcxImageParser15.getMetadata(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder20 = pcxImageParser19.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance22 = pcxImageParser19.getFormatCompliance(byteSource21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser19.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser25.getMetadata(byteSource26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder30 = pcxImageParser29.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser29.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser29.getMetadata(byteSource33);
        boolean boolean36 = pcxImageParser29.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser25.getMetadata(byteSource28, pcxImagingParameters37);
        byte[] byteArray39 = pcxImageParser19.getIccProfileBytes(byteSource24, pcxImagingParameters37);
        java.lang.String str40 = pcxImageParser19.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = pcxImageParser19.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser15.getMetadata(byteSource18, pcxImagingParameters41);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser15.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser45 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = null;
        byte[] byteArray48 = pcxImageParser45.getIccProfileBytes(byteSource46, pcxImagingParameters47);
        java.lang.String str49 = pcxImageParser45.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters50 = pcxImageParser45.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata51 = pcxImageParser15.getMetadata(byteSource44, pcxImagingParameters50);
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser15.getMetadata(byteSource52);
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser55 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata57 = pcxImageParser55.getMetadata(byteSource56);
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata59 = pcxImageParser55.getMetadata(byteSource58);
        java.lang.String str60 = pcxImageParser55.getDefaultExtension();
        java.lang.String str61 = pcxImageParser55.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters62 = pcxImageParser55.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata63 = pcxImageParser15.getMetadata(byteSource54, pcxImagingParameters62);
        byte[] byteArray64 = pcxImageParser0.getIccProfileBytes(byteSource14, pcxImagingParameters62);
        java.io.File file65 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance66 = pcxImageParser0.getFormatCompliance(file65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNull(imageMetadata17);
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNull(formatCompliance22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(byteOrder30);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters37);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNull(byteArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Pcx-Custom" + "'", str40, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters41);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertNull(byteArray48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "pcx" + "'", str49, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters50);
        org.junit.Assert.assertNull(imageMetadata51);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertNull(imageMetadata57);
        org.junit.Assert.assertNull(imageMetadata59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "pcx" + "'", str60, "pcx");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "pcx" + "'", str61, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters62);
        org.junit.Assert.assertNull(imageMetadata63);
        org.junit.Assert.assertNull(byteArray64);
    }

    @Test
    public void test1265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1265");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        java.lang.String str5 = pcxImageParser0.getName();
        java.io.File file6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = null;
        byte[] byteArray10 = pcxImageParser7.getIccProfileBytes(byteSource8, pcxImagingParameters9);
        java.lang.String str11 = pcxImageParser7.getName();
        java.lang.String str12 = pcxImageParser7.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance14 = pcxImageParser7.getFormatCompliance(byteSource13);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = pcxImageParser7.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage16 = pcxImageParser0.getBufferedImage(file6, pcxImagingParameters15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Pcx-Custom" + "'", str11, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Pcx-Custom" + "'", str12, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance14);
        org.junit.Assert.assertNotNull(pcxImagingParameters15);
    }

    @Test
    public void test1266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1266");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat2 = null;
        boolean boolean3 = pcxImageParser0.canAcceptType(imageFormat2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance5 = pcxImageParser0.getFormatCompliance(byteSource4);
        java.io.File file6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser0.getMetadata(file6, pcxImagingParameters7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(formatCompliance5);
    }

    @Test
    public void test1267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1267");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder8 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = null;
        byte[] byteArray13 = pcxImageParser10.getIccProfileBytes(byteSource11, pcxImagingParameters12);
        java.lang.String str14 = pcxImageParser10.getName();
        java.lang.String str15 = pcxImageParser10.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder18 = pcxImageParser17.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance20 = pcxImageParser17.getFormatCompliance(byteSource19);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser17.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser10.getMetadata(byteSource16, pcxImagingParameters21);
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata26 = pcxImageParser24.getMetadata(byteSource25);
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder29 = pcxImageParser28.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance31 = pcxImageParser28.getFormatCompliance(byteSource30);
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser28.getMetadata(byteSource32);
        boolean boolean35 = pcxImageParser28.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser28.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser24.getMetadata(byteSource27, pcxImagingParameters36);
        byte[] byteArray38 = pcxImageParser10.getIccProfileBytes(byteSource23, pcxImagingParameters36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance40 = pcxImageParser10.getFormatCompliance(byteSource39);
        java.nio.ByteOrder byteOrder41 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser43 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = null;
        byte[] byteArray46 = pcxImageParser43.getIccProfileBytes(byteSource44, pcxImagingParameters45);
        java.lang.String str47 = pcxImageParser43.getName();
        java.lang.String str48 = pcxImageParser43.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser50 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder51 = pcxImageParser50.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance53 = pcxImageParser50.getFormatCompliance(byteSource52);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters54 = pcxImageParser50.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata55 = pcxImageParser43.getMetadata(byteSource49, pcxImagingParameters54);
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser57 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata59 = pcxImageParser57.getMetadata(byteSource58);
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser61 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder62 = pcxImageParser61.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance64 = pcxImageParser61.getFormatCompliance(byteSource63);
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata66 = pcxImageParser61.getMetadata(byteSource65);
        boolean boolean68 = pcxImageParser61.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters69 = pcxImageParser61.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata70 = pcxImageParser57.getMetadata(byteSource60, pcxImagingParameters69);
        byte[] byteArray71 = pcxImageParser43.getIccProfileBytes(byteSource56, pcxImagingParameters69);
        byte[] byteArray72 = pcxImageParser10.getIccProfileBytes(byteSource42, pcxImagingParameters69);
        byte[] byteArray73 = pcxImageParser0.getIccProfileBytes(byteSource9, pcxImagingParameters69);
        java.nio.ByteOrder byteOrder74 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource75 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance76 = pcxImageParser0.getFormatCompliance(byteSource75);
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(byteArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Pcx-Custom" + "'", str14, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Pcx-Custom" + "'", str15, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNull(formatCompliance20);
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNull(imageMetadata26);
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertNull(formatCompliance31);
        org.junit.Assert.assertNull(imageMetadata33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertNull(byteArray38);
        org.junit.Assert.assertNull(formatCompliance40);
        org.junit.Assert.assertNotNull(byteOrder41);
        org.junit.Assert.assertNull(byteArray46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Pcx-Custom" + "'", str47, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Pcx-Custom" + "'", str48, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder51);
        org.junit.Assert.assertNull(formatCompliance53);
        org.junit.Assert.assertNotNull(pcxImagingParameters54);
        org.junit.Assert.assertNull(imageMetadata55);
        org.junit.Assert.assertNull(imageMetadata59);
        org.junit.Assert.assertNotNull(byteOrder62);
        org.junit.Assert.assertNull(formatCompliance64);
        org.junit.Assert.assertNull(imageMetadata66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters69);
        org.junit.Assert.assertNull(imageMetadata70);
        org.junit.Assert.assertNull(byteArray71);
        org.junit.Assert.assertNull(byteArray72);
        org.junit.Assert.assertNull(byteArray73);
        org.junit.Assert.assertNotNull(byteOrder74);
        org.junit.Assert.assertNull(formatCompliance76);
    }

    @Test
    public void test1268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1268");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser0.getMetadata(byteSource7);
        java.io.File file9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension10 = pcxImageParser0.getImageSize(file9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(imageMetadata8);
    }

    @Test
    public void test1269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1269");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = null;
        byte[] byteArray11 = pcxImageParser8.getIccProfileBytes(byteSource9, pcxImagingParameters10);
        java.lang.String str12 = pcxImageParser8.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource7, pcxImagingParameters14);
        java.io.File file16 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = pcxImageParser0.canAcceptExtension(file16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(byteArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "pcx" + "'", str12, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNull(imageMetadata15);
    }

    @Test
    public void test1270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1270");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser0.getFormatCompliance(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        java.io.File file9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata14 = pcxImageParser10.getMetadata(byteSource13);
        java.lang.String str15 = pcxImageParser10.getDefaultExtension();
        java.lang.String str16 = pcxImageParser10.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser10.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata18 = pcxImageParser0.getMetadata(file9, pcxImagingParameters17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "pcx" + "'", str15, "pcx");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "pcx" + "'", str16, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
    }

    @Test
    public void test1271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1271");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser0.canAcceptType(imageFormat23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance26 = pcxImageParser0.getFormatCompliance(byteSource25);
        java.lang.String str27 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str30 = pcxImageParser29.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser29.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser29.getMetadata(byteSource33);
        java.nio.ByteOrder byteOrder35 = pcxImageParser29.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = null;
        byte[] byteArray38 = pcxImageParser29.getIccProfileBytes(byteSource36, pcxImagingParameters37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = null;
        byte[] byteArray43 = pcxImageParser40.getIccProfileBytes(byteSource41, pcxImagingParameters42);
        java.lang.String str44 = pcxImageParser40.getName();
        java.lang.String str45 = pcxImageParser40.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser47 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder48 = pcxImageParser47.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance50 = pcxImageParser47.getFormatCompliance(byteSource49);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters51 = pcxImageParser47.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata52 = pcxImageParser40.getMetadata(byteSource46, pcxImagingParameters51);
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser54 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters56 = null;
        byte[] byteArray57 = pcxImageParser54.getIccProfileBytes(byteSource55, pcxImagingParameters56);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters58 = pcxImageParser54.getDefaultParameters();
        byte[] byteArray59 = pcxImageParser40.getIccProfileBytes(byteSource53, pcxImagingParameters58);
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser61 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder62 = pcxImageParser61.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance64 = pcxImageParser61.getFormatCompliance(byteSource63);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters65 = pcxImageParser61.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat66 = null;
        boolean boolean67 = pcxImageParser61.canAcceptType(imageFormat66);
        java.lang.String str68 = pcxImageParser61.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters69 = pcxImageParser61.getDefaultParameters();
        java.lang.String str70 = pcxImageParser61.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters71 = pcxImageParser61.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata72 = pcxImageParser40.getMetadata(byteSource60, pcxImagingParameters71);
        byte[] byteArray73 = pcxImageParser29.getIccProfileBytes(byteSource39, pcxImagingParameters71);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension74 = pcxImageParser0.getImageSize(byteSource28, pcxImagingParameters71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(formatCompliance26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "pcx" + "'", str27, "pcx");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Pcx-Custom" + "'", str30, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNull(byteArray38);
        org.junit.Assert.assertNull(byteArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Pcx-Custom" + "'", str44, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Pcx-Custom" + "'", str45, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder48);
        org.junit.Assert.assertNull(formatCompliance50);
        org.junit.Assert.assertNotNull(pcxImagingParameters51);
        org.junit.Assert.assertNull(imageMetadata52);
        org.junit.Assert.assertNull(byteArray57);
        org.junit.Assert.assertNotNull(pcxImagingParameters58);
        org.junit.Assert.assertNull(byteArray59);
        org.junit.Assert.assertNotNull(byteOrder62);
        org.junit.Assert.assertNull(formatCompliance64);
        org.junit.Assert.assertNotNull(pcxImagingParameters65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "pcx" + "'", str68, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Pcx-Custom" + "'", str70, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters71);
        org.junit.Assert.assertNull(imageMetadata72);
        org.junit.Assert.assertNull(byteArray73);
    }

    @Test
    public void test1272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1272");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        boolean boolean6 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser8.getDefaultParameters();
        byte[] byteArray14 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters13);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = pcxImageParser0.getDefaultParameters();
        java.io.File file16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser17.getMetadata(byteSource18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata21 = pcxImageParser17.getMetadata(byteSource20);
        java.lang.String str22 = pcxImageParser17.getDefaultExtension();
        java.lang.String str23 = pcxImageParser17.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = pcxImageParser17.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser17.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray26 = pcxImageParser0.getIccProfileBytes(file16, pcxImagingParameters25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertNull(byteArray14);
        org.junit.Assert.assertNotNull(pcxImagingParameters15);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(imageMetadata21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "pcx" + "'", str23, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters24);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
    }

    @Test
    public void test1273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1273");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = null;
        byte[] byteArray11 = pcxImageParser8.getIccProfileBytes(byteSource9, pcxImagingParameters10);
        java.nio.ByteOrder byteOrder12 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat19 = null;
        boolean boolean20 = pcxImageParser14.canAcceptType(imageFormat19);
        java.lang.String str21 = pcxImageParser14.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser8.getMetadata(byteSource13, pcxImagingParameters22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder26 = pcxImageParser25.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance28 = pcxImageParser25.getFormatCompliance(byteSource27);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata30 = pcxImageParser25.getMetadata(byteSource29);
        boolean boolean32 = pcxImageParser25.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser25.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser8.getMetadata(byteSource24, pcxImagingParameters33);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension35 = pcxImageParser0.getImageSize(byteSource7, pcxImagingParameters33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(byteArray11);
        org.junit.Assert.assertNotNull(byteOrder12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNotNull(byteOrder26);
        org.junit.Assert.assertNull(formatCompliance28);
        org.junit.Assert.assertNull(imageMetadata30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
        org.junit.Assert.assertNull(imageMetadata34);
    }

    @Test
    public void test1274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1274");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser9.canAcceptType(imageFormat14);
        java.lang.String str16 = pcxImageParser9.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser9.getDefaultParameters();
        byte[] byteArray18 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters17);
        java.io.File file19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser20 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder21 = pcxImageParser20.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance23 = pcxImageParser20.getFormatCompliance(byteSource22);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = pcxImageParser20.getDefaultParameters();
        java.lang.String str25 = pcxImageParser20.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata28 = pcxImageParser20.getMetadata(byteSource26, pcxImagingParameters27);
        java.lang.String str29 = pcxImageParser20.getDefaultExtension();
        boolean boolean31 = pcxImageParser20.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser20.getDefaultParameters();
        java.lang.String str33 = pcxImageParser20.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = null;
        byte[] byteArray38 = pcxImageParser35.getIccProfileBytes(byteSource36, pcxImagingParameters37);
        java.lang.String str39 = pcxImageParser35.getDefaultExtension();
        java.lang.String str40 = pcxImageParser35.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser42 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = null;
        byte[] byteArray45 = pcxImageParser42.getIccProfileBytes(byteSource43, pcxImagingParameters44);
        java.lang.String str46 = pcxImageParser42.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser42.getMetadata(byteSource47);
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance50 = pcxImageParser42.getFormatCompliance(byteSource49);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters51 = pcxImageParser42.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat52 = null;
        boolean boolean53 = pcxImageParser42.canAcceptType(imageFormat52);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters54 = pcxImageParser42.getDefaultParameters();
        byte[] byteArray55 = pcxImageParser35.getIccProfileBytes(byteSource41, pcxImagingParameters54);
        byte[] byteArray56 = pcxImageParser20.getIccProfileBytes(byteSource34, pcxImagingParameters54);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension57 = pcxImageParser0.getImageSize(file19, pcxImagingParameters54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "pcx" + "'", str16, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertNotNull(byteOrder21);
        org.junit.Assert.assertNull(formatCompliance23);
        org.junit.Assert.assertNotNull(pcxImagingParameters24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "pcx" + "'", str25, "pcx");
        org.junit.Assert.assertNull(imageMetadata28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "pcx" + "'", str29, "pcx");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "pcx" + "'", str33, "pcx");
        org.junit.Assert.assertNull(byteArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "pcx" + "'", str39, "pcx");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Pcx-Custom" + "'", str40, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Pcx-Custom" + "'", str46, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNull(formatCompliance50);
        org.junit.Assert.assertNotNull(pcxImagingParameters51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters54);
        org.junit.Assert.assertNull(byteArray55);
        org.junit.Assert.assertNull(byteArray56);
    }

    @Test
    public void test1275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1275");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder30 = pcxImageParser29.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser29.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser35.getMetadata(byteSource36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder40 = pcxImageParser39.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance42 = pcxImageParser39.getFormatCompliance(byteSource41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser39.getMetadata(byteSource43);
        boolean boolean46 = pcxImageParser39.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = pcxImageParser39.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser35.getMetadata(byteSource38, pcxImagingParameters47);
        byte[] byteArray49 = pcxImageParser29.getIccProfileBytes(byteSource34, pcxImagingParameters47);
        java.lang.String str50 = pcxImageParser29.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters51 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata52 = pcxImageParser0.getMetadata(byteSource28, pcxImagingParameters51);
        java.io.File file53 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray54 = pcxImageParser0.getIccProfileBytes(file53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(byteOrder30);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNull(formatCompliance42);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters47);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNull(byteArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Pcx-Custom" + "'", str50, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters51);
        org.junit.Assert.assertNull(imageMetadata52);
    }

    @Test
    public void test1276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1276");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.lang.String str29 = pcxImageParser0.getName();
        java.io.File file30 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser0.getMetadata(file30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
    }

    @Test
    public void test1277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1277");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser0.getDefaultParameters();
        java.lang.String str29 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser0.getMetadata(byteSource30);
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata31);
    }

    @Test
    public void test1278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1278");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        boolean boolean23 = pcxImageParser0.canAcceptExtension("Pcx-Custom");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = pcxImageParser0.getDefaultParameters();
        boolean boolean26 = pcxImageParser0.canAcceptExtension("");
        java.io.File file27 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean28 = pcxImageParser0.canAcceptExtension(file27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test1279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1279");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        java.lang.String str8 = pcxImageParser0.getName();
        java.awt.image.BufferedImage bufferedImage9 = null;
        java.io.OutputStream outputStream10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str12 = pcxImageParser11.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance14 = pcxImageParser11.getFormatCompliance(byteSource13);
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser11.getMetadata(byteSource15);
        java.nio.ByteOrder byteOrder17 = pcxImageParser11.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = null;
        byte[] byteArray20 = pcxImageParser11.getIccProfileBytes(byteSource18, pcxImagingParameters19);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser22 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = null;
        byte[] byteArray25 = pcxImageParser22.getIccProfileBytes(byteSource23, pcxImagingParameters24);
        java.lang.String str26 = pcxImageParser22.getName();
        java.lang.String str27 = pcxImageParser22.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder30 = pcxImageParser29.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser29.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser22.getMetadata(byteSource28, pcxImagingParameters33);
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser36 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = null;
        byte[] byteArray39 = pcxImageParser36.getIccProfileBytes(byteSource37, pcxImagingParameters38);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser36.getDefaultParameters();
        byte[] byteArray41 = pcxImageParser22.getIccProfileBytes(byteSource35, pcxImagingParameters40);
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser43 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder44 = pcxImageParser43.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance46 = pcxImageParser43.getFormatCompliance(byteSource45);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = pcxImageParser43.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat48 = null;
        boolean boolean49 = pcxImageParser43.canAcceptType(imageFormat48);
        java.lang.String str50 = pcxImageParser43.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters51 = pcxImageParser43.getDefaultParameters();
        java.lang.String str52 = pcxImageParser43.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters53 = pcxImageParser43.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata54 = pcxImageParser22.getMetadata(byteSource42, pcxImagingParameters53);
        byte[] byteArray55 = pcxImageParser11.getIccProfileBytes(byteSource21, pcxImagingParameters53);
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage9, outputStream10, pcxImagingParameters53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Pcx-Custom" + "'", str8, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Pcx-Custom" + "'", str12, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance14);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder17);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertNull(byteArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Pcx-Custom" + "'", str26, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Pcx-Custom" + "'", str27, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder30);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertNull(byteArray39);
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(byteArray41);
        org.junit.Assert.assertNotNull(byteOrder44);
        org.junit.Assert.assertNull(formatCompliance46);
        org.junit.Assert.assertNotNull(pcxImagingParameters47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "pcx" + "'", str50, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Pcx-Custom" + "'", str52, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters53);
        org.junit.Assert.assertNull(imageMetadata54);
        org.junit.Assert.assertNull(byteArray55);
    }

    @Test
    public void test1280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1280");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.lang.String str29 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser31.getMetadata(byteSource32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder36 = pcxImageParser35.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance38 = pcxImageParser35.getFormatCompliance(byteSource37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser35.getMetadata(byteSource39);
        boolean boolean42 = pcxImageParser35.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser35.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser31.getMetadata(byteSource34, pcxImagingParameters43);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage45 = pcxImageParser0.getBufferedImage(byteSource30, pcxImagingParameters43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata33);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNull(formatCompliance38);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertNull(imageMetadata44);
    }

    @Test
    public void test1281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1281");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser0.getMetadata(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser0.getMetadata(byteSource24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser0.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance29 = pcxImageParser0.getFormatCompliance(byteSource28);
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNull(formatCompliance29);
    }

    @Test
    public void test1282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1282");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        boolean boolean30 = pcxImageParser0.canAcceptExtension("pcx");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str33 = pcxImageParser0.dumpImageFile(byteSource32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
    }

    @Test
    public void test1283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1283");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat37 = null;
        boolean boolean38 = pcxImageParser32.canAcceptType(imageFormat37);
        java.lang.String str39 = pcxImageParser32.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser32.getDefaultParameters();
        byte[] byteArray41 = pcxImageParser0.getIccProfileBytes(byteSource31, pcxImagingParameters40);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat43 = null;
        boolean boolean44 = pcxImageParser0.canAcceptType(imageFormat43);
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser46 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = null;
        byte[] byteArray49 = pcxImageParser46.getIccProfileBytes(byteSource47, pcxImagingParameters48);
        java.lang.String str50 = pcxImageParser46.getName();
        java.lang.String str51 = pcxImageParser46.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser53 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder54 = pcxImageParser53.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance56 = pcxImageParser53.getFormatCompliance(byteSource55);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters57 = pcxImageParser53.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata58 = pcxImageParser46.getMetadata(byteSource52, pcxImagingParameters57);
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance60 = pcxImageParser46.getFormatCompliance(byteSource59);
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser62 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters64 = null;
        byte[] byteArray65 = pcxImageParser62.getIccProfileBytes(byteSource63, pcxImagingParameters64);
        java.nio.ByteOrder byteOrder66 = pcxImageParser62.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource67 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser68 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder69 = pcxImageParser68.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource70 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance71 = pcxImageParser68.getFormatCompliance(byteSource70);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters72 = pcxImageParser68.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat73 = null;
        boolean boolean74 = pcxImageParser68.canAcceptType(imageFormat73);
        java.lang.String str75 = pcxImageParser68.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters76 = pcxImageParser68.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata77 = pcxImageParser62.getMetadata(byteSource67, pcxImagingParameters76);
        org.apache.commons.imaging.bytesource.ByteSource byteSource78 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser79 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder80 = pcxImageParser79.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource81 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance82 = pcxImageParser79.getFormatCompliance(byteSource81);
        org.apache.commons.imaging.bytesource.ByteSource byteSource83 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata84 = pcxImageParser79.getMetadata(byteSource83);
        boolean boolean86 = pcxImageParser79.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters87 = pcxImageParser79.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata88 = pcxImageParser62.getMetadata(byteSource78, pcxImagingParameters87);
        byte[] byteArray89 = pcxImageParser46.getIccProfileBytes(byteSource61, pcxImagingParameters87);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage90 = pcxImageParser0.getBufferedImage(byteSource45, pcxImagingParameters87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "pcx" + "'", str39, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(byteArray41);
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(byteArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Pcx-Custom" + "'", str50, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Pcx-Custom" + "'", str51, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder54);
        org.junit.Assert.assertNull(formatCompliance56);
        org.junit.Assert.assertNotNull(pcxImagingParameters57);
        org.junit.Assert.assertNull(imageMetadata58);
        org.junit.Assert.assertNull(formatCompliance60);
        org.junit.Assert.assertNull(byteArray65);
        org.junit.Assert.assertNotNull(byteOrder66);
        org.junit.Assert.assertNotNull(byteOrder69);
        org.junit.Assert.assertNull(formatCompliance71);
        org.junit.Assert.assertNotNull(pcxImagingParameters72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "pcx" + "'", str75, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters76);
        org.junit.Assert.assertNull(imageMetadata77);
        org.junit.Assert.assertNotNull(byteOrder80);
        org.junit.Assert.assertNull(formatCompliance82);
        org.junit.Assert.assertNull(imageMetadata84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters87);
        org.junit.Assert.assertNull(imageMetadata88);
        org.junit.Assert.assertNull(byteArray89);
    }

    @Test
    public void test1284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1284");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        java.nio.ByteOrder byteOrder32 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder35 = pcxImageParser34.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance37 = pcxImageParser34.getFormatCompliance(byteSource36);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser34.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser40.getMetadata(byteSource41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder45 = pcxImageParser44.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance47 = pcxImageParser44.getFormatCompliance(byteSource46);
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser44.getMetadata(byteSource48);
        boolean boolean51 = pcxImageParser44.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser44.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser40.getMetadata(byteSource43, pcxImagingParameters52);
        byte[] byteArray54 = pcxImageParser34.getIccProfileBytes(byteSource39, pcxImagingParameters52);
        java.lang.String str55 = pcxImageParser34.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters56 = pcxImageParser34.getDefaultParameters();
        byte[] byteArray57 = pcxImageParser0.getIccProfileBytes(byteSource33, pcxImagingParameters56);
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance59 = pcxImageParser0.getFormatCompliance(byteSource58);
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser61 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters63 = null;
        byte[] byteArray64 = pcxImageParser61.getIccProfileBytes(byteSource62, pcxImagingParameters63);
        java.lang.String str65 = pcxImageParser61.getName();
        java.lang.String str66 = pcxImageParser61.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource67 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance68 = pcxImageParser61.getFormatCompliance(byteSource67);
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser70 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder71 = pcxImageParser70.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource72 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance73 = pcxImageParser70.getFormatCompliance(byteSource72);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters74 = pcxImageParser70.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat75 = null;
        boolean boolean76 = pcxImageParser70.canAcceptType(imageFormat75);
        java.lang.String str77 = pcxImageParser70.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters78 = pcxImageParser70.getDefaultParameters();
        byte[] byteArray79 = pcxImageParser61.getIccProfileBytes(byteSource69, pcxImagingParameters78);
        org.apache.commons.imaging.ImageFormat imageFormat80 = null;
        boolean boolean81 = pcxImageParser61.canAcceptType(imageFormat80);
        org.apache.commons.imaging.ImageFormat imageFormat82 = null;
        boolean boolean83 = pcxImageParser61.canAcceptType(imageFormat82);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters84 = pcxImageParser61.getDefaultParameters();
        byte[] byteArray85 = pcxImageParser0.getIccProfileBytes(byteSource60, pcxImagingParameters84);
        java.lang.String str86 = pcxImageParser0.getName();
        java.io.File file87 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray88 = pcxImageParser0.getIccProfileBytes(file87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNull(formatCompliance37);
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertNotNull(byteOrder45);
        org.junit.Assert.assertNull(formatCompliance47);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertNull(byteArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Pcx-Custom" + "'", str55, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters56);
        org.junit.Assert.assertNull(byteArray57);
        org.junit.Assert.assertNull(formatCompliance59);
        org.junit.Assert.assertNull(byteArray64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Pcx-Custom" + "'", str65, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Pcx-Custom" + "'", str66, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance68);
        org.junit.Assert.assertNotNull(byteOrder71);
        org.junit.Assert.assertNull(formatCompliance73);
        org.junit.Assert.assertNotNull(pcxImagingParameters74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "pcx" + "'", str77, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters78);
        org.junit.Assert.assertNull(byteArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters84);
        org.junit.Assert.assertNull(byteArray85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "Pcx-Custom" + "'", str86, "Pcx-Custom");
    }

    @Test
    public void test1285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1285");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser0.canAcceptType(imageFormat23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance26 = pcxImageParser0.getFormatCompliance(byteSource25);
        java.lang.String str27 = pcxImageParser0.getDefaultExtension();
        java.awt.image.BufferedImage bufferedImage28 = null;
        java.io.OutputStream outputStream29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder31 = pcxImageParser30.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance33 = pcxImageParser30.getFormatCompliance(byteSource32);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser30.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser36 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser36.getMetadata(byteSource37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder41 = pcxImageParser40.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance43 = pcxImageParser40.getFormatCompliance(byteSource42);
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata45 = pcxImageParser40.getMetadata(byteSource44);
        boolean boolean47 = pcxImageParser40.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = pcxImageParser40.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser36.getMetadata(byteSource39, pcxImagingParameters48);
        byte[] byteArray50 = pcxImageParser30.getIccProfileBytes(byteSource35, pcxImagingParameters48);
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser30.getMetadata(byteSource51, pcxImagingParameters52);
        java.nio.ByteOrder byteOrder54 = pcxImageParser30.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser56 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder57 = pcxImageParser56.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance59 = pcxImageParser56.getFormatCompliance(byteSource58);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters60 = pcxImageParser56.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser62 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata64 = pcxImageParser62.getMetadata(byteSource63);
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser66 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder67 = pcxImageParser66.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource68 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance69 = pcxImageParser66.getFormatCompliance(byteSource68);
        org.apache.commons.imaging.bytesource.ByteSource byteSource70 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata71 = pcxImageParser66.getMetadata(byteSource70);
        boolean boolean73 = pcxImageParser66.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters74 = pcxImageParser66.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata75 = pcxImageParser62.getMetadata(byteSource65, pcxImagingParameters74);
        byte[] byteArray76 = pcxImageParser56.getIccProfileBytes(byteSource61, pcxImagingParameters74);
        java.lang.String str77 = pcxImageParser56.getDefaultExtension();
        java.lang.String str78 = pcxImageParser56.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat79 = null;
        boolean boolean80 = pcxImageParser56.canAcceptType(imageFormat79);
        org.apache.commons.imaging.bytesource.ByteSource byteSource81 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance82 = pcxImageParser56.getFormatCompliance(byteSource81);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters83 = pcxImageParser56.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata84 = pcxImageParser30.getMetadata(byteSource55, pcxImagingParameters83);
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage28, outputStream29, pcxImagingParameters83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(formatCompliance26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "pcx" + "'", str27, "pcx");
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNull(formatCompliance33);
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNotNull(byteOrder41);
        org.junit.Assert.assertNull(formatCompliance43);
        org.junit.Assert.assertNull(imageMetadata45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters48);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertNull(byteArray50);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertNotNull(byteOrder54);
        org.junit.Assert.assertNotNull(byteOrder57);
        org.junit.Assert.assertNull(formatCompliance59);
        org.junit.Assert.assertNotNull(pcxImagingParameters60);
        org.junit.Assert.assertNull(imageMetadata64);
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertNull(formatCompliance69);
        org.junit.Assert.assertNull(imageMetadata71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters74);
        org.junit.Assert.assertNull(imageMetadata75);
        org.junit.Assert.assertNull(byteArray76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "pcx" + "'", str77, "pcx");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "pcx" + "'", str78, "pcx");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNull(formatCompliance82);
        org.junit.Assert.assertNotNull(pcxImagingParameters83);
        org.junit.Assert.assertNull(imageMetadata84);
    }

    @Test
    public void test1286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1286");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = null;
        byte[] byteArray17 = pcxImageParser14.getIccProfileBytes(byteSource15, pcxImagingParameters16);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser14.getDefaultParameters();
        byte[] byteArray19 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters18);
        boolean boolean21 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser23 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder24 = pcxImageParser23.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance26 = pcxImageParser23.getFormatCompliance(byteSource25);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = pcxImageParser23.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser29.getMetadata(byteSource30);
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder34 = pcxImageParser33.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance36 = pcxImageParser33.getFormatCompliance(byteSource35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser33.getMetadata(byteSource37);
        boolean boolean40 = pcxImageParser33.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = pcxImageParser33.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser29.getMetadata(byteSource32, pcxImagingParameters41);
        byte[] byteArray43 = pcxImageParser23.getIccProfileBytes(byteSource28, pcxImagingParameters41);
        java.lang.String str44 = pcxImageParser23.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser23.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat46 = null;
        boolean boolean47 = pcxImageParser23.canAcceptType(imageFormat46);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = pcxImageParser23.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser0.getMetadata(byteSource22, pcxImagingParameters48);
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo51 = pcxImageParser0.getImageInfo(byteSource50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(byteArray17);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(byteOrder24);
        org.junit.Assert.assertNull(formatCompliance26);
        org.junit.Assert.assertNotNull(pcxImagingParameters27);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertNotNull(byteOrder34);
        org.junit.Assert.assertNull(formatCompliance36);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters41);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertNull(byteArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Pcx-Custom" + "'", str44, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters48);
        org.junit.Assert.assertNull(imageMetadata49);
    }

    @Test
    public void test1287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1287");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata10 = pcxImageParser8.getMetadata(byteSource9);
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser12 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder13 = pcxImageParser12.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance15 = pcxImageParser12.getFormatCompliance(byteSource14);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = pcxImageParser12.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata20 = pcxImageParser18.getMetadata(byteSource19);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser22 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder23 = pcxImageParser22.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance25 = pcxImageParser22.getFormatCompliance(byteSource24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser22.getMetadata(byteSource26);
        boolean boolean29 = pcxImageParser22.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser22.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser18.getMetadata(byteSource21, pcxImagingParameters30);
        byte[] byteArray32 = pcxImageParser12.getIccProfileBytes(byteSource17, pcxImagingParameters30);
        java.lang.String str33 = pcxImageParser12.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser12.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser8.getMetadata(byteSource11, pcxImagingParameters34);
        byte[] byteArray36 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters34);
        java.io.File file37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser38 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder39 = pcxImageParser38.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance41 = pcxImageParser38.getFormatCompliance(byteSource40);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser38.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser44.getMetadata(byteSource45);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser48 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder49 = pcxImageParser48.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance51 = pcxImageParser48.getFormatCompliance(byteSource50);
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser48.getMetadata(byteSource52);
        boolean boolean55 = pcxImageParser48.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters56 = pcxImageParser48.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata57 = pcxImageParser44.getMetadata(byteSource47, pcxImagingParameters56);
        byte[] byteArray58 = pcxImageParser38.getIccProfileBytes(byteSource43, pcxImagingParameters56);
        java.lang.String str59 = pcxImageParser38.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters60 = pcxImageParser38.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat61 = null;
        boolean boolean62 = pcxImageParser38.canAcceptType(imageFormat61);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters63 = pcxImageParser38.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters64 = pcxImageParser38.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray65 = pcxImageParser0.getIccProfileBytes(file37, pcxImagingParameters64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(imageMetadata10);
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNull(formatCompliance15);
        org.junit.Assert.assertNotNull(pcxImagingParameters16);
        org.junit.Assert.assertNull(imageMetadata20);
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertNull(formatCompliance25);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertNull(byteArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Pcx-Custom" + "'", str33, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertNotNull(byteOrder39);
        org.junit.Assert.assertNull(formatCompliance41);
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertNull(imageMetadata46);
        org.junit.Assert.assertNotNull(byteOrder49);
        org.junit.Assert.assertNull(formatCompliance51);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters56);
        org.junit.Assert.assertNull(imageMetadata57);
        org.junit.Assert.assertNull(byteArray58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Pcx-Custom" + "'", str59, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters63);
        org.junit.Assert.assertNotNull(pcxImagingParameters64);
    }

    @Test
    public void test1288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1288");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.io.File file7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(file7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1289");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance9 = pcxImageParser0.getFormatCompliance(byteSource8);
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNull(formatCompliance9);
    }

    @Test
    public void test1290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1290");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser24.canAcceptType(imageFormat29);
        java.lang.String str31 = pcxImageParser24.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser24.getDefaultParameters();
        byte[] byteArray33 = pcxImageParser0.getIccProfileBytes(byteSource23, pcxImagingParameters32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder36 = pcxImageParser35.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser38 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder39 = pcxImageParser38.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance41 = pcxImageParser38.getFormatCompliance(byteSource40);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser38.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser44.getMetadata(byteSource45);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser48 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder49 = pcxImageParser48.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance51 = pcxImageParser48.getFormatCompliance(byteSource50);
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser48.getMetadata(byteSource52);
        boolean boolean55 = pcxImageParser48.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters56 = pcxImageParser48.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata57 = pcxImageParser44.getMetadata(byteSource47, pcxImagingParameters56);
        byte[] byteArray58 = pcxImageParser38.getIccProfileBytes(byteSource43, pcxImagingParameters56);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata59 = pcxImageParser35.getMetadata(byteSource37, pcxImagingParameters56);
        byte[] byteArray60 = pcxImageParser0.getIccProfileBytes(byteSource34, pcxImagingParameters56);
        org.apache.commons.imaging.ImageFormat imageFormat61 = null;
        boolean boolean62 = pcxImageParser0.canAcceptType(imageFormat61);
        java.io.PrintWriter printWriter63 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource64 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean65 = pcxImageParser0.dumpImageFile(printWriter63, byteSource64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "pcx" + "'", str31, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteOrder39);
        org.junit.Assert.assertNull(formatCompliance41);
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertNull(imageMetadata46);
        org.junit.Assert.assertNotNull(byteOrder49);
        org.junit.Assert.assertNull(formatCompliance51);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters56);
        org.junit.Assert.assertNull(imageMetadata57);
        org.junit.Assert.assertNull(byteArray58);
        org.junit.Assert.assertNull(imageMetadata59);
        org.junit.Assert.assertNull(byteArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test1291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1291");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser0.canAcceptType(imageFormat14);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = pcxImageParser0.getDefaultParameters();
        java.lang.String str17 = pcxImageParser0.getDefaultExtension();
        java.io.File file18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension19 = pcxImageParser0.getImageSize(file18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "pcx" + "'", str17, "pcx");
    }

    @Test
    public void test1292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1292");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters6 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = null;
        byte[] byteArray11 = pcxImageParser8.getIccProfileBytes(byteSource9, pcxImagingParameters10);
        java.lang.String str12 = pcxImageParser8.getName();
        java.lang.String str13 = pcxImageParser8.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder16 = pcxImageParser15.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser15.getFormatCompliance(byteSource17);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser15.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata20 = pcxImageParser8.getMetadata(byteSource14, pcxImagingParameters19);
        java.lang.String str21 = pcxImageParser8.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser8.getMetadata(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = null;
        byte[] byteArray28 = pcxImageParser25.getIccProfileBytes(byteSource26, pcxImagingParameters27);
        java.lang.String str29 = pcxImageParser25.getName();
        java.lang.String str30 = pcxImageParser25.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser25.getMetadata(byteSource31, pcxImagingParameters36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = null;
        byte[] byteArray42 = pcxImageParser39.getIccProfileBytes(byteSource40, pcxImagingParameters41);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser39.getDefaultParameters();
        byte[] byteArray44 = pcxImageParser25.getIccProfileBytes(byteSource38, pcxImagingParameters43);
        byte[] byteArray45 = pcxImageParser8.getIccProfileBytes(byteSource24, pcxImagingParameters43);
        byte[] byteArray46 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters43);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser0.getMetadata(byteSource47);
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser50 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder51 = pcxImageParser50.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance53 = pcxImageParser50.getFormatCompliance(byteSource52);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters54 = pcxImageParser50.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser56 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata58 = pcxImageParser56.getMetadata(byteSource57);
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser60 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder61 = pcxImageParser60.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance63 = pcxImageParser60.getFormatCompliance(byteSource62);
        org.apache.commons.imaging.bytesource.ByteSource byteSource64 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata65 = pcxImageParser60.getMetadata(byteSource64);
        boolean boolean67 = pcxImageParser60.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters68 = pcxImageParser60.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata69 = pcxImageParser56.getMetadata(byteSource59, pcxImagingParameters68);
        byte[] byteArray70 = pcxImageParser50.getIccProfileBytes(byteSource55, pcxImagingParameters68);
        java.lang.String str71 = pcxImageParser50.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters72 = pcxImageParser50.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat73 = null;
        boolean boolean74 = pcxImageParser50.canAcceptType(imageFormat73);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters75 = pcxImageParser50.getDefaultParameters();
        byte[] byteArray76 = pcxImageParser0.getIccProfileBytes(byteSource49, pcxImagingParameters75);
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNotNull(pcxImagingParameters6);
        org.junit.Assert.assertNull(byteArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Pcx-Custom" + "'", str12, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNull(formatCompliance18);
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
        org.junit.Assert.assertNull(imageMetadata20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Pcx-Custom" + "'", str30, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertNull(byteArray42);
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertNull(byteArray44);
        org.junit.Assert.assertNull(byteArray45);
        org.junit.Assert.assertNull(byteArray46);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNotNull(byteOrder51);
        org.junit.Assert.assertNull(formatCompliance53);
        org.junit.Assert.assertNotNull(pcxImagingParameters54);
        org.junit.Assert.assertNull(imageMetadata58);
        org.junit.Assert.assertNotNull(byteOrder61);
        org.junit.Assert.assertNull(formatCompliance63);
        org.junit.Assert.assertNull(imageMetadata65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters68);
        org.junit.Assert.assertNull(imageMetadata69);
        org.junit.Assert.assertNull(byteArray70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Pcx-Custom" + "'", str71, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters75);
        org.junit.Assert.assertNull(byteArray76);
    }

    @Test
    public void test1293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1293");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters6 = pcxImageParser0.getDefaultParameters();
        boolean boolean8 = pcxImageParser0.canAcceptExtension("");
        java.lang.Class<?> wildcardClass9 = pcxImageParser0.getClass();
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNotNull(pcxImagingParameters6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1294");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        boolean boolean6 = pcxImageParser0.canAcceptExtension("hi!");
        java.lang.String str7 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = null;
        byte[] byteArray12 = pcxImageParser9.getIccProfileBytes(byteSource10, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser9.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser9.getMetadata(byteSource14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser9.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder20 = pcxImageParser19.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance22 = pcxImageParser19.getFormatCompliance(byteSource21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser19.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = null;
        byte[] byteArray28 = pcxImageParser25.getIccProfileBytes(byteSource26, pcxImagingParameters27);
        java.lang.String str29 = pcxImageParser25.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser25.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser19.getMetadata(byteSource24, pcxImagingParameters30);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser19.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser9.getMetadata(byteSource18, pcxImagingParameters32);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser0.getMetadata(byteSource8, pcxImagingParameters32);
        java.io.File file35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser36 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder37 = pcxImageParser36.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance39 = pcxImageParser36.getFormatCompliance(byteSource38);
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser36.getMetadata(byteSource40);
        boolean boolean43 = pcxImageParser36.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = pcxImageParser36.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser46 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = null;
        byte[] byteArray49 = pcxImageParser46.getIccProfileBytes(byteSource47, pcxImagingParameters48);
        java.lang.String str50 = pcxImageParser46.getName();
        java.lang.String str51 = pcxImageParser46.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance53 = pcxImageParser46.getFormatCompliance(byteSource52);
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser55 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder56 = pcxImageParser55.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance58 = pcxImageParser55.getFormatCompliance(byteSource57);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters59 = pcxImageParser55.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat60 = null;
        boolean boolean61 = pcxImageParser55.canAcceptType(imageFormat60);
        java.lang.String str62 = pcxImageParser55.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters63 = pcxImageParser55.getDefaultParameters();
        byte[] byteArray64 = pcxImageParser46.getIccProfileBytes(byteSource54, pcxImagingParameters63);
        byte[] byteArray65 = pcxImageParser36.getIccProfileBytes(byteSource45, pcxImagingParameters63);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension66 = pcxImageParser0.getImageSize(file35, pcxImagingParameters63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Pcx-Custom" + "'", str7, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNull(formatCompliance22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "pcx" + "'", str29, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
        org.junit.Assert.assertNull(imageMetadata33);
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNull(formatCompliance39);
        org.junit.Assert.assertNull(imageMetadata41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters44);
        org.junit.Assert.assertNull(byteArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Pcx-Custom" + "'", str50, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Pcx-Custom" + "'", str51, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance53);
        org.junit.Assert.assertNotNull(byteOrder56);
        org.junit.Assert.assertNull(formatCompliance58);
        org.junit.Assert.assertNotNull(pcxImagingParameters59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "pcx" + "'", str62, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters63);
        org.junit.Assert.assertNull(byteArray64);
        org.junit.Assert.assertNull(byteArray65);
    }

    @Test
    public void test1295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1295");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance9 = pcxImageParser0.getFormatCompliance(byteSource8);
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Pcx-Custom" + "'", str7, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance9);
    }

    @Test
    public void test1296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1296");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.ImageFormat imageFormat1 = null;
        boolean boolean2 = pcxImageParser0.canAcceptType(imageFormat1);
        java.io.File file3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata4 = pcxImageParser0.getMetadata(file3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test1297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1297");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance15 = pcxImageParser0.getFormatCompliance(byteSource14);
        java.io.File file16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser0.getFormatCompliance(file16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertNull(formatCompliance15);
    }

    @Test
    public void test1298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1298");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser0.canAcceptType(imageFormat23);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser0.getFormatCompliance(byteSource26);
        java.lang.String str28 = pcxImageParser0.getName();
        java.io.File file29 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList30 = pcxImageParser0.getAllBufferedImages(file29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Pcx-Custom" + "'", str28, "Pcx-Custom");
    }

    @Test
    public void test1299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1299");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        java.nio.ByteOrder byteOrder2 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat3 = null;
        boolean boolean4 = pcxImageParser0.canAcceptType(imageFormat3);
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str9 = pcxImageParser8.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        java.lang.String str12 = pcxImageParser8.getName();
        java.lang.String str13 = pcxImageParser8.getName();
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser8.canAcceptType(imageFormat14);
        boolean boolean17 = pcxImageParser8.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = null;
        byte[] byteArray22 = pcxImageParser19.getIccProfileBytes(byteSource20, pcxImagingParameters21);
        java.lang.String str23 = pcxImageParser19.getName();
        java.lang.String str24 = pcxImageParser19.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder27 = pcxImageParser26.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance29 = pcxImageParser26.getFormatCompliance(byteSource28);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser26.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser19.getMetadata(byteSource25, pcxImagingParameters30);
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = null;
        byte[] byteArray36 = pcxImageParser33.getIccProfileBytes(byteSource34, pcxImagingParameters35);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = pcxImageParser33.getDefaultParameters();
        byte[] byteArray38 = pcxImageParser19.getIccProfileBytes(byteSource32, pcxImagingParameters37);
        byte[] byteArray39 = pcxImageParser8.getIccProfileBytes(byteSource18, pcxImagingParameters37);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser0.getMetadata(byteSource7, pcxImagingParameters37);
        boolean boolean42 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.ImageFormat imageFormat43 = null;
        boolean boolean44 = pcxImageParser0.canAcceptType(imageFormat43);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Pcx-Custom" + "'", str9, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Pcx-Custom" + "'", str12, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(byteArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Pcx-Custom" + "'", str23, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Pcx-Custom" + "'", str24, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNull(formatCompliance29);
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertNotNull(pcxImagingParameters37);
        org.junit.Assert.assertNull(byteArray38);
        org.junit.Assert.assertNull(byteArray39);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test1300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1300");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        boolean boolean5 = pcxImageParser0.canAcceptExtension("");
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata11 = pcxImageParser9.getMetadata(byteSource10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder14 = pcxImageParser13.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser13.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata18 = pcxImageParser13.getMetadata(byteSource17);
        boolean boolean20 = pcxImageParser13.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser9.getMetadata(byteSource12, pcxImagingParameters21);
        byte[] byteArray23 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters21);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = null;
        byte[] byteArray28 = pcxImageParser25.getIccProfileBytes(byteSource26, pcxImagingParameters27);
        java.lang.String str29 = pcxImageParser25.getName();
        java.lang.String str30 = pcxImageParser25.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser25.getMetadata(byteSource31, pcxImagingParameters36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = null;
        byte[] byteArray42 = pcxImageParser39.getIccProfileBytes(byteSource40, pcxImagingParameters41);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser39.getDefaultParameters();
        byte[] byteArray44 = pcxImageParser25.getIccProfileBytes(byteSource38, pcxImagingParameters43);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo45 = pcxImageParser0.getImageInfo(byteSource24, pcxImagingParameters43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNull(imageMetadata11);
        org.junit.Assert.assertNotNull(byteOrder14);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNull(imageMetadata18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNull(byteArray23);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Pcx-Custom" + "'", str30, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertNull(byteArray42);
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertNull(byteArray44);
    }

    @Test
    public void test1301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1301");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat6 = null;
        boolean boolean7 = pcxImageParser0.canAcceptType(imageFormat6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser0.getMetadata(byteSource8);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = pcxImageParser0.getDefaultParameters();
        java.io.File file11 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser0.getFormatCompliance(file11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertNotNull(pcxImagingParameters10);
    }

    @Test
    public void test1302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1302");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.nio.ByteOrder byteOrder4 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser0.getFormatCompliance(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = null;
        byte[] byteArray11 = pcxImageParser8.getIccProfileBytes(byteSource9, pcxImagingParameters10);
        java.lang.String str12 = pcxImageParser8.getName();
        java.lang.String str13 = pcxImageParser8.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder16 = pcxImageParser15.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser15.getFormatCompliance(byteSource17);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser15.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata20 = pcxImageParser8.getMetadata(byteSource14, pcxImagingParameters19);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser22 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser22.getMetadata(byteSource23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder27 = pcxImageParser26.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance29 = pcxImageParser26.getFormatCompliance(byteSource28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser26.getMetadata(byteSource30);
        boolean boolean33 = pcxImageParser26.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser26.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser22.getMetadata(byteSource25, pcxImagingParameters34);
        byte[] byteArray36 = pcxImageParser8.getIccProfileBytes(byteSource21, pcxImagingParameters34);
        org.apache.commons.imaging.ImageFormat imageFormat37 = null;
        boolean boolean38 = pcxImageParser8.canAcceptType(imageFormat37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder41 = pcxImageParser40.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance43 = pcxImageParser40.getFormatCompliance(byteSource42);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = pcxImageParser40.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat45 = null;
        boolean boolean46 = pcxImageParser40.canAcceptType(imageFormat45);
        java.lang.String str47 = pcxImageParser40.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = pcxImageParser40.getDefaultParameters();
        byte[] byteArray49 = pcxImageParser8.getIccProfileBytes(byteSource39, pcxImagingParameters48);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata50 = pcxImageParser0.getMetadata(byteSource7, pcxImagingParameters48);
        java.nio.ByteOrder byteOrder51 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat52 = null;
        boolean boolean53 = pcxImageParser0.canAcceptType(imageFormat52);
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNull(formatCompliance6);
        org.junit.Assert.assertNull(byteArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Pcx-Custom" + "'", str12, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNull(formatCompliance18);
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
        org.junit.Assert.assertNull(imageMetadata20);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNull(formatCompliance29);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(byteOrder41);
        org.junit.Assert.assertNull(formatCompliance43);
        org.junit.Assert.assertNotNull(pcxImagingParameters44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "pcx" + "'", str47, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters48);
        org.junit.Assert.assertNull(byteArray49);
        org.junit.Assert.assertNull(imageMetadata50);
        org.junit.Assert.assertNotNull(byteOrder51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test1303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1303");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser0.canAcceptType(imageFormat23);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser0.getDefaultParameters();
        java.lang.Class<?> wildcardClass27 = pcxImageParser0.getClass();
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test1304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1304");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = null;
        byte[] byteArray17 = pcxImageParser14.getIccProfileBytes(byteSource15, pcxImagingParameters16);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser14.getDefaultParameters();
        byte[] byteArray19 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters18);
        java.io.File file20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension21 = pcxImageParser0.getImageSize(file20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(byteArray17);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(byteArray19);
    }

    @Test
    public void test1305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1305");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat10 = null;
        boolean boolean11 = pcxImageParser0.canAcceptType(imageFormat10);
        java.awt.image.BufferedImage bufferedImage12 = null;
        java.io.OutputStream outputStream13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser14.getDefaultParameters();
        java.lang.String str19 = pcxImageParser14.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser14.getMetadata(byteSource20, pcxImagingParameters21);
        java.lang.String str23 = pcxImageParser14.getDefaultExtension();
        boolean boolean25 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser14.getDefaultParameters();
        java.lang.String str27 = pcxImageParser14.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = null;
        byte[] byteArray32 = pcxImageParser29.getIccProfileBytes(byteSource30, pcxImagingParameters31);
        java.lang.String str33 = pcxImageParser29.getDefaultExtension();
        java.lang.String str34 = pcxImageParser29.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser36 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = null;
        byte[] byteArray39 = pcxImageParser36.getIccProfileBytes(byteSource37, pcxImagingParameters38);
        java.lang.String str40 = pcxImageParser36.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser36.getMetadata(byteSource41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance44 = pcxImageParser36.getFormatCompliance(byteSource43);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser36.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat46 = null;
        boolean boolean47 = pcxImageParser36.canAcceptType(imageFormat46);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = pcxImageParser36.getDefaultParameters();
        byte[] byteArray49 = pcxImageParser29.getIccProfileBytes(byteSource35, pcxImagingParameters48);
        byte[] byteArray50 = pcxImageParser14.getIccProfileBytes(byteSource28, pcxImagingParameters48);
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage12, outputStream13, pcxImagingParameters48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(pcxImagingParameters9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "pcx" + "'", str19, "pcx");
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "pcx" + "'", str23, "pcx");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "pcx" + "'", str27, "pcx");
        org.junit.Assert.assertNull(byteArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "pcx" + "'", str33, "pcx");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Pcx-Custom" + "'", str34, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Pcx-Custom" + "'", str40, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertNull(formatCompliance44);
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters48);
        org.junit.Assert.assertNull(byteArray49);
        org.junit.Assert.assertNull(byteArray50);
    }

    @Test
    public void test1306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1306");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.io.File file31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser32.getMetadata(byteSource36);
        boolean boolean39 = pcxImageParser32.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser42 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = null;
        byte[] byteArray45 = pcxImageParser42.getIccProfileBytes(byteSource43, pcxImagingParameters44);
        java.lang.String str46 = pcxImageParser42.getName();
        java.lang.String str47 = pcxImageParser42.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance49 = pcxImageParser42.getFormatCompliance(byteSource48);
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser51 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder52 = pcxImageParser51.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance54 = pcxImageParser51.getFormatCompliance(byteSource53);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters55 = pcxImageParser51.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat56 = null;
        boolean boolean57 = pcxImageParser51.canAcceptType(imageFormat56);
        java.lang.String str58 = pcxImageParser51.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters59 = pcxImageParser51.getDefaultParameters();
        byte[] byteArray60 = pcxImageParser42.getIccProfileBytes(byteSource50, pcxImagingParameters59);
        byte[] byteArray61 = pcxImageParser32.getIccProfileBytes(byteSource41, pcxImagingParameters59);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo62 = pcxImageParser0.getImageInfo(file31, pcxImagingParameters59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(byteArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Pcx-Custom" + "'", str46, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Pcx-Custom" + "'", str47, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance49);
        org.junit.Assert.assertNotNull(byteOrder52);
        org.junit.Assert.assertNull(formatCompliance54);
        org.junit.Assert.assertNotNull(pcxImagingParameters55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "pcx" + "'", str58, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters59);
        org.junit.Assert.assertNull(byteArray60);
        org.junit.Assert.assertNull(byteArray61);
    }

    @Test
    public void test1307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1307");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = null;
        byte[] byteArray17 = pcxImageParser14.getIccProfileBytes(byteSource15, pcxImagingParameters16);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser14.getDefaultParameters();
        byte[] byteArray19 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters18);
        boolean boolean21 = pcxImageParser0.canAcceptExtension("hi!");
        java.nio.ByteOrder byteOrder22 = pcxImageParser0.getByteOrder();
        java.lang.Class<?> wildcardClass23 = byteOrder22.getClass();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(byteArray17);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1308");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource5, pcxImagingParameters6);
        java.lang.String str8 = pcxImageParser0.getName();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Pcx-Custom" + "'", str8, "Pcx-Custom");
    }

    @Test
    public void test1309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1309");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters7);
        java.lang.String str9 = pcxImageParser0.getDefaultExtension();
        boolean boolean11 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser0.getDefaultParameters();
        java.lang.String str13 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = null;
        byte[] byteArray18 = pcxImageParser15.getIccProfileBytes(byteSource16, pcxImagingParameters17);
        java.lang.String str19 = pcxImageParser15.getDefaultExtension();
        java.lang.String str20 = pcxImageParser15.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser22 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = null;
        byte[] byteArray25 = pcxImageParser22.getIccProfileBytes(byteSource23, pcxImagingParameters24);
        java.lang.String str26 = pcxImageParser22.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata28 = pcxImageParser22.getMetadata(byteSource27);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser22.getFormatCompliance(byteSource29);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser22.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat32 = null;
        boolean boolean33 = pcxImageParser22.canAcceptType(imageFormat32);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser22.getDefaultParameters();
        byte[] byteArray35 = pcxImageParser15.getIccProfileBytes(byteSource21, pcxImagingParameters34);
        byte[] byteArray36 = pcxImageParser0.getIccProfileBytes(byteSource14, pcxImagingParameters34);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = pcxImageParser0.getDefaultParameters();
        java.io.File file38 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray39 = pcxImageParser0.getIccProfileBytes(file38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "pcx" + "'", str9, "pcx");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "pcx" + "'", str19, "pcx");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Pcx-Custom" + "'", str20, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Pcx-Custom" + "'", str26, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
        org.junit.Assert.assertNull(byteArray35);
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertNotNull(pcxImagingParameters37);
    }

    @Test
    public void test1310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1310");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat6 = null;
        boolean boolean7 = pcxImageParser0.canAcceptType(imageFormat6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser0.getMetadata(byteSource8);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = pcxImageParser0.getDefaultParameters();
        java.io.File file11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser12 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder13 = pcxImageParser12.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance15 = pcxImageParser12.getFormatCompliance(byteSource14);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = pcxImageParser12.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata20 = pcxImageParser18.getMetadata(byteSource19);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser22 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder23 = pcxImageParser22.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance25 = pcxImageParser22.getFormatCompliance(byteSource24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser22.getMetadata(byteSource26);
        boolean boolean29 = pcxImageParser22.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser22.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser18.getMetadata(byteSource21, pcxImagingParameters30);
        byte[] byteArray32 = pcxImageParser12.getIccProfileBytes(byteSource17, pcxImagingParameters30);
        java.lang.String str33 = pcxImageParser12.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser12.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat35 = null;
        boolean boolean36 = pcxImageParser12.canAcceptType(imageFormat35);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = pcxImageParser12.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray38 = pcxImageParser0.getIccProfileBytes(file11, pcxImagingParameters37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertNotNull(pcxImagingParameters10);
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNull(formatCompliance15);
        org.junit.Assert.assertNotNull(pcxImagingParameters16);
        org.junit.Assert.assertNull(imageMetadata20);
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertNull(formatCompliance25);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertNull(byteArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Pcx-Custom" + "'", str33, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters37);
    }

    @Test
    public void test1311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1311");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser0.canAcceptType(imageFormat23);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser0.getDefaultParameters();
        java.lang.Class<?> wildcardClass26 = pcxImageParser0.getClass();
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test1312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1312");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        boolean boolean9 = pcxImageParser0.canAcceptExtension("");
        java.lang.String str10 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo12 = pcxImageParser0.getImageInfo(byteSource11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Pcx-Custom" + "'", str10, "Pcx-Custom");
    }

    @Test
    public void test1313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1313");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder30 = pcxImageParser29.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser29.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser35.getMetadata(byteSource36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder40 = pcxImageParser39.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance42 = pcxImageParser39.getFormatCompliance(byteSource41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser39.getMetadata(byteSource43);
        boolean boolean46 = pcxImageParser39.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = pcxImageParser39.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser35.getMetadata(byteSource38, pcxImagingParameters47);
        byte[] byteArray49 = pcxImageParser29.getIccProfileBytes(byteSource34, pcxImagingParameters47);
        java.lang.String str50 = pcxImageParser29.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters51 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata52 = pcxImageParser0.getMetadata(byteSource28, pcxImagingParameters51);
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata54 = pcxImageParser0.getMetadata(byteSource53);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass55 = imageMetadata54.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(byteOrder30);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNull(formatCompliance42);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters47);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNull(byteArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Pcx-Custom" + "'", str50, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters51);
        org.junit.Assert.assertNull(imageMetadata52);
        org.junit.Assert.assertNull(imageMetadata54);
    }

    @Test
    public void test1314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1314");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.ImageFormat imageFormat8 = null;
        boolean boolean9 = pcxImageParser0.canAcceptType(imageFormat8);
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser0.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser0.getMetadata(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = null;
        byte[] byteArray18 = pcxImageParser15.getIccProfileBytes(byteSource16, pcxImagingParameters17);
        java.lang.String str19 = pcxImageParser15.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser15.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance23 = pcxImageParser15.getFormatCompliance(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str26 = pcxImageParser25.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata28 = pcxImageParser25.getMetadata(byteSource27);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser25.canAcceptType(imageFormat29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str33 = pcxImageParser32.getName();
        java.nio.ByteOrder byteOrder34 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat35 = null;
        boolean boolean36 = pcxImageParser32.canAcceptType(imageFormat35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser38 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder39 = pcxImageParser38.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser41 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder42 = pcxImageParser41.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance44 = pcxImageParser41.getFormatCompliance(byteSource43);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser41.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser47 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser47.getMetadata(byteSource48);
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser51 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder52 = pcxImageParser51.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance54 = pcxImageParser51.getFormatCompliance(byteSource53);
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata56 = pcxImageParser51.getMetadata(byteSource55);
        boolean boolean58 = pcxImageParser51.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters59 = pcxImageParser51.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata60 = pcxImageParser47.getMetadata(byteSource50, pcxImagingParameters59);
        byte[] byteArray61 = pcxImageParser41.getIccProfileBytes(byteSource46, pcxImagingParameters59);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata62 = pcxImageParser38.getMetadata(byteSource40, pcxImagingParameters59);
        byte[] byteArray63 = pcxImageParser32.getIccProfileBytes(byteSource37, pcxImagingParameters59);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata64 = pcxImageParser25.getMetadata(byteSource31, pcxImagingParameters59);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata65 = pcxImageParser15.getMetadata(byteSource24, pcxImagingParameters59);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo66 = pcxImageParser0.getImageInfo(byteSource14, pcxImagingParameters59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Pcx-Custom" + "'", str19, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(formatCompliance23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Pcx-Custom" + "'", str26, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Pcx-Custom" + "'", str33, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(byteOrder39);
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNull(formatCompliance44);
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertNotNull(byteOrder52);
        org.junit.Assert.assertNull(formatCompliance54);
        org.junit.Assert.assertNull(imageMetadata56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters59);
        org.junit.Assert.assertNull(imageMetadata60);
        org.junit.Assert.assertNull(byteArray61);
        org.junit.Assert.assertNull(imageMetadata62);
        org.junit.Assert.assertNull(byteArray63);
        org.junit.Assert.assertNull(imageMetadata64);
        org.junit.Assert.assertNull(imageMetadata65);
    }

    @Test
    public void test1315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1315");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = null;
        byte[] byteArray20 = pcxImageParser17.getIccProfileBytes(byteSource18, pcxImagingParameters19);
        java.lang.String str21 = pcxImageParser17.getName();
        java.lang.String str22 = pcxImageParser17.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser17.getMetadata(byteSource23, pcxImagingParameters28);
        java.lang.String str30 = pcxImageParser17.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser17.getMetadata(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = null;
        byte[] byteArray37 = pcxImageParser34.getIccProfileBytes(byteSource35, pcxImagingParameters36);
        java.lang.String str38 = pcxImageParser34.getName();
        java.lang.String str39 = pcxImageParser34.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser41 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder42 = pcxImageParser41.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance44 = pcxImageParser41.getFormatCompliance(byteSource43);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser41.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser34.getMetadata(byteSource40, pcxImagingParameters45);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser48 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters50 = null;
        byte[] byteArray51 = pcxImageParser48.getIccProfileBytes(byteSource49, pcxImagingParameters50);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser48.getDefaultParameters();
        byte[] byteArray53 = pcxImageParser34.getIccProfileBytes(byteSource47, pcxImagingParameters52);
        byte[] byteArray54 = pcxImageParser17.getIccProfileBytes(byteSource33, pcxImagingParameters52);
        byte[] byteArray55 = pcxImageParser9.getIccProfileBytes(byteSource16, pcxImagingParameters52);
        byte[] byteArray56 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters52);
        java.lang.String str57 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo59 = pcxImageParser0.getImageInfo(byteSource58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNotNull(pcxImagingParameters15);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Pcx-Custom" + "'", str22, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Pcx-Custom" + "'", str30, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNull(byteArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Pcx-Custom" + "'", str38, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Pcx-Custom" + "'", str39, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNull(formatCompliance44);
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertNull(imageMetadata46);
        org.junit.Assert.assertNull(byteArray51);
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(byteArray53);
        org.junit.Assert.assertNull(byteArray54);
        org.junit.Assert.assertNull(byteArray55);
        org.junit.Assert.assertNull(byteArray56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "pcx" + "'", str57, "pcx");
    }

    @Test
    public void test1316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1316");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser3 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder4 = pcxImageParser3.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser3.getFormatCompliance(byteSource5);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = pcxImageParser3.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata11 = pcxImageParser9.getMetadata(byteSource10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder14 = pcxImageParser13.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser13.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata18 = pcxImageParser13.getMetadata(byteSource17);
        boolean boolean20 = pcxImageParser13.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser9.getMetadata(byteSource12, pcxImagingParameters21);
        byte[] byteArray23 = pcxImageParser3.getIccProfileBytes(byteSource8, pcxImagingParameters21);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser0.getMetadata(byteSource2, pcxImagingParameters21);
        java.lang.String str25 = pcxImageParser0.getName();
        java.io.File file26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage28 = pcxImageParser0.getBufferedImage(file26, pcxImagingParameters27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNull(formatCompliance6);
        org.junit.Assert.assertNotNull(pcxImagingParameters7);
        org.junit.Assert.assertNull(imageMetadata11);
        org.junit.Assert.assertNotNull(byteOrder14);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNull(imageMetadata18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNull(byteArray23);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
    }

    @Test
    public void test1317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1317");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.nio.ByteOrder byteOrder4 = pcxImageParser0.getByteOrder();
        java.nio.ByteOrder byteOrder5 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        java.lang.String str8 = pcxImageParser0.getDefaultExtension();
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "pcx" + "'", str8, "pcx");
    }

    @Test
    public void test1318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1318");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = null;
        byte[] byteArray13 = pcxImageParser10.getIccProfileBytes(byteSource11, pcxImagingParameters12);
        java.lang.String str14 = pcxImageParser10.getName();
        java.lang.String str15 = pcxImageParser10.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser10.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder20 = pcxImageParser19.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance22 = pcxImageParser19.getFormatCompliance(byteSource21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser19.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat24 = null;
        boolean boolean25 = pcxImageParser19.canAcceptType(imageFormat24);
        java.lang.String str26 = pcxImageParser19.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = pcxImageParser19.getDefaultParameters();
        byte[] byteArray28 = pcxImageParser10.getIccProfileBytes(byteSource18, pcxImagingParameters27);
        byte[] byteArray29 = pcxImageParser0.getIccProfileBytes(byteSource9, pcxImagingParameters27);
        java.io.File file30 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean31 = pcxImageParser0.canAcceptExtension(file30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(byteArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Pcx-Custom" + "'", str14, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Pcx-Custom" + "'", str15, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNull(formatCompliance22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "pcx" + "'", str26, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(byteArray29);
    }

    @Test
    public void test1319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1319");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat37 = null;
        boolean boolean38 = pcxImageParser32.canAcceptType(imageFormat37);
        java.lang.String str39 = pcxImageParser32.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser32.getDefaultParameters();
        byte[] byteArray41 = pcxImageParser0.getIccProfileBytes(byteSource31, pcxImagingParameters40);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser0.getDefaultParameters();
        java.lang.String str43 = pcxImageParser0.getName();
        java.io.File file44 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str45 = pcxImageParser0.dumpImageFile(file44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "pcx" + "'", str39, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(byteArray41);
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Pcx-Custom" + "'", str43, "Pcx-Custom");
    }

    @Test
    public void test1320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1320");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata17 = pcxImageParser0.getMetadata(byteSource16);
        java.lang.String str18 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser20 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder21 = pcxImageParser20.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance23 = pcxImageParser20.getFormatCompliance(byteSource22);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = pcxImageParser20.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat25 = null;
        boolean boolean26 = pcxImageParser20.canAcceptType(imageFormat25);
        java.lang.String str27 = pcxImageParser20.getDefaultExtension();
        java.nio.ByteOrder byteOrder28 = pcxImageParser20.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = null;
        byte[] byteArray33 = pcxImageParser30.getIccProfileBytes(byteSource31, pcxImagingParameters32);
        java.lang.String str34 = pcxImageParser30.getName();
        java.lang.String str35 = pcxImageParser30.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser37 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder38 = pcxImageParser37.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance40 = pcxImageParser37.getFormatCompliance(byteSource39);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = pcxImageParser37.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser30.getMetadata(byteSource36, pcxImagingParameters41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser44.getMetadata(byteSource45);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser48 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder49 = pcxImageParser48.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance51 = pcxImageParser48.getFormatCompliance(byteSource50);
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser48.getMetadata(byteSource52);
        boolean boolean55 = pcxImageParser48.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters56 = pcxImageParser48.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata57 = pcxImageParser44.getMetadata(byteSource47, pcxImagingParameters56);
        byte[] byteArray58 = pcxImageParser30.getIccProfileBytes(byteSource43, pcxImagingParameters56);
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance60 = pcxImageParser30.getFormatCompliance(byteSource59);
        java.nio.ByteOrder byteOrder61 = pcxImageParser30.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser63 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource64 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters65 = null;
        byte[] byteArray66 = pcxImageParser63.getIccProfileBytes(byteSource64, pcxImagingParameters65);
        java.lang.String str67 = pcxImageParser63.getName();
        java.lang.String str68 = pcxImageParser63.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser70 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder71 = pcxImageParser70.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource72 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance73 = pcxImageParser70.getFormatCompliance(byteSource72);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters74 = pcxImageParser70.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata75 = pcxImageParser63.getMetadata(byteSource69, pcxImagingParameters74);
        org.apache.commons.imaging.bytesource.ByteSource byteSource76 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser77 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource78 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata79 = pcxImageParser77.getMetadata(byteSource78);
        org.apache.commons.imaging.bytesource.ByteSource byteSource80 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser81 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder82 = pcxImageParser81.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource83 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance84 = pcxImageParser81.getFormatCompliance(byteSource83);
        org.apache.commons.imaging.bytesource.ByteSource byteSource85 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata86 = pcxImageParser81.getMetadata(byteSource85);
        boolean boolean88 = pcxImageParser81.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters89 = pcxImageParser81.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata90 = pcxImageParser77.getMetadata(byteSource80, pcxImagingParameters89);
        byte[] byteArray91 = pcxImageParser63.getIccProfileBytes(byteSource76, pcxImagingParameters89);
        byte[] byteArray92 = pcxImageParser30.getIccProfileBytes(byteSource62, pcxImagingParameters89);
        byte[] byteArray93 = pcxImageParser20.getIccProfileBytes(byteSource29, pcxImagingParameters89);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension94 = pcxImageParser0.getImageSize(byteSource19, pcxImagingParameters89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertNull(imageMetadata17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "pcx" + "'", str18, "pcx");
        org.junit.Assert.assertNotNull(byteOrder21);
        org.junit.Assert.assertNull(formatCompliance23);
        org.junit.Assert.assertNotNull(pcxImagingParameters24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "pcx" + "'", str27, "pcx");
        org.junit.Assert.assertNotNull(byteOrder28);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Pcx-Custom" + "'", str34, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Pcx-Custom" + "'", str35, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder38);
        org.junit.Assert.assertNull(formatCompliance40);
        org.junit.Assert.assertNotNull(pcxImagingParameters41);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertNull(imageMetadata46);
        org.junit.Assert.assertNotNull(byteOrder49);
        org.junit.Assert.assertNull(formatCompliance51);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters56);
        org.junit.Assert.assertNull(imageMetadata57);
        org.junit.Assert.assertNull(byteArray58);
        org.junit.Assert.assertNull(formatCompliance60);
        org.junit.Assert.assertNotNull(byteOrder61);
        org.junit.Assert.assertNull(byteArray66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Pcx-Custom" + "'", str67, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Pcx-Custom" + "'", str68, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder71);
        org.junit.Assert.assertNull(formatCompliance73);
        org.junit.Assert.assertNotNull(pcxImagingParameters74);
        org.junit.Assert.assertNull(imageMetadata75);
        org.junit.Assert.assertNull(imageMetadata79);
        org.junit.Assert.assertNotNull(byteOrder82);
        org.junit.Assert.assertNull(formatCompliance84);
        org.junit.Assert.assertNull(imageMetadata86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters89);
        org.junit.Assert.assertNull(imageMetadata90);
        org.junit.Assert.assertNull(byteArray91);
        org.junit.Assert.assertNull(byteArray92);
        org.junit.Assert.assertNull(byteArray93);
    }

    @Test
    public void test1321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1321");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        java.io.File file5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = null;
        byte[] byteArray9 = pcxImageParser6.getIccProfileBytes(byteSource7, pcxImagingParameters8);
        java.lang.String str10 = pcxImageParser6.getName();
        java.lang.String str11 = pcxImageParser6.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder14 = pcxImageParser13.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser13.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata18 = pcxImageParser6.getMetadata(byteSource12, pcxImagingParameters17);
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser20 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser20.getMetadata(byteSource21);
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser24.getMetadata(byteSource28);
        boolean boolean31 = pcxImageParser24.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser20.getMetadata(byteSource23, pcxImagingParameters32);
        byte[] byteArray34 = pcxImageParser6.getIccProfileBytes(byteSource19, pcxImagingParameters32);
        org.apache.commons.imaging.ImageFormat imageFormat35 = null;
        boolean boolean36 = pcxImageParser6.canAcceptType(imageFormat35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance38 = pcxImageParser6.getFormatCompliance(byteSource37);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = pcxImageParser6.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray40 = pcxImageParser0.getIccProfileBytes(file5, pcxImagingParameters39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertNull(byteArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Pcx-Custom" + "'", str10, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Pcx-Custom" + "'", str11, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder14);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
        org.junit.Assert.assertNull(imageMetadata18);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
        org.junit.Assert.assertNull(imageMetadata33);
        org.junit.Assert.assertNull(byteArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(formatCompliance38);
        org.junit.Assert.assertNotNull(pcxImagingParameters39);
    }

    @Test
    public void test1322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1322");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = null;
        byte[] byteArray9 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters8);
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = null;
        byte[] byteArray14 = pcxImageParser11.getIccProfileBytes(byteSource12, pcxImagingParameters13);
        java.lang.String str15 = pcxImageParser11.getName();
        java.lang.String str16 = pcxImageParser11.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser11.getMetadata(byteSource17, pcxImagingParameters22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = null;
        byte[] byteArray28 = pcxImageParser25.getIccProfileBytes(byteSource26, pcxImagingParameters27);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = pcxImageParser25.getDefaultParameters();
        byte[] byteArray30 = pcxImageParser11.getIccProfileBytes(byteSource24, pcxImagingParameters29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat37 = null;
        boolean boolean38 = pcxImageParser32.canAcceptType(imageFormat37);
        java.lang.String str39 = pcxImageParser32.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser32.getDefaultParameters();
        java.lang.String str41 = pcxImageParser32.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata43 = pcxImageParser11.getMetadata(byteSource31, pcxImagingParameters42);
        byte[] byteArray44 = pcxImageParser0.getIccProfileBytes(byteSource10, pcxImagingParameters42);
        org.apache.commons.imaging.ImageFormat imageFormat45 = null;
        boolean boolean46 = pcxImageParser0.canAcceptType(imageFormat45);
        java.io.PrintWriter printWriter47 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean49 = pcxImageParser0.dumpImageFile(printWriter47, byteSource48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(byteArray9);
        org.junit.Assert.assertNull(byteArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Pcx-Custom" + "'", str15, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Pcx-Custom" + "'", str16, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNotNull(pcxImagingParameters29);
        org.junit.Assert.assertNull(byteArray30);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "pcx" + "'", str39, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Pcx-Custom" + "'", str41, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertNull(imageMetadata43);
        org.junit.Assert.assertNull(byteArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test1323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1323");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.nio.ByteOrder byteOrder4 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder7 = pcxImageParser6.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance9 = pcxImageParser6.getFormatCompliance(byteSource8);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat11 = null;
        boolean boolean12 = pcxImageParser6.canAcceptType(imageFormat11);
        java.lang.String str13 = pcxImageParser6.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource5, pcxImagingParameters14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser17.getMetadata(byteSource18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder22 = pcxImageParser21.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance24 = pcxImageParser21.getFormatCompliance(byteSource23);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser27 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser27.getMetadata(byteSource28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder32 = pcxImageParser31.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance34 = pcxImageParser31.getFormatCompliance(byteSource33);
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser31.getMetadata(byteSource35);
        boolean boolean38 = pcxImageParser31.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = pcxImageParser31.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser27.getMetadata(byteSource30, pcxImagingParameters39);
        byte[] byteArray41 = pcxImageParser21.getIccProfileBytes(byteSource26, pcxImagingParameters39);
        java.lang.String str42 = pcxImageParser21.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser17.getMetadata(byteSource20, pcxImagingParameters43);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser17.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser47 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters49 = null;
        byte[] byteArray50 = pcxImageParser47.getIccProfileBytes(byteSource48, pcxImagingParameters49);
        java.lang.String str51 = pcxImageParser47.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser47.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser17.getMetadata(byteSource46, pcxImagingParameters52);
        byte[] byteArray54 = pcxImageParser0.getIccProfileBytes(byteSource16, pcxImagingParameters52);
        java.io.File file55 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray56 = pcxImageParser0.getIccProfileBytes(file55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNull(formatCompliance9);
        org.junit.Assert.assertNotNull(pcxImagingParameters10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNull(formatCompliance24);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertNull(formatCompliance34);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters39);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertNull(byteArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Pcx-Custom" + "'", str42, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertNull(byteArray50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "pcx" + "'", str51, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertNull(byteArray54);
    }

    @Test
    public void test1324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1324");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        boolean boolean14 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser0.getFormatCompliance(byteSource15);
        java.lang.String str17 = pcxImageParser0.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser0.getDefaultParameters();
        java.io.PrintWriter printWriter19 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean21 = pcxImageParser0.dumpImageFile(printWriter19, byteSource20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Pcx-Custom" + "'", str17, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
    }

    @Test
    public void test1325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1325");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata3 = pcxImageParser0.getMetadata(byteSource2);
        org.apache.commons.imaging.ImageFormat imageFormat4 = null;
        boolean boolean5 = pcxImageParser0.canAcceptType(imageFormat4);
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str8 = pcxImageParser7.getName();
        java.nio.ByteOrder byteOrder9 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat10 = null;
        boolean boolean11 = pcxImageParser7.canAcceptType(imageFormat10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder14 = pcxImageParser13.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder17 = pcxImageParser16.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance19 = pcxImageParser16.getFormatCompliance(byteSource18);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters20 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser22 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser22.getMetadata(byteSource23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder27 = pcxImageParser26.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance29 = pcxImageParser26.getFormatCompliance(byteSource28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser26.getMetadata(byteSource30);
        boolean boolean33 = pcxImageParser26.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser26.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser22.getMetadata(byteSource25, pcxImagingParameters34);
        byte[] byteArray36 = pcxImageParser16.getIccProfileBytes(byteSource21, pcxImagingParameters34);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser13.getMetadata(byteSource15, pcxImagingParameters34);
        byte[] byteArray38 = pcxImageParser7.getIccProfileBytes(byteSource12, pcxImagingParameters34);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata39 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters34);
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser41 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = null;
        byte[] byteArray44 = pcxImageParser41.getIccProfileBytes(byteSource42, pcxImagingParameters43);
        java.lang.String str45 = pcxImageParser41.getName();
        java.lang.String str46 = pcxImageParser41.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser48 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder49 = pcxImageParser48.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance51 = pcxImageParser48.getFormatCompliance(byteSource50);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser48.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser41.getMetadata(byteSource47, pcxImagingParameters52);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo54 = pcxImageParser0.getImageInfo(byteSource40, pcxImagingParameters52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Pcx-Custom" + "'", str8, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(byteOrder14);
        org.junit.Assert.assertNotNull(byteOrder17);
        org.junit.Assert.assertNull(formatCompliance19);
        org.junit.Assert.assertNotNull(pcxImagingParameters20);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNull(formatCompliance29);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertNull(byteArray38);
        org.junit.Assert.assertNull(imageMetadata39);
        org.junit.Assert.assertNull(byteArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Pcx-Custom" + "'", str45, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Pcx-Custom" + "'", str46, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder49);
        org.junit.Assert.assertNull(formatCompliance51);
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(imageMetadata53);
    }

    @Test
    public void test1326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1326");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance5 = pcxImageParser0.getFormatCompliance(byteSource4);
        java.lang.Class<?> wildcardClass6 = pcxImageParser0.getClass();
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(formatCompliance5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test1327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1327");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList33 = pcxImageParser0.getAllBufferedImages(byteSource32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrder31);
    }

    @Test
    public void test1328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1328");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser4.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser8.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.lang.String str29 = pcxImageParser8.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser4.getMetadata(byteSource7, pcxImagingParameters30);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters30);
        java.nio.ByteOrder byteOrder33 = pcxImageParser0.getByteOrder();
        java.io.File file34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = null;
        byte[] byteArray38 = pcxImageParser35.getIccProfileBytes(byteSource36, pcxImagingParameters37);
        java.lang.String str39 = pcxImageParser35.getName();
        java.lang.String str40 = pcxImageParser35.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser42 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder43 = pcxImageParser42.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance45 = pcxImageParser42.getFormatCompliance(byteSource44);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser42.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser35.getMetadata(byteSource41, pcxImagingParameters46);
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser49 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata51 = pcxImageParser49.getMetadata(byteSource50);
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser53 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder54 = pcxImageParser53.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance56 = pcxImageParser53.getFormatCompliance(byteSource55);
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata58 = pcxImageParser53.getMetadata(byteSource57);
        boolean boolean60 = pcxImageParser53.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters61 = pcxImageParser53.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata62 = pcxImageParser49.getMetadata(byteSource52, pcxImagingParameters61);
        byte[] byteArray63 = pcxImageParser35.getIccProfileBytes(byteSource48, pcxImagingParameters61);
        org.apache.commons.imaging.ImageFormat imageFormat64 = null;
        boolean boolean65 = pcxImageParser35.canAcceptType(imageFormat64);
        org.apache.commons.imaging.bytesource.ByteSource byteSource66 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance67 = pcxImageParser35.getFormatCompliance(byteSource66);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters68 = pcxImageParser35.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray69 = pcxImageParser0.getIccProfileBytes(file34, pcxImagingParameters68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(byteArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Pcx-Custom" + "'", str39, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Pcx-Custom" + "'", str40, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNull(formatCompliance45);
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
        org.junit.Assert.assertNull(imageMetadata47);
        org.junit.Assert.assertNull(imageMetadata51);
        org.junit.Assert.assertNotNull(byteOrder54);
        org.junit.Assert.assertNull(formatCompliance56);
        org.junit.Assert.assertNull(imageMetadata58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters61);
        org.junit.Assert.assertNull(imageMetadata62);
        org.junit.Assert.assertNull(byteArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(formatCompliance67);
        org.junit.Assert.assertNotNull(pcxImagingParameters68);
    }

    @Test
    public void test1329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1329");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters6 = pcxImageParser0.getDefaultParameters();
        boolean boolean8 = pcxImageParser0.canAcceptExtension("");
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = pcxImageParser0.dumpImageFile(byteSource9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNotNull(pcxImagingParameters6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1330");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser4.getMetadata(byteSource8);
        boolean boolean11 = pcxImageParser4.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters12);
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser0.canAcceptType(imageFormat14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata17 = pcxImageParser0.getMetadata(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder20 = pcxImageParser19.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance22 = pcxImageParser19.getFormatCompliance(byteSource21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser19.getDefaultParameters();
        java.lang.String str24 = pcxImageParser19.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser19.getMetadata(byteSource25, pcxImagingParameters26);
        java.lang.String str28 = pcxImageParser19.getDefaultExtension();
        boolean boolean30 = pcxImageParser19.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser19.getDefaultParameters();
        java.lang.String str32 = pcxImageParser19.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = null;
        byte[] byteArray37 = pcxImageParser34.getIccProfileBytes(byteSource35, pcxImagingParameters36);
        java.lang.String str38 = pcxImageParser34.getDefaultExtension();
        java.lang.String str39 = pcxImageParser34.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser41 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = null;
        byte[] byteArray44 = pcxImageParser41.getIccProfileBytes(byteSource42, pcxImagingParameters43);
        java.lang.String str45 = pcxImageParser41.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser41.getMetadata(byteSource46);
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance49 = pcxImageParser41.getFormatCompliance(byteSource48);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters50 = pcxImageParser41.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat51 = null;
        boolean boolean52 = pcxImageParser41.canAcceptType(imageFormat51);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters53 = pcxImageParser41.getDefaultParameters();
        byte[] byteArray54 = pcxImageParser34.getIccProfileBytes(byteSource40, pcxImagingParameters53);
        byte[] byteArray55 = pcxImageParser19.getIccProfileBytes(byteSource33, pcxImagingParameters53);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension56 = pcxImageParser0.getImageSize(byteSource18, pcxImagingParameters53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(imageMetadata17);
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNull(formatCompliance22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "pcx" + "'", str24, "pcx");
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "pcx" + "'", str28, "pcx");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "pcx" + "'", str32, "pcx");
        org.junit.Assert.assertNull(byteArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "pcx" + "'", str38, "pcx");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Pcx-Custom" + "'", str39, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Pcx-Custom" + "'", str45, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata47);
        org.junit.Assert.assertNull(formatCompliance49);
        org.junit.Assert.assertNotNull(pcxImagingParameters50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters53);
        org.junit.Assert.assertNull(byteArray54);
        org.junit.Assert.assertNull(byteArray55);
    }

    @Test
    public void test1331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1331");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        boolean boolean30 = pcxImageParser0.canAcceptExtension("pcx");
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder34 = pcxImageParser33.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance36 = pcxImageParser33.getFormatCompliance(byteSource35);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = pcxImageParser33.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser39.getMetadata(byteSource40);
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser43 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder44 = pcxImageParser43.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance46 = pcxImageParser43.getFormatCompliance(byteSource45);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser43.getMetadata(byteSource47);
        boolean boolean50 = pcxImageParser43.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters51 = pcxImageParser43.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata52 = pcxImageParser39.getMetadata(byteSource42, pcxImagingParameters51);
        byte[] byteArray53 = pcxImageParser33.getIccProfileBytes(byteSource38, pcxImagingParameters51);
        java.lang.String str54 = pcxImageParser33.getName();
        java.lang.String str55 = pcxImageParser33.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser57 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder58 = pcxImageParser57.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance60 = pcxImageParser57.getFormatCompliance(byteSource59);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters61 = pcxImageParser57.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat62 = null;
        boolean boolean63 = pcxImageParser57.canAcceptType(imageFormat62);
        java.lang.String str64 = pcxImageParser57.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters65 = pcxImageParser57.getDefaultParameters();
        byte[] byteArray66 = pcxImageParser33.getIccProfileBytes(byteSource56, pcxImagingParameters65);
        org.apache.commons.imaging.bytesource.ByteSource byteSource67 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser68 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder69 = pcxImageParser68.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource70 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser71 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder72 = pcxImageParser71.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource73 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance74 = pcxImageParser71.getFormatCompliance(byteSource73);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters75 = pcxImageParser71.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource76 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser77 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource78 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata79 = pcxImageParser77.getMetadata(byteSource78);
        org.apache.commons.imaging.bytesource.ByteSource byteSource80 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser81 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder82 = pcxImageParser81.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource83 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance84 = pcxImageParser81.getFormatCompliance(byteSource83);
        org.apache.commons.imaging.bytesource.ByteSource byteSource85 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata86 = pcxImageParser81.getMetadata(byteSource85);
        boolean boolean88 = pcxImageParser81.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters89 = pcxImageParser81.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata90 = pcxImageParser77.getMetadata(byteSource80, pcxImagingParameters89);
        byte[] byteArray91 = pcxImageParser71.getIccProfileBytes(byteSource76, pcxImagingParameters89);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata92 = pcxImageParser68.getMetadata(byteSource70, pcxImagingParameters89);
        byte[] byteArray93 = pcxImageParser33.getIccProfileBytes(byteSource67, pcxImagingParameters89);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata94 = pcxImageParser0.getMetadata(byteSource32, pcxImagingParameters89);
        org.apache.commons.imaging.bytesource.ByteSource byteSource95 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata96 = pcxImageParser0.getMetadata(byteSource95);
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(byteOrder34);
        org.junit.Assert.assertNull(formatCompliance36);
        org.junit.Assert.assertNotNull(pcxImagingParameters37);
        org.junit.Assert.assertNull(imageMetadata41);
        org.junit.Assert.assertNotNull(byteOrder44);
        org.junit.Assert.assertNull(formatCompliance46);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters51);
        org.junit.Assert.assertNull(imageMetadata52);
        org.junit.Assert.assertNull(byteArray53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Pcx-Custom" + "'", str54, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "pcx" + "'", str55, "pcx");
        org.junit.Assert.assertNotNull(byteOrder58);
        org.junit.Assert.assertNull(formatCompliance60);
        org.junit.Assert.assertNotNull(pcxImagingParameters61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "pcx" + "'", str64, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters65);
        org.junit.Assert.assertNull(byteArray66);
        org.junit.Assert.assertNotNull(byteOrder69);
        org.junit.Assert.assertNotNull(byteOrder72);
        org.junit.Assert.assertNull(formatCompliance74);
        org.junit.Assert.assertNotNull(pcxImagingParameters75);
        org.junit.Assert.assertNull(imageMetadata79);
        org.junit.Assert.assertNotNull(byteOrder82);
        org.junit.Assert.assertNull(formatCompliance84);
        org.junit.Assert.assertNull(imageMetadata86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters89);
        org.junit.Assert.assertNull(imageMetadata90);
        org.junit.Assert.assertNull(byteArray91);
        org.junit.Assert.assertNull(imageMetadata92);
        org.junit.Assert.assertNull(byteArray93);
        org.junit.Assert.assertNull(imageMetadata94);
        org.junit.Assert.assertNull(imageMetadata96);
    }

    @Test
    public void test1332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1332");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        boolean boolean9 = pcxImageParser0.canAcceptExtension("pcx");
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList11 = pcxImageParser0.getAllBufferedImages(byteSource10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1333");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser0.getMetadata(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser0.getMetadata(byteSource24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser0.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = null;
        byte[] byteArray32 = pcxImageParser29.getIccProfileBytes(byteSource30, pcxImagingParameters31);
        java.lang.String str33 = pcxImageParser29.getName();
        java.lang.String str34 = pcxImageParser29.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser36 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder37 = pcxImageParser36.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance39 = pcxImageParser36.getFormatCompliance(byteSource38);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser36.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser29.getMetadata(byteSource35, pcxImagingParameters40);
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser43 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata45 = pcxImageParser43.getMetadata(byteSource44);
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser47 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder48 = pcxImageParser47.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance50 = pcxImageParser47.getFormatCompliance(byteSource49);
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata52 = pcxImageParser47.getMetadata(byteSource51);
        boolean boolean54 = pcxImageParser47.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters55 = pcxImageParser47.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata56 = pcxImageParser43.getMetadata(byteSource46, pcxImagingParameters55);
        byte[] byteArray57 = pcxImageParser29.getIccProfileBytes(byteSource42, pcxImagingParameters55);
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance59 = pcxImageParser29.getFormatCompliance(byteSource58);
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser61 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters63 = null;
        byte[] byteArray64 = pcxImageParser61.getIccProfileBytes(byteSource62, pcxImagingParameters63);
        java.nio.ByteOrder byteOrder65 = pcxImageParser61.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource66 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser67 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder68 = pcxImageParser67.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance70 = pcxImageParser67.getFormatCompliance(byteSource69);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters71 = pcxImageParser67.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat72 = null;
        boolean boolean73 = pcxImageParser67.canAcceptType(imageFormat72);
        java.lang.String str74 = pcxImageParser67.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters75 = pcxImageParser67.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata76 = pcxImageParser61.getMetadata(byteSource66, pcxImagingParameters75);
        byte[] byteArray77 = pcxImageParser29.getIccProfileBytes(byteSource60, pcxImagingParameters75);
        byte[] byteArray78 = pcxImageParser0.getIccProfileBytes(byteSource28, pcxImagingParameters75);
        org.apache.commons.imaging.bytesource.ByteSource byteSource79 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser80 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder81 = pcxImageParser80.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource82 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance83 = pcxImageParser80.getFormatCompliance(byteSource82);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters84 = pcxImageParser80.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat85 = null;
        boolean boolean86 = pcxImageParser80.canAcceptType(imageFormat85);
        java.nio.ByteOrder byteOrder87 = pcxImageParser80.getByteOrder();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters88 = pcxImageParser80.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage89 = pcxImageParser0.getBufferedImage(byteSource79, pcxImagingParameters88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNull(byteArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Pcx-Custom" + "'", str33, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Pcx-Custom" + "'", str34, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNull(formatCompliance39);
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(imageMetadata41);
        org.junit.Assert.assertNull(imageMetadata45);
        org.junit.Assert.assertNotNull(byteOrder48);
        org.junit.Assert.assertNull(formatCompliance50);
        org.junit.Assert.assertNull(imageMetadata52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters55);
        org.junit.Assert.assertNull(imageMetadata56);
        org.junit.Assert.assertNull(byteArray57);
        org.junit.Assert.assertNull(formatCompliance59);
        org.junit.Assert.assertNull(byteArray64);
        org.junit.Assert.assertNotNull(byteOrder65);
        org.junit.Assert.assertNotNull(byteOrder68);
        org.junit.Assert.assertNull(formatCompliance70);
        org.junit.Assert.assertNotNull(pcxImagingParameters71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "pcx" + "'", str74, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters75);
        org.junit.Assert.assertNull(imageMetadata76);
        org.junit.Assert.assertNull(byteArray77);
        org.junit.Assert.assertNull(byteArray78);
        org.junit.Assert.assertNotNull(byteOrder81);
        org.junit.Assert.assertNull(formatCompliance83);
        org.junit.Assert.assertNotNull(pcxImagingParameters84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(byteOrder87);
        org.junit.Assert.assertNotNull(pcxImagingParameters88);
    }

    @Test
    public void test1334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1334");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        boolean boolean10 = pcxImageParser0.canAcceptExtension("");
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList14 = pcxImageParser0.getAllBufferedImages(byteSource13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(imageMetadata12);
    }

    @Test
    public void test1335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1335");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata10 = pcxImageParser8.getMetadata(byteSource9);
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser12 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder13 = pcxImageParser12.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance15 = pcxImageParser12.getFormatCompliance(byteSource14);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = pcxImageParser12.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata20 = pcxImageParser18.getMetadata(byteSource19);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser22 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder23 = pcxImageParser22.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance25 = pcxImageParser22.getFormatCompliance(byteSource24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser22.getMetadata(byteSource26);
        boolean boolean29 = pcxImageParser22.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser22.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser18.getMetadata(byteSource21, pcxImagingParameters30);
        byte[] byteArray32 = pcxImageParser12.getIccProfileBytes(byteSource17, pcxImagingParameters30);
        java.lang.String str33 = pcxImageParser12.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser12.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser8.getMetadata(byteSource11, pcxImagingParameters34);
        byte[] byteArray36 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters34);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser38 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = null;
        byte[] byteArray41 = pcxImageParser38.getIccProfileBytes(byteSource39, pcxImagingParameters40);
        java.lang.String str42 = pcxImageParser38.getName();
        java.lang.String str43 = pcxImageParser38.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser45 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder46 = pcxImageParser45.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance48 = pcxImageParser45.getFormatCompliance(byteSource47);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters49 = pcxImageParser45.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata50 = pcxImageParser38.getMetadata(byteSource44, pcxImagingParameters49);
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance52 = pcxImageParser38.getFormatCompliance(byteSource51);
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser54 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters56 = null;
        byte[] byteArray57 = pcxImageParser54.getIccProfileBytes(byteSource55, pcxImagingParameters56);
        java.nio.ByteOrder byteOrder58 = pcxImageParser54.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser60 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder61 = pcxImageParser60.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance63 = pcxImageParser60.getFormatCompliance(byteSource62);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters64 = pcxImageParser60.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat65 = null;
        boolean boolean66 = pcxImageParser60.canAcceptType(imageFormat65);
        java.lang.String str67 = pcxImageParser60.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters68 = pcxImageParser60.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata69 = pcxImageParser54.getMetadata(byteSource59, pcxImagingParameters68);
        org.apache.commons.imaging.bytesource.ByteSource byteSource70 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser71 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder72 = pcxImageParser71.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource73 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance74 = pcxImageParser71.getFormatCompliance(byteSource73);
        org.apache.commons.imaging.bytesource.ByteSource byteSource75 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata76 = pcxImageParser71.getMetadata(byteSource75);
        boolean boolean78 = pcxImageParser71.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters79 = pcxImageParser71.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata80 = pcxImageParser54.getMetadata(byteSource70, pcxImagingParameters79);
        byte[] byteArray81 = pcxImageParser38.getIccProfileBytes(byteSource53, pcxImagingParameters79);
        byte[] byteArray82 = pcxImageParser0.getIccProfileBytes(byteSource37, pcxImagingParameters79);
        java.nio.ByteOrder byteOrder83 = pcxImageParser0.getByteOrder();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(imageMetadata10);
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNull(formatCompliance15);
        org.junit.Assert.assertNotNull(pcxImagingParameters16);
        org.junit.Assert.assertNull(imageMetadata20);
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertNull(formatCompliance25);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertNull(byteArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Pcx-Custom" + "'", str33, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertNull(byteArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Pcx-Custom" + "'", str42, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Pcx-Custom" + "'", str43, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder46);
        org.junit.Assert.assertNull(formatCompliance48);
        org.junit.Assert.assertNotNull(pcxImagingParameters49);
        org.junit.Assert.assertNull(imageMetadata50);
        org.junit.Assert.assertNull(formatCompliance52);
        org.junit.Assert.assertNull(byteArray57);
        org.junit.Assert.assertNotNull(byteOrder58);
        org.junit.Assert.assertNotNull(byteOrder61);
        org.junit.Assert.assertNull(formatCompliance63);
        org.junit.Assert.assertNotNull(pcxImagingParameters64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "pcx" + "'", str67, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters68);
        org.junit.Assert.assertNull(imageMetadata69);
        org.junit.Assert.assertNotNull(byteOrder72);
        org.junit.Assert.assertNull(formatCompliance74);
        org.junit.Assert.assertNull(imageMetadata76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters79);
        org.junit.Assert.assertNull(imageMetadata80);
        org.junit.Assert.assertNull(byteArray81);
        org.junit.Assert.assertNull(byteArray82);
        org.junit.Assert.assertNotNull(byteOrder83);
    }

    @Test
    public void test1336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1336");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat37 = null;
        boolean boolean38 = pcxImageParser32.canAcceptType(imageFormat37);
        java.lang.String str39 = pcxImageParser32.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser32.getDefaultParameters();
        byte[] byteArray41 = pcxImageParser0.getIccProfileBytes(byteSource31, pcxImagingParameters40);
        java.lang.String str42 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance44 = pcxImageParser0.getFormatCompliance(byteSource43);
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance46 = pcxImageParser0.getFormatCompliance(byteSource45);
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "pcx" + "'", str39, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(byteArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Pcx-Custom" + "'", str42, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance44);
        org.junit.Assert.assertNull(formatCompliance46);
    }

    @Test
    public void test1337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1337");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata17 = pcxImageParser0.getMetadata(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance19 = pcxImageParser0.getFormatCompliance(byteSource18);
        java.io.File file20 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray21 = pcxImageParser0.getIccProfileBytes(file20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertNull(imageMetadata17);
        org.junit.Assert.assertNull(formatCompliance19);
    }

    @Test
    public void test1338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1338");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.nio.ByteOrder byteOrder4 = pcxImageParser0.getByteOrder();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters6 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = null;
        byte[] byteArray11 = pcxImageParser8.getIccProfileBytes(byteSource9, pcxImagingParameters10);
        java.lang.String str12 = pcxImageParser8.getName();
        java.lang.String str13 = pcxImageParser8.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance15 = pcxImageParser8.getFormatCompliance(byteSource14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder18 = pcxImageParser17.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance20 = pcxImageParser17.getFormatCompliance(byteSource19);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser17.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat22 = null;
        boolean boolean23 = pcxImageParser17.canAcceptType(imageFormat22);
        java.lang.String str24 = pcxImageParser17.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser17.getDefaultParameters();
        byte[] byteArray26 = pcxImageParser8.getIccProfileBytes(byteSource16, pcxImagingParameters25);
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder29 = pcxImageParser28.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance31 = pcxImageParser28.getFormatCompliance(byteSource30);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser28.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat33 = null;
        boolean boolean34 = pcxImageParser28.canAcceptType(imageFormat33);
        java.lang.String str35 = pcxImageParser28.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser28.getDefaultParameters();
        byte[] byteArray37 = pcxImageParser8.getIccProfileBytes(byteSource27, pcxImagingParameters36);
        byte[] byteArray38 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters36);
        java.awt.image.BufferedImage bufferedImage39 = null;
        java.io.OutputStream outputStream40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser41 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = null;
        byte[] byteArray44 = pcxImageParser41.getIccProfileBytes(byteSource42, pcxImagingParameters43);
        java.lang.String str45 = pcxImageParser41.getName();
        java.lang.String str46 = pcxImageParser41.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser48 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder49 = pcxImageParser48.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance51 = pcxImageParser48.getFormatCompliance(byteSource50);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser48.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser41.getMetadata(byteSource47, pcxImagingParameters52);
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser55 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters57 = null;
        byte[] byteArray58 = pcxImageParser55.getIccProfileBytes(byteSource56, pcxImagingParameters57);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters59 = pcxImageParser55.getDefaultParameters();
        byte[] byteArray60 = pcxImageParser41.getIccProfileBytes(byteSource54, pcxImagingParameters59);
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage39, outputStream40, pcxImagingParameters59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters6);
        org.junit.Assert.assertNull(byteArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Pcx-Custom" + "'", str12, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance15);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNull(formatCompliance20);
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "pcx" + "'", str24, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
        org.junit.Assert.assertNull(byteArray26);
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertNull(formatCompliance31);
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "pcx" + "'", str35, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertNull(byteArray37);
        org.junit.Assert.assertNull(byteArray38);
        org.junit.Assert.assertNull(byteArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Pcx-Custom" + "'", str45, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Pcx-Custom" + "'", str46, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder49);
        org.junit.Assert.assertNull(formatCompliance51);
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertNull(byteArray58);
        org.junit.Assert.assertNotNull(pcxImagingParameters59);
        org.junit.Assert.assertNull(byteArray60);
    }

    @Test
    public void test1339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1339");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters6 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser0.getMetadata(byteSource7);
        java.io.File file9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = null;
        byte[] byteArray13 = pcxImageParser10.getIccProfileBytes(byteSource11, pcxImagingParameters12);
        java.lang.String str14 = pcxImageParser10.getName();
        java.lang.String str15 = pcxImageParser10.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser10.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder20 = pcxImageParser19.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance22 = pcxImageParser19.getFormatCompliance(byteSource21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser19.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat24 = null;
        boolean boolean25 = pcxImageParser19.canAcceptType(imageFormat24);
        java.lang.String str26 = pcxImageParser19.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = pcxImageParser19.getDefaultParameters();
        byte[] byteArray28 = pcxImageParser10.getIccProfileBytes(byteSource18, pcxImagingParameters27);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser10.getMetadata(byteSource30);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser10.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage33 = pcxImageParser0.getBufferedImage(file9, pcxImagingParameters32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNotNull(pcxImagingParameters6);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNull(byteArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Pcx-Custom" + "'", str14, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Pcx-Custom" + "'", str15, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNull(formatCompliance22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "pcx" + "'", str26, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNotNull(pcxImagingParameters29);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
    }

    @Test
    public void test1340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1340");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = null;
        byte[] byteArray17 = pcxImageParser14.getIccProfileBytes(byteSource15, pcxImagingParameters16);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser14.getDefaultParameters();
        byte[] byteArray19 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder22 = pcxImageParser21.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance24 = pcxImageParser21.getFormatCompliance(byteSource23);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat26 = null;
        boolean boolean27 = pcxImageParser21.canAcceptType(imageFormat26);
        java.lang.String str28 = pcxImageParser21.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = pcxImageParser21.getDefaultParameters();
        java.lang.String str30 = pcxImageParser21.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser0.getMetadata(byteSource20, pcxImagingParameters31);
        boolean boolean34 = pcxImageParser0.canAcceptExtension("pcx");
        java.io.File file35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser36 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str37 = pcxImageParser36.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance39 = pcxImageParser36.getFormatCompliance(byteSource38);
        java.lang.String str40 = pcxImageParser36.getName();
        boolean boolean42 = pcxImageParser36.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder45 = pcxImageParser44.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance47 = pcxImageParser44.getFormatCompliance(byteSource46);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = pcxImageParser44.getDefaultParameters();
        java.lang.String str49 = pcxImageParser44.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata51 = pcxImageParser44.getMetadata(byteSource50);
        boolean boolean53 = pcxImageParser44.canAcceptExtension("");
        boolean boolean55 = pcxImageParser44.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser57 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters59 = null;
        byte[] byteArray60 = pcxImageParser57.getIccProfileBytes(byteSource58, pcxImagingParameters59);
        java.lang.String str61 = pcxImageParser57.getName();
        java.lang.String str62 = pcxImageParser57.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser64 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder65 = pcxImageParser64.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource66 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance67 = pcxImageParser64.getFormatCompliance(byteSource66);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters68 = pcxImageParser64.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata69 = pcxImageParser57.getMetadata(byteSource63, pcxImagingParameters68);
        org.apache.commons.imaging.bytesource.ByteSource byteSource70 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser71 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource72 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata73 = pcxImageParser71.getMetadata(byteSource72);
        org.apache.commons.imaging.bytesource.ByteSource byteSource74 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser75 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder76 = pcxImageParser75.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource77 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance78 = pcxImageParser75.getFormatCompliance(byteSource77);
        org.apache.commons.imaging.bytesource.ByteSource byteSource79 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata80 = pcxImageParser75.getMetadata(byteSource79);
        boolean boolean82 = pcxImageParser75.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters83 = pcxImageParser75.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata84 = pcxImageParser71.getMetadata(byteSource74, pcxImagingParameters83);
        byte[] byteArray85 = pcxImageParser57.getIccProfileBytes(byteSource70, pcxImagingParameters83);
        org.apache.commons.imaging.bytesource.ByteSource byteSource86 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance87 = pcxImageParser57.getFormatCompliance(byteSource86);
        java.nio.ByteOrder byteOrder88 = pcxImageParser57.getByteOrder();
        java.nio.ByteOrder byteOrder89 = pcxImageParser57.getByteOrder();
        java.lang.String str90 = pcxImageParser57.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters91 = pcxImageParser57.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata92 = pcxImageParser44.getMetadata(byteSource56, pcxImagingParameters91);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata93 = pcxImageParser36.getMetadata(byteSource43, pcxImagingParameters91);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage94 = pcxImageParser0.getBufferedImage(file35, pcxImagingParameters91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(byteArray17);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNull(formatCompliance24);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "pcx" + "'", str28, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Pcx-Custom" + "'", str30, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Pcx-Custom" + "'", str37, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Pcx-Custom" + "'", str40, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(byteOrder45);
        org.junit.Assert.assertNull(formatCompliance47);
        org.junit.Assert.assertNotNull(pcxImagingParameters48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "pcx" + "'", str49, "pcx");
        org.junit.Assert.assertNull(imageMetadata51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(byteArray60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Pcx-Custom" + "'", str61, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Pcx-Custom" + "'", str62, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder65);
        org.junit.Assert.assertNull(formatCompliance67);
        org.junit.Assert.assertNotNull(pcxImagingParameters68);
        org.junit.Assert.assertNull(imageMetadata69);
        org.junit.Assert.assertNull(imageMetadata73);
        org.junit.Assert.assertNotNull(byteOrder76);
        org.junit.Assert.assertNull(formatCompliance78);
        org.junit.Assert.assertNull(imageMetadata80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters83);
        org.junit.Assert.assertNull(imageMetadata84);
        org.junit.Assert.assertNull(byteArray85);
        org.junit.Assert.assertNull(formatCompliance87);
        org.junit.Assert.assertNotNull(byteOrder88);
        org.junit.Assert.assertNotNull(byteOrder89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "Pcx-Custom" + "'", str90, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters91);
        org.junit.Assert.assertNull(imageMetadata92);
        org.junit.Assert.assertNull(imageMetadata93);
    }

    @Test
    public void test1341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1341");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        java.lang.String str8 = pcxImageParser0.getName();
        java.io.File file9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.ImageFormat imageFormat18 = null;
        boolean boolean19 = pcxImageParser10.canAcceptType(imageFormat18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser21.getMetadata(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder26 = pcxImageParser25.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance28 = pcxImageParser25.getFormatCompliance(byteSource27);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = pcxImageParser25.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser31.getMetadata(byteSource32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder36 = pcxImageParser35.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance38 = pcxImageParser35.getFormatCompliance(byteSource37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser35.getMetadata(byteSource39);
        boolean boolean42 = pcxImageParser35.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser35.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser31.getMetadata(byteSource34, pcxImagingParameters43);
        byte[] byteArray45 = pcxImageParser25.getIccProfileBytes(byteSource30, pcxImagingParameters43);
        java.lang.String str46 = pcxImageParser25.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = pcxImageParser25.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser21.getMetadata(byteSource24, pcxImagingParameters47);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser10.getMetadata(byteSource20, pcxImagingParameters47);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo50 = pcxImageParser0.getImageInfo(file9, pcxImagingParameters47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Pcx-Custom" + "'", str8, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNotNull(byteOrder26);
        org.junit.Assert.assertNull(formatCompliance28);
        org.junit.Assert.assertNotNull(pcxImagingParameters29);
        org.junit.Assert.assertNull(imageMetadata33);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNull(formatCompliance38);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertNull(byteArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Pcx-Custom" + "'", str46, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters47);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNull(imageMetadata49);
    }

    @Test
    public void test1342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1342");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = null;
        byte[] byteArray33 = pcxImageParser30.getIccProfileBytes(byteSource31, pcxImagingParameters32);
        java.lang.String str34 = pcxImageParser30.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser30.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser0.getMetadata(byteSource29, pcxImagingParameters35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser0.getMetadata(byteSource37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser40.getMetadata(byteSource41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser40.getMetadata(byteSource43);
        java.lang.String str45 = pcxImageParser40.getDefaultExtension();
        java.lang.String str46 = pcxImageParser40.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = pcxImageParser40.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser0.getMetadata(byteSource39, pcxImagingParameters47);
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance50 = pcxImageParser0.getFormatCompliance(byteSource49);
        java.awt.image.BufferedImage bufferedImage51 = null;
        java.io.OutputStream outputStream52 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser53 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters55 = null;
        byte[] byteArray56 = pcxImageParser53.getIccProfileBytes(byteSource54, pcxImagingParameters55);
        java.lang.String str57 = pcxImageParser53.getName();
        boolean boolean59 = pcxImageParser53.canAcceptExtension("hi!");
        java.lang.String str60 = pcxImageParser53.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser62 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters64 = null;
        byte[] byteArray65 = pcxImageParser62.getIccProfileBytes(byteSource63, pcxImagingParameters64);
        java.lang.String str66 = pcxImageParser62.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource67 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata68 = pcxImageParser62.getMetadata(byteSource67);
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance70 = pcxImageParser62.getFormatCompliance(byteSource69);
        org.apache.commons.imaging.bytesource.ByteSource byteSource71 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser72 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder73 = pcxImageParser72.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource74 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance75 = pcxImageParser72.getFormatCompliance(byteSource74);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters76 = pcxImageParser72.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource77 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser78 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource79 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters80 = null;
        byte[] byteArray81 = pcxImageParser78.getIccProfileBytes(byteSource79, pcxImagingParameters80);
        java.lang.String str82 = pcxImageParser78.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters83 = pcxImageParser78.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata84 = pcxImageParser72.getMetadata(byteSource77, pcxImagingParameters83);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters85 = pcxImageParser72.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata86 = pcxImageParser62.getMetadata(byteSource71, pcxImagingParameters85);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata87 = pcxImageParser53.getMetadata(byteSource61, pcxImagingParameters85);
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage51, outputStream52, pcxImagingParameters85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "pcx" + "'", str34, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "pcx" + "'", str45, "pcx");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "pcx" + "'", str46, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters47);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNull(formatCompliance50);
        org.junit.Assert.assertNull(byteArray56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Pcx-Custom" + "'", str57, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Pcx-Custom" + "'", str60, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Pcx-Custom" + "'", str66, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata68);
        org.junit.Assert.assertNull(formatCompliance70);
        org.junit.Assert.assertNotNull(byteOrder73);
        org.junit.Assert.assertNull(formatCompliance75);
        org.junit.Assert.assertNotNull(pcxImagingParameters76);
        org.junit.Assert.assertNull(byteArray81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "pcx" + "'", str82, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters83);
        org.junit.Assert.assertNull(imageMetadata84);
        org.junit.Assert.assertNotNull(pcxImagingParameters85);
        org.junit.Assert.assertNull(imageMetadata86);
        org.junit.Assert.assertNull(imageMetadata87);
    }

    @Test
    public void test1343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1343");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = null;
        byte[] byteArray13 = pcxImageParser10.getIccProfileBytes(byteSource11, pcxImagingParameters12);
        java.lang.String str14 = pcxImageParser10.getName();
        java.lang.String str15 = pcxImageParser10.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser10.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder20 = pcxImageParser19.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance22 = pcxImageParser19.getFormatCompliance(byteSource21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser19.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat24 = null;
        boolean boolean25 = pcxImageParser19.canAcceptType(imageFormat24);
        java.lang.String str26 = pcxImageParser19.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = pcxImageParser19.getDefaultParameters();
        byte[] byteArray28 = pcxImageParser10.getIccProfileBytes(byteSource18, pcxImagingParameters27);
        byte[] byteArray29 = pcxImageParser0.getIccProfileBytes(byteSource9, pcxImagingParameters27);
        java.io.File file30 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray31 = pcxImageParser0.getIccProfileBytes(file30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(byteArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Pcx-Custom" + "'", str14, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Pcx-Custom" + "'", str15, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNull(formatCompliance22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "pcx" + "'", str26, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(byteArray29);
    }

    @Test
    public void test1344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1344");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str33 = pcxImageParser32.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        boolean boolean37 = pcxImageParser32.canAcceptExtension("");
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance39 = pcxImageParser32.getFormatCompliance(byteSource38);
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser41 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata43 = pcxImageParser41.getMetadata(byteSource42);
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser45 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder46 = pcxImageParser45.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance48 = pcxImageParser45.getFormatCompliance(byteSource47);
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata50 = pcxImageParser45.getMetadata(byteSource49);
        boolean boolean52 = pcxImageParser45.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters53 = pcxImageParser45.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata54 = pcxImageParser41.getMetadata(byteSource44, pcxImagingParameters53);
        byte[] byteArray55 = pcxImageParser32.getIccProfileBytes(byteSource40, pcxImagingParameters53);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension56 = pcxImageParser0.getImageSize(byteSource31, pcxImagingParameters53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Pcx-Custom" + "'", str33, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(formatCompliance39);
        org.junit.Assert.assertNull(imageMetadata43);
        org.junit.Assert.assertNotNull(byteOrder46);
        org.junit.Assert.assertNull(formatCompliance48);
        org.junit.Assert.assertNull(imageMetadata50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters53);
        org.junit.Assert.assertNull(imageMetadata54);
        org.junit.Assert.assertNull(byteArray55);
    }

    @Test
    public void test1345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1345");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        java.lang.Class<?> wildcardClass7 = pcxImageParser0.getClass();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1346");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        boolean boolean5 = pcxImageParser0.canAcceptExtension("");
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata11 = pcxImageParser9.getMetadata(byteSource10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder14 = pcxImageParser13.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser13.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata18 = pcxImageParser13.getMetadata(byteSource17);
        boolean boolean20 = pcxImageParser13.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser9.getMetadata(byteSource12, pcxImagingParameters21);
        byte[] byteArray23 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters21);
        java.nio.ByteOrder byteOrder24 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = null;
        byte[] byteArray29 = pcxImageParser26.getIccProfileBytes(byteSource27, pcxImagingParameters28);
        java.lang.String str30 = pcxImageParser26.getName();
        java.lang.String str31 = pcxImageParser26.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder34 = pcxImageParser33.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance36 = pcxImageParser33.getFormatCompliance(byteSource35);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = pcxImageParser33.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser26.getMetadata(byteSource32, pcxImagingParameters37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser40.getMetadata(byteSource41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder45 = pcxImageParser44.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance47 = pcxImageParser44.getFormatCompliance(byteSource46);
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser44.getMetadata(byteSource48);
        boolean boolean51 = pcxImageParser44.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser44.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser40.getMetadata(byteSource43, pcxImagingParameters52);
        byte[] byteArray54 = pcxImageParser26.getIccProfileBytes(byteSource39, pcxImagingParameters52);
        org.apache.commons.imaging.ImageFormat imageFormat55 = null;
        boolean boolean56 = pcxImageParser26.canAcceptType(imageFormat55);
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser58 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder59 = pcxImageParser58.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance61 = pcxImageParser58.getFormatCompliance(byteSource60);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters62 = pcxImageParser58.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat63 = null;
        boolean boolean64 = pcxImageParser58.canAcceptType(imageFormat63);
        java.lang.String str65 = pcxImageParser58.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters66 = pcxImageParser58.getDefaultParameters();
        byte[] byteArray67 = pcxImageParser26.getIccProfileBytes(byteSource57, pcxImagingParameters66);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata68 = pcxImageParser0.getMetadata(byteSource25, pcxImagingParameters66);
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters70 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata71 = pcxImageParser0.getMetadata(byteSource69, pcxImagingParameters70);
        java.io.File file72 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata73 = pcxImageParser0.getMetadata(file72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNull(imageMetadata11);
        org.junit.Assert.assertNotNull(byteOrder14);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNull(imageMetadata18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNull(byteArray23);
        org.junit.Assert.assertNotNull(byteOrder24);
        org.junit.Assert.assertNull(byteArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Pcx-Custom" + "'", str30, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Pcx-Custom" + "'", str31, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder34);
        org.junit.Assert.assertNull(formatCompliance36);
        org.junit.Assert.assertNotNull(pcxImagingParameters37);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertNotNull(byteOrder45);
        org.junit.Assert.assertNull(formatCompliance47);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertNull(byteArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(byteOrder59);
        org.junit.Assert.assertNull(formatCompliance61);
        org.junit.Assert.assertNotNull(pcxImagingParameters62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "pcx" + "'", str65, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters66);
        org.junit.Assert.assertNull(byteArray67);
        org.junit.Assert.assertNull(imageMetadata68);
        org.junit.Assert.assertNull(imageMetadata71);
    }

    @Test
    public void test1347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1347");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat10 = null;
        boolean boolean11 = pcxImageParser0.canAcceptType(imageFormat10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = null;
        byte[] byteArray17 = pcxImageParser14.getIccProfileBytes(byteSource15, pcxImagingParameters16);
        java.lang.String str18 = pcxImageParser14.getName();
        java.lang.String str19 = pcxImageParser14.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder22 = pcxImageParser21.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance24 = pcxImageParser21.getFormatCompliance(byteSource23);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata26 = pcxImageParser14.getMetadata(byteSource20, pcxImagingParameters25);
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = null;
        byte[] byteArray31 = pcxImageParser28.getIccProfileBytes(byteSource29, pcxImagingParameters30);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser28.getDefaultParameters();
        byte[] byteArray33 = pcxImageParser14.getIccProfileBytes(byteSource27, pcxImagingParameters32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder36 = pcxImageParser35.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance38 = pcxImageParser35.getFormatCompliance(byteSource37);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = pcxImageParser35.getDefaultParameters();
        java.lang.String str40 = pcxImageParser35.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser42 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder43 = pcxImageParser42.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance45 = pcxImageParser42.getFormatCompliance(byteSource44);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser42.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = pcxImageParser42.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = pcxImageParser42.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser50 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = null;
        byte[] byteArray53 = pcxImageParser50.getIccProfileBytes(byteSource51, pcxImagingParameters52);
        java.lang.String str54 = pcxImageParser50.getName();
        java.lang.String str55 = pcxImageParser50.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser57 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder58 = pcxImageParser57.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance60 = pcxImageParser57.getFormatCompliance(byteSource59);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters61 = pcxImageParser57.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata62 = pcxImageParser50.getMetadata(byteSource56, pcxImagingParameters61);
        java.lang.String str63 = pcxImageParser50.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource64 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata65 = pcxImageParser50.getMetadata(byteSource64);
        org.apache.commons.imaging.bytesource.ByteSource byteSource66 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser67 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource68 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters69 = null;
        byte[] byteArray70 = pcxImageParser67.getIccProfileBytes(byteSource68, pcxImagingParameters69);
        java.lang.String str71 = pcxImageParser67.getName();
        java.lang.String str72 = pcxImageParser67.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource73 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser74 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder75 = pcxImageParser74.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource76 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance77 = pcxImageParser74.getFormatCompliance(byteSource76);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters78 = pcxImageParser74.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata79 = pcxImageParser67.getMetadata(byteSource73, pcxImagingParameters78);
        org.apache.commons.imaging.bytesource.ByteSource byteSource80 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser81 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource82 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters83 = null;
        byte[] byteArray84 = pcxImageParser81.getIccProfileBytes(byteSource82, pcxImagingParameters83);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters85 = pcxImageParser81.getDefaultParameters();
        byte[] byteArray86 = pcxImageParser67.getIccProfileBytes(byteSource80, pcxImagingParameters85);
        byte[] byteArray87 = pcxImageParser50.getIccProfileBytes(byteSource66, pcxImagingParameters85);
        byte[] byteArray88 = pcxImageParser42.getIccProfileBytes(byteSource49, pcxImagingParameters85);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata89 = pcxImageParser35.getMetadata(byteSource41, pcxImagingParameters85);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata90 = pcxImageParser14.getMetadata(byteSource34, pcxImagingParameters85);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension91 = pcxImageParser0.getImageSize(byteSource13, pcxImagingParameters85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(pcxImagingParameters9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(byteArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Pcx-Custom" + "'", str18, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Pcx-Custom" + "'", str19, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNull(formatCompliance24);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
        org.junit.Assert.assertNull(imageMetadata26);
        org.junit.Assert.assertNull(byteArray31);
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNull(formatCompliance38);
        org.junit.Assert.assertNotNull(pcxImagingParameters39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "pcx" + "'", str40, "pcx");
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNull(formatCompliance45);
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
        org.junit.Assert.assertNotNull(pcxImagingParameters47);
        org.junit.Assert.assertNotNull(pcxImagingParameters48);
        org.junit.Assert.assertNull(byteArray53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Pcx-Custom" + "'", str54, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Pcx-Custom" + "'", str55, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder58);
        org.junit.Assert.assertNull(formatCompliance60);
        org.junit.Assert.assertNotNull(pcxImagingParameters61);
        org.junit.Assert.assertNull(imageMetadata62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Pcx-Custom" + "'", str63, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata65);
        org.junit.Assert.assertNull(byteArray70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Pcx-Custom" + "'", str71, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Pcx-Custom" + "'", str72, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder75);
        org.junit.Assert.assertNull(formatCompliance77);
        org.junit.Assert.assertNotNull(pcxImagingParameters78);
        org.junit.Assert.assertNull(imageMetadata79);
        org.junit.Assert.assertNull(byteArray84);
        org.junit.Assert.assertNotNull(pcxImagingParameters85);
        org.junit.Assert.assertNull(byteArray86);
        org.junit.Assert.assertNull(byteArray87);
        org.junit.Assert.assertNull(byteArray88);
        org.junit.Assert.assertNull(imageMetadata89);
        org.junit.Assert.assertNull(imageMetadata90);
    }

    @Test
    public void test1348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1348");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance24 = pcxImageParser0.getFormatCompliance(byteSource23);
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(formatCompliance24);
    }

    @Test
    public void test1349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1349");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        java.nio.ByteOrder byteOrder2 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance4 = pcxImageParser0.getFormatCompliance(byteSource3);
        java.lang.String str5 = pcxImageParser0.getName();
        java.io.File file6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser0.getMetadata(file6, pcxImagingParameters7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertNull(formatCompliance4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
    }

    @Test
    public void test1350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1350");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata4 = pcxImageParser0.getMetadata(byteSource3);
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        java.lang.String str6 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser0.getFormatCompliance(byteSource9);
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "pcx" + "'", str6, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(formatCompliance10);
    }

    @Test
    public void test1351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1351");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser0.getMetadata(byteSource21, pcxImagingParameters22);
        java.lang.String str24 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = null;
        byte[] byteArray29 = pcxImageParser26.getIccProfileBytes(byteSource27, pcxImagingParameters28);
        java.lang.String str30 = pcxImageParser26.getName();
        boolean boolean32 = pcxImageParser26.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder35 = pcxImageParser34.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance37 = pcxImageParser34.getFormatCompliance(byteSource36);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser34.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = pcxImageParser34.getDefaultParameters();
        byte[] byteArray40 = pcxImageParser26.getIccProfileBytes(byteSource33, pcxImagingParameters39);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage41 = pcxImageParser0.getBufferedImage(byteSource25, pcxImagingParameters39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "pcx" + "'", str24, "pcx");
        org.junit.Assert.assertNull(byteArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Pcx-Custom" + "'", str30, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNull(formatCompliance37);
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
        org.junit.Assert.assertNotNull(pcxImagingParameters39);
        org.junit.Assert.assertNull(byteArray40);
    }

    @Test
    public void test1352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1352");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat10 = null;
        boolean boolean11 = pcxImageParser0.canAcceptType(imageFormat10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser0.getDefaultParameters();
        java.lang.String str13 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource14);
        java.lang.String str16 = pcxImageParser0.getName();
        java.io.File file17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = pcxImageParser0.dumpImageFile(file17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(pcxImagingParameters9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Pcx-Custom" + "'", str16, "Pcx-Custom");
    }

    @Test
    public void test1353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1353");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        boolean boolean23 = pcxImageParser0.canAcceptExtension("Pcx-Custom");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = pcxImageParser0.getDefaultParameters();
        boolean boolean26 = pcxImageParser0.canAcceptExtension("");
        java.io.File file27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str29 = pcxImageParser28.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance31 = pcxImageParser28.getFormatCompliance(byteSource30);
        java.lang.String str32 = pcxImageParser28.getName();
        java.lang.String str33 = pcxImageParser28.getName();
        org.apache.commons.imaging.ImageFormat imageFormat34 = null;
        boolean boolean35 = pcxImageParser28.canAcceptType(imageFormat34);
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser28.getMetadata(byteSource36);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser28.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension39 = pcxImageParser0.getImageSize(file27, pcxImagingParameters38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Pcx-Custom" + "'", str32, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Pcx-Custom" + "'", str33, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
    }

    @Test
    public void test1354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1354");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser0.getMetadata(byteSource7);
        java.lang.String str9 = pcxImageParser0.getName();
        java.io.File file10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder12 = pcxImageParser11.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance14 = pcxImageParser11.getFormatCompliance(byteSource13);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = pcxImageParser11.getDefaultParameters();
        java.lang.String str16 = pcxImageParser11.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = null;
        byte[] byteArray29 = pcxImageParser26.getIccProfileBytes(byteSource27, pcxImagingParameters28);
        java.lang.String str30 = pcxImageParser26.getName();
        java.lang.String str31 = pcxImageParser26.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder34 = pcxImageParser33.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance36 = pcxImageParser33.getFormatCompliance(byteSource35);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = pcxImageParser33.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser26.getMetadata(byteSource32, pcxImagingParameters37);
        java.lang.String str39 = pcxImageParser26.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser26.getMetadata(byteSource40);
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser43 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = null;
        byte[] byteArray46 = pcxImageParser43.getIccProfileBytes(byteSource44, pcxImagingParameters45);
        java.lang.String str47 = pcxImageParser43.getName();
        java.lang.String str48 = pcxImageParser43.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser50 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder51 = pcxImageParser50.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance53 = pcxImageParser50.getFormatCompliance(byteSource52);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters54 = pcxImageParser50.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata55 = pcxImageParser43.getMetadata(byteSource49, pcxImagingParameters54);
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser57 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters59 = null;
        byte[] byteArray60 = pcxImageParser57.getIccProfileBytes(byteSource58, pcxImagingParameters59);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters61 = pcxImageParser57.getDefaultParameters();
        byte[] byteArray62 = pcxImageParser43.getIccProfileBytes(byteSource56, pcxImagingParameters61);
        byte[] byteArray63 = pcxImageParser26.getIccProfileBytes(byteSource42, pcxImagingParameters61);
        byte[] byteArray64 = pcxImageParser18.getIccProfileBytes(byteSource25, pcxImagingParameters61);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata65 = pcxImageParser11.getMetadata(byteSource17, pcxImagingParameters61);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage66 = pcxImageParser0.getBufferedImage(file10, pcxImagingParameters61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Pcx-Custom" + "'", str9, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder12);
        org.junit.Assert.assertNull(formatCompliance14);
        org.junit.Assert.assertNotNull(pcxImagingParameters15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "pcx" + "'", str16, "pcx");
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNotNull(pcxImagingParameters24);
        org.junit.Assert.assertNull(byteArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Pcx-Custom" + "'", str30, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Pcx-Custom" + "'", str31, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder34);
        org.junit.Assert.assertNull(formatCompliance36);
        org.junit.Assert.assertNotNull(pcxImagingParameters37);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Pcx-Custom" + "'", str39, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata41);
        org.junit.Assert.assertNull(byteArray46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Pcx-Custom" + "'", str47, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Pcx-Custom" + "'", str48, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder51);
        org.junit.Assert.assertNull(formatCompliance53);
        org.junit.Assert.assertNotNull(pcxImagingParameters54);
        org.junit.Assert.assertNull(imageMetadata55);
        org.junit.Assert.assertNull(byteArray60);
        org.junit.Assert.assertNotNull(pcxImagingParameters61);
        org.junit.Assert.assertNull(byteArray62);
        org.junit.Assert.assertNull(byteArray63);
        org.junit.Assert.assertNull(byteArray64);
        org.junit.Assert.assertNull(imageMetadata65);
    }

    @Test
    public void test1355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1355");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata4 = pcxImageParser0.getMetadata(byteSource3);
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        java.awt.image.BufferedImage bufferedImage8 = null;
        java.io.OutputStream outputStream9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser10.getDefaultParameters();
        java.lang.String str15 = pcxImageParser10.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata18 = pcxImageParser10.getMetadata(byteSource16, pcxImagingParameters17);
        java.lang.String str19 = pcxImageParser10.getDefaultExtension();
        boolean boolean21 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser10.getDefaultParameters();
        java.lang.String str23 = pcxImageParser10.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = null;
        byte[] byteArray28 = pcxImageParser25.getIccProfileBytes(byteSource26, pcxImagingParameters27);
        java.lang.String str29 = pcxImageParser25.getDefaultExtension();
        java.lang.String str30 = pcxImageParser25.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = null;
        byte[] byteArray35 = pcxImageParser32.getIccProfileBytes(byteSource33, pcxImagingParameters34);
        java.lang.String str36 = pcxImageParser32.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser32.getMetadata(byteSource37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance40 = pcxImageParser32.getFormatCompliance(byteSource39);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat42 = null;
        boolean boolean43 = pcxImageParser32.canAcceptType(imageFormat42);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = pcxImageParser32.getDefaultParameters();
        byte[] byteArray45 = pcxImageParser25.getIccProfileBytes(byteSource31, pcxImagingParameters44);
        byte[] byteArray46 = pcxImageParser10.getIccProfileBytes(byteSource24, pcxImagingParameters44);
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage8, outputStream9, pcxImagingParameters44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "pcx" + "'", str15, "pcx");
        org.junit.Assert.assertNull(imageMetadata18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "pcx" + "'", str19, "pcx");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "pcx" + "'", str23, "pcx");
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "pcx" + "'", str29, "pcx");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Pcx-Custom" + "'", str30, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Pcx-Custom" + "'", str36, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNull(formatCompliance40);
        org.junit.Assert.assertNotNull(pcxImagingParameters41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters44);
        org.junit.Assert.assertNull(byteArray45);
        org.junit.Assert.assertNull(byteArray46);
    }

    @Test
    public void test1356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1356");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat6 = null;
        boolean boolean7 = pcxImageParser0.canAcceptType(imageFormat6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser0.getMetadata(byteSource8);
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = null;
        byte[] byteArray14 = pcxImageParser11.getIccProfileBytes(byteSource12, pcxImagingParameters13);
        java.lang.String str15 = pcxImageParser11.getName();
        java.lang.String str16 = pcxImageParser11.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser11.getMetadata(byteSource17, pcxImagingParameters22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser25.getMetadata(byteSource26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder30 = pcxImageParser29.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser29.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser29.getMetadata(byteSource33);
        boolean boolean36 = pcxImageParser29.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser25.getMetadata(byteSource28, pcxImagingParameters37);
        byte[] byteArray39 = pcxImageParser11.getIccProfileBytes(byteSource24, pcxImagingParameters37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance41 = pcxImageParser11.getFormatCompliance(byteSource40);
        java.nio.ByteOrder byteOrder42 = pcxImageParser11.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = null;
        byte[] byteArray47 = pcxImageParser44.getIccProfileBytes(byteSource45, pcxImagingParameters46);
        java.lang.String str48 = pcxImageParser44.getName();
        java.lang.String str49 = pcxImageParser44.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser51 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder52 = pcxImageParser51.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance54 = pcxImageParser51.getFormatCompliance(byteSource53);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters55 = pcxImageParser51.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata56 = pcxImageParser44.getMetadata(byteSource50, pcxImagingParameters55);
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser58 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata60 = pcxImageParser58.getMetadata(byteSource59);
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser62 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder63 = pcxImageParser62.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource64 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance65 = pcxImageParser62.getFormatCompliance(byteSource64);
        org.apache.commons.imaging.bytesource.ByteSource byteSource66 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata67 = pcxImageParser62.getMetadata(byteSource66);
        boolean boolean69 = pcxImageParser62.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters70 = pcxImageParser62.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata71 = pcxImageParser58.getMetadata(byteSource61, pcxImagingParameters70);
        byte[] byteArray72 = pcxImageParser44.getIccProfileBytes(byteSource57, pcxImagingParameters70);
        byte[] byteArray73 = pcxImageParser11.getIccProfileBytes(byteSource43, pcxImagingParameters70);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata74 = pcxImageParser0.getMetadata(byteSource10, pcxImagingParameters70);
        java.io.File file75 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser76 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource77 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters78 = null;
        byte[] byteArray79 = pcxImageParser76.getIccProfileBytes(byteSource77, pcxImagingParameters78);
        java.lang.String str80 = pcxImageParser76.getName();
        boolean boolean82 = pcxImageParser76.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource83 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser84 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder85 = pcxImageParser84.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource86 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance87 = pcxImageParser84.getFormatCompliance(byteSource86);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters88 = pcxImageParser84.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters89 = pcxImageParser84.getDefaultParameters();
        byte[] byteArray90 = pcxImageParser76.getIccProfileBytes(byteSource83, pcxImagingParameters89);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo91 = pcxImageParser0.getImageInfo(file75, pcxImagingParameters89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertNull(byteArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Pcx-Custom" + "'", str15, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Pcx-Custom" + "'", str16, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(byteOrder30);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters37);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNull(byteArray39);
        org.junit.Assert.assertNull(formatCompliance41);
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNull(byteArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Pcx-Custom" + "'", str48, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Pcx-Custom" + "'", str49, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder52);
        org.junit.Assert.assertNull(formatCompliance54);
        org.junit.Assert.assertNotNull(pcxImagingParameters55);
        org.junit.Assert.assertNull(imageMetadata56);
        org.junit.Assert.assertNull(imageMetadata60);
        org.junit.Assert.assertNotNull(byteOrder63);
        org.junit.Assert.assertNull(formatCompliance65);
        org.junit.Assert.assertNull(imageMetadata67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters70);
        org.junit.Assert.assertNull(imageMetadata71);
        org.junit.Assert.assertNull(byteArray72);
        org.junit.Assert.assertNull(byteArray73);
        org.junit.Assert.assertNull(imageMetadata74);
        org.junit.Assert.assertNull(byteArray79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "Pcx-Custom" + "'", str80, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(byteOrder85);
        org.junit.Assert.assertNull(formatCompliance87);
        org.junit.Assert.assertNotNull(pcxImagingParameters88);
        org.junit.Assert.assertNotNull(pcxImagingParameters89);
        org.junit.Assert.assertNull(byteArray90);
    }

    @Test
    public void test1357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1357");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat6 = null;
        boolean boolean7 = pcxImageParser0.canAcceptType(imageFormat6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser0.getMetadata(byteSource8);
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = null;
        byte[] byteArray14 = pcxImageParser11.getIccProfileBytes(byteSource12, pcxImagingParameters13);
        java.lang.String str15 = pcxImageParser11.getName();
        java.lang.String str16 = pcxImageParser11.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser11.getMetadata(byteSource17, pcxImagingParameters22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser25.getMetadata(byteSource26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder30 = pcxImageParser29.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser29.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser29.getMetadata(byteSource33);
        boolean boolean36 = pcxImageParser29.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser25.getMetadata(byteSource28, pcxImagingParameters37);
        byte[] byteArray39 = pcxImageParser11.getIccProfileBytes(byteSource24, pcxImagingParameters37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance41 = pcxImageParser11.getFormatCompliance(byteSource40);
        java.nio.ByteOrder byteOrder42 = pcxImageParser11.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = null;
        byte[] byteArray47 = pcxImageParser44.getIccProfileBytes(byteSource45, pcxImagingParameters46);
        java.lang.String str48 = pcxImageParser44.getName();
        java.lang.String str49 = pcxImageParser44.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser51 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder52 = pcxImageParser51.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance54 = pcxImageParser51.getFormatCompliance(byteSource53);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters55 = pcxImageParser51.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata56 = pcxImageParser44.getMetadata(byteSource50, pcxImagingParameters55);
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser58 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata60 = pcxImageParser58.getMetadata(byteSource59);
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser62 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder63 = pcxImageParser62.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource64 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance65 = pcxImageParser62.getFormatCompliance(byteSource64);
        org.apache.commons.imaging.bytesource.ByteSource byteSource66 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata67 = pcxImageParser62.getMetadata(byteSource66);
        boolean boolean69 = pcxImageParser62.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters70 = pcxImageParser62.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata71 = pcxImageParser58.getMetadata(byteSource61, pcxImagingParameters70);
        byte[] byteArray72 = pcxImageParser44.getIccProfileBytes(byteSource57, pcxImagingParameters70);
        byte[] byteArray73 = pcxImageParser11.getIccProfileBytes(byteSource43, pcxImagingParameters70);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata74 = pcxImageParser0.getMetadata(byteSource10, pcxImagingParameters70);
        org.apache.commons.imaging.bytesource.ByteSource byteSource75 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo76 = pcxImageParser0.getImageInfo(byteSource75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertNull(byteArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Pcx-Custom" + "'", str15, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Pcx-Custom" + "'", str16, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(byteOrder30);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters37);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNull(byteArray39);
        org.junit.Assert.assertNull(formatCompliance41);
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNull(byteArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Pcx-Custom" + "'", str48, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Pcx-Custom" + "'", str49, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder52);
        org.junit.Assert.assertNull(formatCompliance54);
        org.junit.Assert.assertNotNull(pcxImagingParameters55);
        org.junit.Assert.assertNull(imageMetadata56);
        org.junit.Assert.assertNull(imageMetadata60);
        org.junit.Assert.assertNotNull(byteOrder63);
        org.junit.Assert.assertNull(formatCompliance65);
        org.junit.Assert.assertNull(imageMetadata67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters70);
        org.junit.Assert.assertNull(imageMetadata71);
        org.junit.Assert.assertNull(byteArray72);
        org.junit.Assert.assertNull(byteArray73);
        org.junit.Assert.assertNull(imageMetadata74);
    }

    @Test
    public void test1358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1358");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = null;
        byte[] byteArray9 = pcxImageParser6.getIccProfileBytes(byteSource7, pcxImagingParameters8);
        java.lang.String str10 = pcxImageParser6.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource5, pcxImagingParameters11);
        java.io.File file13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = null;
        byte[] byteArray17 = pcxImageParser14.getIccProfileBytes(byteSource15, pcxImagingParameters16);
        java.lang.String str18 = pcxImageParser14.getName();
        java.lang.String str19 = pcxImageParser14.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder22 = pcxImageParser21.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance24 = pcxImageParser21.getFormatCompliance(byteSource23);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata26 = pcxImageParser14.getMetadata(byteSource20, pcxImagingParameters25);
        java.lang.String str27 = pcxImageParser14.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser14.getMetadata(byteSource28);
        org.apache.commons.imaging.ImageFormat imageFormat30 = null;
        boolean boolean31 = pcxImageParser14.canAcceptType(imageFormat30);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser14.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage33 = pcxImageParser0.getBufferedImage(file13, pcxImagingParameters32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(byteArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "pcx" + "'", str10, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(byteArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Pcx-Custom" + "'", str18, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Pcx-Custom" + "'", str19, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNull(formatCompliance24);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
        org.junit.Assert.assertNull(imageMetadata26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Pcx-Custom" + "'", str27, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
    }

    @Test
    public void test1359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1359");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource14);
        org.apache.commons.imaging.ImageFormat imageFormat16 = null;
        boolean boolean17 = pcxImageParser0.canAcceptType(imageFormat16);
        java.io.File file18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder20 = pcxImageParser19.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance22 = pcxImageParser19.getFormatCompliance(byteSource21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser19.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = null;
        byte[] byteArray28 = pcxImageParser25.getIccProfileBytes(byteSource26, pcxImagingParameters27);
        java.lang.String str29 = pcxImageParser25.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser25.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser19.getMetadata(byteSource24, pcxImagingParameters30);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage32 = pcxImageParser0.getBufferedImage(file18, pcxImagingParameters30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNull(formatCompliance22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "pcx" + "'", str29, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(imageMetadata31);
    }

    @Test
    public void test1360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1360");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = null;
        byte[] byteArray33 = pcxImageParser30.getIccProfileBytes(byteSource31, pcxImagingParameters32);
        java.lang.String str34 = pcxImageParser30.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser30.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser0.getMetadata(byteSource29, pcxImagingParameters35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser0.getMetadata(byteSource37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser40.getMetadata(byteSource41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser40.getMetadata(byteSource43);
        java.lang.String str45 = pcxImageParser40.getDefaultExtension();
        java.lang.String str46 = pcxImageParser40.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = pcxImageParser40.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser0.getMetadata(byteSource39, pcxImagingParameters47);
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance50 = pcxImageParser0.getFormatCompliance(byteSource49);
        java.io.File file51 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser52 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters54 = null;
        byte[] byteArray55 = pcxImageParser52.getIccProfileBytes(byteSource53, pcxImagingParameters54);
        java.lang.String str56 = pcxImageParser52.getDefaultExtension();
        java.lang.String str57 = pcxImageParser52.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser59 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters61 = null;
        byte[] byteArray62 = pcxImageParser59.getIccProfileBytes(byteSource60, pcxImagingParameters61);
        java.lang.String str63 = pcxImageParser59.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource64 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata65 = pcxImageParser59.getMetadata(byteSource64);
        org.apache.commons.imaging.bytesource.ByteSource byteSource66 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance67 = pcxImageParser59.getFormatCompliance(byteSource66);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters68 = pcxImageParser59.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat69 = null;
        boolean boolean70 = pcxImageParser59.canAcceptType(imageFormat69);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters71 = pcxImageParser59.getDefaultParameters();
        byte[] byteArray72 = pcxImageParser52.getIccProfileBytes(byteSource58, pcxImagingParameters71);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension73 = pcxImageParser0.getImageSize(file51, pcxImagingParameters71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "pcx" + "'", str34, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "pcx" + "'", str45, "pcx");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "pcx" + "'", str46, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters47);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNull(formatCompliance50);
        org.junit.Assert.assertNull(byteArray55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "pcx" + "'", str56, "pcx");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Pcx-Custom" + "'", str57, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Pcx-Custom" + "'", str63, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata65);
        org.junit.Assert.assertNull(formatCompliance67);
        org.junit.Assert.assertNotNull(pcxImagingParameters68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters71);
        org.junit.Assert.assertNull(byteArray72);
    }

    @Test
    public void test1361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1361");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser24.canAcceptType(imageFormat29);
        java.lang.String str31 = pcxImageParser24.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser24.getDefaultParameters();
        byte[] byteArray33 = pcxImageParser0.getIccProfileBytes(byteSource23, pcxImagingParameters32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser0.getFormatCompliance(byteSource34);
        java.io.File file36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser37 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = null;
        byte[] byteArray40 = pcxImageParser37.getIccProfileBytes(byteSource38, pcxImagingParameters39);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = pcxImageParser37.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser0.getMetadata(file36, pcxImagingParameters41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "pcx" + "'", str31, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNull(byteArray40);
        org.junit.Assert.assertNotNull(pcxImagingParameters41);
    }

    @Test
    public void test1362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1362");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser9.canAcceptType(imageFormat14);
        java.lang.String str16 = pcxImageParser9.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser9.getDefaultParameters();
        byte[] byteArray18 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters17);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata21 = pcxImageParser0.getMetadata(byteSource20);
        java.io.File file22 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension23 = pcxImageParser0.getImageSize(file22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "pcx" + "'", str16, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
        org.junit.Assert.assertNull(imageMetadata21);
    }

    @Test
    public void test1363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1363");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        boolean boolean30 = pcxImageParser0.canAcceptExtension("pcx");
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat32 = null;
        boolean boolean33 = pcxImageParser0.canAcceptType(imageFormat32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo35 = pcxImageParser0.getImageInfo(byteSource34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test1364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1364");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser23 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = null;
        byte[] byteArray26 = pcxImageParser23.getIccProfileBytes(byteSource24, pcxImagingParameters25);
        java.lang.String str27 = pcxImageParser23.getName();
        java.lang.String str28 = pcxImageParser23.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder31 = pcxImageParser30.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance33 = pcxImageParser30.getFormatCompliance(byteSource32);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser30.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser23.getMetadata(byteSource29, pcxImagingParameters34);
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser37 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata39 = pcxImageParser37.getMetadata(byteSource38);
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser41 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder42 = pcxImageParser41.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance44 = pcxImageParser41.getFormatCompliance(byteSource43);
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser41.getMetadata(byteSource45);
        boolean boolean48 = pcxImageParser41.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters49 = pcxImageParser41.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata50 = pcxImageParser37.getMetadata(byteSource40, pcxImagingParameters49);
        byte[] byteArray51 = pcxImageParser23.getIccProfileBytes(byteSource36, pcxImagingParameters49);
        boolean boolean53 = pcxImageParser23.canAcceptExtension("pcx");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters54 = pcxImageParser23.getDefaultParameters();
        byte[] byteArray55 = pcxImageParser0.getIccProfileBytes(byteSource22, pcxImagingParameters54);
        java.io.PrintWriter printWriter56 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean58 = pcxImageParser0.dumpImageFile(printWriter56, byteSource57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Pcx-Custom" + "'", str27, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Pcx-Custom" + "'", str28, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNull(formatCompliance33);
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertNull(imageMetadata39);
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNull(formatCompliance44);
        org.junit.Assert.assertNull(imageMetadata46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters49);
        org.junit.Assert.assertNull(imageMetadata50);
        org.junit.Assert.assertNull(byteArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters54);
        org.junit.Assert.assertNull(byteArray55);
    }

    @Test
    public void test1365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1365");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat6 = null;
        boolean boolean7 = pcxImageParser0.canAcceptType(imageFormat6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser0.getMetadata(byteSource8);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension13 = pcxImageParser0.getImageSize(byteSource11, pcxImagingParameters12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertNotNull(pcxImagingParameters10);
    }

    @Test
    public void test1366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1366");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        java.lang.String str8 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata10 = pcxImageParser0.getMetadata(byteSource9);
        java.io.File file11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = pcxImageParser0.dumpImageFile(file11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "pcx" + "'", str8, "pcx");
        org.junit.Assert.assertNull(imageMetadata10);
    }

    @Test
    public void test1367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1367");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser0.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = null;
        byte[] byteArray37 = pcxImageParser34.getIccProfileBytes(byteSource35, pcxImagingParameters36);
        java.lang.String str38 = pcxImageParser34.getName();
        java.lang.String str39 = pcxImageParser34.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser41 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder42 = pcxImageParser41.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance44 = pcxImageParser41.getFormatCompliance(byteSource43);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser41.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser34.getMetadata(byteSource40, pcxImagingParameters45);
        boolean boolean48 = pcxImageParser34.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance50 = pcxImageParser34.getFormatCompliance(byteSource49);
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance52 = pcxImageParser34.getFormatCompliance(byteSource51);
        org.apache.commons.imaging.ImageFormat imageFormat53 = null;
        boolean boolean54 = pcxImageParser34.canAcceptType(imageFormat53);
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser56 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters58 = null;
        byte[] byteArray59 = pcxImageParser56.getIccProfileBytes(byteSource57, pcxImagingParameters58);
        java.lang.String str60 = pcxImageParser56.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters61 = pcxImageParser56.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser63 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder64 = pcxImageParser63.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance66 = pcxImageParser63.getFormatCompliance(byteSource65);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters67 = pcxImageParser63.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource68 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser69 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource70 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters71 = null;
        byte[] byteArray72 = pcxImageParser69.getIccProfileBytes(byteSource70, pcxImagingParameters71);
        java.lang.String str73 = pcxImageParser69.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters74 = pcxImageParser69.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata75 = pcxImageParser63.getMetadata(byteSource68, pcxImagingParameters74);
        byte[] byteArray76 = pcxImageParser56.getIccProfileBytes(byteSource62, pcxImagingParameters74);
        byte[] byteArray77 = pcxImageParser34.getIccProfileBytes(byteSource55, pcxImagingParameters74);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo78 = pcxImageParser0.getImageInfo(byteSource33, pcxImagingParameters74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNull(byteArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Pcx-Custom" + "'", str38, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Pcx-Custom" + "'", str39, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNull(formatCompliance44);
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertNull(imageMetadata46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(formatCompliance50);
        org.junit.Assert.assertNull(formatCompliance52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(byteArray59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "pcx" + "'", str60, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters61);
        org.junit.Assert.assertNotNull(byteOrder64);
        org.junit.Assert.assertNull(formatCompliance66);
        org.junit.Assert.assertNotNull(pcxImagingParameters67);
        org.junit.Assert.assertNull(byteArray72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "pcx" + "'", str73, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters74);
        org.junit.Assert.assertNull(imageMetadata75);
        org.junit.Assert.assertNull(byteArray76);
        org.junit.Assert.assertNull(byteArray77);
    }

    @Test
    public void test1368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1368");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser0.canAcceptType(imageFormat23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance26 = pcxImageParser0.getFormatCompliance(byteSource25);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = pcxImageParser0.getDefaultParameters();
        java.io.File file28 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray29 = pcxImageParser0.getIccProfileBytes(file28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(formatCompliance26);
        org.junit.Assert.assertNotNull(pcxImagingParameters27);
    }

    @Test
    public void test1369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1369");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser0.getFormatCompliance(byteSource31);
        java.lang.String str33 = pcxImageParser0.getName();
        java.awt.image.BufferedImage bufferedImage34 = null;
        java.io.OutputStream outputStream35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser36 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder37 = pcxImageParser36.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance39 = pcxImageParser36.getFormatCompliance(byteSource38);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser36.getDefaultParameters();
        java.lang.String str41 = pcxImageParser36.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser43 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder44 = pcxImageParser43.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance46 = pcxImageParser43.getFormatCompliance(byteSource45);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = pcxImageParser43.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = pcxImageParser43.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters49 = pcxImageParser43.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser51 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters53 = null;
        byte[] byteArray54 = pcxImageParser51.getIccProfileBytes(byteSource52, pcxImagingParameters53);
        java.lang.String str55 = pcxImageParser51.getName();
        java.lang.String str56 = pcxImageParser51.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser58 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder59 = pcxImageParser58.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance61 = pcxImageParser58.getFormatCompliance(byteSource60);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters62 = pcxImageParser58.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata63 = pcxImageParser51.getMetadata(byteSource57, pcxImagingParameters62);
        java.lang.String str64 = pcxImageParser51.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata66 = pcxImageParser51.getMetadata(byteSource65);
        org.apache.commons.imaging.bytesource.ByteSource byteSource67 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser68 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters70 = null;
        byte[] byteArray71 = pcxImageParser68.getIccProfileBytes(byteSource69, pcxImagingParameters70);
        java.lang.String str72 = pcxImageParser68.getName();
        java.lang.String str73 = pcxImageParser68.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource74 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser75 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder76 = pcxImageParser75.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource77 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance78 = pcxImageParser75.getFormatCompliance(byteSource77);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters79 = pcxImageParser75.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata80 = pcxImageParser68.getMetadata(byteSource74, pcxImagingParameters79);
        org.apache.commons.imaging.bytesource.ByteSource byteSource81 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser82 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource83 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters84 = null;
        byte[] byteArray85 = pcxImageParser82.getIccProfileBytes(byteSource83, pcxImagingParameters84);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters86 = pcxImageParser82.getDefaultParameters();
        byte[] byteArray87 = pcxImageParser68.getIccProfileBytes(byteSource81, pcxImagingParameters86);
        byte[] byteArray88 = pcxImageParser51.getIccProfileBytes(byteSource67, pcxImagingParameters86);
        byte[] byteArray89 = pcxImageParser43.getIccProfileBytes(byteSource50, pcxImagingParameters86);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata90 = pcxImageParser36.getMetadata(byteSource42, pcxImagingParameters86);
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage34, outputStream35, pcxImagingParameters86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Pcx-Custom" + "'", str33, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNull(formatCompliance39);
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "pcx" + "'", str41, "pcx");
        org.junit.Assert.assertNotNull(byteOrder44);
        org.junit.Assert.assertNull(formatCompliance46);
        org.junit.Assert.assertNotNull(pcxImagingParameters47);
        org.junit.Assert.assertNotNull(pcxImagingParameters48);
        org.junit.Assert.assertNotNull(pcxImagingParameters49);
        org.junit.Assert.assertNull(byteArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Pcx-Custom" + "'", str55, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Pcx-Custom" + "'", str56, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder59);
        org.junit.Assert.assertNull(formatCompliance61);
        org.junit.Assert.assertNotNull(pcxImagingParameters62);
        org.junit.Assert.assertNull(imageMetadata63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Pcx-Custom" + "'", str64, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata66);
        org.junit.Assert.assertNull(byteArray71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Pcx-Custom" + "'", str72, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "Pcx-Custom" + "'", str73, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder76);
        org.junit.Assert.assertNull(formatCompliance78);
        org.junit.Assert.assertNotNull(pcxImagingParameters79);
        org.junit.Assert.assertNull(imageMetadata80);
        org.junit.Assert.assertNull(byteArray85);
        org.junit.Assert.assertNotNull(pcxImagingParameters86);
        org.junit.Assert.assertNull(byteArray87);
        org.junit.Assert.assertNull(byteArray88);
        org.junit.Assert.assertNull(byteArray89);
        org.junit.Assert.assertNull(imageMetadata90);
    }

    @Test
    public void test1370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1370");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = null;
        byte[] byteArray20 = pcxImageParser17.getIccProfileBytes(byteSource18, pcxImagingParameters19);
        java.lang.String str21 = pcxImageParser17.getName();
        java.lang.String str22 = pcxImageParser17.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser17.getMetadata(byteSource23, pcxImagingParameters28);
        java.lang.String str30 = pcxImageParser17.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser17.getMetadata(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = null;
        byte[] byteArray37 = pcxImageParser34.getIccProfileBytes(byteSource35, pcxImagingParameters36);
        java.lang.String str38 = pcxImageParser34.getName();
        java.lang.String str39 = pcxImageParser34.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser41 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder42 = pcxImageParser41.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance44 = pcxImageParser41.getFormatCompliance(byteSource43);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser41.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser34.getMetadata(byteSource40, pcxImagingParameters45);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser48 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters50 = null;
        byte[] byteArray51 = pcxImageParser48.getIccProfileBytes(byteSource49, pcxImagingParameters50);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser48.getDefaultParameters();
        byte[] byteArray53 = pcxImageParser34.getIccProfileBytes(byteSource47, pcxImagingParameters52);
        byte[] byteArray54 = pcxImageParser17.getIccProfileBytes(byteSource33, pcxImagingParameters52);
        byte[] byteArray55 = pcxImageParser9.getIccProfileBytes(byteSource16, pcxImagingParameters52);
        byte[] byteArray56 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters52);
        java.lang.String str57 = pcxImageParser0.getName();
        java.awt.image.BufferedImage bufferedImage58 = null;
        java.io.OutputStream outputStream59 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser60 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str61 = pcxImageParser60.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance63 = pcxImageParser60.getFormatCompliance(byteSource62);
        boolean boolean65 = pcxImageParser60.canAcceptExtension("");
        org.apache.commons.imaging.bytesource.ByteSource byteSource66 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance67 = pcxImageParser60.getFormatCompliance(byteSource66);
        org.apache.commons.imaging.bytesource.ByteSource byteSource68 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser69 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource70 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata71 = pcxImageParser69.getMetadata(byteSource70);
        org.apache.commons.imaging.bytesource.ByteSource byteSource72 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser73 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder74 = pcxImageParser73.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource75 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance76 = pcxImageParser73.getFormatCompliance(byteSource75);
        org.apache.commons.imaging.bytesource.ByteSource byteSource77 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata78 = pcxImageParser73.getMetadata(byteSource77);
        boolean boolean80 = pcxImageParser73.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters81 = pcxImageParser73.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata82 = pcxImageParser69.getMetadata(byteSource72, pcxImagingParameters81);
        byte[] byteArray83 = pcxImageParser60.getIccProfileBytes(byteSource68, pcxImagingParameters81);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters84 = pcxImageParser60.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage58, outputStream59, pcxImagingParameters84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNotNull(pcxImagingParameters15);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Pcx-Custom" + "'", str22, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Pcx-Custom" + "'", str30, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNull(byteArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Pcx-Custom" + "'", str38, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Pcx-Custom" + "'", str39, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNull(formatCompliance44);
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertNull(imageMetadata46);
        org.junit.Assert.assertNull(byteArray51);
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(byteArray53);
        org.junit.Assert.assertNull(byteArray54);
        org.junit.Assert.assertNull(byteArray55);
        org.junit.Assert.assertNull(byteArray56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Pcx-Custom" + "'", str57, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Pcx-Custom" + "'", str61, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(formatCompliance67);
        org.junit.Assert.assertNull(imageMetadata71);
        org.junit.Assert.assertNotNull(byteOrder74);
        org.junit.Assert.assertNull(formatCompliance76);
        org.junit.Assert.assertNull(imageMetadata78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters81);
        org.junit.Assert.assertNull(imageMetadata82);
        org.junit.Assert.assertNull(byteArray83);
        org.junit.Assert.assertNotNull(pcxImagingParameters84);
    }

    @Test
    public void test1371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1371");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters6 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser0.getMetadata(byteSource7, pcxImagingParameters8);
        java.io.File file10 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = pcxImageParser0.canAcceptExtension(file10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNotNull(pcxImagingParameters6);
        org.junit.Assert.assertNull(imageMetadata9);
    }

    @Test
    public void test1372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1372");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        boolean boolean24 = pcxImageParser0.canAcceptExtension("hi!");
        java.io.File file25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder27 = pcxImageParser26.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance29 = pcxImageParser26.getFormatCompliance(byteSource28);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser26.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray31 = pcxImageParser0.getIccProfileBytes(file25, pcxImagingParameters30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNull(formatCompliance29);
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
    }

    @Test
    public void test1373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1373");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser24.canAcceptType(imageFormat29);
        java.lang.String str31 = pcxImageParser24.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser24.getDefaultParameters();
        byte[] byteArray33 = pcxImageParser0.getIccProfileBytes(byteSource23, pcxImagingParameters32);
        java.lang.Class<?> wildcardClass34 = pcxImagingParameters32.getClass();
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "pcx" + "'", str31, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test1374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1374");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser4.getMetadata(byteSource8);
        boolean boolean11 = pcxImageParser4.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance15 = pcxImageParser0.getFormatCompliance(byteSource14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata17 = pcxImageParser0.getMetadata(byteSource16);
        java.io.File file18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder20 = pcxImageParser19.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance22 = pcxImageParser19.getFormatCompliance(byteSource21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser19.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = pcxImageParser19.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser0.getMetadata(file18, pcxImagingParameters24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertNull(formatCompliance15);
        org.junit.Assert.assertNull(imageMetadata17);
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNull(formatCompliance22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNotNull(pcxImagingParameters24);
    }

    @Test
    public void test1375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1375");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = null;
        byte[] byteArray33 = pcxImageParser30.getIccProfileBytes(byteSource31, pcxImagingParameters32);
        java.lang.String str34 = pcxImageParser30.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser30.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser0.getMetadata(byteSource29, pcxImagingParameters35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser0.getMetadata(byteSource37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str40 = pcxImageParser0.dumpImageFile(byteSource39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "pcx" + "'", str34, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertNull(imageMetadata38);
    }

    @Test
    public void test1376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1376");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat2 = null;
        boolean boolean3 = pcxImageParser0.canAcceptType(imageFormat2);
        org.apache.commons.imaging.ImageFormat imageFormat4 = null;
        boolean boolean5 = pcxImageParser0.canAcceptType(imageFormat4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("Pcx-Custom");
        java.io.File file8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str10 = pcxImageParser9.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        java.lang.String str13 = pcxImageParser9.getName();
        java.lang.String str14 = pcxImageParser9.getName();
        org.apache.commons.imaging.ImageFormat imageFormat15 = null;
        boolean boolean16 = pcxImageParser9.canAcceptType(imageFormat15);
        boolean boolean18 = pcxImageParser9.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser20 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = null;
        byte[] byteArray23 = pcxImageParser20.getIccProfileBytes(byteSource21, pcxImagingParameters22);
        java.lang.String str24 = pcxImageParser20.getName();
        java.lang.String str25 = pcxImageParser20.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser27 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder28 = pcxImageParser27.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser27.getFormatCompliance(byteSource29);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser27.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser20.getMetadata(byteSource26, pcxImagingParameters31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = null;
        byte[] byteArray37 = pcxImageParser34.getIccProfileBytes(byteSource35, pcxImagingParameters36);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser34.getDefaultParameters();
        byte[] byteArray39 = pcxImageParser20.getIccProfileBytes(byteSource33, pcxImagingParameters38);
        byte[] byteArray40 = pcxImageParser9.getIccProfileBytes(byteSource19, pcxImagingParameters38);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage41 = pcxImageParser0.getBufferedImage(file8, pcxImagingParameters38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Pcx-Custom" + "'", str10, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Pcx-Custom" + "'", str14, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(byteArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Pcx-Custom" + "'", str24, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNull(byteArray37);
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
        org.junit.Assert.assertNull(byteArray39);
        org.junit.Assert.assertNull(byteArray40);
    }

    @Test
    public void test1377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1377");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser0.getMetadata(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser0.getMetadata(byteSource24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser0.getFormatCompliance(byteSource26);
        java.io.File file28 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension29 = pcxImageParser0.getImageSize(file28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertNull(formatCompliance27);
    }

    @Test
    public void test1378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1378");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.nio.ByteOrder byteOrder7 = pcxImageParser0.getByteOrder();
        java.io.File file8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = null;
        byte[] byteArray12 = pcxImageParser9.getIccProfileBytes(byteSource10, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser9.getName();
        boolean boolean15 = pcxImageParser9.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder18 = pcxImageParser17.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance20 = pcxImageParser17.getFormatCompliance(byteSource19);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser17.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser17.getDefaultParameters();
        byte[] byteArray23 = pcxImageParser9.getIccProfileBytes(byteSource16, pcxImagingParameters22);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage24 = pcxImageParser0.getBufferedImage(file8, pcxImagingParameters22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNull(byteArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNull(formatCompliance20);
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(byteArray23);
    }

    @Test
    public void test1379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1379");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata3 = pcxImageParser0.getMetadata(byteSource2);
        org.apache.commons.imaging.ImageFormat imageFormat4 = null;
        boolean boolean5 = pcxImageParser0.canAcceptType(imageFormat4);
        java.io.File file6 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray7 = pcxImageParser0.getIccProfileBytes(file6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test1380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1380");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser9.canAcceptType(imageFormat14);
        java.lang.String str16 = pcxImageParser9.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser9.getDefaultParameters();
        byte[] byteArray18 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters17);
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance20 = pcxImageParser0.getFormatCompliance(byteSource19);
        java.io.File file21 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser0.getMetadata(file21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "pcx" + "'", str16, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertNull(formatCompliance20);
    }

    @Test
    public void test1381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1381");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat10 = null;
        boolean boolean11 = pcxImageParser0.canAcceptType(imageFormat10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser0.getDefaultParameters();
        java.lang.String str13 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource14);
        java.io.File file16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata17 = pcxImageParser0.getMetadata(file16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(pcxImagingParameters9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertNull(imageMetadata15);
    }

    @Test
    public void test1382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1382");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        java.nio.ByteOrder byteOrder2 = pcxImageParser0.getByteOrder();
        java.lang.String str3 = pcxImageParser0.getName();
        java.io.File file4 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser5 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder6 = pcxImageParser5.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser5.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = pcxImageParser5.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser11.getMetadata(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder16 = pcxImageParser15.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser15.getFormatCompliance(byteSource17);
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata20 = pcxImageParser15.getMetadata(byteSource19);
        boolean boolean22 = pcxImageParser15.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser15.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser11.getMetadata(byteSource14, pcxImagingParameters23);
        byte[] byteArray25 = pcxImageParser5.getIccProfileBytes(byteSource10, pcxImagingParameters23);
        java.lang.String str26 = pcxImageParser5.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = pcxImageParser5.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat28 = null;
        boolean boolean29 = pcxImageParser5.canAcceptType(imageFormat28);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser5.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage31 = pcxImageParser0.getBufferedImage(file4, pcxImagingParameters30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Pcx-Custom" + "'", str3, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(pcxImagingParameters9);
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNull(formatCompliance18);
        org.junit.Assert.assertNull(imageMetadata20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertNull(byteArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Pcx-Custom" + "'", str26, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
    }

    @Test
    public void test1383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1383");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        boolean boolean5 = pcxImageParser0.canAcceptExtension("");
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser7.getMetadata(byteSource8);
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder12 = pcxImageParser11.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance14 = pcxImageParser11.getFormatCompliance(byteSource13);
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser11.getMetadata(byteSource15);
        boolean boolean18 = pcxImageParser11.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser11.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata20 = pcxImageParser7.getMetadata(byteSource10, pcxImagingParameters19);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension21 = pcxImageParser0.getImageSize(byteSource6, pcxImagingParameters19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertNotNull(byteOrder12);
        org.junit.Assert.assertNull(formatCompliance14);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
        org.junit.Assert.assertNull(imageMetadata20);
    }

    @Test
    public void test1384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1384");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.ImageFormat imageFormat8 = null;
        boolean boolean9 = pcxImageParser0.canAcceptType(imageFormat8);
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata11 = pcxImageParser0.getMetadata(byteSource10);
        java.io.File file12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = null;
        byte[] byteArray16 = pcxImageParser13.getIccProfileBytes(byteSource14, pcxImagingParameters15);
        java.lang.String str17 = pcxImageParser13.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance19 = pcxImageParser13.getFormatCompliance(byteSource18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser13.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser23 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str24 = pcxImageParser23.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata26 = pcxImageParser23.getMetadata(byteSource25);
        org.apache.commons.imaging.ImageFormat imageFormat27 = null;
        boolean boolean28 = pcxImageParser23.canAcceptType(imageFormat27);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str31 = pcxImageParser30.getName();
        java.nio.ByteOrder byteOrder32 = pcxImageParser30.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat33 = null;
        boolean boolean34 = pcxImageParser30.canAcceptType(imageFormat33);
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser36 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder37 = pcxImageParser36.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder40 = pcxImageParser39.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance42 = pcxImageParser39.getFormatCompliance(byteSource41);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser39.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser45 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser45.getMetadata(byteSource46);
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser49 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder50 = pcxImageParser49.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance52 = pcxImageParser49.getFormatCompliance(byteSource51);
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata54 = pcxImageParser49.getMetadata(byteSource53);
        boolean boolean56 = pcxImageParser49.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters57 = pcxImageParser49.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata58 = pcxImageParser45.getMetadata(byteSource48, pcxImagingParameters57);
        byte[] byteArray59 = pcxImageParser39.getIccProfileBytes(byteSource44, pcxImagingParameters57);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata60 = pcxImageParser36.getMetadata(byteSource38, pcxImagingParameters57);
        byte[] byteArray61 = pcxImageParser30.getIccProfileBytes(byteSource35, pcxImagingParameters57);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata62 = pcxImageParser23.getMetadata(byteSource29, pcxImagingParameters57);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata63 = pcxImageParser13.getMetadata(byteSource22, pcxImagingParameters57);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata64 = pcxImageParser0.getMetadata(file12, pcxImagingParameters57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(imageMetadata11);
        org.junit.Assert.assertNull(byteArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Pcx-Custom" + "'", str17, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Pcx-Custom" + "'", str24, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Pcx-Custom" + "'", str31, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNull(formatCompliance42);
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertNull(imageMetadata47);
        org.junit.Assert.assertNotNull(byteOrder50);
        org.junit.Assert.assertNull(formatCompliance52);
        org.junit.Assert.assertNull(imageMetadata54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters57);
        org.junit.Assert.assertNull(imageMetadata58);
        org.junit.Assert.assertNull(byteArray59);
        org.junit.Assert.assertNull(imageMetadata60);
        org.junit.Assert.assertNull(byteArray61);
        org.junit.Assert.assertNull(imageMetadata62);
        org.junit.Assert.assertNull(imageMetadata63);
    }

    @Test
    public void test1385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1385");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata4 = pcxImageParser0.getMetadata(byteSource3);
        java.nio.ByteOrder byteOrder5 = pcxImageParser0.getByteOrder();
        java.io.PrintWriter printWriter6 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean8 = pcxImageParser0.dumpImageFile(printWriter6, byteSource7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata4);
        org.junit.Assert.assertNotNull(byteOrder5);
    }

    @Test
    public void test1386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1386");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser4.getMetadata(byteSource8);
        boolean boolean11 = pcxImageParser4.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance15 = pcxImageParser0.getFormatCompliance(byteSource14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata17 = pcxImageParser0.getMetadata(byteSource16);
        java.io.File file18 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean19 = pcxImageParser0.canAcceptExtension(file18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertNull(formatCompliance15);
        org.junit.Assert.assertNull(imageMetadata17);
    }

    @Test
    public void test1387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1387");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        java.io.File file22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser23 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = null;
        byte[] byteArray26 = pcxImageParser23.getIccProfileBytes(byteSource24, pcxImagingParameters25);
        java.nio.ByteOrder byteOrder27 = pcxImageParser23.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder30 = pcxImageParser29.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser29.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat34 = null;
        boolean boolean35 = pcxImageParser29.canAcceptType(imageFormat34);
        java.lang.String str36 = pcxImageParser29.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser23.getMetadata(byteSource28, pcxImagingParameters37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser40.getMetadata(byteSource41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder45 = pcxImageParser44.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance47 = pcxImageParser44.getFormatCompliance(byteSource46);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = pcxImageParser44.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser50 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata52 = pcxImageParser50.getMetadata(byteSource51);
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser54 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder55 = pcxImageParser54.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance57 = pcxImageParser54.getFormatCompliance(byteSource56);
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata59 = pcxImageParser54.getMetadata(byteSource58);
        boolean boolean61 = pcxImageParser54.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters62 = pcxImageParser54.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata63 = pcxImageParser50.getMetadata(byteSource53, pcxImagingParameters62);
        byte[] byteArray64 = pcxImageParser44.getIccProfileBytes(byteSource49, pcxImagingParameters62);
        java.lang.String str65 = pcxImageParser44.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters66 = pcxImageParser44.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata67 = pcxImageParser40.getMetadata(byteSource43, pcxImagingParameters66);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters68 = pcxImageParser40.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser70 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource71 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters72 = null;
        byte[] byteArray73 = pcxImageParser70.getIccProfileBytes(byteSource71, pcxImagingParameters72);
        java.lang.String str74 = pcxImageParser70.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters75 = pcxImageParser70.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata76 = pcxImageParser40.getMetadata(byteSource69, pcxImagingParameters75);
        byte[] byteArray77 = pcxImageParser23.getIccProfileBytes(byteSource39, pcxImagingParameters75);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray78 = pcxImageParser0.getIccProfileBytes(file22, pcxImagingParameters75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertNull(byteArray26);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNotNull(byteOrder30);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "pcx" + "'", str36, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters37);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertNotNull(byteOrder45);
        org.junit.Assert.assertNull(formatCompliance47);
        org.junit.Assert.assertNotNull(pcxImagingParameters48);
        org.junit.Assert.assertNull(imageMetadata52);
        org.junit.Assert.assertNotNull(byteOrder55);
        org.junit.Assert.assertNull(formatCompliance57);
        org.junit.Assert.assertNull(imageMetadata59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters62);
        org.junit.Assert.assertNull(imageMetadata63);
        org.junit.Assert.assertNull(byteArray64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Pcx-Custom" + "'", str65, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters66);
        org.junit.Assert.assertNull(imageMetadata67);
        org.junit.Assert.assertNotNull(pcxImagingParameters68);
        org.junit.Assert.assertNull(byteArray73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "pcx" + "'", str74, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters75);
        org.junit.Assert.assertNull(imageMetadata76);
        org.junit.Assert.assertNull(byteArray77);
    }

    @Test
    public void test1388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1388");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getName();
        java.lang.String str6 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat7 = null;
        boolean boolean8 = pcxImageParser0.canAcceptType(imageFormat7);
        boolean boolean10 = pcxImageParser0.canAcceptExtension("");
        java.io.File file11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser12 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata14 = pcxImageParser12.getMetadata(byteSource13);
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder17 = pcxImageParser16.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance19 = pcxImageParser16.getFormatCompliance(byteSource18);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters20 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser22 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser22.getMetadata(byteSource23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder27 = pcxImageParser26.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance29 = pcxImageParser26.getFormatCompliance(byteSource28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser26.getMetadata(byteSource30);
        boolean boolean33 = pcxImageParser26.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser26.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser22.getMetadata(byteSource25, pcxImagingParameters34);
        byte[] byteArray36 = pcxImageParser16.getIccProfileBytes(byteSource21, pcxImagingParameters34);
        java.lang.String str37 = pcxImageParser16.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata39 = pcxImageParser12.getMetadata(byteSource15, pcxImagingParameters38);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser12.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser42 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = null;
        byte[] byteArray45 = pcxImageParser42.getIccProfileBytes(byteSource43, pcxImagingParameters44);
        java.lang.String str46 = pcxImageParser42.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = pcxImageParser42.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser12.getMetadata(byteSource41, pcxImagingParameters47);
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata50 = pcxImageParser12.getMetadata(byteSource49);
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata52 = pcxImageParser12.getMetadata(byteSource51);
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance54 = pcxImageParser12.getFormatCompliance(byteSource53);
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser56 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters58 = null;
        byte[] byteArray59 = pcxImageParser56.getIccProfileBytes(byteSource57, pcxImagingParameters58);
        java.lang.String str60 = pcxImageParser56.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata62 = pcxImageParser56.getMetadata(byteSource61);
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance64 = pcxImageParser56.getFormatCompliance(byteSource63);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters65 = pcxImageParser56.getDefaultParameters();
        byte[] byteArray66 = pcxImageParser12.getIccProfileBytes(byteSource55, pcxImagingParameters65);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension67 = pcxImageParser0.getImageSize(file11, pcxImagingParameters65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "pcx" + "'", str6, "pcx");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(imageMetadata14);
        org.junit.Assert.assertNotNull(byteOrder17);
        org.junit.Assert.assertNull(formatCompliance19);
        org.junit.Assert.assertNotNull(pcxImagingParameters20);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNull(formatCompliance29);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Pcx-Custom" + "'", str37, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
        org.junit.Assert.assertNull(imageMetadata39);
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(byteArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "pcx" + "'", str46, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters47);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNull(imageMetadata50);
        org.junit.Assert.assertNull(imageMetadata52);
        org.junit.Assert.assertNull(formatCompliance54);
        org.junit.Assert.assertNull(byteArray59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Pcx-Custom" + "'", str60, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata62);
        org.junit.Assert.assertNull(formatCompliance64);
        org.junit.Assert.assertNotNull(pcxImagingParameters65);
        org.junit.Assert.assertNull(byteArray66);
    }

    @Test
    public void test1389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1389");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters6 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList8 = pcxImageParser0.getAllBufferedImages(byteSource7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNotNull(pcxImagingParameters6);
    }

    @Test
    public void test1390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1390");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        java.io.File file9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser0.getFormatCompliance(file9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(formatCompliance8);
    }

    @Test
    public void test1391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1391");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = null;
        byte[] byteArray14 = pcxImageParser11.getIccProfileBytes(byteSource12, pcxImagingParameters13);
        java.lang.String str15 = pcxImageParser11.getName();
        java.lang.String str16 = pcxImageParser11.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser11.getMetadata(byteSource17, pcxImagingParameters22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser25.getMetadata(byteSource26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder30 = pcxImageParser29.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser29.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser29.getMetadata(byteSource33);
        boolean boolean36 = pcxImageParser29.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser25.getMetadata(byteSource28, pcxImagingParameters37);
        byte[] byteArray39 = pcxImageParser11.getIccProfileBytes(byteSource24, pcxImagingParameters37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance41 = pcxImageParser11.getFormatCompliance(byteSource40);
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser43 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = null;
        byte[] byteArray46 = pcxImageParser43.getIccProfileBytes(byteSource44, pcxImagingParameters45);
        java.nio.ByteOrder byteOrder47 = pcxImageParser43.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser49 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder50 = pcxImageParser49.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance52 = pcxImageParser49.getFormatCompliance(byteSource51);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters53 = pcxImageParser49.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat54 = null;
        boolean boolean55 = pcxImageParser49.canAcceptType(imageFormat54);
        java.lang.String str56 = pcxImageParser49.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters57 = pcxImageParser49.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata58 = pcxImageParser43.getMetadata(byteSource48, pcxImagingParameters57);
        byte[] byteArray59 = pcxImageParser11.getIccProfileBytes(byteSource42, pcxImagingParameters57);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata60 = pcxImageParser0.getMetadata(byteSource10, pcxImagingParameters57);
        org.apache.commons.imaging.ImageFormat imageFormat61 = null;
        boolean boolean62 = pcxImageParser0.canAcceptType(imageFormat61);
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser64 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str65 = pcxImageParser64.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource66 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance67 = pcxImageParser64.getFormatCompliance(byteSource66);
        boolean boolean69 = pcxImageParser64.canAcceptExtension("");
        org.apache.commons.imaging.bytesource.ByteSource byteSource70 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance71 = pcxImageParser64.getFormatCompliance(byteSource70);
        org.apache.commons.imaging.bytesource.ByteSource byteSource72 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser73 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource74 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata75 = pcxImageParser73.getMetadata(byteSource74);
        org.apache.commons.imaging.bytesource.ByteSource byteSource76 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser77 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder78 = pcxImageParser77.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource79 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance80 = pcxImageParser77.getFormatCompliance(byteSource79);
        org.apache.commons.imaging.bytesource.ByteSource byteSource81 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata82 = pcxImageParser77.getMetadata(byteSource81);
        boolean boolean84 = pcxImageParser77.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters85 = pcxImageParser77.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata86 = pcxImageParser73.getMetadata(byteSource76, pcxImagingParameters85);
        byte[] byteArray87 = pcxImageParser64.getIccProfileBytes(byteSource72, pcxImagingParameters85);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters88 = pcxImageParser64.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata89 = pcxImageParser0.getMetadata(byteSource63, pcxImagingParameters88);
        java.io.File file90 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean91 = pcxImageParser0.canAcceptExtension(file90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(pcxImagingParameters9);
        org.junit.Assert.assertNull(byteArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Pcx-Custom" + "'", str15, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Pcx-Custom" + "'", str16, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(byteOrder30);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters37);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNull(byteArray39);
        org.junit.Assert.assertNull(formatCompliance41);
        org.junit.Assert.assertNull(byteArray46);
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNotNull(byteOrder50);
        org.junit.Assert.assertNull(formatCompliance52);
        org.junit.Assert.assertNotNull(pcxImagingParameters53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "pcx" + "'", str56, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters57);
        org.junit.Assert.assertNull(imageMetadata58);
        org.junit.Assert.assertNull(byteArray59);
        org.junit.Assert.assertNull(imageMetadata60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Pcx-Custom" + "'", str65, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(formatCompliance71);
        org.junit.Assert.assertNull(imageMetadata75);
        org.junit.Assert.assertNotNull(byteOrder78);
        org.junit.Assert.assertNull(formatCompliance80);
        org.junit.Assert.assertNull(imageMetadata82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters85);
        org.junit.Assert.assertNull(imageMetadata86);
        org.junit.Assert.assertNull(byteArray87);
        org.junit.Assert.assertNotNull(pcxImagingParameters88);
        org.junit.Assert.assertNull(imageMetadata89);
    }

    @Test
    public void test1392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1392");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat2 = null;
        boolean boolean3 = pcxImageParser0.canAcceptType(imageFormat2);
        boolean boolean5 = pcxImageParser0.canAcceptExtension("");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test1393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1393");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser0.getMetadata(byteSource7);
        java.nio.ByteOrder byteOrder9 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo11 = pcxImageParser0.getImageInfo(byteSource10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder9);
    }

    @Test
    public void test1394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1394");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getName();
        java.lang.String str8 = pcxImageParser0.getDefaultExtension();
        java.io.File file9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = pcxImageParser0.dumpImageFile(file9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Pcx-Custom" + "'", str7, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "pcx" + "'", str8, "pcx");
    }

    @Test
    public void test1395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1395");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = null;
        byte[] byteArray20 = pcxImageParser17.getIccProfileBytes(byteSource18, pcxImagingParameters19);
        java.lang.String str21 = pcxImageParser17.getName();
        java.lang.String str22 = pcxImageParser17.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser17.getMetadata(byteSource23, pcxImagingParameters28);
        java.lang.String str30 = pcxImageParser17.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser17.getMetadata(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = null;
        byte[] byteArray37 = pcxImageParser34.getIccProfileBytes(byteSource35, pcxImagingParameters36);
        java.lang.String str38 = pcxImageParser34.getName();
        java.lang.String str39 = pcxImageParser34.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser41 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder42 = pcxImageParser41.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance44 = pcxImageParser41.getFormatCompliance(byteSource43);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser41.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser34.getMetadata(byteSource40, pcxImagingParameters45);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser48 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters50 = null;
        byte[] byteArray51 = pcxImageParser48.getIccProfileBytes(byteSource49, pcxImagingParameters50);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser48.getDefaultParameters();
        byte[] byteArray53 = pcxImageParser34.getIccProfileBytes(byteSource47, pcxImagingParameters52);
        byte[] byteArray54 = pcxImageParser17.getIccProfileBytes(byteSource33, pcxImagingParameters52);
        byte[] byteArray55 = pcxImageParser9.getIccProfileBytes(byteSource16, pcxImagingParameters52);
        byte[] byteArray56 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters52);
        java.lang.String str57 = pcxImageParser0.getDefaultExtension();
        java.io.File file58 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str59 = pcxImageParser0.dumpImageFile(file58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNotNull(pcxImagingParameters15);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Pcx-Custom" + "'", str22, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Pcx-Custom" + "'", str30, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNull(byteArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Pcx-Custom" + "'", str38, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Pcx-Custom" + "'", str39, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNull(formatCompliance44);
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertNull(imageMetadata46);
        org.junit.Assert.assertNull(byteArray51);
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(byteArray53);
        org.junit.Assert.assertNull(byteArray54);
        org.junit.Assert.assertNull(byteArray55);
        org.junit.Assert.assertNull(byteArray56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "pcx" + "'", str57, "pcx");
    }

    @Test
    public void test1396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1396");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser0.getMetadata(byteSource21, pcxImagingParameters22);
        java.nio.ByteOrder byteOrder24 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder27 = pcxImageParser26.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance29 = pcxImageParser26.getFormatCompliance(byteSource28);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser26.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser32.getMetadata(byteSource33);
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser36 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder37 = pcxImageParser36.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance39 = pcxImageParser36.getFormatCompliance(byteSource38);
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser36.getMetadata(byteSource40);
        boolean boolean43 = pcxImageParser36.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = pcxImageParser36.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata45 = pcxImageParser32.getMetadata(byteSource35, pcxImagingParameters44);
        byte[] byteArray46 = pcxImageParser26.getIccProfileBytes(byteSource31, pcxImagingParameters44);
        java.lang.String str47 = pcxImageParser26.getDefaultExtension();
        java.lang.String str48 = pcxImageParser26.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat49 = null;
        boolean boolean50 = pcxImageParser26.canAcceptType(imageFormat49);
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance52 = pcxImageParser26.getFormatCompliance(byteSource51);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters53 = pcxImageParser26.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata54 = pcxImageParser0.getMetadata(byteSource25, pcxImagingParameters53);
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList56 = pcxImageParser0.getAllBufferedImages(byteSource55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNotNull(byteOrder24);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNull(formatCompliance29);
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNull(formatCompliance39);
        org.junit.Assert.assertNull(imageMetadata41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters44);
        org.junit.Assert.assertNull(imageMetadata45);
        org.junit.Assert.assertNull(byteArray46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "pcx" + "'", str47, "pcx");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "pcx" + "'", str48, "pcx");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(formatCompliance52);
        org.junit.Assert.assertNotNull(pcxImagingParameters53);
        org.junit.Assert.assertNull(imageMetadata54);
    }

    @Test
    public void test1397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1397");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        boolean boolean14 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser0.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str19 = pcxImageParser18.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        boolean boolean23 = pcxImageParser18.canAcceptExtension("");
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance25 = pcxImageParser18.getFormatCompliance(byteSource24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser27 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser27.getMetadata(byteSource28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder32 = pcxImageParser31.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance34 = pcxImageParser31.getFormatCompliance(byteSource33);
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser31.getMetadata(byteSource35);
        boolean boolean38 = pcxImageParser31.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = pcxImageParser31.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser27.getMetadata(byteSource30, pcxImagingParameters39);
        byte[] byteArray41 = pcxImageParser18.getIccProfileBytes(byteSource26, pcxImagingParameters39);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser18.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage43 = pcxImageParser0.getBufferedImage(byteSource17, pcxImagingParameters42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Pcx-Custom" + "'", str19, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(formatCompliance25);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertNull(formatCompliance34);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters39);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertNull(byteArray41);
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
    }

    @Test
    public void test1398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1398");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.io.File file4 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser5 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder6 = pcxImageParser5.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser5.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = pcxImageParser5.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat10 = null;
        boolean boolean11 = pcxImageParser5.canAcceptType(imageFormat10);
        java.lang.String str12 = pcxImageParser5.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser5.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo14 = pcxImageParser0.getImageInfo(file4, pcxImagingParameters13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(pcxImagingParameters9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "pcx" + "'", str12, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
    }

    @Test
    public void test1399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1399");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata4 = pcxImageParser0.getMetadata(byteSource3);
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        java.lang.String str6 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = pcxImageParser0.getDefaultParameters();
        java.io.File file8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList9 = pcxImageParser0.getAllBufferedImages(file8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "pcx" + "'", str6, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters7);
    }

    @Test
    public void test1400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1400");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance15 = pcxImageParser0.getFormatCompliance(byteSource14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser0.getFormatCompliance(byteSource16);
        java.io.File file18 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean19 = pcxImageParser0.canAcceptExtension(file18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertNull(formatCompliance15);
        org.junit.Assert.assertNull(formatCompliance17);
    }

    @Test
    public void test1401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1401");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser13.getMetadata(byteSource14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder18 = pcxImageParser17.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance20 = pcxImageParser17.getFormatCompliance(byteSource19);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser17.getMetadata(byteSource21);
        boolean boolean24 = pcxImageParser17.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser17.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata26 = pcxImageParser13.getMetadata(byteSource16, pcxImagingParameters25);
        byte[] byteArray27 = pcxImageParser7.getIccProfileBytes(byteSource12, pcxImagingParameters25);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata30 = pcxImageParser7.getMetadata(byteSource28, pcxImagingParameters29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = null;
        byte[] byteArray35 = pcxImageParser32.getIccProfileBytes(byteSource33, pcxImagingParameters34);
        java.lang.String str36 = pcxImageParser32.getName();
        java.lang.String str37 = pcxImageParser32.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance39 = pcxImageParser32.getFormatCompliance(byteSource38);
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser41 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder42 = pcxImageParser41.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance44 = pcxImageParser41.getFormatCompliance(byteSource43);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser41.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat46 = null;
        boolean boolean47 = pcxImageParser41.canAcceptType(imageFormat46);
        java.lang.String str48 = pcxImageParser41.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters49 = pcxImageParser41.getDefaultParameters();
        byte[] byteArray50 = pcxImageParser32.getIccProfileBytes(byteSource40, pcxImagingParameters49);
        org.apache.commons.imaging.ImageFormat imageFormat51 = null;
        boolean boolean52 = pcxImageParser32.canAcceptType(imageFormat51);
        org.apache.commons.imaging.ImageFormat imageFormat53 = null;
        boolean boolean54 = pcxImageParser32.canAcceptType(imageFormat53);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters55 = pcxImageParser32.getDefaultParameters();
        byte[] byteArray56 = pcxImageParser7.getIccProfileBytes(byteSource31, pcxImagingParameters55);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage57 = pcxImageParser0.getBufferedImage(byteSource6, pcxImagingParameters55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNull(formatCompliance20);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
        org.junit.Assert.assertNull(imageMetadata26);
        org.junit.Assert.assertNull(byteArray27);
        org.junit.Assert.assertNull(imageMetadata30);
        org.junit.Assert.assertNull(byteArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Pcx-Custom" + "'", str36, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Pcx-Custom" + "'", str37, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance39);
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNull(formatCompliance44);
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "pcx" + "'", str48, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters49);
        org.junit.Assert.assertNull(byteArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters55);
        org.junit.Assert.assertNull(byteArray56);
    }

    @Test
    public void test1402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1402");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        boolean boolean5 = pcxImageParser0.canAcceptExtension("");
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata11 = pcxImageParser9.getMetadata(byteSource10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder14 = pcxImageParser13.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser13.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata18 = pcxImageParser13.getMetadata(byteSource17);
        boolean boolean20 = pcxImageParser13.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser9.getMetadata(byteSource12, pcxImagingParameters21);
        byte[] byteArray23 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters21);
        java.nio.ByteOrder byteOrder24 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = null;
        byte[] byteArray29 = pcxImageParser26.getIccProfileBytes(byteSource27, pcxImagingParameters28);
        java.lang.String str30 = pcxImageParser26.getName();
        java.lang.String str31 = pcxImageParser26.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder34 = pcxImageParser33.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance36 = pcxImageParser33.getFormatCompliance(byteSource35);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = pcxImageParser33.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser26.getMetadata(byteSource32, pcxImagingParameters37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser40.getMetadata(byteSource41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder45 = pcxImageParser44.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance47 = pcxImageParser44.getFormatCompliance(byteSource46);
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser44.getMetadata(byteSource48);
        boolean boolean51 = pcxImageParser44.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser44.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser40.getMetadata(byteSource43, pcxImagingParameters52);
        byte[] byteArray54 = pcxImageParser26.getIccProfileBytes(byteSource39, pcxImagingParameters52);
        org.apache.commons.imaging.ImageFormat imageFormat55 = null;
        boolean boolean56 = pcxImageParser26.canAcceptType(imageFormat55);
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser58 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder59 = pcxImageParser58.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance61 = pcxImageParser58.getFormatCompliance(byteSource60);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters62 = pcxImageParser58.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat63 = null;
        boolean boolean64 = pcxImageParser58.canAcceptType(imageFormat63);
        java.lang.String str65 = pcxImageParser58.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters66 = pcxImageParser58.getDefaultParameters();
        byte[] byteArray67 = pcxImageParser26.getIccProfileBytes(byteSource57, pcxImagingParameters66);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata68 = pcxImageParser0.getMetadata(byteSource25, pcxImagingParameters66);
        java.lang.String str69 = pcxImageParser0.getDefaultExtension();
        java.lang.String str70 = pcxImageParser0.getName();
        java.io.File file71 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser72 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str73 = pcxImageParser72.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource74 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance75 = pcxImageParser72.getFormatCompliance(byteSource74);
        org.apache.commons.imaging.bytesource.ByteSource byteSource76 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata77 = pcxImageParser72.getMetadata(byteSource76);
        java.lang.String str78 = pcxImageParser72.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters79 = pcxImageParser72.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo80 = pcxImageParser0.getImageInfo(file71, pcxImagingParameters79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNull(imageMetadata11);
        org.junit.Assert.assertNotNull(byteOrder14);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNull(imageMetadata18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNull(byteArray23);
        org.junit.Assert.assertNotNull(byteOrder24);
        org.junit.Assert.assertNull(byteArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Pcx-Custom" + "'", str30, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Pcx-Custom" + "'", str31, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder34);
        org.junit.Assert.assertNull(formatCompliance36);
        org.junit.Assert.assertNotNull(pcxImagingParameters37);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertNotNull(byteOrder45);
        org.junit.Assert.assertNull(formatCompliance47);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertNull(byteArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(byteOrder59);
        org.junit.Assert.assertNull(formatCompliance61);
        org.junit.Assert.assertNotNull(pcxImagingParameters62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "pcx" + "'", str65, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters66);
        org.junit.Assert.assertNull(byteArray67);
        org.junit.Assert.assertNull(imageMetadata68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "pcx" + "'", str69, "pcx");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Pcx-Custom" + "'", str70, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "Pcx-Custom" + "'", str73, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance75);
        org.junit.Assert.assertNull(imageMetadata77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "Pcx-Custom" + "'", str78, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters79);
    }

    @Test
    public void test1403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1403");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser4.getMetadata(byteSource8);
        boolean boolean11 = pcxImageParser4.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance15 = pcxImageParser0.getFormatCompliance(byteSource14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata17 = pcxImageParser0.getMetadata(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = null;
        byte[] byteArray22 = pcxImageParser19.getIccProfileBytes(byteSource20, pcxImagingParameters21);
        java.lang.String str23 = pcxImageParser19.getName();
        java.lang.String str24 = pcxImageParser19.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder27 = pcxImageParser26.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance29 = pcxImageParser26.getFormatCompliance(byteSource28);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser26.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser19.getMetadata(byteSource25, pcxImagingParameters30);
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser33.getMetadata(byteSource34);
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser37 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder38 = pcxImageParser37.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance40 = pcxImageParser37.getFormatCompliance(byteSource39);
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser37.getMetadata(byteSource41);
        boolean boolean44 = pcxImageParser37.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser37.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser33.getMetadata(byteSource36, pcxImagingParameters45);
        byte[] byteArray47 = pcxImageParser19.getIccProfileBytes(byteSource32, pcxImagingParameters45);
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance49 = pcxImageParser19.getFormatCompliance(byteSource48);
        java.nio.ByteOrder byteOrder50 = pcxImageParser19.getByteOrder();
        java.nio.ByteOrder byteOrder51 = pcxImageParser19.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser53 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder54 = pcxImageParser53.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance56 = pcxImageParser53.getFormatCompliance(byteSource55);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters57 = pcxImageParser53.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser59 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata61 = pcxImageParser59.getMetadata(byteSource60);
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser63 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder64 = pcxImageParser63.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance66 = pcxImageParser63.getFormatCompliance(byteSource65);
        org.apache.commons.imaging.bytesource.ByteSource byteSource67 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata68 = pcxImageParser63.getMetadata(byteSource67);
        boolean boolean70 = pcxImageParser63.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters71 = pcxImageParser63.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata72 = pcxImageParser59.getMetadata(byteSource62, pcxImagingParameters71);
        byte[] byteArray73 = pcxImageParser53.getIccProfileBytes(byteSource58, pcxImagingParameters71);
        java.lang.String str74 = pcxImageParser53.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters75 = pcxImageParser53.getDefaultParameters();
        byte[] byteArray76 = pcxImageParser19.getIccProfileBytes(byteSource52, pcxImagingParameters75);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage77 = pcxImageParser0.getBufferedImage(byteSource18, pcxImagingParameters75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertNull(formatCompliance15);
        org.junit.Assert.assertNull(imageMetadata17);
        org.junit.Assert.assertNull(byteArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Pcx-Custom" + "'", str23, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Pcx-Custom" + "'", str24, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNull(formatCompliance29);
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertNotNull(byteOrder38);
        org.junit.Assert.assertNull(formatCompliance40);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertNull(imageMetadata46);
        org.junit.Assert.assertNull(byteArray47);
        org.junit.Assert.assertNull(formatCompliance49);
        org.junit.Assert.assertNotNull(byteOrder50);
        org.junit.Assert.assertNotNull(byteOrder51);
        org.junit.Assert.assertNotNull(byteOrder54);
        org.junit.Assert.assertNull(formatCompliance56);
        org.junit.Assert.assertNotNull(pcxImagingParameters57);
        org.junit.Assert.assertNull(imageMetadata61);
        org.junit.Assert.assertNotNull(byteOrder64);
        org.junit.Assert.assertNull(formatCompliance66);
        org.junit.Assert.assertNull(imageMetadata68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters71);
        org.junit.Assert.assertNull(imageMetadata72);
        org.junit.Assert.assertNull(byteArray73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Pcx-Custom" + "'", str74, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters75);
        org.junit.Assert.assertNull(byteArray76);
    }

    @Test
    public void test1404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1404");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        java.nio.ByteOrder byteOrder2 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance4 = pcxImageParser0.getFormatCompliance(byteSource3);
        java.lang.String str5 = pcxImageParser0.getName();
        boolean boolean7 = pcxImageParser0.canAcceptExtension("");
        java.io.File file8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata17 = pcxImageParser15.getMetadata(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder20 = pcxImageParser19.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance22 = pcxImageParser19.getFormatCompliance(byteSource21);
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser19.getMetadata(byteSource23);
        boolean boolean26 = pcxImageParser19.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = pcxImageParser19.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata28 = pcxImageParser15.getMetadata(byteSource18, pcxImagingParameters27);
        byte[] byteArray29 = pcxImageParser9.getIccProfileBytes(byteSource14, pcxImagingParameters27);
        java.lang.String str30 = pcxImageParser9.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser9.getMetadata(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser9.getMetadata(byteSource33);
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance36 = pcxImageParser9.getFormatCompliance(byteSource35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser38 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = null;
        byte[] byteArray41 = pcxImageParser38.getIccProfileBytes(byteSource39, pcxImagingParameters40);
        java.lang.String str42 = pcxImageParser38.getName();
        java.lang.String str43 = pcxImageParser38.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser45 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder46 = pcxImageParser45.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance48 = pcxImageParser45.getFormatCompliance(byteSource47);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters49 = pcxImageParser45.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata50 = pcxImageParser38.getMetadata(byteSource44, pcxImagingParameters49);
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser52 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata54 = pcxImageParser52.getMetadata(byteSource53);
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser56 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder57 = pcxImageParser56.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance59 = pcxImageParser56.getFormatCompliance(byteSource58);
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata61 = pcxImageParser56.getMetadata(byteSource60);
        boolean boolean63 = pcxImageParser56.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters64 = pcxImageParser56.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata65 = pcxImageParser52.getMetadata(byteSource55, pcxImagingParameters64);
        byte[] byteArray66 = pcxImageParser38.getIccProfileBytes(byteSource51, pcxImagingParameters64);
        org.apache.commons.imaging.bytesource.ByteSource byteSource67 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance68 = pcxImageParser38.getFormatCompliance(byteSource67);
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser70 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource71 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters72 = null;
        byte[] byteArray73 = pcxImageParser70.getIccProfileBytes(byteSource71, pcxImagingParameters72);
        java.nio.ByteOrder byteOrder74 = pcxImageParser70.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource75 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser76 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder77 = pcxImageParser76.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource78 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance79 = pcxImageParser76.getFormatCompliance(byteSource78);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters80 = pcxImageParser76.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat81 = null;
        boolean boolean82 = pcxImageParser76.canAcceptType(imageFormat81);
        java.lang.String str83 = pcxImageParser76.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters84 = pcxImageParser76.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata85 = pcxImageParser70.getMetadata(byteSource75, pcxImagingParameters84);
        byte[] byteArray86 = pcxImageParser38.getIccProfileBytes(byteSource69, pcxImagingParameters84);
        byte[] byteArray87 = pcxImageParser9.getIccProfileBytes(byteSource37, pcxImagingParameters84);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage88 = pcxImageParser0.getBufferedImage(file8, pcxImagingParameters84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertNull(formatCompliance4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertNull(imageMetadata17);
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNull(formatCompliance22);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters27);
        org.junit.Assert.assertNull(imageMetadata28);
        org.junit.Assert.assertNull(byteArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "pcx" + "'", str30, "pcx");
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertNull(formatCompliance36);
        org.junit.Assert.assertNull(byteArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Pcx-Custom" + "'", str42, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Pcx-Custom" + "'", str43, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder46);
        org.junit.Assert.assertNull(formatCompliance48);
        org.junit.Assert.assertNotNull(pcxImagingParameters49);
        org.junit.Assert.assertNull(imageMetadata50);
        org.junit.Assert.assertNull(imageMetadata54);
        org.junit.Assert.assertNotNull(byteOrder57);
        org.junit.Assert.assertNull(formatCompliance59);
        org.junit.Assert.assertNull(imageMetadata61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters64);
        org.junit.Assert.assertNull(imageMetadata65);
        org.junit.Assert.assertNull(byteArray66);
        org.junit.Assert.assertNull(formatCompliance68);
        org.junit.Assert.assertNull(byteArray73);
        org.junit.Assert.assertNotNull(byteOrder74);
        org.junit.Assert.assertNotNull(byteOrder77);
        org.junit.Assert.assertNull(formatCompliance79);
        org.junit.Assert.assertNotNull(pcxImagingParameters80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "pcx" + "'", str83, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters84);
        org.junit.Assert.assertNull(imageMetadata85);
        org.junit.Assert.assertNull(byteArray86);
        org.junit.Assert.assertNull(byteArray87);
    }

    @Test
    public void test1405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1405");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        java.nio.ByteOrder byteOrder28 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser32.getMetadata(byteSource33);
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser36 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder37 = pcxImageParser36.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance39 = pcxImageParser36.getFormatCompliance(byteSource38);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser36.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser42 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser42.getMetadata(byteSource43);
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser46 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder47 = pcxImageParser46.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance49 = pcxImageParser46.getFormatCompliance(byteSource48);
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata51 = pcxImageParser46.getMetadata(byteSource50);
        boolean boolean53 = pcxImageParser46.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters54 = pcxImageParser46.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata55 = pcxImageParser42.getMetadata(byteSource45, pcxImagingParameters54);
        byte[] byteArray56 = pcxImageParser36.getIccProfileBytes(byteSource41, pcxImagingParameters54);
        java.lang.String str57 = pcxImageParser36.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters58 = pcxImageParser36.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata59 = pcxImageParser32.getMetadata(byteSource35, pcxImagingParameters58);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters60 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser62 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters64 = null;
        byte[] byteArray65 = pcxImageParser62.getIccProfileBytes(byteSource63, pcxImagingParameters64);
        java.lang.String str66 = pcxImageParser62.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters67 = pcxImageParser62.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata68 = pcxImageParser32.getMetadata(byteSource61, pcxImagingParameters67);
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata70 = pcxImageParser32.getMetadata(byteSource69);
        org.apache.commons.imaging.bytesource.ByteSource byteSource71 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata72 = pcxImageParser32.getMetadata(byteSource71);
        org.apache.commons.imaging.bytesource.ByteSource byteSource73 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance74 = pcxImageParser32.getFormatCompliance(byteSource73);
        org.apache.commons.imaging.bytesource.ByteSource byteSource75 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser76 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource77 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters78 = null;
        byte[] byteArray79 = pcxImageParser76.getIccProfileBytes(byteSource77, pcxImagingParameters78);
        java.lang.String str80 = pcxImageParser76.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource81 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata82 = pcxImageParser76.getMetadata(byteSource81);
        org.apache.commons.imaging.bytesource.ByteSource byteSource83 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance84 = pcxImageParser76.getFormatCompliance(byteSource83);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters85 = pcxImageParser76.getDefaultParameters();
        byte[] byteArray86 = pcxImageParser32.getIccProfileBytes(byteSource75, pcxImagingParameters85);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension87 = pcxImageParser0.getImageSize(byteSource31, pcxImagingParameters85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(byteOrder28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNull(formatCompliance39);
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNull(formatCompliance49);
        org.junit.Assert.assertNull(imageMetadata51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters54);
        org.junit.Assert.assertNull(imageMetadata55);
        org.junit.Assert.assertNull(byteArray56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Pcx-Custom" + "'", str57, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters58);
        org.junit.Assert.assertNull(imageMetadata59);
        org.junit.Assert.assertNotNull(pcxImagingParameters60);
        org.junit.Assert.assertNull(byteArray65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "pcx" + "'", str66, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters67);
        org.junit.Assert.assertNull(imageMetadata68);
        org.junit.Assert.assertNull(imageMetadata70);
        org.junit.Assert.assertNull(imageMetadata72);
        org.junit.Assert.assertNull(formatCompliance74);
        org.junit.Assert.assertNull(byteArray79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "Pcx-Custom" + "'", str80, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata82);
        org.junit.Assert.assertNull(formatCompliance84);
        org.junit.Assert.assertNotNull(pcxImagingParameters85);
        org.junit.Assert.assertNull(byteArray86);
    }

    @Test
    public void test1406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1406");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        boolean boolean23 = pcxImageParser0.canAcceptExtension("Pcx-Custom");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = pcxImageParser0.getDefaultParameters();
        java.io.File file25 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension26 = pcxImageParser0.getImageSize(file25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters24);
    }

    @Test
    public void test1407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1407");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.ImageFormat imageFormat1 = null;
        boolean boolean2 = pcxImageParser0.canAcceptType(imageFormat1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance4 = pcxImageParser0.getFormatCompliance(byteSource3);
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(formatCompliance4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1408");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = pcxImageParser10.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension16 = pcxImageParser0.getImageSize(byteSource9, pcxImagingParameters15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNotNull(pcxImagingParameters15);
    }

    @Test
    public void test1409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1409");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat10 = null;
        boolean boolean11 = pcxImageParser0.canAcceptType(imageFormat10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser0.getDefaultParameters();
        java.lang.String str13 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource14);
        java.lang.String str16 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = pcxImageParser0.dumpImageFile(byteSource17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(pcxImagingParameters9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Pcx-Custom" + "'", str16, "Pcx-Custom");
    }

    @Test
    public void test1410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1410");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        java.io.File file8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList9 = pcxImageParser0.getAllBufferedImages(file8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNull(imageMetadata7);
    }

    @Test
    public void test1411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1411");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser0.getMetadata(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser0.getMetadata(byteSource24);
        org.apache.commons.imaging.ImageFormat imageFormat26 = null;
        boolean boolean27 = pcxImageParser0.canAcceptType(imageFormat26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension30 = pcxImageParser0.getImageSize(byteSource28, pcxImagingParameters29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test1412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1412");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = null;
        byte[] byteArray33 = pcxImageParser30.getIccProfileBytes(byteSource31, pcxImagingParameters32);
        java.lang.String str34 = pcxImageParser30.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser30.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser0.getMetadata(byteSource29, pcxImagingParameters35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser0.getMetadata(byteSource37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser0.getMetadata(byteSource39);
        org.apache.commons.imaging.ImageFormat imageFormat41 = null;
        boolean boolean42 = pcxImageParser0.canAcceptType(imageFormat41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser0.getMetadata(byteSource43);
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo46 = pcxImageParser0.getImageInfo(byteSource45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "pcx" + "'", str34, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(imageMetadata44);
    }

    @Test
    public void test1413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1413");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getName();
        java.io.File file8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance9 = pcxImageParser0.getFormatCompliance(file8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Pcx-Custom" + "'", str7, "Pcx-Custom");
    }

    @Test
    public void test1414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1414");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        java.io.File file28 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension29 = pcxImageParser0.getImageSize(file28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
    }

    @Test
    public void test1415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1415");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.ImageFormat imageFormat8 = null;
        boolean boolean9 = pcxImageParser0.canAcceptType(imageFormat8);
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser0.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser0.getMetadata(byteSource12);
        java.lang.String str14 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata18 = pcxImageParser16.getMetadata(byteSource17);
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata20 = pcxImageParser16.getMetadata(byteSource19);
        java.lang.String str21 = pcxImageParser16.getDefaultExtension();
        java.lang.String str22 = pcxImageParser16.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser16.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo24 = pcxImageParser0.getImageInfo(byteSource15, pcxImagingParameters23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Pcx-Custom" + "'", str14, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata18);
        org.junit.Assert.assertNull(imageMetadata20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
    }

    @Test
    public void test1416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1416");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser4.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser8.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.lang.String str29 = pcxImageParser8.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser4.getMetadata(byteSource7, pcxImagingParameters30);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters30);
        java.io.File file33 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean34 = pcxImageParser0.canAcceptExtension(file33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertNull(imageMetadata32);
    }

    @Test
    public void test1417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1417");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser0.canAcceptType(imageFormat23);
        org.apache.commons.imaging.ImageFormat imageFormat25 = null;
        boolean boolean26 = pcxImageParser0.canAcceptType(imageFormat25);
        boolean boolean28 = pcxImageParser0.canAcceptExtension("pcx");
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str31 = pcxImageParser30.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance33 = pcxImageParser30.getFormatCompliance(byteSource32);
        java.lang.String str34 = pcxImageParser30.getName();
        boolean boolean36 = pcxImageParser30.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser38 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder39 = pcxImageParser38.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance41 = pcxImageParser38.getFormatCompliance(byteSource40);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser38.getDefaultParameters();
        java.lang.String str43 = pcxImageParser38.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata45 = pcxImageParser38.getMetadata(byteSource44);
        boolean boolean47 = pcxImageParser38.canAcceptExtension("");
        boolean boolean49 = pcxImageParser38.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser51 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters53 = null;
        byte[] byteArray54 = pcxImageParser51.getIccProfileBytes(byteSource52, pcxImagingParameters53);
        java.lang.String str55 = pcxImageParser51.getName();
        java.lang.String str56 = pcxImageParser51.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser58 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder59 = pcxImageParser58.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance61 = pcxImageParser58.getFormatCompliance(byteSource60);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters62 = pcxImageParser58.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata63 = pcxImageParser51.getMetadata(byteSource57, pcxImagingParameters62);
        org.apache.commons.imaging.bytesource.ByteSource byteSource64 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser65 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource66 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata67 = pcxImageParser65.getMetadata(byteSource66);
        org.apache.commons.imaging.bytesource.ByteSource byteSource68 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser69 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder70 = pcxImageParser69.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource71 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance72 = pcxImageParser69.getFormatCompliance(byteSource71);
        org.apache.commons.imaging.bytesource.ByteSource byteSource73 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata74 = pcxImageParser69.getMetadata(byteSource73);
        boolean boolean76 = pcxImageParser69.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters77 = pcxImageParser69.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata78 = pcxImageParser65.getMetadata(byteSource68, pcxImagingParameters77);
        byte[] byteArray79 = pcxImageParser51.getIccProfileBytes(byteSource64, pcxImagingParameters77);
        org.apache.commons.imaging.bytesource.ByteSource byteSource80 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance81 = pcxImageParser51.getFormatCompliance(byteSource80);
        java.nio.ByteOrder byteOrder82 = pcxImageParser51.getByteOrder();
        java.nio.ByteOrder byteOrder83 = pcxImageParser51.getByteOrder();
        java.lang.String str84 = pcxImageParser51.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters85 = pcxImageParser51.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata86 = pcxImageParser38.getMetadata(byteSource50, pcxImagingParameters85);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata87 = pcxImageParser30.getMetadata(byteSource37, pcxImagingParameters85);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage88 = pcxImageParser0.getBufferedImage(byteSource29, pcxImagingParameters85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Pcx-Custom" + "'", str31, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Pcx-Custom" + "'", str34, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(byteOrder39);
        org.junit.Assert.assertNull(formatCompliance41);
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "pcx" + "'", str43, "pcx");
        org.junit.Assert.assertNull(imageMetadata45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(byteArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Pcx-Custom" + "'", str55, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Pcx-Custom" + "'", str56, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder59);
        org.junit.Assert.assertNull(formatCompliance61);
        org.junit.Assert.assertNotNull(pcxImagingParameters62);
        org.junit.Assert.assertNull(imageMetadata63);
        org.junit.Assert.assertNull(imageMetadata67);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNull(formatCompliance72);
        org.junit.Assert.assertNull(imageMetadata74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters77);
        org.junit.Assert.assertNull(imageMetadata78);
        org.junit.Assert.assertNull(byteArray79);
        org.junit.Assert.assertNull(formatCompliance81);
        org.junit.Assert.assertNotNull(byteOrder82);
        org.junit.Assert.assertNotNull(byteOrder83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "Pcx-Custom" + "'", str84, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters85);
        org.junit.Assert.assertNull(imageMetadata86);
        org.junit.Assert.assertNull(imageMetadata87);
    }

    @Test
    public void test1418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1418");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.ImageFormat imageFormat3 = null;
        boolean boolean4 = pcxImageParser0.canAcceptType(imageFormat3);
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser0.getMetadata(byteSource8);
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters7);
        org.junit.Assert.assertNull(imageMetadata9);
    }

    @Test
    public void test1419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1419");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.nio.ByteOrder byteOrder7 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        java.io.File file9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = pcxImageParser0.dumpImageFile(file9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
    }

    @Test
    public void test1420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1420");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters6 = pcxImageParser0.getDefaultParameters();
        java.io.File file7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(file7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNotNull(pcxImagingParameters6);
    }

    @Test
    public void test1421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1421");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser0.getFormatCompliance(byteSource5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = null;
        byte[] byteArray12 = pcxImageParser9.getIccProfileBytes(byteSource10, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser9.getName();
        java.lang.String str14 = pcxImageParser9.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder17 = pcxImageParser16.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance19 = pcxImageParser16.getFormatCompliance(byteSource18);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters20 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata21 = pcxImageParser9.getMetadata(byteSource15, pcxImagingParameters20);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo22 = pcxImageParser0.getImageInfo(byteSource8, pcxImagingParameters20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
        org.junit.Assert.assertNull(byteArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Pcx-Custom" + "'", str14, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder17);
        org.junit.Assert.assertNull(formatCompliance19);
        org.junit.Assert.assertNotNull(pcxImagingParameters20);
        org.junit.Assert.assertNull(imageMetadata21);
    }

    @Test
    public void test1422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1422");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.ImageFormat imageFormat8 = null;
        boolean boolean9 = pcxImageParser0.canAcceptType(imageFormat8);
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser0.getFormatCompliance(byteSource10);
        java.lang.String str12 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = null;
        byte[] byteArray17 = pcxImageParser14.getIccProfileBytes(byteSource15, pcxImagingParameters16);
        java.lang.String str18 = pcxImageParser14.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat19 = null;
        boolean boolean20 = pcxImageParser14.canAcceptType(imageFormat19);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser22 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = null;
        byte[] byteArray25 = pcxImageParser22.getIccProfileBytes(byteSource23, pcxImagingParameters24);
        java.lang.String str26 = pcxImageParser22.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = pcxImageParser22.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser22.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser14.getMetadata(byteSource21, pcxImagingParameters28);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo30 = pcxImageParser0.getImageInfo(byteSource13, pcxImagingParameters28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "pcx" + "'", str12, "pcx");
        org.junit.Assert.assertNull(byteArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "pcx" + "'", str18, "pcx");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(byteArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "pcx" + "'", str26, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(imageMetadata29);
    }

    @Test
    public void test1423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1423");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        boolean boolean9 = pcxImageParser0.canAcceptExtension("");
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder12 = pcxImageParser11.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance14 = pcxImageParser11.getFormatCompliance(byteSource13);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = pcxImageParser11.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser17.getMetadata(byteSource18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder22 = pcxImageParser21.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance24 = pcxImageParser21.getFormatCompliance(byteSource23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata26 = pcxImageParser21.getMetadata(byteSource25);
        boolean boolean28 = pcxImageParser21.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata30 = pcxImageParser17.getMetadata(byteSource20, pcxImagingParameters29);
        byte[] byteArray31 = pcxImageParser11.getIccProfileBytes(byteSource16, pcxImagingParameters29);
        java.lang.String str32 = pcxImageParser11.getName();
        java.lang.String str33 = pcxImageParser11.getDefaultExtension();
        java.nio.ByteOrder byteOrder34 = pcxImageParser11.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser36 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder37 = pcxImageParser36.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance39 = pcxImageParser36.getFormatCompliance(byteSource38);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser36.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat41 = null;
        boolean boolean42 = pcxImageParser36.canAcceptType(imageFormat41);
        java.lang.String str43 = pcxImageParser36.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = pcxImageParser36.getDefaultParameters();
        java.lang.String str45 = pcxImageParser36.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser36.getDefaultParameters();
        byte[] byteArray47 = pcxImageParser11.getIccProfileBytes(byteSource35, pcxImagingParameters46);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo48 = pcxImageParser0.getImageInfo(byteSource10, pcxImagingParameters46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(byteOrder12);
        org.junit.Assert.assertNull(formatCompliance14);
        org.junit.Assert.assertNotNull(pcxImagingParameters15);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNull(formatCompliance24);
        org.junit.Assert.assertNull(imageMetadata26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters29);
        org.junit.Assert.assertNull(imageMetadata30);
        org.junit.Assert.assertNull(byteArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Pcx-Custom" + "'", str32, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "pcx" + "'", str33, "pcx");
        org.junit.Assert.assertNotNull(byteOrder34);
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNull(formatCompliance39);
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "pcx" + "'", str43, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Pcx-Custom" + "'", str45, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
        org.junit.Assert.assertNull(byteArray47);
    }

    @Test
    public void test1424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1424");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.nio.ByteOrder byteOrder4 = pcxImageParser0.getByteOrder();
        java.nio.ByteOrder byteOrder5 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        org.apache.commons.imaging.ImageFormat imageFormat8 = null;
        boolean boolean9 = pcxImageParser0.canAcceptType(imageFormat8);
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1425");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        boolean boolean14 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser0.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser0.getFormatCompliance(byteSource17);
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance20 = pcxImageParser0.getFormatCompliance(byteSource19);
        java.io.File file21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension23 = pcxImageParser0.getImageSize(file21, pcxImagingParameters22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNull(formatCompliance18);
        org.junit.Assert.assertNull(formatCompliance20);
    }

    @Test
    public void test1426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1426");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser5 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser5.getMetadata(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata17 = pcxImageParser15.getMetadata(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder20 = pcxImageParser19.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance22 = pcxImageParser19.getFormatCompliance(byteSource21);
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser19.getMetadata(byteSource23);
        boolean boolean26 = pcxImageParser19.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = pcxImageParser19.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata28 = pcxImageParser15.getMetadata(byteSource18, pcxImagingParameters27);
        byte[] byteArray29 = pcxImageParser9.getIccProfileBytes(byteSource14, pcxImagingParameters27);
        java.lang.String str30 = pcxImageParser9.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser5.getMetadata(byteSource8, pcxImagingParameters31);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser5.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = null;
        byte[] byteArray38 = pcxImageParser35.getIccProfileBytes(byteSource36, pcxImagingParameters37);
        java.lang.String str39 = pcxImageParser35.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser35.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser5.getMetadata(byteSource34, pcxImagingParameters40);
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata43 = pcxImageParser5.getMetadata(byteSource42);
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata45 = pcxImageParser5.getMetadata(byteSource44);
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance47 = pcxImageParser5.getFormatCompliance(byteSource46);
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser49 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters51 = null;
        byte[] byteArray52 = pcxImageParser49.getIccProfileBytes(byteSource50, pcxImagingParameters51);
        java.lang.String str53 = pcxImageParser49.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata55 = pcxImageParser49.getMetadata(byteSource54);
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance57 = pcxImageParser49.getFormatCompliance(byteSource56);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters58 = pcxImageParser49.getDefaultParameters();
        byte[] byteArray59 = pcxImageParser5.getIccProfileBytes(byteSource48, pcxImagingParameters58);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage60 = pcxImageParser0.getBufferedImage(byteSource4, pcxImagingParameters58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertNull(imageMetadata17);
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNull(formatCompliance22);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters27);
        org.junit.Assert.assertNull(imageMetadata28);
        org.junit.Assert.assertNull(byteArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Pcx-Custom" + "'", str30, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
        org.junit.Assert.assertNull(byteArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "pcx" + "'", str39, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(imageMetadata41);
        org.junit.Assert.assertNull(imageMetadata43);
        org.junit.Assert.assertNull(imageMetadata45);
        org.junit.Assert.assertNull(formatCompliance47);
        org.junit.Assert.assertNull(byteArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Pcx-Custom" + "'", str53, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata55);
        org.junit.Assert.assertNull(formatCompliance57);
        org.junit.Assert.assertNotNull(pcxImagingParameters58);
        org.junit.Assert.assertNull(byteArray59);
    }

    @Test
    public void test1427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1427");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        boolean boolean30 = pcxImageParser0.canAcceptExtension("pcx");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser0.getDefaultParameters();
        java.lang.String str32 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str34 = pcxImageParser0.dumpImageFile(byteSource33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Pcx-Custom" + "'", str32, "Pcx-Custom");
    }

    @Test
    public void test1428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1428");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = null;
        byte[] byteArray10 = pcxImageParser7.getIccProfileBytes(byteSource8, pcxImagingParameters9);
        java.lang.String str11 = pcxImageParser7.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser7.getMetadata(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance15 = pcxImageParser7.getFormatCompliance(byteSource14);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat17 = null;
        boolean boolean18 = pcxImageParser7.canAcceptType(imageFormat17);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser7.getDefaultParameters();
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource6, pcxImagingParameters19);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser0.getMetadata(byteSource21);
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Pcx-Custom" + "'", str11, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertNull(formatCompliance15);
        org.junit.Assert.assertNotNull(pcxImagingParameters16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertNull(imageMetadata22);
    }

    @Test
    public void test1429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1429");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser0.getFormatCompliance(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        boolean boolean10 = pcxImageParser0.canAcceptExtension("");
        java.io.PrintWriter printWriter11 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = pcxImageParser0.dumpImageFile(printWriter11, byteSource12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1430");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        boolean boolean6 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser8.getDefaultParameters();
        byte[] byteArray14 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters13);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata17 = pcxImageParser0.getMetadata(byteSource16);
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertNull(byteArray14);
        org.junit.Assert.assertNotNull(pcxImagingParameters15);
        org.junit.Assert.assertNull(imageMetadata17);
    }

    @Test
    public void test1431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1431");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        boolean boolean30 = pcxImageParser0.canAcceptExtension("pcx");
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder34 = pcxImageParser33.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance36 = pcxImageParser33.getFormatCompliance(byteSource35);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = pcxImageParser33.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser39.getMetadata(byteSource40);
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser43 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder44 = pcxImageParser43.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance46 = pcxImageParser43.getFormatCompliance(byteSource45);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser43.getMetadata(byteSource47);
        boolean boolean50 = pcxImageParser43.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters51 = pcxImageParser43.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata52 = pcxImageParser39.getMetadata(byteSource42, pcxImagingParameters51);
        byte[] byteArray53 = pcxImageParser33.getIccProfileBytes(byteSource38, pcxImagingParameters51);
        java.lang.String str54 = pcxImageParser33.getName();
        java.lang.String str55 = pcxImageParser33.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser57 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder58 = pcxImageParser57.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance60 = pcxImageParser57.getFormatCompliance(byteSource59);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters61 = pcxImageParser57.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat62 = null;
        boolean boolean63 = pcxImageParser57.canAcceptType(imageFormat62);
        java.lang.String str64 = pcxImageParser57.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters65 = pcxImageParser57.getDefaultParameters();
        byte[] byteArray66 = pcxImageParser33.getIccProfileBytes(byteSource56, pcxImagingParameters65);
        org.apache.commons.imaging.bytesource.ByteSource byteSource67 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser68 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder69 = pcxImageParser68.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource70 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser71 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder72 = pcxImageParser71.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource73 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance74 = pcxImageParser71.getFormatCompliance(byteSource73);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters75 = pcxImageParser71.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource76 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser77 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource78 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata79 = pcxImageParser77.getMetadata(byteSource78);
        org.apache.commons.imaging.bytesource.ByteSource byteSource80 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser81 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder82 = pcxImageParser81.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource83 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance84 = pcxImageParser81.getFormatCompliance(byteSource83);
        org.apache.commons.imaging.bytesource.ByteSource byteSource85 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata86 = pcxImageParser81.getMetadata(byteSource85);
        boolean boolean88 = pcxImageParser81.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters89 = pcxImageParser81.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata90 = pcxImageParser77.getMetadata(byteSource80, pcxImagingParameters89);
        byte[] byteArray91 = pcxImageParser71.getIccProfileBytes(byteSource76, pcxImagingParameters89);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata92 = pcxImageParser68.getMetadata(byteSource70, pcxImagingParameters89);
        byte[] byteArray93 = pcxImageParser33.getIccProfileBytes(byteSource67, pcxImagingParameters89);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata94 = pcxImageParser0.getMetadata(byteSource32, pcxImagingParameters89);
        org.apache.commons.imaging.bytesource.ByteSource byteSource95 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance96 = pcxImageParser0.getFormatCompliance(byteSource95);
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(byteOrder34);
        org.junit.Assert.assertNull(formatCompliance36);
        org.junit.Assert.assertNotNull(pcxImagingParameters37);
        org.junit.Assert.assertNull(imageMetadata41);
        org.junit.Assert.assertNotNull(byteOrder44);
        org.junit.Assert.assertNull(formatCompliance46);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters51);
        org.junit.Assert.assertNull(imageMetadata52);
        org.junit.Assert.assertNull(byteArray53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Pcx-Custom" + "'", str54, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "pcx" + "'", str55, "pcx");
        org.junit.Assert.assertNotNull(byteOrder58);
        org.junit.Assert.assertNull(formatCompliance60);
        org.junit.Assert.assertNotNull(pcxImagingParameters61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "pcx" + "'", str64, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters65);
        org.junit.Assert.assertNull(byteArray66);
        org.junit.Assert.assertNotNull(byteOrder69);
        org.junit.Assert.assertNotNull(byteOrder72);
        org.junit.Assert.assertNull(formatCompliance74);
        org.junit.Assert.assertNotNull(pcxImagingParameters75);
        org.junit.Assert.assertNull(imageMetadata79);
        org.junit.Assert.assertNotNull(byteOrder82);
        org.junit.Assert.assertNull(formatCompliance84);
        org.junit.Assert.assertNull(imageMetadata86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters89);
        org.junit.Assert.assertNull(imageMetadata90);
        org.junit.Assert.assertNull(byteArray91);
        org.junit.Assert.assertNull(imageMetadata92);
        org.junit.Assert.assertNull(byteArray93);
        org.junit.Assert.assertNull(imageMetadata94);
        org.junit.Assert.assertNull(formatCompliance96);
    }

    @Test
    public void test1432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1432");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        org.apache.commons.imaging.ImageFormat imageFormat31 = null;
        boolean boolean32 = pcxImageParser0.canAcceptType(imageFormat31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str35 = pcxImageParser34.getName();
        java.nio.ByteOrder byteOrder36 = pcxImageParser34.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat37 = null;
        boolean boolean38 = pcxImageParser34.canAcceptType(imageFormat37);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = pcxImageParser34.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo40 = pcxImageParser0.getImageInfo(byteSource33, pcxImagingParameters39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Pcx-Custom" + "'", str35, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters39);
    }

    @Test
    public void test1433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1433");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        boolean boolean14 = pcxImageParser0.canAcceptExtension("hi!");
        boolean boolean16 = pcxImageParser0.canAcceptExtension("hi!");
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1434");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser0.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata10 = pcxImageParser0.getMetadata(byteSource9);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass11 = imageMetadata10.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNull(imageMetadata10);
    }

    @Test
    public void test1435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1435");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.lang.String str6 = pcxImageParser0.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = pcxImageParser0.getDefaultParameters();
        java.io.File file8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = null;
        byte[] byteArray12 = pcxImageParser9.getIccProfileBytes(byteSource10, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser9.getName();
        java.lang.String str14 = pcxImageParser9.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser9.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser18.canAcceptType(imageFormat23);
        java.lang.String str25 = pcxImageParser18.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        byte[] byteArray27 = pcxImageParser9.getIccProfileBytes(byteSource17, pcxImagingParameters26);
        org.apache.commons.imaging.ImageFormat imageFormat28 = null;
        boolean boolean29 = pcxImageParser9.canAcceptType(imageFormat28);
        org.apache.commons.imaging.ImageFormat imageFormat30 = null;
        boolean boolean31 = pcxImageParser9.canAcceptType(imageFormat30);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser9.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser0.getMetadata(file8, pcxImagingParameters32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Pcx-Custom" + "'", str6, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters7);
        org.junit.Assert.assertNull(byteArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Pcx-Custom" + "'", str14, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "pcx" + "'", str25, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(byteArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
    }

    @Test
    public void test1436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1436");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser3 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder4 = pcxImageParser3.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser3.getFormatCompliance(byteSource5);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = pcxImageParser3.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata11 = pcxImageParser9.getMetadata(byteSource10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder14 = pcxImageParser13.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser13.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata18 = pcxImageParser13.getMetadata(byteSource17);
        boolean boolean20 = pcxImageParser13.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser9.getMetadata(byteSource12, pcxImagingParameters21);
        byte[] byteArray23 = pcxImageParser3.getIccProfileBytes(byteSource8, pcxImagingParameters21);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser0.getMetadata(byteSource2, pcxImagingParameters21);
        java.lang.String str25 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser27 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = null;
        byte[] byteArray30 = pcxImageParser27.getIccProfileBytes(byteSource28, pcxImagingParameters29);
        java.lang.String str31 = pcxImageParser27.getName();
        java.lang.String str32 = pcxImageParser27.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance34 = pcxImageParser27.getFormatCompliance(byteSource33);
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser36 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder37 = pcxImageParser36.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance39 = pcxImageParser36.getFormatCompliance(byteSource38);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser36.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat41 = null;
        boolean boolean42 = pcxImageParser36.canAcceptType(imageFormat41);
        java.lang.String str43 = pcxImageParser36.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = pcxImageParser36.getDefaultParameters();
        byte[] byteArray45 = pcxImageParser27.getIccProfileBytes(byteSource35, pcxImagingParameters44);
        org.apache.commons.imaging.ImageFormat imageFormat46 = null;
        boolean boolean47 = pcxImageParser27.canAcceptType(imageFormat46);
        org.apache.commons.imaging.ImageFormat imageFormat48 = null;
        boolean boolean49 = pcxImageParser27.canAcceptType(imageFormat48);
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser51 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder52 = pcxImageParser51.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance54 = pcxImageParser51.getFormatCompliance(byteSource53);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters55 = pcxImageParser51.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser57 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters59 = null;
        byte[] byteArray60 = pcxImageParser57.getIccProfileBytes(byteSource58, pcxImagingParameters59);
        java.lang.String str61 = pcxImageParser57.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters62 = pcxImageParser57.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata63 = pcxImageParser51.getMetadata(byteSource56, pcxImagingParameters62);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters64 = pcxImageParser51.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata65 = pcxImageParser27.getMetadata(byteSource50, pcxImagingParameters64);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension66 = pcxImageParser0.getImageSize(byteSource26, pcxImagingParameters64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNull(formatCompliance6);
        org.junit.Assert.assertNotNull(pcxImagingParameters7);
        org.junit.Assert.assertNull(imageMetadata11);
        org.junit.Assert.assertNotNull(byteOrder14);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNull(imageMetadata18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNull(byteArray23);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Pcx-Custom" + "'", str31, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Pcx-Custom" + "'", str32, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance34);
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNull(formatCompliance39);
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "pcx" + "'", str43, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters44);
        org.junit.Assert.assertNull(byteArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(byteOrder52);
        org.junit.Assert.assertNull(formatCompliance54);
        org.junit.Assert.assertNotNull(pcxImagingParameters55);
        org.junit.Assert.assertNull(byteArray60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "pcx" + "'", str61, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters62);
        org.junit.Assert.assertNull(imageMetadata63);
        org.junit.Assert.assertNotNull(pcxImagingParameters64);
        org.junit.Assert.assertNull(imageMetadata65);
    }

    @Test
    public void test1437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1437");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser4.getMetadata(byteSource8);
        boolean boolean11 = pcxImageParser4.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters12);
        java.io.File file14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = pcxImageParser0.dumpImageFile(file14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata13);
    }

    @Test
    public void test1438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1438");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        boolean boolean14 = pcxImageParser0.canAcceptExtension("hi!");
        java.lang.String str15 = pcxImageParser0.getName();
        boolean boolean17 = pcxImageParser0.canAcceptExtension("");
        java.io.File file18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder20 = pcxImageParser19.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance22 = pcxImageParser19.getFormatCompliance(byteSource21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser19.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo24 = pcxImageParser0.getImageInfo(file18, pcxImagingParameters23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Pcx-Custom" + "'", str15, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNull(formatCompliance22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
    }

    @Test
    public void test1439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1439");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser0.getFormatCompliance(byteSource5);
        java.nio.ByteOrder byteOrder7 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        java.io.File file9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList10 = pcxImageParser0.getAllBufferedImages(file9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance6);
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
    }

    @Test
    public void test1440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1440");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.nio.ByteOrder byteOrder4 = pcxImageParser0.getByteOrder();
        java.nio.ByteOrder byteOrder5 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat6 = null;
        boolean boolean7 = pcxImageParser0.canAcceptType(imageFormat6);
        java.io.File file8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = pcxImageParser0.dumpImageFile(file8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1441");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        java.lang.String str13 = pcxImageParser8.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser8.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser8.canAcceptExtension("");
        boolean boolean19 = pcxImageParser8.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = null;
        byte[] byteArray24 = pcxImageParser21.getIccProfileBytes(byteSource22, pcxImagingParameters23);
        java.lang.String str25 = pcxImageParser21.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser21.getMetadata(byteSource26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance29 = pcxImageParser21.getFormatCompliance(byteSource28);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = null;
        byte[] byteArray35 = pcxImageParser32.getIccProfileBytes(byteSource33, pcxImagingParameters34);
        java.lang.String str36 = pcxImageParser32.getName();
        java.lang.String str37 = pcxImageParser32.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder40 = pcxImageParser39.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance42 = pcxImageParser39.getFormatCompliance(byteSource41);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser39.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser32.getMetadata(byteSource38, pcxImagingParameters43);
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser46 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser46.getMetadata(byteSource47);
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser50 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder51 = pcxImageParser50.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance53 = pcxImageParser50.getFormatCompliance(byteSource52);
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata55 = pcxImageParser50.getMetadata(byteSource54);
        boolean boolean57 = pcxImageParser50.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters58 = pcxImageParser50.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata59 = pcxImageParser46.getMetadata(byteSource49, pcxImagingParameters58);
        byte[] byteArray60 = pcxImageParser32.getIccProfileBytes(byteSource45, pcxImagingParameters58);
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance62 = pcxImageParser32.getFormatCompliance(byteSource61);
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser64 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters66 = null;
        byte[] byteArray67 = pcxImageParser64.getIccProfileBytes(byteSource65, pcxImagingParameters66);
        java.nio.ByteOrder byteOrder68 = pcxImageParser64.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser70 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder71 = pcxImageParser70.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource72 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance73 = pcxImageParser70.getFormatCompliance(byteSource72);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters74 = pcxImageParser70.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat75 = null;
        boolean boolean76 = pcxImageParser70.canAcceptType(imageFormat75);
        java.lang.String str77 = pcxImageParser70.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters78 = pcxImageParser70.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata79 = pcxImageParser64.getMetadata(byteSource69, pcxImagingParameters78);
        byte[] byteArray80 = pcxImageParser32.getIccProfileBytes(byteSource63, pcxImagingParameters78);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata81 = pcxImageParser21.getMetadata(byteSource31, pcxImagingParameters78);
        byte[] byteArray82 = pcxImageParser8.getIccProfileBytes(byteSource20, pcxImagingParameters78);
        byte[] byteArray83 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters78);
        org.apache.commons.imaging.bytesource.ByteSource byteSource84 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance85 = pcxImageParser0.getFormatCompliance(byteSource84);
        org.apache.commons.imaging.ImageFormat imageFormat86 = null;
        boolean boolean87 = pcxImageParser0.canAcceptType(imageFormat86);
        java.nio.ByteOrder byteOrder88 = pcxImageParser0.getByteOrder();
        java.lang.String str89 = pcxImageParser0.getDefaultExtension();
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(formatCompliance29);
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(byteArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Pcx-Custom" + "'", str36, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Pcx-Custom" + "'", str37, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNull(formatCompliance42);
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNotNull(byteOrder51);
        org.junit.Assert.assertNull(formatCompliance53);
        org.junit.Assert.assertNull(imageMetadata55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters58);
        org.junit.Assert.assertNull(imageMetadata59);
        org.junit.Assert.assertNull(byteArray60);
        org.junit.Assert.assertNull(formatCompliance62);
        org.junit.Assert.assertNull(byteArray67);
        org.junit.Assert.assertNotNull(byteOrder68);
        org.junit.Assert.assertNotNull(byteOrder71);
        org.junit.Assert.assertNull(formatCompliance73);
        org.junit.Assert.assertNotNull(pcxImagingParameters74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "pcx" + "'", str77, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters78);
        org.junit.Assert.assertNull(imageMetadata79);
        org.junit.Assert.assertNull(byteArray80);
        org.junit.Assert.assertNull(imageMetadata81);
        org.junit.Assert.assertNull(byteArray82);
        org.junit.Assert.assertNull(byteArray83);
        org.junit.Assert.assertNull(formatCompliance85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(byteOrder88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "pcx" + "'", str89, "pcx");
    }

    @Test
    public void test1442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1442");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        java.io.File file28 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance29 = pcxImageParser0.getFormatCompliance(file28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
    }

    @Test
    public void test1443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1443");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        boolean boolean9 = pcxImageParser0.canAcceptExtension("");
        boolean boolean11 = pcxImageParser0.canAcceptExtension("hi!");
        java.awt.image.BufferedImage bufferedImage12 = null;
        java.io.OutputStream outputStream13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = null;
        byte[] byteArray17 = pcxImageParser14.getIccProfileBytes(byteSource15, pcxImagingParameters16);
        java.lang.String str18 = pcxImageParser14.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata20 = pcxImageParser14.getMetadata(byteSource19);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance22 = pcxImageParser14.getFormatCompliance(byteSource21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser14.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage12, outputStream13, pcxImagingParameters23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(byteArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Pcx-Custom" + "'", str18, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata20);
        org.junit.Assert.assertNull(formatCompliance22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
    }

    @Test
    public void test1444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1444");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser4.getMetadata(byteSource8);
        boolean boolean11 = pcxImageParser4.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters12);
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser0.canAcceptType(imageFormat14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata17 = pcxImageParser0.getMetadata(byteSource16);
        java.io.File file18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str20 = pcxImageParser19.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance22 = pcxImageParser19.getFormatCompliance(byteSource21);
        boolean boolean24 = pcxImageParser19.canAcceptExtension("");
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance26 = pcxImageParser19.getFormatCompliance(byteSource25);
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata30 = pcxImageParser28.getMetadata(byteSource29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser32.getMetadata(byteSource36);
        boolean boolean39 = pcxImageParser32.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser28.getMetadata(byteSource31, pcxImagingParameters40);
        byte[] byteArray42 = pcxImageParser19.getIccProfileBytes(byteSource27, pcxImagingParameters40);
        java.nio.ByteOrder byteOrder43 = pcxImageParser19.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser45 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = null;
        byte[] byteArray48 = pcxImageParser45.getIccProfileBytes(byteSource46, pcxImagingParameters47);
        java.lang.String str49 = pcxImageParser45.getName();
        java.lang.String str50 = pcxImageParser45.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser52 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder53 = pcxImageParser52.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance55 = pcxImageParser52.getFormatCompliance(byteSource54);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters56 = pcxImageParser52.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata57 = pcxImageParser45.getMetadata(byteSource51, pcxImagingParameters56);
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser59 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata61 = pcxImageParser59.getMetadata(byteSource60);
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser63 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder64 = pcxImageParser63.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance66 = pcxImageParser63.getFormatCompliance(byteSource65);
        org.apache.commons.imaging.bytesource.ByteSource byteSource67 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata68 = pcxImageParser63.getMetadata(byteSource67);
        boolean boolean70 = pcxImageParser63.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters71 = pcxImageParser63.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata72 = pcxImageParser59.getMetadata(byteSource62, pcxImagingParameters71);
        byte[] byteArray73 = pcxImageParser45.getIccProfileBytes(byteSource58, pcxImagingParameters71);
        org.apache.commons.imaging.ImageFormat imageFormat74 = null;
        boolean boolean75 = pcxImageParser45.canAcceptType(imageFormat74);
        org.apache.commons.imaging.bytesource.ByteSource byteSource76 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser77 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder78 = pcxImageParser77.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource79 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance80 = pcxImageParser77.getFormatCompliance(byteSource79);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters81 = pcxImageParser77.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat82 = null;
        boolean boolean83 = pcxImageParser77.canAcceptType(imageFormat82);
        java.lang.String str84 = pcxImageParser77.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters85 = pcxImageParser77.getDefaultParameters();
        byte[] byteArray86 = pcxImageParser45.getIccProfileBytes(byteSource76, pcxImagingParameters85);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata87 = pcxImageParser19.getMetadata(byteSource44, pcxImagingParameters85);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo88 = pcxImageParser0.getImageInfo(file18, pcxImagingParameters85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(imageMetadata17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Pcx-Custom" + "'", str20, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(formatCompliance26);
        org.junit.Assert.assertNull(imageMetadata30);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(imageMetadata41);
        org.junit.Assert.assertNull(byteArray42);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNull(byteArray48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Pcx-Custom" + "'", str49, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Pcx-Custom" + "'", str50, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder53);
        org.junit.Assert.assertNull(formatCompliance55);
        org.junit.Assert.assertNotNull(pcxImagingParameters56);
        org.junit.Assert.assertNull(imageMetadata57);
        org.junit.Assert.assertNull(imageMetadata61);
        org.junit.Assert.assertNotNull(byteOrder64);
        org.junit.Assert.assertNull(formatCompliance66);
        org.junit.Assert.assertNull(imageMetadata68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters71);
        org.junit.Assert.assertNull(imageMetadata72);
        org.junit.Assert.assertNull(byteArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(byteOrder78);
        org.junit.Assert.assertNull(formatCompliance80);
        org.junit.Assert.assertNotNull(pcxImagingParameters81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "pcx" + "'", str84, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters85);
        org.junit.Assert.assertNull(byteArray86);
        org.junit.Assert.assertNull(imageMetadata87);
    }

    @Test
    public void test1445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1445");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.lang.String str6 = pcxImageParser0.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = pcxImageParser0.getDefaultParameters();
        java.io.File file8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = null;
        byte[] byteArray12 = pcxImageParser9.getIccProfileBytes(byteSource10, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser9.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = null;
        byte[] byteArray18 = pcxImageParser15.getIccProfileBytes(byteSource16, pcxImagingParameters17);
        java.lang.String str19 = pcxImageParser15.getName();
        java.lang.String str20 = pcxImageParser15.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance22 = pcxImageParser15.getFormatCompliance(byteSource21);
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser24.canAcceptType(imageFormat29);
        java.lang.String str31 = pcxImageParser24.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser24.getDefaultParameters();
        byte[] byteArray33 = pcxImageParser15.getIccProfileBytes(byteSource23, pcxImagingParameters32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder36 = pcxImageParser35.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance38 = pcxImageParser35.getFormatCompliance(byteSource37);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = pcxImageParser35.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat40 = null;
        boolean boolean41 = pcxImageParser35.canAcceptType(imageFormat40);
        java.lang.String str42 = pcxImageParser35.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser35.getDefaultParameters();
        byte[] byteArray44 = pcxImageParser15.getIccProfileBytes(byteSource34, pcxImagingParameters43);
        byte[] byteArray45 = pcxImageParser9.getIccProfileBytes(byteSource14, pcxImagingParameters43);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser0.getMetadata(file8, pcxImagingParameters43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Pcx-Custom" + "'", str6, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters7);
        org.junit.Assert.assertNull(byteArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Pcx-Custom" + "'", str19, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Pcx-Custom" + "'", str20, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance22);
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "pcx" + "'", str31, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNull(formatCompliance38);
        org.junit.Assert.assertNotNull(pcxImagingParameters39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "pcx" + "'", str42, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertNull(byteArray44);
        org.junit.Assert.assertNull(byteArray45);
    }

    @Test
    public void test1446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1446");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata4 = pcxImageParser0.getMetadata(byteSource3);
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = null;
        byte[] byteArray10 = pcxImageParser7.getIccProfileBytes(byteSource8, pcxImagingParameters9);
        java.lang.String str11 = pcxImageParser7.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser7.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance15 = pcxImageParser7.getFormatCompliance(byteSource14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str18 = pcxImageParser17.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata20 = pcxImageParser17.getMetadata(byteSource19);
        org.apache.commons.imaging.ImageFormat imageFormat21 = null;
        boolean boolean22 = pcxImageParser17.canAcceptType(imageFormat21);
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str25 = pcxImageParser24.getName();
        java.nio.ByteOrder byteOrder26 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat27 = null;
        boolean boolean28 = pcxImageParser24.canAcceptType(imageFormat27);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder31 = pcxImageParser30.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder34 = pcxImageParser33.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance36 = pcxImageParser33.getFormatCompliance(byteSource35);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = pcxImageParser33.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser39.getMetadata(byteSource40);
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser43 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder44 = pcxImageParser43.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance46 = pcxImageParser43.getFormatCompliance(byteSource45);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser43.getMetadata(byteSource47);
        boolean boolean50 = pcxImageParser43.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters51 = pcxImageParser43.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata52 = pcxImageParser39.getMetadata(byteSource42, pcxImagingParameters51);
        byte[] byteArray53 = pcxImageParser33.getIccProfileBytes(byteSource38, pcxImagingParameters51);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata54 = pcxImageParser30.getMetadata(byteSource32, pcxImagingParameters51);
        byte[] byteArray55 = pcxImageParser24.getIccProfileBytes(byteSource29, pcxImagingParameters51);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata56 = pcxImageParser17.getMetadata(byteSource23, pcxImagingParameters51);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata57 = pcxImageParser7.getMetadata(byteSource16, pcxImagingParameters51);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension58 = pcxImageParser0.getImageSize(byteSource6, pcxImagingParameters51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNull(byteArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Pcx-Custom" + "'", str11, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(formatCompliance15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Pcx-Custom" + "'", str18, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(byteOrder34);
        org.junit.Assert.assertNull(formatCompliance36);
        org.junit.Assert.assertNotNull(pcxImagingParameters37);
        org.junit.Assert.assertNull(imageMetadata41);
        org.junit.Assert.assertNotNull(byteOrder44);
        org.junit.Assert.assertNull(formatCompliance46);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters51);
        org.junit.Assert.assertNull(imageMetadata52);
        org.junit.Assert.assertNull(byteArray53);
        org.junit.Assert.assertNull(imageMetadata54);
        org.junit.Assert.assertNull(byteArray55);
        org.junit.Assert.assertNull(imageMetadata56);
        org.junit.Assert.assertNull(imageMetadata57);
    }

    @Test
    public void test1447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1447");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = null;
        byte[] byteArray17 = pcxImageParser14.getIccProfileBytes(byteSource15, pcxImagingParameters16);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser14.getDefaultParameters();
        byte[] byteArray19 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters18);
        boolean boolean21 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser0.getDefaultParameters();
        java.io.File file23 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser0.getMetadata(file23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(byteArray17);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
    }

    @Test
    public void test1448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1448");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters6 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = null;
        byte[] byteArray11 = pcxImageParser8.getIccProfileBytes(byteSource9, pcxImagingParameters10);
        java.lang.String str12 = pcxImageParser8.getName();
        java.lang.String str13 = pcxImageParser8.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder16 = pcxImageParser15.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser15.getFormatCompliance(byteSource17);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser15.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata20 = pcxImageParser8.getMetadata(byteSource14, pcxImagingParameters19);
        java.lang.String str21 = pcxImageParser8.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser8.getMetadata(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = null;
        byte[] byteArray28 = pcxImageParser25.getIccProfileBytes(byteSource26, pcxImagingParameters27);
        java.lang.String str29 = pcxImageParser25.getName();
        java.lang.String str30 = pcxImageParser25.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser25.getMetadata(byteSource31, pcxImagingParameters36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = null;
        byte[] byteArray42 = pcxImageParser39.getIccProfileBytes(byteSource40, pcxImagingParameters41);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser39.getDefaultParameters();
        byte[] byteArray44 = pcxImageParser25.getIccProfileBytes(byteSource38, pcxImagingParameters43);
        byte[] byteArray45 = pcxImageParser8.getIccProfileBytes(byteSource24, pcxImagingParameters43);
        byte[] byteArray46 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters43);
        org.apache.commons.imaging.ImageFormat imageFormat47 = null;
        boolean boolean48 = pcxImageParser0.canAcceptType(imageFormat47);
        java.io.File file49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser50 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = null;
        byte[] byteArray53 = pcxImageParser50.getIccProfileBytes(byteSource51, pcxImagingParameters52);
        java.lang.String str54 = pcxImageParser50.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat55 = null;
        boolean boolean56 = pcxImageParser50.canAcceptType(imageFormat55);
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser58 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters60 = null;
        byte[] byteArray61 = pcxImageParser58.getIccProfileBytes(byteSource59, pcxImagingParameters60);
        java.lang.String str62 = pcxImageParser58.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters63 = pcxImageParser58.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters64 = pcxImageParser58.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata65 = pcxImageParser50.getMetadata(byteSource57, pcxImagingParameters64);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension66 = pcxImageParser0.getImageSize(file49, pcxImagingParameters64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNotNull(pcxImagingParameters6);
        org.junit.Assert.assertNull(byteArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Pcx-Custom" + "'", str12, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNull(formatCompliance18);
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
        org.junit.Assert.assertNull(imageMetadata20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Pcx-Custom" + "'", str30, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertNull(byteArray42);
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertNull(byteArray44);
        org.junit.Assert.assertNull(byteArray45);
        org.junit.Assert.assertNull(byteArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(byteArray53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "pcx" + "'", str54, "pcx");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(byteArray61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "pcx" + "'", str62, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters63);
        org.junit.Assert.assertNotNull(pcxImagingParameters64);
        org.junit.Assert.assertNull(imageMetadata65);
    }

    @Test
    public void test1449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1449");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        boolean boolean7 = pcxImageParser0.canAcceptExtension("pcx");
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList9 = pcxImageParser0.getAllBufferedImages(byteSource8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1450");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = null;
        byte[] byteArray20 = pcxImageParser17.getIccProfileBytes(byteSource18, pcxImagingParameters19);
        java.lang.String str21 = pcxImageParser17.getName();
        java.lang.String str22 = pcxImageParser17.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser17.getMetadata(byteSource23, pcxImagingParameters28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = null;
        byte[] byteArray34 = pcxImageParser31.getIccProfileBytes(byteSource32, pcxImagingParameters33);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser31.getDefaultParameters();
        byte[] byteArray36 = pcxImageParser17.getIccProfileBytes(byteSource30, pcxImagingParameters35);
        byte[] byteArray37 = pcxImageParser0.getIccProfileBytes(byteSource16, pcxImagingParameters35);
        java.io.File file38 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList39 = pcxImageParser0.getAllBufferedImages(file38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Pcx-Custom" + "'", str22, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertNull(byteArray34);
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertNull(byteArray37);
    }

    @Test
    public void test1451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1451");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = null;
        byte[] byteArray33 = pcxImageParser30.getIccProfileBytes(byteSource31, pcxImagingParameters32);
        java.lang.String str34 = pcxImageParser30.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser30.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser0.getMetadata(byteSource29, pcxImagingParameters35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser0.getMetadata(byteSource37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser0.getMetadata(byteSource39);
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance42 = pcxImageParser0.getFormatCompliance(byteSource41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList44 = pcxImageParser0.getAllBufferedImages(byteSource43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "pcx" + "'", str34, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertNull(formatCompliance42);
    }

    @Test
    public void test1452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1452");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        java.io.File file31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = null;
        byte[] byteArray35 = pcxImageParser32.getIccProfileBytes(byteSource33, pcxImagingParameters34);
        java.lang.String str36 = pcxImageParser32.getName();
        java.lang.String str37 = pcxImageParser32.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder40 = pcxImageParser39.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance42 = pcxImageParser39.getFormatCompliance(byteSource41);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser39.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser32.getMetadata(byteSource38, pcxImagingParameters43);
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser46 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = null;
        byte[] byteArray49 = pcxImageParser46.getIccProfileBytes(byteSource47, pcxImagingParameters48);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters50 = pcxImageParser46.getDefaultParameters();
        byte[] byteArray51 = pcxImageParser32.getIccProfileBytes(byteSource45, pcxImagingParameters50);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage52 = pcxImageParser0.getBufferedImage(file31, pcxImagingParameters50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(byteArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Pcx-Custom" + "'", str36, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Pcx-Custom" + "'", str37, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNull(formatCompliance42);
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertNull(byteArray49);
        org.junit.Assert.assertNotNull(pcxImagingParameters50);
        org.junit.Assert.assertNull(byteArray51);
    }

    @Test
    public void test1453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1453");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser0.canAcceptType(imageFormat23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance26 = pcxImageParser0.getFormatCompliance(byteSource25);
        java.lang.String str27 = pcxImageParser0.getDefaultExtension();
        java.lang.String str28 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str30 = pcxImageParser0.dumpImageFile(byteSource29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(formatCompliance26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "pcx" + "'", str27, "pcx");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Pcx-Custom" + "'", str28, "Pcx-Custom");
    }

    @Test
    public void test1454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1454");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.ImageFormat imageFormat3 = null;
        boolean boolean4 = pcxImageParser0.canAcceptType(imageFormat3);
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo8 = pcxImageParser0.getImageInfo(byteSource7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1455");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat2 = null;
        boolean boolean3 = pcxImageParser0.canAcceptType(imageFormat2);
        org.apache.commons.imaging.ImageFormat imageFormat4 = null;
        boolean boolean5 = pcxImageParser0.canAcceptType(imageFormat4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("Pcx-Custom");
        java.lang.String str8 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList10 = pcxImageParser0.getAllBufferedImages(byteSource9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "pcx" + "'", str8, "pcx");
    }

    @Test
    public void test1456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1456");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser0.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = null;
        byte[] byteArray11 = pcxImageParser0.getIccProfileBytes(byteSource9, pcxImagingParameters10);
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNull(byteArray11);
    }

    @Test
    public void test1457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1457");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser0.getMetadata(byteSource21, pcxImagingParameters22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = null;
        byte[] byteArray28 = pcxImageParser25.getIccProfileBytes(byteSource26, pcxImagingParameters27);
        java.lang.String str29 = pcxImageParser25.getName();
        java.lang.String str30 = pcxImageParser25.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser25.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder35 = pcxImageParser34.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance37 = pcxImageParser34.getFormatCompliance(byteSource36);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser34.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat39 = null;
        boolean boolean40 = pcxImageParser34.canAcceptType(imageFormat39);
        java.lang.String str41 = pcxImageParser34.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser34.getDefaultParameters();
        byte[] byteArray43 = pcxImageParser25.getIccProfileBytes(byteSource33, pcxImagingParameters42);
        org.apache.commons.imaging.ImageFormat imageFormat44 = null;
        boolean boolean45 = pcxImageParser25.canAcceptType(imageFormat44);
        org.apache.commons.imaging.ImageFormat imageFormat46 = null;
        boolean boolean47 = pcxImageParser25.canAcceptType(imageFormat46);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = pcxImageParser25.getDefaultParameters();
        byte[] byteArray49 = pcxImageParser0.getIccProfileBytes(byteSource24, pcxImagingParameters48);
        boolean boolean51 = pcxImageParser0.canAcceptExtension("hi!");
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Pcx-Custom" + "'", str30, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNull(formatCompliance37);
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "pcx" + "'", str41, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertNull(byteArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters48);
        org.junit.Assert.assertNull(byteArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test1458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1458");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.nio.ByteOrder byteOrder4 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser0.getFormatCompliance(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        java.io.File file9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList10 = pcxImageParser0.getAllBufferedImages(file9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNull(formatCompliance6);
        org.junit.Assert.assertNull(formatCompliance8);
    }

    @Test
    public void test1459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1459");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        java.io.File file14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder16 = pcxImageParser15.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser15.getFormatCompliance(byteSource17);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser15.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser21.getMetadata(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder26 = pcxImageParser25.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance28 = pcxImageParser25.getFormatCompliance(byteSource27);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata30 = pcxImageParser25.getMetadata(byteSource29);
        boolean boolean32 = pcxImageParser25.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser25.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser21.getMetadata(byteSource24, pcxImagingParameters33);
        byte[] byteArray35 = pcxImageParser15.getIccProfileBytes(byteSource20, pcxImagingParameters33);
        java.lang.String str36 = pcxImageParser15.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser15.getMetadata(byteSource37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser15.getMetadata(byteSource39);
        org.apache.commons.imaging.ImageFormat imageFormat41 = null;
        boolean boolean42 = pcxImageParser15.canAcceptType(imageFormat41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder45 = pcxImageParser44.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance47 = pcxImageParser44.getFormatCompliance(byteSource46);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = pcxImageParser44.getDefaultParameters();
        java.lang.String str49 = pcxImageParser44.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters51 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata52 = pcxImageParser44.getMetadata(byteSource50, pcxImagingParameters51);
        java.lang.String str53 = pcxImageParser44.getDefaultExtension();
        boolean boolean55 = pcxImageParser44.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters56 = pcxImageParser44.getDefaultParameters();
        byte[] byteArray57 = pcxImageParser15.getIccProfileBytes(byteSource43, pcxImagingParameters56);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage58 = pcxImageParser0.getBufferedImage(file14, pcxImagingParameters56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNull(formatCompliance18);
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNotNull(byteOrder26);
        org.junit.Assert.assertNull(formatCompliance28);
        org.junit.Assert.assertNull(imageMetadata30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertNull(byteArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "pcx" + "'", str36, "pcx");
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(byteOrder45);
        org.junit.Assert.assertNull(formatCompliance47);
        org.junit.Assert.assertNotNull(pcxImagingParameters48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "pcx" + "'", str49, "pcx");
        org.junit.Assert.assertNull(imageMetadata52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "pcx" + "'", str53, "pcx");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters56);
        org.junit.Assert.assertNull(byteArray57);
    }

    @Test
    public void test1460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1460");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.nio.ByteOrder byteOrder29 = pcxImageParser0.getByteOrder();
        java.lang.String str30 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser0.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser34.getMetadata(byteSource35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser38 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder39 = pcxImageParser38.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance41 = pcxImageParser38.getFormatCompliance(byteSource40);
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata43 = pcxImageParser38.getMetadata(byteSource42);
        boolean boolean45 = pcxImageParser38.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser38.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser34.getMetadata(byteSource37, pcxImagingParameters46);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser0.getMetadata(byteSource33, pcxImagingParameters46);
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance50 = pcxImageParser0.getFormatCompliance(byteSource49);
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser52 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str53 = pcxImageParser52.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata55 = pcxImageParser52.getMetadata(byteSource54);
        org.apache.commons.imaging.ImageFormat imageFormat56 = null;
        boolean boolean57 = pcxImageParser52.canAcceptType(imageFormat56);
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser59 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str60 = pcxImageParser59.getName();
        java.nio.ByteOrder byteOrder61 = pcxImageParser59.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat62 = null;
        boolean boolean63 = pcxImageParser59.canAcceptType(imageFormat62);
        org.apache.commons.imaging.bytesource.ByteSource byteSource64 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser65 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder66 = pcxImageParser65.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource67 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser68 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder69 = pcxImageParser68.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource70 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance71 = pcxImageParser68.getFormatCompliance(byteSource70);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters72 = pcxImageParser68.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource73 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser74 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource75 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata76 = pcxImageParser74.getMetadata(byteSource75);
        org.apache.commons.imaging.bytesource.ByteSource byteSource77 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser78 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder79 = pcxImageParser78.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource80 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance81 = pcxImageParser78.getFormatCompliance(byteSource80);
        org.apache.commons.imaging.bytesource.ByteSource byteSource82 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata83 = pcxImageParser78.getMetadata(byteSource82);
        boolean boolean85 = pcxImageParser78.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters86 = pcxImageParser78.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata87 = pcxImageParser74.getMetadata(byteSource77, pcxImagingParameters86);
        byte[] byteArray88 = pcxImageParser68.getIccProfileBytes(byteSource73, pcxImagingParameters86);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata89 = pcxImageParser65.getMetadata(byteSource67, pcxImagingParameters86);
        byte[] byteArray90 = pcxImageParser59.getIccProfileBytes(byteSource64, pcxImagingParameters86);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata91 = pcxImageParser52.getMetadata(byteSource58, pcxImagingParameters86);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension92 = pcxImageParser0.getImageSize(byteSource51, pcxImagingParameters86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "pcx" + "'", str30, "pcx");
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertNotNull(byteOrder39);
        org.junit.Assert.assertNull(formatCompliance41);
        org.junit.Assert.assertNull(imageMetadata43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
        org.junit.Assert.assertNull(imageMetadata47);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNull(formatCompliance50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Pcx-Custom" + "'", str53, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Pcx-Custom" + "'", str60, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(byteOrder66);
        org.junit.Assert.assertNotNull(byteOrder69);
        org.junit.Assert.assertNull(formatCompliance71);
        org.junit.Assert.assertNotNull(pcxImagingParameters72);
        org.junit.Assert.assertNull(imageMetadata76);
        org.junit.Assert.assertNotNull(byteOrder79);
        org.junit.Assert.assertNull(formatCompliance81);
        org.junit.Assert.assertNull(imageMetadata83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters86);
        org.junit.Assert.assertNull(imageMetadata87);
        org.junit.Assert.assertNull(byteArray88);
        org.junit.Assert.assertNull(imageMetadata89);
        org.junit.Assert.assertNull(byteArray90);
        org.junit.Assert.assertNull(imageMetadata91);
    }

    @Test
    public void test1461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1461");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser4.getMetadata(byteSource8);
        boolean boolean11 = pcxImageParser4.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters12);
        boolean boolean15 = pcxImageParser0.canAcceptExtension("pcx");
        boolean boolean17 = pcxImageParser0.canAcceptExtension("Pcx-Custom");
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder20 = pcxImageParser19.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance22 = pcxImageParser19.getFormatCompliance(byteSource21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser19.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = pcxImageParser19.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage25 = pcxImageParser0.getBufferedImage(byteSource18, pcxImagingParameters24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNull(formatCompliance22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNotNull(pcxImagingParameters24);
    }

    @Test
    public void test1462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1462");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = null;
        byte[] byteArray17 = pcxImageParser14.getIccProfileBytes(byteSource15, pcxImagingParameters16);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser14.getDefaultParameters();
        byte[] byteArray19 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder22 = pcxImageParser21.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance24 = pcxImageParser21.getFormatCompliance(byteSource23);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat26 = null;
        boolean boolean27 = pcxImageParser21.canAcceptType(imageFormat26);
        java.lang.String str28 = pcxImageParser21.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = pcxImageParser21.getDefaultParameters();
        java.lang.String str30 = pcxImageParser21.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser0.getMetadata(byteSource20, pcxImagingParameters31);
        java.io.File file33 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension34 = pcxImageParser0.getImageSize(file33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(byteArray17);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNull(formatCompliance24);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "pcx" + "'", str28, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Pcx-Custom" + "'", str30, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
        org.junit.Assert.assertNull(imageMetadata32);
    }

    @Test
    public void test1463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1463");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser0.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata10 = pcxImageParser0.getMetadata(byteSource9);
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNull(imageMetadata10);
    }

    @Test
    public void test1464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1464");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = null;
        byte[] byteArray20 = pcxImageParser17.getIccProfileBytes(byteSource18, pcxImagingParameters19);
        java.lang.String str21 = pcxImageParser17.getName();
        java.lang.String str22 = pcxImageParser17.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser17.getMetadata(byteSource23, pcxImagingParameters28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = null;
        byte[] byteArray34 = pcxImageParser31.getIccProfileBytes(byteSource32, pcxImagingParameters33);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser31.getDefaultParameters();
        byte[] byteArray36 = pcxImageParser17.getIccProfileBytes(byteSource30, pcxImagingParameters35);
        byte[] byteArray37 = pcxImageParser0.getIccProfileBytes(byteSource16, pcxImagingParameters35);
        org.apache.commons.imaging.ImageFormat imageFormat38 = null;
        boolean boolean39 = pcxImageParser0.canAcceptType(imageFormat38);
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser41 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = null;
        byte[] byteArray44 = pcxImageParser41.getIccProfileBytes(byteSource42, pcxImagingParameters43);
        java.lang.String str45 = pcxImageParser41.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser41.getDefaultParameters();
        java.nio.ByteOrder byteOrder47 = pcxImageParser41.getByteOrder();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = pcxImageParser41.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser50 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder51 = pcxImageParser50.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance53 = pcxImageParser50.getFormatCompliance(byteSource52);
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata55 = pcxImageParser50.getMetadata(byteSource54);
        boolean boolean57 = pcxImageParser50.canAcceptExtension("hi!");
        org.apache.commons.imaging.ImageFormat imageFormat58 = null;
        boolean boolean59 = pcxImageParser50.canAcceptType(imageFormat58);
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser61 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata63 = pcxImageParser61.getMetadata(byteSource62);
        org.apache.commons.imaging.bytesource.ByteSource byteSource64 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser65 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder66 = pcxImageParser65.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource67 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance68 = pcxImageParser65.getFormatCompliance(byteSource67);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters69 = pcxImageParser65.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource70 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser71 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource72 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata73 = pcxImageParser71.getMetadata(byteSource72);
        org.apache.commons.imaging.bytesource.ByteSource byteSource74 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser75 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder76 = pcxImageParser75.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource77 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance78 = pcxImageParser75.getFormatCompliance(byteSource77);
        org.apache.commons.imaging.bytesource.ByteSource byteSource79 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata80 = pcxImageParser75.getMetadata(byteSource79);
        boolean boolean82 = pcxImageParser75.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters83 = pcxImageParser75.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata84 = pcxImageParser71.getMetadata(byteSource74, pcxImagingParameters83);
        byte[] byteArray85 = pcxImageParser65.getIccProfileBytes(byteSource70, pcxImagingParameters83);
        java.lang.String str86 = pcxImageParser65.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters87 = pcxImageParser65.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata88 = pcxImageParser61.getMetadata(byteSource64, pcxImagingParameters87);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata89 = pcxImageParser50.getMetadata(byteSource60, pcxImagingParameters87);
        byte[] byteArray90 = pcxImageParser41.getIccProfileBytes(byteSource49, pcxImagingParameters87);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension91 = pcxImageParser0.getImageSize(byteSource40, pcxImagingParameters87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Pcx-Custom" + "'", str22, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertNull(byteArray34);
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertNull(byteArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(byteArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "pcx" + "'", str45, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNotNull(pcxImagingParameters48);
        org.junit.Assert.assertNotNull(byteOrder51);
        org.junit.Assert.assertNull(formatCompliance53);
        org.junit.Assert.assertNull(imageMetadata55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(imageMetadata63);
        org.junit.Assert.assertNotNull(byteOrder66);
        org.junit.Assert.assertNull(formatCompliance68);
        org.junit.Assert.assertNotNull(pcxImagingParameters69);
        org.junit.Assert.assertNull(imageMetadata73);
        org.junit.Assert.assertNotNull(byteOrder76);
        org.junit.Assert.assertNull(formatCompliance78);
        org.junit.Assert.assertNull(imageMetadata80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters83);
        org.junit.Assert.assertNull(imageMetadata84);
        org.junit.Assert.assertNull(byteArray85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "Pcx-Custom" + "'", str86, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters87);
        org.junit.Assert.assertNull(imageMetadata88);
        org.junit.Assert.assertNull(imageMetadata89);
        org.junit.Assert.assertNull(byteArray90);
    }

    @Test
    public void test1465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1465");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        java.io.File file7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser0.getMetadata(file7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
    }

    @Test
    public void test1466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1466");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        boolean boolean7 = pcxImageParser0.canAcceptExtension("pcx");
        java.io.File file8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = null;
        byte[] byteArray12 = pcxImageParser9.getIccProfileBytes(byteSource10, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser9.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser9.getDefaultParameters();
        java.nio.ByteOrder byteOrder15 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.ImageFormat imageFormat26 = null;
        boolean boolean27 = pcxImageParser18.canAcceptType(imageFormat26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser29.getMetadata(byteSource30);
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder34 = pcxImageParser33.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance36 = pcxImageParser33.getFormatCompliance(byteSource35);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = pcxImageParser33.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser39.getMetadata(byteSource40);
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser43 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder44 = pcxImageParser43.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance46 = pcxImageParser43.getFormatCompliance(byteSource45);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser43.getMetadata(byteSource47);
        boolean boolean50 = pcxImageParser43.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters51 = pcxImageParser43.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata52 = pcxImageParser39.getMetadata(byteSource42, pcxImagingParameters51);
        byte[] byteArray53 = pcxImageParser33.getIccProfileBytes(byteSource38, pcxImagingParameters51);
        java.lang.String str54 = pcxImageParser33.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters55 = pcxImageParser33.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata56 = pcxImageParser29.getMetadata(byteSource32, pcxImagingParameters55);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata57 = pcxImageParser18.getMetadata(byteSource28, pcxImagingParameters55);
        byte[] byteArray58 = pcxImageParser9.getIccProfileBytes(byteSource17, pcxImagingParameters55);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray59 = pcxImageParser0.getIccProfileBytes(file8, pcxImagingParameters55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(byteArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNotNull(pcxImagingParameters16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertNotNull(byteOrder34);
        org.junit.Assert.assertNull(formatCompliance36);
        org.junit.Assert.assertNotNull(pcxImagingParameters37);
        org.junit.Assert.assertNull(imageMetadata41);
        org.junit.Assert.assertNotNull(byteOrder44);
        org.junit.Assert.assertNull(formatCompliance46);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters51);
        org.junit.Assert.assertNull(imageMetadata52);
        org.junit.Assert.assertNull(byteArray53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Pcx-Custom" + "'", str54, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters55);
        org.junit.Assert.assertNull(imageMetadata56);
        org.junit.Assert.assertNull(imageMetadata57);
        org.junit.Assert.assertNull(byteArray58);
    }

    @Test
    public void test1467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1467");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser0.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser0.getDefaultParameters();
        java.lang.String str34 = pcxImageParser0.getDefaultExtension();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "pcx" + "'", str34, "pcx");
    }

    @Test
    public void test1468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1468");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.nio.ByteOrder byteOrder4 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder7 = pcxImageParser6.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance9 = pcxImageParser6.getFormatCompliance(byteSource8);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat11 = null;
        boolean boolean12 = pcxImageParser6.canAcceptType(imageFormat11);
        java.lang.String str13 = pcxImageParser6.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource5, pcxImagingParameters14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList17 = pcxImageParser0.getAllBufferedImages(byteSource16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNull(formatCompliance9);
        org.junit.Assert.assertNotNull(pcxImagingParameters10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNull(imageMetadata15);
    }

    @Test
    public void test1469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1469");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        boolean boolean6 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser8.getDefaultParameters();
        byte[] byteArray14 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters13);
        java.lang.String str15 = pcxImageParser0.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = pcxImageParser0.getDefaultParameters();
        java.io.File file17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata26 = pcxImageParser24.getMetadata(byteSource25);
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder29 = pcxImageParser28.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance31 = pcxImageParser28.getFormatCompliance(byteSource30);
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser28.getMetadata(byteSource32);
        boolean boolean35 = pcxImageParser28.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser28.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser24.getMetadata(byteSource27, pcxImagingParameters36);
        byte[] byteArray38 = pcxImageParser18.getIccProfileBytes(byteSource23, pcxImagingParameters36);
        java.lang.String str39 = pcxImageParser18.getDefaultExtension();
        java.lang.String str40 = pcxImageParser18.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat41 = null;
        boolean boolean42 = pcxImageParser18.canAcceptType(imageFormat41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance44 = pcxImageParser18.getFormatCompliance(byteSource43);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser47 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder48 = pcxImageParser47.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance50 = pcxImageParser47.getFormatCompliance(byteSource49);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters51 = pcxImageParser47.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata52 = pcxImageParser18.getMetadata(byteSource46, pcxImagingParameters51);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo53 = pcxImageParser0.getImageInfo(file17, pcxImagingParameters51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertNull(byteArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Pcx-Custom" + "'", str15, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata26);
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertNull(formatCompliance31);
        org.junit.Assert.assertNull(imageMetadata33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertNull(byteArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "pcx" + "'", str39, "pcx");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "pcx" + "'", str40, "pcx");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(formatCompliance44);
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertNotNull(byteOrder48);
        org.junit.Assert.assertNull(formatCompliance50);
        org.junit.Assert.assertNotNull(pcxImagingParameters51);
        org.junit.Assert.assertNull(imageMetadata52);
    }

    @Test
    public void test1470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1470");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.ImageFormat imageFormat8 = null;
        boolean boolean9 = pcxImageParser0.canAcceptType(imageFormat8);
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser0.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = pcxImageParser0.dumpImageFile(byteSource12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(formatCompliance11);
    }

    @Test
    public void test1471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1471");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = null;
        byte[] byteArray9 = pcxImageParser6.getIccProfileBytes(byteSource7, pcxImagingParameters8);
        java.lang.String str10 = pcxImageParser6.getName();
        java.lang.String str11 = pcxImageParser6.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser6.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder16 = pcxImageParser15.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser15.getFormatCompliance(byteSource17);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser15.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat20 = null;
        boolean boolean21 = pcxImageParser15.canAcceptType(imageFormat20);
        java.lang.String str22 = pcxImageParser15.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser15.getDefaultParameters();
        byte[] byteArray24 = pcxImageParser6.getIccProfileBytes(byteSource14, pcxImagingParameters23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder27 = pcxImageParser26.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance29 = pcxImageParser26.getFormatCompliance(byteSource28);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser26.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat31 = null;
        boolean boolean32 = pcxImageParser26.canAcceptType(imageFormat31);
        java.lang.String str33 = pcxImageParser26.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser26.getDefaultParameters();
        byte[] byteArray35 = pcxImageParser6.getIccProfileBytes(byteSource25, pcxImagingParameters34);
        byte[] byteArray36 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters34);
        java.io.File file37 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension38 = pcxImageParser0.getImageSize(file37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertNull(byteArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Pcx-Custom" + "'", str10, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Pcx-Custom" + "'", str11, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNull(formatCompliance18);
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNull(formatCompliance29);
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "pcx" + "'", str33, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
        org.junit.Assert.assertNull(byteArray35);
        org.junit.Assert.assertNull(byteArray36);
    }

    @Test
    public void test1472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1472");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        boolean boolean24 = pcxImageParser0.canAcceptExtension("Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test1473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1473");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser0.getFormatCompliance(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str11 = pcxImageParser10.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser10.getMetadata(byteSource12);
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser10.canAcceptType(imageFormat14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str18 = pcxImageParser17.getName();
        java.nio.ByteOrder byteOrder19 = pcxImageParser17.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat20 = null;
        boolean boolean21 = pcxImageParser17.canAcceptType(imageFormat20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser23 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder24 = pcxImageParser23.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder27 = pcxImageParser26.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance29 = pcxImageParser26.getFormatCompliance(byteSource28);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser26.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser32.getMetadata(byteSource33);
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser36 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder37 = pcxImageParser36.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance39 = pcxImageParser36.getFormatCompliance(byteSource38);
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser36.getMetadata(byteSource40);
        boolean boolean43 = pcxImageParser36.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = pcxImageParser36.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata45 = pcxImageParser32.getMetadata(byteSource35, pcxImagingParameters44);
        byte[] byteArray46 = pcxImageParser26.getIccProfileBytes(byteSource31, pcxImagingParameters44);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser23.getMetadata(byteSource25, pcxImagingParameters44);
        byte[] byteArray48 = pcxImageParser17.getIccProfileBytes(byteSource22, pcxImagingParameters44);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser10.getMetadata(byteSource16, pcxImagingParameters44);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata50 = pcxImageParser0.getMetadata(byteSource9, pcxImagingParameters44);
        java.io.File file51 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata52 = pcxImageParser0.getMetadata(file51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Pcx-Custom" + "'", str11, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Pcx-Custom" + "'", str18, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(byteOrder24);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNull(formatCompliance29);
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNull(formatCompliance39);
        org.junit.Assert.assertNull(imageMetadata41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters44);
        org.junit.Assert.assertNull(imageMetadata45);
        org.junit.Assert.assertNull(byteArray46);
        org.junit.Assert.assertNull(imageMetadata47);
        org.junit.Assert.assertNull(byteArray48);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertNull(imageMetadata50);
    }

    @Test
    public void test1474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1474");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser3 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder4 = pcxImageParser3.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser3.getFormatCompliance(byteSource5);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = pcxImageParser3.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo8 = pcxImageParser0.getImageInfo(byteSource2, pcxImagingParameters7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNull(formatCompliance6);
        org.junit.Assert.assertNotNull(pcxImagingParameters7);
    }

    @Test
    public void test1475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1475");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.ImageFormat imageFormat8 = null;
        boolean boolean9 = pcxImageParser0.canAcceptType(imageFormat8);
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser0.getFormatCompliance(byteSource10);
        java.nio.ByteOrder byteOrder12 = pcxImageParser0.getByteOrder();
        java.io.File file13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = pcxImageParser0.dumpImageFile(file13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(byteOrder12);
    }

    @Test
    public void test1476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1476");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser0.getMetadata(byteSource32);
        java.io.File file34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = null;
        byte[] byteArray38 = pcxImageParser35.getIccProfileBytes(byteSource36, pcxImagingParameters37);
        java.lang.String str39 = pcxImageParser35.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser35.getMetadata(byteSource40);
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance43 = pcxImageParser35.getFormatCompliance(byteSource42);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = pcxImageParser35.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension45 = pcxImageParser0.getImageSize(file34, pcxImagingParameters44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNull(imageMetadata33);
        org.junit.Assert.assertNull(byteArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Pcx-Custom" + "'", str39, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata41);
        org.junit.Assert.assertNull(formatCompliance43);
        org.junit.Assert.assertNotNull(pcxImagingParameters44);
    }

    @Test
    public void test1477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1477");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.nio.ByteOrder byteOrder7 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        java.io.File file9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension10 = pcxImageParser0.getImageSize(file9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
    }

    @Test
    public void test1478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1478");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.io.File file1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser2 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = null;
        byte[] byteArray5 = pcxImageParser2.getIccProfileBytes(byteSource3, pcxImagingParameters4);
        java.lang.String str6 = pcxImageParser2.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = pcxImageParser2.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = null;
        byte[] byteArray18 = pcxImageParser15.getIccProfileBytes(byteSource16, pcxImagingParameters17);
        java.lang.String str19 = pcxImageParser15.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters20 = pcxImageParser15.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata21 = pcxImageParser9.getMetadata(byteSource14, pcxImagingParameters20);
        byte[] byteArray22 = pcxImageParser2.getIccProfileBytes(byteSource8, pcxImagingParameters20);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo23 = pcxImageParser0.getImageInfo(file1, pcxImagingParameters20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "pcx" + "'", str6, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters7);
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "pcx" + "'", str19, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters20);
        org.junit.Assert.assertNull(imageMetadata21);
        org.junit.Assert.assertNull(byteArray22);
    }

    @Test
    public void test1479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1479");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat10 = null;
        boolean boolean11 = pcxImageParser0.canAcceptType(imageFormat10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser0.getDefaultParameters();
        java.io.File file13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser20 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser20.getMetadata(byteSource21);
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser24.getMetadata(byteSource28);
        boolean boolean31 = pcxImageParser24.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser20.getMetadata(byteSource23, pcxImagingParameters32);
        byte[] byteArray34 = pcxImageParser14.getIccProfileBytes(byteSource19, pcxImagingParameters32);
        java.lang.String str35 = pcxImageParser14.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat37 = null;
        boolean boolean38 = pcxImageParser14.canAcceptType(imageFormat37);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser14.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage41 = pcxImageParser0.getBufferedImage(file13, pcxImagingParameters40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(pcxImagingParameters9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
        org.junit.Assert.assertNull(imageMetadata33);
        org.junit.Assert.assertNull(byteArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Pcx-Custom" + "'", str35, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters39);
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
    }

    @Test
    public void test1480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1480");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        java.lang.String str8 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata10 = pcxImageParser0.getMetadata(byteSource9);
        java.lang.String str11 = pcxImageParser0.getDefaultExtension();
        java.io.File file12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser13.getMetadata(byteSource14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder18 = pcxImageParser17.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance20 = pcxImageParser17.getFormatCompliance(byteSource19);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser17.getMetadata(byteSource21);
        boolean boolean24 = pcxImageParser17.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser17.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata26 = pcxImageParser13.getMetadata(byteSource16, pcxImagingParameters25);
        org.apache.commons.imaging.ImageFormat imageFormat27 = null;
        boolean boolean28 = pcxImageParser13.canAcceptType(imageFormat27);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata30 = pcxImageParser13.getMetadata(byteSource29);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser13.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo32 = pcxImageParser0.getImageInfo(file12, pcxImagingParameters31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "pcx" + "'", str8, "pcx");
        org.junit.Assert.assertNull(imageMetadata10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "pcx" + "'", str11, "pcx");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNull(formatCompliance20);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
        org.junit.Assert.assertNull(imageMetadata26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(imageMetadata30);
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
    }

    @Test
    public void test1481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1481");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser9.canAcceptType(imageFormat14);
        java.lang.String str16 = pcxImageParser9.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser9.getDefaultParameters();
        byte[] byteArray18 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters17);
        org.apache.commons.imaging.ImageFormat imageFormat19 = null;
        boolean boolean20 = pcxImageParser0.canAcceptType(imageFormat19);
        java.lang.String str21 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser0.getMetadata(byteSource22);
        java.io.File file24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder26 = pcxImageParser25.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance28 = pcxImageParser25.getFormatCompliance(byteSource27);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = pcxImageParser25.getDefaultParameters();
        java.lang.String str30 = pcxImageParser25.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser25.getMetadata(byteSource31);
        boolean boolean34 = pcxImageParser25.canAcceptExtension("");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser25.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension36 = pcxImageParser0.getImageSize(file24, pcxImagingParameters35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "pcx" + "'", str16, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNotNull(byteOrder26);
        org.junit.Assert.assertNull(formatCompliance28);
        org.junit.Assert.assertNotNull(pcxImagingParameters29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "pcx" + "'", str30, "pcx");
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
    }

    @Test
    public void test1482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1482");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = null;
        byte[] byteArray6 = pcxImageParser0.getIccProfileBytes(byteSource4, pcxImagingParameters5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = null;
        byte[] byteArray11 = pcxImageParser8.getIccProfileBytes(byteSource9, pcxImagingParameters10);
        java.lang.String str12 = pcxImageParser8.getName();
        java.lang.String str13 = pcxImageParser8.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder16 = pcxImageParser15.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser15.getFormatCompliance(byteSource17);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser15.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata20 = pcxImageParser8.getMetadata(byteSource14, pcxImagingParameters19);
        byte[] byteArray21 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters19);
        java.io.File file22 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray23 = pcxImageParser0.getIccProfileBytes(file22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNull(byteArray6);
        org.junit.Assert.assertNull(byteArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Pcx-Custom" + "'", str12, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNull(formatCompliance18);
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
        org.junit.Assert.assertNull(imageMetadata20);
        org.junit.Assert.assertNull(byteArray21);
    }

    @Test
    public void test1483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1483");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        boolean boolean5 = pcxImageParser0.canAcceptExtension("");
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata11 = pcxImageParser9.getMetadata(byteSource10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder14 = pcxImageParser13.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser13.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata18 = pcxImageParser13.getMetadata(byteSource17);
        boolean boolean20 = pcxImageParser13.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser9.getMetadata(byteSource12, pcxImagingParameters21);
        byte[] byteArray23 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters21);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser0.getMetadata(byteSource24);
        java.lang.String str26 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str29 = pcxImageParser28.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance31 = pcxImageParser28.getFormatCompliance(byteSource30);
        java.lang.String str32 = pcxImageParser28.getName();
        java.lang.String str33 = pcxImageParser28.getName();
        org.apache.commons.imaging.ImageFormat imageFormat34 = null;
        boolean boolean35 = pcxImageParser28.canAcceptType(imageFormat34);
        boolean boolean37 = pcxImageParser28.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = null;
        byte[] byteArray42 = pcxImageParser39.getIccProfileBytes(byteSource40, pcxImagingParameters41);
        java.lang.String str43 = pcxImageParser39.getName();
        java.lang.String str44 = pcxImageParser39.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser46 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder47 = pcxImageParser46.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance49 = pcxImageParser46.getFormatCompliance(byteSource48);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters50 = pcxImageParser46.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata51 = pcxImageParser39.getMetadata(byteSource45, pcxImagingParameters50);
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser53 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters55 = null;
        byte[] byteArray56 = pcxImageParser53.getIccProfileBytes(byteSource54, pcxImagingParameters55);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters57 = pcxImageParser53.getDefaultParameters();
        byte[] byteArray58 = pcxImageParser39.getIccProfileBytes(byteSource52, pcxImagingParameters57);
        byte[] byteArray59 = pcxImageParser28.getIccProfileBytes(byteSource38, pcxImagingParameters57);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata60 = pcxImageParser0.getMetadata(byteSource27, pcxImagingParameters57);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNull(imageMetadata11);
        org.junit.Assert.assertNotNull(byteOrder14);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNull(imageMetadata18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNull(byteArray23);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "pcx" + "'", str26, "pcx");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Pcx-Custom" + "'", str32, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Pcx-Custom" + "'", str33, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(byteArray42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Pcx-Custom" + "'", str43, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Pcx-Custom" + "'", str44, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNull(formatCompliance49);
        org.junit.Assert.assertNotNull(pcxImagingParameters50);
        org.junit.Assert.assertNull(imageMetadata51);
        org.junit.Assert.assertNull(byteArray56);
        org.junit.Assert.assertNotNull(pcxImagingParameters57);
        org.junit.Assert.assertNull(byteArray58);
        org.junit.Assert.assertNull(byteArray59);
        org.junit.Assert.assertNull(imageMetadata60);
    }

    @Test
    public void test1484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1484");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.nio.ByteOrder byteOrder4 = pcxImageParser0.getByteOrder();
        java.nio.ByteOrder byteOrder5 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = null;
        byte[] byteArray12 = pcxImageParser9.getIccProfileBytes(byteSource10, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser9.getName();
        java.lang.String str14 = pcxImageParser9.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder17 = pcxImageParser16.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance19 = pcxImageParser16.getFormatCompliance(byteSource18);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters20 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata21 = pcxImageParser9.getMetadata(byteSource15, pcxImagingParameters20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser23 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser23.getMetadata(byteSource24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser27 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder28 = pcxImageParser27.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser27.getFormatCompliance(byteSource29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser27.getMetadata(byteSource31);
        boolean boolean34 = pcxImageParser27.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser27.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser23.getMetadata(byteSource26, pcxImagingParameters35);
        byte[] byteArray37 = pcxImageParser9.getIccProfileBytes(byteSource22, pcxImagingParameters35);
        org.apache.commons.imaging.ImageFormat imageFormat38 = null;
        boolean boolean39 = pcxImageParser9.canAcceptType(imageFormat38);
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance41 = pcxImageParser9.getFormatCompliance(byteSource40);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser9.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage43 = pcxImageParser0.getBufferedImage(byteSource8, pcxImagingParameters42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertNull(byteArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Pcx-Custom" + "'", str14, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder17);
        org.junit.Assert.assertNull(formatCompliance19);
        org.junit.Assert.assertNotNull(pcxImagingParameters20);
        org.junit.Assert.assertNull(imageMetadata21);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertNotNull(byteOrder28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertNull(byteArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(formatCompliance41);
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
    }

    @Test
    public void test1485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1485");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser4.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser8.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.lang.String str29 = pcxImageParser8.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser4.getMetadata(byteSource7, pcxImagingParameters30);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters30);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = null;
        byte[] byteArray35 = pcxImageParser0.getIccProfileBytes(byteSource33, pcxImagingParameters34);
        java.nio.ByteOrder byteOrder36 = pcxImageParser0.getByteOrder();
        java.io.File file37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser38 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser38.getMetadata(byteSource39);
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser42 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser42.getMetadata(byteSource43);
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser46 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder47 = pcxImageParser46.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance49 = pcxImageParser46.getFormatCompliance(byteSource48);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters50 = pcxImageParser46.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser52 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata54 = pcxImageParser52.getMetadata(byteSource53);
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser56 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder57 = pcxImageParser56.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance59 = pcxImageParser56.getFormatCompliance(byteSource58);
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata61 = pcxImageParser56.getMetadata(byteSource60);
        boolean boolean63 = pcxImageParser56.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters64 = pcxImageParser56.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata65 = pcxImageParser52.getMetadata(byteSource55, pcxImagingParameters64);
        byte[] byteArray66 = pcxImageParser46.getIccProfileBytes(byteSource51, pcxImagingParameters64);
        java.lang.String str67 = pcxImageParser46.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters68 = pcxImageParser46.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata69 = pcxImageParser42.getMetadata(byteSource45, pcxImagingParameters68);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata70 = pcxImageParser38.getMetadata(byteSource41, pcxImagingParameters68);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage71 = pcxImageParser0.getBufferedImage(file37, pcxImagingParameters68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNull(byteArray35);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNull(formatCompliance49);
        org.junit.Assert.assertNotNull(pcxImagingParameters50);
        org.junit.Assert.assertNull(imageMetadata54);
        org.junit.Assert.assertNotNull(byteOrder57);
        org.junit.Assert.assertNull(formatCompliance59);
        org.junit.Assert.assertNull(imageMetadata61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters64);
        org.junit.Assert.assertNull(imageMetadata65);
        org.junit.Assert.assertNull(byteArray66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Pcx-Custom" + "'", str67, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters68);
        org.junit.Assert.assertNull(imageMetadata69);
        org.junit.Assert.assertNull(imageMetadata70);
    }

    @Test
    public void test1486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1486");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser0.canAcceptType(imageFormat23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance26 = pcxImageParser0.getFormatCompliance(byteSource25);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder30 = pcxImageParser29.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser29.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser0.getMetadata(byteSource28, pcxImagingParameters33);
        java.io.File file35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser36 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = null;
        byte[] byteArray39 = pcxImageParser36.getIccProfileBytes(byteSource37, pcxImagingParameters38);
        java.lang.String str40 = pcxImageParser36.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = pcxImageParser36.getDefaultParameters();
        java.nio.ByteOrder byteOrder42 = pcxImageParser36.getByteOrder();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser36.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser45 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder46 = pcxImageParser45.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance48 = pcxImageParser45.getFormatCompliance(byteSource47);
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata50 = pcxImageParser45.getMetadata(byteSource49);
        boolean boolean52 = pcxImageParser45.canAcceptExtension("hi!");
        org.apache.commons.imaging.ImageFormat imageFormat53 = null;
        boolean boolean54 = pcxImageParser45.canAcceptType(imageFormat53);
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser56 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata58 = pcxImageParser56.getMetadata(byteSource57);
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser60 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder61 = pcxImageParser60.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance63 = pcxImageParser60.getFormatCompliance(byteSource62);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters64 = pcxImageParser60.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser66 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource67 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata68 = pcxImageParser66.getMetadata(byteSource67);
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser70 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder71 = pcxImageParser70.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource72 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance73 = pcxImageParser70.getFormatCompliance(byteSource72);
        org.apache.commons.imaging.bytesource.ByteSource byteSource74 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata75 = pcxImageParser70.getMetadata(byteSource74);
        boolean boolean77 = pcxImageParser70.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters78 = pcxImageParser70.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata79 = pcxImageParser66.getMetadata(byteSource69, pcxImagingParameters78);
        byte[] byteArray80 = pcxImageParser60.getIccProfileBytes(byteSource65, pcxImagingParameters78);
        java.lang.String str81 = pcxImageParser60.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters82 = pcxImageParser60.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata83 = pcxImageParser56.getMetadata(byteSource59, pcxImagingParameters82);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata84 = pcxImageParser45.getMetadata(byteSource55, pcxImagingParameters82);
        byte[] byteArray85 = pcxImageParser36.getIccProfileBytes(byteSource44, pcxImagingParameters82);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata86 = pcxImageParser0.getMetadata(file35, pcxImagingParameters82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(formatCompliance26);
        org.junit.Assert.assertNotNull(pcxImagingParameters27);
        org.junit.Assert.assertNotNull(byteOrder30);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertNull(byteArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "pcx" + "'", str40, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters41);
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertNotNull(byteOrder46);
        org.junit.Assert.assertNull(formatCompliance48);
        org.junit.Assert.assertNull(imageMetadata50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(imageMetadata58);
        org.junit.Assert.assertNotNull(byteOrder61);
        org.junit.Assert.assertNull(formatCompliance63);
        org.junit.Assert.assertNotNull(pcxImagingParameters64);
        org.junit.Assert.assertNull(imageMetadata68);
        org.junit.Assert.assertNotNull(byteOrder71);
        org.junit.Assert.assertNull(formatCompliance73);
        org.junit.Assert.assertNull(imageMetadata75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters78);
        org.junit.Assert.assertNull(imageMetadata79);
        org.junit.Assert.assertNull(byteArray80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "Pcx-Custom" + "'", str81, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters82);
        org.junit.Assert.assertNull(imageMetadata83);
        org.junit.Assert.assertNull(imageMetadata84);
        org.junit.Assert.assertNull(byteArray85);
    }

    @Test
    public void test1487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1487");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat6 = null;
        boolean boolean7 = pcxImageParser0.canAcceptType(imageFormat6);
        boolean boolean9 = pcxImageParser0.canAcceptExtension("hi!");
        java.lang.String str10 = pcxImageParser0.getName();
        java.io.File file11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser12 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = null;
        byte[] byteArray15 = pcxImageParser12.getIccProfileBytes(byteSource13, pcxImagingParameters14);
        java.lang.String str16 = pcxImageParser12.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata18 = pcxImageParser12.getMetadata(byteSource17);
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance20 = pcxImageParser12.getFormatCompliance(byteSource19);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser22 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder23 = pcxImageParser22.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance25 = pcxImageParser22.getFormatCompliance(byteSource24);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser22.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = null;
        byte[] byteArray31 = pcxImageParser28.getIccProfileBytes(byteSource29, pcxImagingParameters30);
        java.lang.String str32 = pcxImageParser28.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser28.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser22.getMetadata(byteSource27, pcxImagingParameters33);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser22.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser12.getMetadata(byteSource21, pcxImagingParameters35);
        java.lang.String str37 = pcxImageParser12.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser12.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray39 = pcxImageParser0.getIccProfileBytes(file11, pcxImagingParameters38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Pcx-Custom" + "'", str10, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Pcx-Custom" + "'", str16, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata18);
        org.junit.Assert.assertNull(formatCompliance20);
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertNull(formatCompliance25);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(byteArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "pcx" + "'", str32, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Pcx-Custom" + "'", str37, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
    }

    @Test
    public void test1488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1488");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser0.getFormatCompliance(byteSource5);
        java.io.File file7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = null;
        byte[] byteArray11 = pcxImageParser8.getIccProfileBytes(byteSource9, pcxImagingParameters10);
        java.lang.String str12 = pcxImageParser8.getName();
        java.lang.String str13 = pcxImageParser8.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder16 = pcxImageParser15.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser15.getFormatCompliance(byteSource17);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser15.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata20 = pcxImageParser8.getMetadata(byteSource14, pcxImagingParameters19);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser22 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = null;
        byte[] byteArray25 = pcxImageParser22.getIccProfileBytes(byteSource23, pcxImagingParameters24);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser22.getDefaultParameters();
        byte[] byteArray27 = pcxImageParser8.getIccProfileBytes(byteSource21, pcxImagingParameters26);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(file7, pcxImagingParameters26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance6);
        org.junit.Assert.assertNull(byteArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Pcx-Custom" + "'", str12, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNull(formatCompliance18);
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
        org.junit.Assert.assertNull(imageMetadata20);
        org.junit.Assert.assertNull(byteArray25);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(byteArray27);
    }

    @Test
    public void test1489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1489");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = null;
        byte[] byteArray17 = pcxImageParser14.getIccProfileBytes(byteSource15, pcxImagingParameters16);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser14.getDefaultParameters();
        byte[] byteArray19 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder22 = pcxImageParser21.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance24 = pcxImageParser21.getFormatCompliance(byteSource23);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat26 = null;
        boolean boolean27 = pcxImageParser21.canAcceptType(imageFormat26);
        java.lang.String str28 = pcxImageParser21.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = pcxImageParser21.getDefaultParameters();
        java.lang.String str30 = pcxImageParser21.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser0.getMetadata(byteSource20, pcxImagingParameters31);
        boolean boolean34 = pcxImageParser0.canAcceptExtension("pcx");
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList36 = pcxImageParser0.getAllBufferedImages(byteSource35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(byteArray17);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNull(formatCompliance24);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "pcx" + "'", str28, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Pcx-Custom" + "'", str30, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test1490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1490");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        java.nio.ByteOrder byteOrder2 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance4 = pcxImageParser0.getFormatCompliance(byteSource3);
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        java.io.File file6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(file6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertNull(formatCompliance4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
    }

    @Test
    public void test1491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1491");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata14 = pcxImageParser9.getMetadata(byteSource13);
        boolean boolean16 = pcxImageParser9.canAcceptExtension("hi!");
        org.apache.commons.imaging.ImageFormat imageFormat17 = null;
        boolean boolean18 = pcxImageParser9.canAcceptType(imageFormat17);
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser20 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser20.getMetadata(byteSource21);
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser30.getMetadata(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder35 = pcxImageParser34.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance37 = pcxImageParser34.getFormatCompliance(byteSource36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata39 = pcxImageParser34.getMetadata(byteSource38);
        boolean boolean41 = pcxImageParser34.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser34.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata43 = pcxImageParser30.getMetadata(byteSource33, pcxImagingParameters42);
        byte[] byteArray44 = pcxImageParser24.getIccProfileBytes(byteSource29, pcxImagingParameters42);
        java.lang.String str45 = pcxImageParser24.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser20.getMetadata(byteSource23, pcxImagingParameters46);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser9.getMetadata(byteSource19, pcxImagingParameters46);
        byte[] byteArray49 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters46);
        java.awt.image.BufferedImage bufferedImage50 = null;
        java.io.OutputStream outputStream51 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser52 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters54 = null;
        byte[] byteArray55 = pcxImageParser52.getIccProfileBytes(byteSource53, pcxImagingParameters54);
        java.lang.String str56 = pcxImageParser52.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata58 = pcxImageParser52.getMetadata(byteSource57);
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance60 = pcxImageParser52.getFormatCompliance(byteSource59);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters61 = pcxImageParser52.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage50, outputStream51, pcxImagingParameters61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNotNull(pcxImagingParameters7);
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNull(imageMetadata14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNull(formatCompliance37);
        org.junit.Assert.assertNull(imageMetadata39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertNull(imageMetadata43);
        org.junit.Assert.assertNull(byteArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Pcx-Custom" + "'", str45, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
        org.junit.Assert.assertNull(imageMetadata47);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNull(byteArray49);
        org.junit.Assert.assertNull(byteArray55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Pcx-Custom" + "'", str56, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata58);
        org.junit.Assert.assertNull(formatCompliance60);
        org.junit.Assert.assertNotNull(pcxImagingParameters61);
    }

    @Test
    public void test1492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1492");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser0.getMetadata(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser0.getMetadata(byteSource24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser0.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = null;
        byte[] byteArray32 = pcxImageParser29.getIccProfileBytes(byteSource30, pcxImagingParameters31);
        java.lang.String str33 = pcxImageParser29.getName();
        java.lang.String str34 = pcxImageParser29.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser36 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder37 = pcxImageParser36.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance39 = pcxImageParser36.getFormatCompliance(byteSource38);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser36.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser29.getMetadata(byteSource35, pcxImagingParameters40);
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser43 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata45 = pcxImageParser43.getMetadata(byteSource44);
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser47 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder48 = pcxImageParser47.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance50 = pcxImageParser47.getFormatCompliance(byteSource49);
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata52 = pcxImageParser47.getMetadata(byteSource51);
        boolean boolean54 = pcxImageParser47.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters55 = pcxImageParser47.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata56 = pcxImageParser43.getMetadata(byteSource46, pcxImagingParameters55);
        byte[] byteArray57 = pcxImageParser29.getIccProfileBytes(byteSource42, pcxImagingParameters55);
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance59 = pcxImageParser29.getFormatCompliance(byteSource58);
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser61 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters63 = null;
        byte[] byteArray64 = pcxImageParser61.getIccProfileBytes(byteSource62, pcxImagingParameters63);
        java.nio.ByteOrder byteOrder65 = pcxImageParser61.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource66 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser67 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder68 = pcxImageParser67.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance70 = pcxImageParser67.getFormatCompliance(byteSource69);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters71 = pcxImageParser67.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat72 = null;
        boolean boolean73 = pcxImageParser67.canAcceptType(imageFormat72);
        java.lang.String str74 = pcxImageParser67.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters75 = pcxImageParser67.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata76 = pcxImageParser61.getMetadata(byteSource66, pcxImagingParameters75);
        byte[] byteArray77 = pcxImageParser29.getIccProfileBytes(byteSource60, pcxImagingParameters75);
        byte[] byteArray78 = pcxImageParser0.getIccProfileBytes(byteSource28, pcxImagingParameters75);
        java.io.File file79 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata80 = pcxImageParser0.getMetadata(file79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNull(byteArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Pcx-Custom" + "'", str33, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Pcx-Custom" + "'", str34, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNull(formatCompliance39);
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(imageMetadata41);
        org.junit.Assert.assertNull(imageMetadata45);
        org.junit.Assert.assertNotNull(byteOrder48);
        org.junit.Assert.assertNull(formatCompliance50);
        org.junit.Assert.assertNull(imageMetadata52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters55);
        org.junit.Assert.assertNull(imageMetadata56);
        org.junit.Assert.assertNull(byteArray57);
        org.junit.Assert.assertNull(formatCompliance59);
        org.junit.Assert.assertNull(byteArray64);
        org.junit.Assert.assertNotNull(byteOrder65);
        org.junit.Assert.assertNotNull(byteOrder68);
        org.junit.Assert.assertNull(formatCompliance70);
        org.junit.Assert.assertNotNull(pcxImagingParameters71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "pcx" + "'", str74, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters75);
        org.junit.Assert.assertNull(imageMetadata76);
        org.junit.Assert.assertNull(byteArray77);
        org.junit.Assert.assertNull(byteArray78);
    }

    @Test
    public void test1493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1493");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        boolean boolean9 = pcxImageParser0.canAcceptExtension("");
        org.apache.commons.imaging.ImageFormat imageFormat10 = null;
        boolean boolean11 = pcxImageParser0.canAcceptType(imageFormat10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser0.getDefaultParameters();
        java.nio.ByteOrder byteOrder13 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata17 = pcxImageParser15.getMetadata(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder20 = pcxImageParser19.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance22 = pcxImageParser19.getFormatCompliance(byteSource21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser19.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser25.getMetadata(byteSource26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder30 = pcxImageParser29.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser29.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser29.getMetadata(byteSource33);
        boolean boolean36 = pcxImageParser29.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser25.getMetadata(byteSource28, pcxImagingParameters37);
        byte[] byteArray39 = pcxImageParser19.getIccProfileBytes(byteSource24, pcxImagingParameters37);
        java.lang.String str40 = pcxImageParser19.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = pcxImageParser19.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser15.getMetadata(byteSource18, pcxImagingParameters41);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser15.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser45 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = null;
        byte[] byteArray48 = pcxImageParser45.getIccProfileBytes(byteSource46, pcxImagingParameters47);
        java.lang.String str49 = pcxImageParser45.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters50 = pcxImageParser45.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata51 = pcxImageParser15.getMetadata(byteSource44, pcxImagingParameters50);
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser15.getMetadata(byteSource52);
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser55 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata57 = pcxImageParser55.getMetadata(byteSource56);
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata59 = pcxImageParser55.getMetadata(byteSource58);
        java.lang.String str60 = pcxImageParser55.getDefaultExtension();
        java.lang.String str61 = pcxImageParser55.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters62 = pcxImageParser55.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata63 = pcxImageParser15.getMetadata(byteSource54, pcxImagingParameters62);
        byte[] byteArray64 = pcxImageParser0.getIccProfileBytes(byteSource14, pcxImagingParameters62);
        java.io.PrintWriter printWriter65 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource66 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean67 = pcxImageParser0.dumpImageFile(printWriter65, byteSource66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNull(imageMetadata17);
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNull(formatCompliance22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(byteOrder30);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters37);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNull(byteArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Pcx-Custom" + "'", str40, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters41);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertNull(byteArray48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "pcx" + "'", str49, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters50);
        org.junit.Assert.assertNull(imageMetadata51);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertNull(imageMetadata57);
        org.junit.Assert.assertNull(imageMetadata59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "pcx" + "'", str60, "pcx");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "pcx" + "'", str61, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters62);
        org.junit.Assert.assertNull(imageMetadata63);
        org.junit.Assert.assertNull(byteArray64);
    }

    @Test
    public void test1494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1494");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str8 = pcxImageParser7.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        java.lang.String str11 = pcxImageParser7.getName();
        java.lang.String str12 = pcxImageParser7.getName();
        org.apache.commons.imaging.ImageFormat imageFormat13 = null;
        boolean boolean14 = pcxImageParser7.canAcceptType(imageFormat13);
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser7.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters20 = null;
        byte[] byteArray21 = pcxImageParser18.getIccProfileBytes(byteSource19, pcxImagingParameters20);
        java.lang.String str22 = pcxImageParser18.getName();
        java.lang.String str23 = pcxImageParser18.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder26 = pcxImageParser25.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance28 = pcxImageParser25.getFormatCompliance(byteSource27);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = pcxImageParser25.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata30 = pcxImageParser18.getMetadata(byteSource24, pcxImagingParameters29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser32.getMetadata(byteSource33);
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser36 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder37 = pcxImageParser36.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance39 = pcxImageParser36.getFormatCompliance(byteSource38);
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser36.getMetadata(byteSource40);
        boolean boolean43 = pcxImageParser36.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = pcxImageParser36.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata45 = pcxImageParser32.getMetadata(byteSource35, pcxImagingParameters44);
        byte[] byteArray46 = pcxImageParser18.getIccProfileBytes(byteSource31, pcxImagingParameters44);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance48 = pcxImageParser18.getFormatCompliance(byteSource47);
        java.nio.ByteOrder byteOrder49 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser51 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters53 = null;
        byte[] byteArray54 = pcxImageParser51.getIccProfileBytes(byteSource52, pcxImagingParameters53);
        java.lang.String str55 = pcxImageParser51.getName();
        java.lang.String str56 = pcxImageParser51.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser58 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder59 = pcxImageParser58.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance61 = pcxImageParser58.getFormatCompliance(byteSource60);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters62 = pcxImageParser58.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata63 = pcxImageParser51.getMetadata(byteSource57, pcxImagingParameters62);
        org.apache.commons.imaging.bytesource.ByteSource byteSource64 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser65 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource66 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata67 = pcxImageParser65.getMetadata(byteSource66);
        org.apache.commons.imaging.bytesource.ByteSource byteSource68 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser69 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder70 = pcxImageParser69.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource71 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance72 = pcxImageParser69.getFormatCompliance(byteSource71);
        org.apache.commons.imaging.bytesource.ByteSource byteSource73 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata74 = pcxImageParser69.getMetadata(byteSource73);
        boolean boolean76 = pcxImageParser69.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters77 = pcxImageParser69.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata78 = pcxImageParser65.getMetadata(byteSource68, pcxImagingParameters77);
        byte[] byteArray79 = pcxImageParser51.getIccProfileBytes(byteSource64, pcxImagingParameters77);
        byte[] byteArray80 = pcxImageParser18.getIccProfileBytes(byteSource50, pcxImagingParameters77);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata81 = pcxImageParser7.getMetadata(byteSource17, pcxImagingParameters77);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata82 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters77);
        org.apache.commons.imaging.bytesource.ByteSource byteSource83 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList84 = pcxImageParser0.getAllBufferedImages(byteSource83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Pcx-Custom" + "'", str8, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Pcx-Custom" + "'", str11, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Pcx-Custom" + "'", str12, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNull(byteArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Pcx-Custom" + "'", str22, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Pcx-Custom" + "'", str23, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder26);
        org.junit.Assert.assertNull(formatCompliance28);
        org.junit.Assert.assertNotNull(pcxImagingParameters29);
        org.junit.Assert.assertNull(imageMetadata30);
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNull(formatCompliance39);
        org.junit.Assert.assertNull(imageMetadata41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters44);
        org.junit.Assert.assertNull(imageMetadata45);
        org.junit.Assert.assertNull(byteArray46);
        org.junit.Assert.assertNull(formatCompliance48);
        org.junit.Assert.assertNotNull(byteOrder49);
        org.junit.Assert.assertNull(byteArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Pcx-Custom" + "'", str55, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Pcx-Custom" + "'", str56, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder59);
        org.junit.Assert.assertNull(formatCompliance61);
        org.junit.Assert.assertNotNull(pcxImagingParameters62);
        org.junit.Assert.assertNull(imageMetadata63);
        org.junit.Assert.assertNull(imageMetadata67);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNull(formatCompliance72);
        org.junit.Assert.assertNull(imageMetadata74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters77);
        org.junit.Assert.assertNull(imageMetadata78);
        org.junit.Assert.assertNull(byteArray79);
        org.junit.Assert.assertNull(byteArray80);
        org.junit.Assert.assertNull(imageMetadata81);
        org.junit.Assert.assertNull(imageMetadata82);
    }

    @Test
    public void test1495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1495");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        boolean boolean9 = pcxImageParser0.canAcceptExtension("");
        org.apache.commons.imaging.ImageFormat imageFormat10 = null;
        boolean boolean11 = pcxImageParser0.canAcceptType(imageFormat10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser0.getMetadata(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList15 = pcxImageParser0.getAllBufferedImages(byteSource14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(imageMetadata13);
    }

    @Test
    public void test1496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1496");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat10 = null;
        boolean boolean11 = pcxImageParser0.canAcceptType(imageFormat10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser0.getFormatCompliance(byteSource12);
        java.io.File file14 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(file14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(pcxImagingParameters9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(formatCompliance13);
    }

    @Test
    public void test1497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1497");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata14 = pcxImageParser9.getMetadata(byteSource13);
        boolean boolean16 = pcxImageParser9.canAcceptExtension("hi!");
        org.apache.commons.imaging.ImageFormat imageFormat17 = null;
        boolean boolean18 = pcxImageParser9.canAcceptType(imageFormat17);
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser20 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser20.getMetadata(byteSource21);
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser30.getMetadata(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder35 = pcxImageParser34.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance37 = pcxImageParser34.getFormatCompliance(byteSource36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata39 = pcxImageParser34.getMetadata(byteSource38);
        boolean boolean41 = pcxImageParser34.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser34.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata43 = pcxImageParser30.getMetadata(byteSource33, pcxImagingParameters42);
        byte[] byteArray44 = pcxImageParser24.getIccProfileBytes(byteSource29, pcxImagingParameters42);
        java.lang.String str45 = pcxImageParser24.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser20.getMetadata(byteSource23, pcxImagingParameters46);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser9.getMetadata(byteSource19, pcxImagingParameters46);
        byte[] byteArray49 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters46);
        java.io.File file50 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance51 = pcxImageParser0.getFormatCompliance(file50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNotNull(pcxImagingParameters7);
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNull(imageMetadata14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNull(formatCompliance37);
        org.junit.Assert.assertNull(imageMetadata39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertNull(imageMetadata43);
        org.junit.Assert.assertNull(byteArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Pcx-Custom" + "'", str45, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
        org.junit.Assert.assertNull(imageMetadata47);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNull(byteArray49);
    }

    @Test
    public void test1498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1498");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        boolean boolean14 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser0.getFormatCompliance(byteSource15);
        java.lang.String str17 = pcxImageParser0.getName();
        java.nio.ByteOrder byteOrder18 = pcxImageParser0.getByteOrder();
        java.io.PrintWriter printWriter19 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean21 = pcxImageParser0.dumpImageFile(printWriter19, byteSource20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Pcx-Custom" + "'", str17, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder18);
    }

    @Test
    public void test1499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1499");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.nio.ByteOrder byteOrder4 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser0.getFormatCompliance(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = null;
        byte[] byteArray11 = pcxImageParser8.getIccProfileBytes(byteSource9, pcxImagingParameters10);
        java.lang.String str12 = pcxImageParser8.getName();
        java.lang.String str13 = pcxImageParser8.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder16 = pcxImageParser15.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser15.getFormatCompliance(byteSource17);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser15.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata20 = pcxImageParser8.getMetadata(byteSource14, pcxImagingParameters19);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser22 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser22.getMetadata(byteSource23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder27 = pcxImageParser26.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance29 = pcxImageParser26.getFormatCompliance(byteSource28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser26.getMetadata(byteSource30);
        boolean boolean33 = pcxImageParser26.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser26.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser22.getMetadata(byteSource25, pcxImagingParameters34);
        byte[] byteArray36 = pcxImageParser8.getIccProfileBytes(byteSource21, pcxImagingParameters34);
        org.apache.commons.imaging.ImageFormat imageFormat37 = null;
        boolean boolean38 = pcxImageParser8.canAcceptType(imageFormat37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder41 = pcxImageParser40.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance43 = pcxImageParser40.getFormatCompliance(byteSource42);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = pcxImageParser40.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat45 = null;
        boolean boolean46 = pcxImageParser40.canAcceptType(imageFormat45);
        java.lang.String str47 = pcxImageParser40.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = pcxImageParser40.getDefaultParameters();
        byte[] byteArray49 = pcxImageParser8.getIccProfileBytes(byteSource39, pcxImagingParameters48);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata50 = pcxImageParser0.getMetadata(byteSource7, pcxImagingParameters48);
        java.io.File file51 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str52 = pcxImageParser0.dumpImageFile(file51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNull(formatCompliance6);
        org.junit.Assert.assertNull(byteArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Pcx-Custom" + "'", str12, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNull(formatCompliance18);
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
        org.junit.Assert.assertNull(imageMetadata20);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNull(formatCompliance29);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(byteOrder41);
        org.junit.Assert.assertNull(formatCompliance43);
        org.junit.Assert.assertNotNull(pcxImagingParameters44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "pcx" + "'", str47, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters48);
        org.junit.Assert.assertNull(byteArray49);
        org.junit.Assert.assertNull(imageMetadata50);
    }

    @Test
    public void test1500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1500");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = null;
        byte[] byteArray20 = pcxImageParser17.getIccProfileBytes(byteSource18, pcxImagingParameters19);
        java.lang.String str21 = pcxImageParser17.getName();
        java.lang.String str22 = pcxImageParser17.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser17.getMetadata(byteSource23, pcxImagingParameters28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = null;
        byte[] byteArray34 = pcxImageParser31.getIccProfileBytes(byteSource32, pcxImagingParameters33);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser31.getDefaultParameters();
        byte[] byteArray36 = pcxImageParser17.getIccProfileBytes(byteSource30, pcxImagingParameters35);
        byte[] byteArray37 = pcxImageParser0.getIccProfileBytes(byteSource16, pcxImagingParameters35);
        org.apache.commons.imaging.ImageFormat imageFormat38 = null;
        boolean boolean39 = pcxImageParser0.canAcceptType(imageFormat38);
        java.io.File file40 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser0.getMetadata(file40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Pcx-Custom" + "'", str22, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertNull(byteArray34);
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertNull(byteArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }
}

